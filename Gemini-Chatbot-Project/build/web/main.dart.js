// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 2.19.2 (stable) (Tue Feb 7 18:37:17 2023 +0000) on "linux_x64"
// Module: zapp_user_main
// Flags: soundNullSafety(true), enableAsserts(true)
define('zapp_user_main', ['dart_sdk', 'flutter_sdk'], (function load__zapp_user_main(dart_sdk, flutter_sdk) {
  'use strict';
  const core = dart_sdk.core;
  const async = dart_sdk.async;
  const _interceptors = dart_sdk._interceptors;
  const js = dart_sdk.js;
  const ui = dart_sdk.ui;
  const _js_helper = dart_sdk._js_helper;
  const _internal = dart_sdk._internal;
  const typed_data = dart_sdk.typed_data;
  const collection = dart_sdk.collection;
  const html = dart_sdk.html;
  const js_util = dart_sdk.js_util;
  const _http = dart_sdk._http;
  const convert = dart_sdk.convert;
  const io = dart_sdk.io;
  const math = dart_sdk.math;
  const _native_typed_data = dart_sdk._native_typed_data;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const app = flutter_sdk.src__material__app;
  const theme_data = flutter_sdk.src__material__theme_data;
  const colors = flutter_sdk.src__material__colors;
  const framework = flutter_sdk.src__widgets__framework;
  const editable_text = flutter_sdk.src__widgets__editable_text;
  const scaffold = flutter_sdk.src__material__scaffold;
  const app_bar = flutter_sdk.src__material__app_bar;
  const text = flutter_sdk.src__widgets__text;
  const basic = flutter_sdk.src__widgets__basic;
  const flex = flutter_sdk.src__rendering__flex;
  const async$ = flutter_sdk.src__widgets__async;
  const progress_indicator = flutter_sdk.src__material__progress_indicator;
  const alignment = flutter_sdk.src__painting__alignment;
  const scroll_view = flutter_sdk.src__widgets__scroll_view;
  const edge_insets = flutter_sdk.src__painting__edge_insets;
  const text_field = flutter_sdk.src__material__text_field;
  const input_decorator = flutter_sdk.src__material__input_decorator;
  const input_border = flutter_sdk.src__material__input_border;
  const borders = flutter_sdk.src__painting__borders;
  const border_radius = flutter_sdk.src__painting__border_radius;
  const container = flutter_sdk.src__widgets__container;
  const box = flutter_sdk.src__rendering__box;
  const media_query = flutter_sdk.src__widgets__media_query;
  const box_decoration = flutter_sdk.src__painting__box_decoration;
  const theme = flutter_sdk.src__material__theme;
  const text_style = flutter_sdk.src__painting__text_style;
  const binding = flutter_sdk.src__widgets__binding;
  const plugin_registry = flutter_sdk.src__plugin_registry;
  const equality = flutter_sdk.src__equality;
  const platform = flutter_sdk.src__foundation__platform;
  const date_format = flutter_sdk.src__intl__date_format;
  const message_codecs = flutter_sdk.src__services__message_codecs;
  const platform_channel = flutter_sdk.src__services__platform_channel;
  const message_codec = flutter_sdk.src__services__message_codec;
  const binary_messenger = flutter_sdk.src__services__binary_messenger;
  const deprecated = flutter_sdk.src__deprecated;
  const string_scanner = flutter_sdk.src__string_scanner;
  const canonicalized_map = flutter_sdk.src__canonicalized_map;
  const stream_group = flutter_sdk.src__stream_group;
  const serialization = flutter_sdk.src__foundation__serialization;
  const iterable_extensions = flutter_sdk.src__iterable_extensions;
  const span_exception = flutter_sdk.src__span_exception;
  const queue_list = flutter_sdk.src__queue_list;
  var $46zapp_entry = Object.create(dart.library);
  var main = Object.create(dart.library);
  var web_plugin_registrant = Object.create(dart.library);
  var cloud_firestore = Object.create(dart.library);
  var firebase_core = Object.create(dart.library);
  var cloud_firestore_web = Object.create(dart.library);
  var firebase_auth_web = Object.create(dart.library);
  var firebase_core_web = Object.create(dart.library);
  var firebase_storage_web = Object.create(dart.library);
  var cloud_firestore_platform_interface = Object.create(dart.library);
  var firebase_core_platform_interface = Object.create(dart.library);
  var internals = Object.create(dart.library);
  var load_bundle_task_web = Object.create(dart.library);
  var web_utils = Object.create(dart.library);
  var firebase_core_web_interop = Object.create(dart.library);
  var collection_reference_web = Object.create(dart.library);
  var document_reference_web = Object.create(dart.library);
  var field_value_factory_web = Object.create(dart.library);
  var firestore = Object.create(dart.library);
  var query_web = Object.create(dart.library);
  var transaction_web = Object.create(dart.library);
  var write_batch_web = Object.create(dart.library);
  var firebase_auth_platform_interface = Object.create(dart.library);
  var firebase_auth_web_multi_factor = Object.create(dart.library);
  var utils = Object.create(dart.library);
  var web_utils$ = Object.create(dart.library);
  var firebase_auth_web_confirmation_result = Object.create(dart.library);
  var firebase_auth_web_recaptcha_verifier_factory = Object.create(dart.library);
  var firebase_auth_web_user = Object.create(dart.library);
  var firebase_auth_web_user_credential = Object.create(dart.library);
  var auth$ = Object.create(dart.library);
  var multi_factor = Object.create(dart.library);
  var core$ = Object.create(dart.library);
  var firebase_storage_web$ = Object.create(dart.library);
  var pointer = Object.create(dart.library);
  var blob = Object.create(dart.library);
  var field_path = Object.create(dart.library);
  var geo_point = Object.create(dart.library);
  var platform_interface_firestore = Object.create(dart.library);
  var platform_interface_collection_reference = Object.create(dart.library);
  var platform_interface_document_change = Object.create(dart.library);
  var platform_interface_document_reference = Object.create(dart.library);
  var platform_interface_document_snapshot = Object.create(dart.library);
  var platform_interface_field_value = Object.create(dart.library);
  var platform_interface_field_value_factory = Object.create(dart.library);
  var platform_interface_query = Object.create(dart.library);
  var platform_interface_query_snapshot = Object.create(dart.library);
  var platform_interface_transaction = Object.create(dart.library);
  var platform_interface_write_batch = Object.create(dart.library);
  var platform_interface_load_bundle_task = Object.create(dart.library);
  var platform_interface_load_bundle_task_snapshot = Object.create(dart.library);
  var snapshot_metadata = Object.create(dart.library);
  var source = Object.create(dart.library);
  var load_bundle_task_state = Object.create(dart.library);
  var timestamp = Object.create(dart.library);
  var settings = Object.create(dart.library);
  var get_options = Object.create(dart.library);
  var set_options = Object.create(dart.library);
  var persistence_settings = Object.create(dart.library);
  var load_bundle_task_state$ = Object.create(dart.library);
  var messages$46pigeon = Object.create(dart.library);
  var plugin_platform_interface = Object.create(dart.library);
  var mocks = Object.create(dart.library);
  var test_api = Object.create(dart.library);
  var _flutterfire_internals = Object.create(dart.library);
  var decode_utility = Object.create(dart.library);
  var es6_interop = Object.create(dart.library);
  var func = Object.create(dart.library);
  var js$ = Object.create(dart.library);
  var js_interop = Object.create(dart.library);
  var utils$ = Object.create(dart.library);
  var encode_utility = Object.create(dart.library);
  var field_value_web = Object.create(dart.library);
  var firestore_interop = Object.create(dart.library);
  var utils$0 = Object.create(dart.library);
  var action_code_info = Object.create(dart.library);
  var action_code_settings = Object.create(dart.library);
  var additional_user_info = Object.create(dart.library);
  var auth_credential = Object.create(dart.library);
  var auth_provider = Object.create(dart.library);
  var firebase_auth_exception = Object.create(dart.library);
  var firebase_auth_multi_factor_exception = Object.create(dart.library);
  var id_token_result = Object.create(dart.library);
  var platform_interface_confirmation_result = Object.create(dart.library);
  var platform_interface_firebase_auth = Object.create(dart.library);
  var platform_interface_multi_factor = Object.create(dart.library);
  var platform_interface_recaptcha_verifier_factory = Object.create(dart.library);
  var platform_interface_user = Object.create(dart.library);
  var platform_interface_user_credential = Object.create(dart.library);
  var apple_auth = Object.create(dart.library);
  var email_auth = Object.create(dart.library);
  var facebook_auth = Object.create(dart.library);
  var github_auth = Object.create(dart.library);
  var google_auth = Object.create(dart.library);
  var microsoft_auth = Object.create(dart.library);
  var oauth = Object.create(dart.library);
  var phone_auth = Object.create(dart.library);
  var saml_auth = Object.create(dart.library);
  var twitter_auth = Object.create(dart.library);
  var yahoo_auth = Object.create(dart.library);
  var types = Object.create(dart.library);
  var user_info = Object.create(dart.library);
  var user_metadata = Object.create(dart.library);
  var http_parser = Object.create(dart.library);
  var auth_interop = Object.create(dart.library);
  var app$ = Object.create(dart.library);
  var core_interop = Object.create(dart.library);
  var app_interop = Object.create(dart.library);
  var firebase_storage_platform_interface = Object.create(dart.library);
  var storage = Object.create(dart.library);
  var reference_web = Object.create(dart.library);
  var errors = Object.create(dart.library);
  var field_path_type = Object.create(dart.library);
  var method_channel_firestore = Object.create(dart.library);
  var method_channel_field_value_factory = Object.create(dart.library);
  var exception$ = Object.create(dart.library);
  var method_channel_firebase_auth = Object.create(dart.library);
  var method_channel_multi_factor = Object.create(dart.library);
  var authentication_challenge = Object.create(dart.library);
  var case_insensitive_map = Object.create(dart.library);
  var chunked_coding = Object.create(dart.library);
  var http_date = Object.create(dart.library);
  var media_type = Object.create(dart.library);
  var full_metadata = Object.create(dart.library);
  var list_options = Object.create(dart.library);
  var platform_interface_firebase_storage = Object.create(dart.library);
  var platform_interface_list_result = Object.create(dart.library);
  var platform_interface_reference = Object.create(dart.library);
  var platform_interface_task = Object.create(dart.library);
  var platform_interface_task_snapshot = Object.create(dart.library);
  var put_string_format = Object.create(dart.library);
  var settable_metadata = Object.create(dart.library);
  var task_state = Object.create(dart.library);
  var storage_interop = Object.create(dart.library);
  var http = Object.create(dart.library);
  var metadata$ = Object.create(dart.library);
  var task_web = Object.create(dart.library);
  var list = Object.create(dart.library);
  var metadata_cache = Object.create(dart.library);
  var method_channel_load_bundle_task = Object.create(dart.library);
  var method_channel_query_snapshot = Object.create(dart.library);
  var source$ = Object.create(dart.library);
  var method_channel_collection_reference = Object.create(dart.library);
  var method_channel_document_reference = Object.create(dart.library);
  var method_channel_query = Object.create(dart.library);
  var method_channel_transaction = Object.create(dart.library);
  var method_channel_write_batch = Object.create(dart.library);
  var exception = Object.create(dart.library);
  var firestore_message_codec = Object.create(dart.library);
  var method_channel_field_value = Object.create(dart.library);
  var convert_auth_provider = Object.create(dart.library);
  var method_channel_user = Object.create(dart.library);
  var method_channel_user_credential = Object.create(dart.library);
  var exception$0 = Object.create(dart.library);
  var pigeon_helper = Object.create(dart.library);
  var messages$46pigeon$ = Object.create(dart.library);
  var scan = Object.create(dart.library);
  var utils$1 = Object.create(dart.library);
  var decoder = Object.create(dart.library);
  var encoder = Object.create(dart.library);
  var method_channel_firebase_storage = Object.create(dart.library);
  var pointer$ = Object.create(dart.library);
  var client$ = Object.create(dart.library);
  var exception$1 = Object.create(dart.library);
  var request$ = Object.create(dart.library);
  var response$ = Object.create(dart.library);
  var streamed_request = Object.create(dart.library);
  var base_client = Object.create(dart.library);
  var base_request = Object.create(dart.library);
  var base_response = Object.create(dart.library);
  var byte_stream = Object.create(dart.library);
  var multipart_file = Object.create(dart.library);
  var multipart_request = Object.create(dart.library);
  var streamed_response = Object.create(dart.library);
  var task = Object.create(dart.library);
  var list_result_web = Object.create(dart.library);
  var method_channel_document_change = Object.create(dart.library);
  var auto_id_generator = Object.create(dart.library);
  var typed_data$ = Object.create(dart.library);
  var charcodes = Object.create(dart.library);
  var exception$2 = Object.create(dart.library);
  var method_channel_reference = Object.create(dart.library);
  var method_channel_task_snapshot = Object.create(dart.library);
  var browser_client = Object.create(dart.library);
  var utils$2 = Object.create(dart.library);
  var multipart_file_stub = Object.create(dart.library);
  var boundary_characters = Object.create(dart.library);
  var task_snapshot_web = Object.create(dart.library);
  var typed_queue = Object.create(dart.library);
  var typed_buffers = Object.create(dart.library);
  var method_channel_list_result = Object.create(dart.library);
  var method_channel_task = Object.create(dart.library);
  var typed_buffer = Object.create(dart.library);
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(false);
  var T$ = {
    FutureOfvoid: () => (T$.FutureOfvoid = dart.constFn(async.Future$(dart.void)))(),
    VoidToFutureOfvoid: () => (T$.VoidToFutureOfvoid = dart.constFn(dart.fnType(T$.FutureOfvoid(), [])))(),
    ListOfString: () => (T$.ListOfString = dart.constFn(core.List$(core.String)))(),
    ListOfStringTodynamic: () => (T$.ListOfStringTodynamic = dart.constFn(dart.fnType(dart.dynamic, [T$.ListOfString()])))(),
    JSArrayOfString: () => (T$.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    dynamicToNull: () => (T$.dynamicToNull = dart.constFn(dart.fnType(core.Null, [dart.dynamic])))(),
    VoidToNull: () => (T$.VoidToNull = dart.constFn(dart.fnType(core.Null, [])))(),
    ObjectAndStackTraceTovoid: () => (T$.ObjectAndStackTraceTovoid = dart.constFn(dart.fnType(dart.void, [core.Object, core.StackTrace])))(),
    ZoneAndZoneDelegateAndZone__Tovoid: () => (T$.ZoneAndZoneDelegateAndZone__Tovoid = dart.constFn(dart.fnType(dart.void, [async.Zone, async.ZoneDelegate, async.Zone, core.String])))(),
    MapOfString$dynamic: () => (T$.MapOfString$dynamic = dart.constFn(core.Map$(core.String, dart.dynamic)))(),
    QuerySnapshotOfMapOfString$dynamic: () => (T$.QuerySnapshotOfMapOfString$dynamic = dart.constFn(cloud_firestore.QuerySnapshot$(T$.MapOfString$dynamic())))(),
    StreamBuilderOfQuerySnapshotOfMapOfString$dynamic: () => (T$.StreamBuilderOfQuerySnapshotOfMapOfString$dynamic = dart.constFn(async$.StreamBuilder$(T$.QuerySnapshotOfMapOfString$dynamic())))(),
    JSArrayOfWidget: () => (T$.JSArrayOfWidget = dart.constFn(_interceptors.JSArray$(framework.Widget)))(),
    BuildContextAndintToColumn: () => (T$.BuildContextAndintToColumn = dart.constFn(dart.fnType(basic.Column, [framework.BuildContext, core.int])))(),
    AsyncSnapshotOfQuerySnapshotOfMapOfString$dynamic: () => (T$.AsyncSnapshotOfQuerySnapshotOfMapOfString$dynamic = dart.constFn(async$.AsyncSnapshot$(T$.QuerySnapshotOfMapOfString$dynamic())))(),
    BuildContextAndAsyncSnapshotOfQuerySnapshotOfMapOfString$dynamicToWidget: () => (T$.BuildContextAndAsyncSnapshotOfQuerySnapshotOfMapOfString$dynamicToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, T$.AsyncSnapshotOfQuerySnapshotOfMapOfString$dynamic()])))(),
    IdentityMapOfString$dynamic: () => (T$.IdentityMapOfString$dynamic = dart.constFn(_js_helper.IdentityMap$(core.String, dart.dynamic)))(),
    StringTovoid: () => (T$.StringTovoid = dart.constFn(dart.fnType(dart.void, [core.String])))(),
    DocumentReferenceOfMapOfString$dynamic: () => (T$.DocumentReferenceOfMapOfString$dynamic = dart.constFn(cloud_firestore.DocumentReference$(T$.MapOfString$dynamic())))(),
    ListOfList: () => (T$.ListOfList = dart.constFn(core.List$(core.List)))(),
    ObjectN: () => (T$.ObjectN = dart.constFn(dart.nullable(core.Object)))(),
    ListOfObjectN: () => (T$.ListOfObjectN = dart.constFn(core.List$(T$.ObjectN())))(),
    ListOfListOfObjectN: () => (T$.ListOfListOfObjectN = dart.constFn(core.List$(T$.ListOfObjectN())))(),
    QuerySnapshotPlatformTo_JsonQuerySnapshot: () => (T$.QuerySnapshotPlatformTo_JsonQuerySnapshot = dart.constFn(dart.fnType(cloud_firestore._JsonQuerySnapshot, [platform_interface_query_snapshot.QuerySnapshotPlatform])))(),
    ListTobool: () => (T$.ListTobool = dart.constFn(dart.fnType(core.bool, [core.List])))(),
    DefaultEqualityOfNever: () => (T$.DefaultEqualityOfNever = dart.constFn(equality.DefaultEquality$(dart.Never)))(),
    dynamicAndStringAnddynamicTovoid: () => (T$.dynamicAndStringAnddynamicTovoid = dart.constFn(dart.fnType(dart.void, [dart.dynamic, core.String, dart.dynamic])))(),
    dynamicTobool: () => (T$.dynamicTobool = dart.constFn(dart.fnType(core.bool, [dart.dynamic])))(),
    CollectionReferenceOfMapOfString$dynamic: () => (T$.CollectionReferenceOfMapOfString$dynamic = dart.constFn(cloud_firestore.CollectionReference$(T$.MapOfString$dynamic())))(),
    MapOfString$ObjectN: () => (T$.MapOfString$ObjectN = dart.constFn(core.Map$(core.String, T$.ObjectN())))(),
    SetOptionsN: () => (T$.SetOptionsN = dart.constFn(dart.nullable(set_options.SetOptions)))(),
    DocumentSnapshotOfMapOfString$dynamic: () => (T$.DocumentSnapshotOfMapOfString$dynamic = dart.constFn(cloud_firestore.DocumentSnapshot$(T$.MapOfString$dynamic())))(),
    DocumentSnapshotPlatformTo_JsonDocumentSnapshot: () => (T$.DocumentSnapshotPlatformTo_JsonDocumentSnapshot = dart.constFn(dart.fnType(cloud_firestore._JsonDocumentSnapshot, [platform_interface_document_snapshot.DocumentSnapshotPlatform])))(),
    DocumentReferenceOfObjectN: () => (T$.DocumentReferenceOfObjectN = dart.constFn(cloud_firestore.DocumentReference$(T$.ObjectN())))(),
    FutureOfNull: () => (T$.FutureOfNull = dart.constFn(async.Future$(core.Null)))(),
    TransactionPlatformToFutureOfNull: () => (T$.TransactionPlatformToFutureOfNull = dart.constFn(dart.fnType(T$.FutureOfNull(), [platform_interface_transaction.TransactionPlatform])))(),
    MapOfObjectN$ObjectN: () => (T$.MapOfObjectN$ObjectN = dart.constFn(core.Map$(T$.ObjectN(), T$.ObjectN())))(),
    MapNOfObjectN$ObjectN: () => (T$.MapNOfObjectN$ObjectN = dart.constFn(dart.nullable(T$.MapOfObjectN$ObjectN())))(),
    VoidTobool: () => (T$.VoidTobool = dart.constFn(dart.fnType(core.bool, [])))(),
    ExpandoOfObject: () => (T$.ExpandoOfObject = dart.constFn(core.Expando$(core.Object)))(),
    IdentityMapOfString$FirebaseFirestore: () => (T$.IdentityMapOfString$FirebaseFirestore = dart.constFn(_js_helper.IdentityMap$(core.String, cloud_firestore.FirebaseFirestore)))(),
    dynamicToLoadBundleTaskSnapshot: () => (T$.dynamicToLoadBundleTaskSnapshot = dart.constFn(dart.fnType(cloud_firestore.LoadBundleTaskSnapshot, [dart.dynamic])))(),
    DocumentSnapshotPlatformTo_JsonQueryDocumentSnapshot: () => (T$.DocumentSnapshotPlatformTo_JsonQueryDocumentSnapshot = dart.constFn(dart.fnType(cloud_firestore._JsonQueryDocumentSnapshot, [platform_interface_document_snapshot.DocumentSnapshotPlatform])))(),
    DocumentChangePlatformTo_JsonDocumentChange: () => (T$.DocumentChangePlatformTo_JsonDocumentChange = dart.constFn(dart.fnType(cloud_firestore._JsonDocumentChange, [platform_interface_document_change.DocumentChangePlatform])))(),
    LinkedHashMapOfString$dynamic: () => (T$.LinkedHashMapOfString$dynamic = dart.constFn(collection.LinkedHashMap$(core.String, dart.dynamic)))(),
    StringAnddynamicTodynamic: () => (T$.StringAnddynamicTodynamic = dart.constFn(dart.fnType(dart.dynamic, [core.String, dart.dynamic])))(),
    dynamicTodynamic: () => (T$.dynamicTodynamic = dart.constFn(dart.fnType(dart.dynamic, [dart.dynamic])))(),
    FirebaseAppPlatformToFirebaseApp: () => (T$.FirebaseAppPlatformToFirebaseApp = dart.constFn(dart.fnType(firebase_core.FirebaseApp, [firebase_core_platform_interface.FirebaseAppPlatform])))(),
    TransactionN: () => (T$.TransactionN = dart.constFn(dart.nullable(firestore.Transaction)))(),
    VoidToFuture: () => (T$.VoidToFuture = dart.constFn(dart.fnType(async.Future, [])))(),
    CompleterOfvoid: () => (T$.CompleterOfvoid = dart.constFn(async.Completer$(dart.void)))(),
    UserPlatformN: () => (T$.UserPlatformN = dart.constFn(dart.nullable(platform_interface_user.UserPlatform)))(),
    StreamControllerOfUserPlatformN: () => (T$.StreamControllerOfUserPlatformN = dart.constFn(async.StreamController$(T$.UserPlatformN())))(),
    UserWebN: () => (T$.UserWebN = dart.constFn(dart.nullable(firebase_auth_web_user.UserWeb)))(),
    UserN: () => (T$.UserN = dart.constFn(dart.nullable(auth$.User)))(),
    UserNToUserWebN: () => (T$.UserNToUserWebN = dart.constFn(dart.fnType(T$.UserWebN(), [T$.UserN()])))(),
    UserWebNTovoid: () => (T$.UserWebNTovoid = dart.constFn(dart.fnType(dart.void, [T$.UserWebN()])))(),
    _AsyncStarImplOfUserPlatformN: () => (T$._AsyncStarImplOfUserPlatformN = dart.constFn(async._AsyncStarImpl$(T$.UserPlatformN())))(),
    ObjectNToObjectN: () => (T$.ObjectNToObjectN = dart.constFn(dart.fnType(T$.ObjectN(), [T$.ObjectN()])))(),
    StringN: () => (T$.StringN = dart.constFn(dart.nullable(core.String)))(),
    IdentityMapOfString$StreamControllerOfUserPlatformN: () => (T$.IdentityMapOfString$StreamControllerOfUserPlatformN = dart.constFn(_js_helper.IdentityMap$(core.String, T$.StreamControllerOfUserPlatformN())))(),
    VoidToFirebaseWebService: () => (T$.VoidToFirebaseWebService = dart.constFn(dart.fnType(firebase_core_web.FirebaseWebService, [])))(),
    dynamicToString: () => (T$.dynamicToString = dart.constFn(dart.fnType(core.String, [dart.dynamic])))(),
    FirebaseWebServiceToFutureOfvoid: () => (T$.FirebaseWebServiceToFutureOfvoid = dart.constFn(dart.fnType(T$.FutureOfvoid(), [firebase_core_web.FirebaseWebService])))(),
    ListOfFirebaseAppPlatform: () => (T$.ListOfFirebaseAppPlatform = dart.constFn(core.List$(firebase_core_platform_interface.FirebaseAppPlatform)))(),
    AppToFirebaseAppPlatform: () => (T$.AppToFirebaseAppPlatform = dart.constFn(dart.fnType(firebase_core_platform_interface.FirebaseAppPlatform, [app$.App])))(),
    VoidToListOfFirebaseAppPlatform: () => (T$.VoidToListOfFirebaseAppPlatform = dart.constFn(dart.fnType(T$.ListOfFirebaseAppPlatform(), [])))(),
    VoidToString: () => (T$.VoidToString = dart.constFn(dart.fnType(core.String, [])))(),
    VoidToApp: () => (T$.VoidToApp = dart.constFn(dart.fnType(app$.App, [])))(),
    IdentityMapOfString$FirebaseWebService: () => (T$.IdentityMapOfString$FirebaseWebService = dart.constFn(_js_helper.IdentityMap$(core.String, firebase_core_web.FirebaseWebService)))(),
    ObjectAndStackTraceToNever: () => (T$.ObjectAndStackTraceToNever = dart.constFn(dart.fnType(dart.Never, [core.Object, core.StackTrace])))(),
    IdentityMapOfString$StringN: () => (T$.IdentityMapOfString$StringN = dart.constFn(_js_helper.IdentityMap$(core.String, T$.StringN())))(),
    PigeonInitializeResponseN: () => (T$.PigeonInitializeResponseN = dart.constFn(dart.nullable(messages$46pigeon.PigeonInitializeResponse)))(),
    PigeonInitializeResponseNTobool: () => (T$.PigeonInitializeResponseNTobool = dart.constFn(dart.fnType(core.bool, [T$.PigeonInitializeResponseN()])))(),
    IdentityMapOfString$MethodChannelFirebaseApp: () => (T$.IdentityMapOfString$MethodChannelFirebaseApp = dart.constFn(_js_helper.IdentityMap$(core.String, firebase_core_platform_interface.MethodChannelFirebaseApp)))(),
    StringToString: () => (T$.StringToString = dart.constFn(dart.fnType(core.String, [core.String])))(),
    StreamSubscriptionOfLoadBundleTaskProgress: () => (T$.StreamSubscriptionOfLoadBundleTaskProgress = dart.constFn(async.StreamSubscription$(firestore.LoadBundleTaskProgress)))(),
    StreamSubscriptionOfLoadBundleTaskProgressTovoid: () => (T$.StreamSubscriptionOfLoadBundleTaskProgressTovoid = dart.constFn(dart.fnType(dart.void, [T$.StreamSubscriptionOfLoadBundleTaskProgress()])))(),
    LoadBundleTaskProgressToLoadBundleTaskSnapshotPlatform: () => (T$.LoadBundleTaskProgressToLoadBundleTaskSnapshotPlatform = dart.constFn(dart.fnType(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform, [firestore.LoadBundleTaskProgress])))(),
    DocumentSnapshotN: () => (T$.DocumentSnapshotN = dart.constFn(dart.nullable(firestore.DocumentSnapshot)))(),
    DocumentSnapshotNToDocumentSnapshotPlatform: () => (T$.DocumentSnapshotNToDocumentSnapshotPlatform = dart.constFn(dart.fnType(platform_interface_document_snapshot.DocumentSnapshotPlatform, [T$.DocumentSnapshotN()])))(),
    DocumentChangeToDocumentChangePlatform: () => (T$.DocumentChangeToDocumentChangePlatform = dart.constFn(dart.fnType(platform_interface_document_change.DocumentChangePlatform, [firestore.DocumentChange])))(),
    IdentityMapOfString$bool: () => (T$.IdentityMapOfString$bool = dart.constFn(_js_helper.IdentityMap$(core.String, core.bool)))(),
    FieldPathToString: () => (T$.FieldPathToString = dart.constFn(dart.fnType(core.String, [field_path.FieldPath])))(),
    ListN: () => (T$.ListN = dart.constFn(dart.nullable(core.List)))(),
    FutureOfQuerySnapshotPlatform: () => (T$.FutureOfQuerySnapshotPlatform = dart.constFn(async.Future$(platform_interface_query_snapshot.QuerySnapshotPlatform)))(),
    VoidToFutureOfQuerySnapshotPlatform: () => (T$.VoidToFutureOfQuerySnapshotPlatform = dart.constFn(dart.fnType(T$.FutureOfQuerySnapshotPlatform(), [])))(),
    StreamOfQuerySnapshotPlatform: () => (T$.StreamOfQuerySnapshotPlatform = dart.constFn(async.Stream$(platform_interface_query_snapshot.QuerySnapshotPlatform)))(),
    QuerySnapshotToQuerySnapshotPlatform: () => (T$.QuerySnapshotToQuerySnapshotPlatform = dart.constFn(dart.fnType(platform_interface_query_snapshot.QuerySnapshotPlatform, [firestore.QuerySnapshot])))(),
    VoidToStreamOfQuerySnapshotPlatform: () => (T$.VoidToStreamOfQuerySnapshotPlatform = dart.constFn(dart.fnType(T$.StreamOfQuerySnapshotPlatform(), [])))(),
    FutureOrOfDocumentSnapshot: () => (T$.FutureOrOfDocumentSnapshot = dart.constFn(async.FutureOr$(firestore.DocumentSnapshot)))(),
    FutureOfDocumentSnapshot: () => (T$.FutureOfDocumentSnapshot = dart.constFn(async.Future$(firestore.DocumentSnapshot)))(),
    VoidToFutureOfDocumentSnapshot: () => (T$.VoidToFutureOfDocumentSnapshot = dart.constFn(dart.fnType(T$.FutureOfDocumentSnapshot(), [])))(),
    StreamOfDocumentSnapshotPlatform: () => (T$.StreamOfDocumentSnapshotPlatform = dart.constFn(async.Stream$(platform_interface_document_snapshot.DocumentSnapshotPlatform)))(),
    DocumentSnapshotToDocumentSnapshotPlatform: () => (T$.DocumentSnapshotToDocumentSnapshotPlatform = dart.constFn(dart.fnType(platform_interface_document_snapshot.DocumentSnapshotPlatform, [firestore.DocumentSnapshot])))(),
    VoidToStreamOfDocumentSnapshotPlatform: () => (T$.VoidToStreamOfDocumentSnapshotPlatform = dart.constFn(dart.fnType(T$.StreamOfDocumentSnapshotPlatform(), [])))(),
    QueryOfQueryJsImpl: () => (T$.QueryOfQueryJsImpl = dart.constFn(firestore.Query$(dart.packageJSType("firebase_firestore.Query", false))))(),
    ObjectNToNull: () => (T$.ObjectNToNull = dart.constFn(dart.fnType(core.Null, [T$.ObjectN()])))(),
    VoidTovoid: () => (T$.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    StreamControllerOfvoid: () => (T$.StreamControllerOfvoid = dart.constFn(async.StreamController$(dart.void)))(),
    dynamicToPromiseJsImpl: () => (T$.dynamicToPromiseJsImpl = dart.constFn(dart.fnType(dart.packageJSType("Promise", false), [dart.dynamic])))(),
    FutureOfObjectN: () => (T$.FutureOfObjectN = dart.constFn(async.Future$(T$.ObjectN())))(),
    ObjectNTodynamic: () => (T$.ObjectNTodynamic = dart.constFn(dart.fnType(dart.dynamic, [T$.ObjectN()])))(),
    voidTodynamic: () => (T$.voidTodynamic = dart.constFn(dart.fnType(dart.dynamic, [dart.void])))(),
    ExpandoOfFirestore: () => (T$.ExpandoOfFirestore = dart.constFn(core.Expando$(firestore.Firestore)))(),
    StreamControllerOfLoadBundleTaskProgress: () => (T$.StreamControllerOfLoadBundleTaskProgress = dart.constFn(async.StreamController$(firestore.LoadBundleTaskProgress)))(),
    LoadBundleTaskProgressJsImplTovoid: () => (T$.LoadBundleTaskProgressJsImplTovoid = dart.constFn(dart.fnType(dart.void, [dart.packageJSType("LoadBundleTaskProgressJsImpl", false)])))(),
    FirestoreErrorTodynamic: () => (T$.FirestoreErrorTodynamic = dart.constFn(dart.fnType(dart.dynamic, [dart.packageJSType("FirestoreError", false)])))(),
    FirestoreErrorToNull: () => (T$.FirestoreErrorToNull = dart.constFn(dart.fnType(core.Null, [dart.packageJSType("FirestoreError", false)])))(),
    ExpandoOfLoadBundleTask: () => (T$.ExpandoOfLoadBundleTask = dart.constFn(core.Expando$(firestore.LoadBundleTask)))(),
    ExpandoOfLoadBundleTaskProgress: () => (T$.ExpandoOfLoadBundleTaskProgress = dart.constFn(core.Expando$(firestore.LoadBundleTaskProgress)))(),
    ExpandoOfWriteBatch: () => (T$.ExpandoOfWriteBatch = dart.constFn(core.Expando$(firestore.WriteBatch)))(),
    DocumentSnapshotJsImplToDocumentSnapshot: () => (T$.DocumentSnapshotJsImplToDocumentSnapshot = dart.constFn(dart.fnType(firestore.DocumentSnapshot, [dart.packageJSType("firebase_firestore.DocumentSnapshot", false)])))(),
    DocumentSnapshotJsImplToNull: () => (T$.DocumentSnapshotJsImplToNull = dart.constFn(dart.fnType(core.Null, [dart.packageJSType("firebase_firestore.DocumentSnapshot", false)])))(),
    dynamicTovoid: () => (T$.dynamicTovoid = dart.constFn(dart.fnType(dart.void, [dart.dynamic])))(),
    StreamControllerOfDocumentSnapshot: () => (T$.StreamControllerOfDocumentSnapshot = dart.constFn(async.StreamController$(firestore.DocumentSnapshot)))(),
    ExpandoOfDocumentReference: () => (T$.ExpandoOfDocumentReference = dart.constFn(core.Expando$(firestore.DocumentReference)))(),
    QuerySnapshotJsImplToQuerySnapshot: () => (T$.QuerySnapshotJsImplToQuerySnapshot = dart.constFn(dart.fnType(firestore.QuerySnapshot, [dart.packageJSType("firebase_firestore.QuerySnapshot", false)])))(),
    QuerySnapshotJsImplToNull: () => (T$.QuerySnapshotJsImplToNull = dart.constFn(dart.fnType(core.Null, [dart.packageJSType("firebase_firestore.QuerySnapshot", false)])))(),
    StreamControllerOfQuerySnapshot: () => (T$.StreamControllerOfQuerySnapshot = dart.constFn(async.StreamController$(firestore.QuerySnapshot)))(),
    JSArrayOfDocumentSnapshotJsImpl: () => (T$.JSArrayOfDocumentSnapshotJsImpl = dart.constFn(_interceptors.JSArray$(dart.packageJSType("firebase_firestore.DocumentSnapshot", false))))(),
    CollectionReferenceOfCollectionReferenceJsImpl: () => (T$.CollectionReferenceOfCollectionReferenceJsImpl = dart.constFn(firestore.CollectionReference$(dart.packageJSType("firebase_firestore.CollectionReference", false))))(),
    DocumentReferenceJsImplToDocumentReference: () => (T$.DocumentReferenceJsImplToDocumentReference = dart.constFn(dart.fnType(firestore.DocumentReference, [dart.packageJSType("firebase_firestore.DocumentReference", false)])))(),
    ExpandoOfCollectionReferenceOfCollectionReferenceJsImpl: () => (T$.ExpandoOfCollectionReferenceOfCollectionReferenceJsImpl = dart.constFn(core.Expando$(T$.CollectionReferenceOfCollectionReferenceJsImpl())))(),
    ExpandoOfDocumentChange: () => (T$.ExpandoOfDocumentChange = dart.constFn(core.Expando$(firestore.DocumentChange)))(),
    MapNOfString$dynamic: () => (T$.MapNOfString$dynamic = dart.constFn(dart.nullable(T$.MapOfString$dynamic())))(),
    ExpandoOfDocumentSnapshot: () => (T$.ExpandoOfDocumentSnapshot = dart.constFn(core.Expando$(firestore.DocumentSnapshot)))(),
    dynamicToDocumentChange: () => (T$.dynamicToDocumentChange = dart.constFn(dart.fnType(firestore.DocumentChange, [dart.dynamic])))(),
    dynamicToDocumentSnapshot: () => (T$.dynamicToDocumentSnapshot = dart.constFn(dart.fnType(firestore.DocumentSnapshot, [dart.dynamic])))(),
    ExpandoOfQuerySnapshot: () => (T$.ExpandoOfQuerySnapshot = dart.constFn(core.Expando$(firestore.QuerySnapshot)))(),
    ExpandoOfTransaction: () => (T$.ExpandoOfTransaction = dart.constFn(core.Expando$(firestore.Transaction)))(),
    FutureOfDocumentSnapshotPlatform: () => (T$.FutureOfDocumentSnapshotPlatform = dart.constFn(async.Future$(platform_interface_document_snapshot.DocumentSnapshotPlatform)))(),
    VoidToFutureOfDocumentSnapshotPlatform: () => (T$.VoidToFutureOfDocumentSnapshotPlatform = dart.constFn(dart.fnType(T$.FutureOfDocumentSnapshotPlatform(), [])))(),
    MultiFactorInfoOfMultiFactorInfoJsImpl: () => (T$.MultiFactorInfoOfMultiFactorInfoJsImpl = dart.constFn(multi_factor.MultiFactorInfo$(dart.packageJSType("MultiFactorInfoJsImpl", false))))(),
    MultiFactorInfoOfMultiFactorInfoJsImplToMultiFactorInfo: () => (T$.MultiFactorInfoOfMultiFactorInfoJsImplToMultiFactorInfo = dart.constFn(dart.fnType(platform_interface_multi_factor.MultiFactorInfo, [T$.MultiFactorInfoOfMultiFactorInfoJsImpl()])))(),
    ListOfMultiFactorInfo: () => (T$.ListOfMultiFactorInfo = dart.constFn(core.List$(platform_interface_multi_factor.MultiFactorInfo)))(),
    boolN: () => (T$.boolN = dart.constFn(dart.nullable(core.bool)))(),
    ObjectToNull: () => (T$.ObjectToNull = dart.constFn(dart.fnType(core.Null, [core.Object])))(),
    intN: () => (T$.intN = dart.constFn(dart.nullable(core.int)))(),
    IdentityMapOfString$intN: () => (T$.IdentityMapOfString$intN = dart.constFn(_js_helper.IdentityMap$(core.String, T$.intN())))(),
    UserInfoOfUserInfoJsImpl: () => (T$.UserInfoOfUserInfoJsImpl = dart.constFn(auth$.UserInfo$(dart.packageJSType("UserInfoJsImpl", false))))(),
    UserInfoOfUserInfoJsImplToMapOfString$dynamic: () => (T$.UserInfoOfUserInfoJsImplToMapOfString$dynamic = dart.constFn(dart.fnType(T$.MapOfString$dynamic(), [T$.UserInfoOfUserInfoJsImpl()])))(),
    LinkedHashMapOfString$StringN: () => (T$.LinkedHashMapOfString$StringN = dart.constFn(collection.LinkedHashMap$(core.String, T$.StringN())))(),
    dynamicToUserInfo: () => (T$.dynamicToUserInfo = dart.constFn(dart.fnType(user_info.UserInfo, [dart.dynamic])))(),
    dynamicToUserInfoOfUserInfoJsImpl: () => (T$.dynamicToUserInfoOfUserInfoJsImpl = dart.constFn(dart.fnType(T$.UserInfoOfUserInfoJsImpl(), [dart.dynamic])))(),
    UserCredentialJsImplToUserCredential: () => (T$.UserCredentialJsImplToUserCredential = dart.constFn(dart.fnType(auth$.UserCredential, [dart.packageJSType("UserCredentialJsImpl", false)])))(),
    ConfirmationResultJsImplToConfirmationResult: () => (T$.ConfirmationResultJsImplToConfirmationResult = dart.constFn(dart.fnType(auth$.ConfirmationResult, [dart.packageJSType("firebase_auth.ConfirmationResult", false)])))(),
    UserJsImplToUser: () => (T$.UserJsImplToUser = dart.constFn(dart.fnType(auth$.User, [dart.packageJSType("UserJsImpl", false)])))(),
    IdTokenResultImplToIdTokenResult: () => (T$.IdTokenResultImplToIdTokenResult = dart.constFn(dart.fnType(auth$.IdTokenResult, [dart.packageJSType("IdTokenResultImpl", false)])))(),
    ExpandoOfUser: () => (T$.ExpandoOfUser = dart.constFn(core.Expando$(auth$.User)))(),
    UserJsImplNToNull: () => (T$.UserJsImplNToNull = dart.constFn(dart.fnType(core.Null, [dart.nullable(dart.packageJSType("UserJsImpl", false))])))(),
    StreamControllerOfUserN: () => (T$.StreamControllerOfUserN = dart.constFn(async.StreamController$(T$.UserN())))(),
    Iterable__ToListOfE: () => (T$.Iterable__ToListOfE = dart.constFn(dart.gFnType(E => [core.List$(E), [core.Iterable], {growable: core.bool}, {}], E => [T$.ObjectN()])))(),
    ExpandoOfAuth: () => (T$.ExpandoOfAuth = dart.constFn(core.Expando$(auth$.Auth)))(),
    JSArrayOfPersistence: () => (T$.JSArrayOfPersistence = dart.constFn(_interceptors.JSArray$(dart.packageJSType("firebase_auth.Persistence", false))))(),
    TToMultiFactorInfoOfT: () => (T$.TToMultiFactorInfoOfT = dart.constFn(dart.gFnType(T => [multi_factor.MultiFactorInfo$(T), [T]], T => [dart.packageJSType("MultiFactorInfoJsImpl", false)])))(),
    MultiFactorSessionJsImplToMultiFactorSession: () => (T$.MultiFactorSessionJsImplToMultiFactorSession = dart.constFn(dart.fnType(multi_factor.MultiFactorSession, [dart.packageJSType("MultiFactorSessionJsImpl", false)])))(),
    ExpandoOfMultiFactorUser: () => (T$.ExpandoOfMultiFactorUser = dart.constFn(core.Expando$(multi_factor.MultiFactorUser)))(),
    MultiFactorInfoJsImplToMultiFactorInfoOfMultiFactorInfoJsImpl: () => (T$.MultiFactorInfoJsImplToMultiFactorInfoOfMultiFactorInfoJsImpl = dart.constFn(dart.fnType(T$.MultiFactorInfoOfMultiFactorInfoJsImpl(), [dart.packageJSType("MultiFactorInfoJsImpl", false)])))(),
    dynamicToApp: () => (T$.dynamicToApp = dart.constFn(dart.fnType(app$.App, [dart.dynamic])))(),
    VoidToReferencePlatform: () => (T$.VoidToReferencePlatform = dart.constFn(dart.fnType(platform_interface_reference.ReferencePlatform, [])))(),
    StringTobool: () => (T$.StringTobool = dart.constFn(dart.fnType(core.bool, [core.String])))(),
    StringAndMapOfString$dynamicTodynamic: () => (T$.StringAndMapOfString$dynamicTodynamic = dart.constFn(dart.fnType(dart.dynamic, [core.String, T$.MapOfString$dynamic()])))(),
    intAndMapNOfString$dynamicTodynamic: () => (T$.intAndMapNOfString$dynamicTodynamic = dart.constFn(dart.fnType(dart.dynamic, [core.int, T$.MapNOfString$dynamic()])))(),
    ObjectToFieldPath: () => (T$.ObjectToFieldPath = dart.constFn(dart.fnType(field_path.FieldPath, [core.Object])))(),
    LinkedMapOfObjectN$ObjectN: () => (T$.LinkedMapOfObjectN$ObjectN = dart.constFn(_js_helper.LinkedMap$(T$.ObjectN(), T$.ObjectN())))(),
    BasicMessageChannelOfObjectN: () => (T$.BasicMessageChannelOfObjectN = dart.constFn(platform_channel.BasicMessageChannel$(T$.ObjectN())))(),
    JSArrayOfObjectN: () => (T$.JSArrayOfObjectN = dart.constFn(_interceptors.JSArray$(T$.ObjectN())))(),
    ListNOfObjectN: () => (T$.ListNOfObjectN = dart.constFn(dart.nullable(T$.ListOfObjectN())))(),
    ListOfPigeonInitializeResponseN: () => (T$.ListOfPigeonInitializeResponseN = dart.constFn(core.List$(T$.PigeonInitializeResponseN())))(),
    PigeonFirebaseOptionsN: () => (T$.PigeonFirebaseOptionsN = dart.constFn(dart.nullable(messages$46pigeon.PigeonFirebaseOptions)))(),
    IdentityMapOfStringN$ObjectN: () => (T$.IdentityMapOfStringN$ObjectN = dart.constFn(_js_helper.IdentityMap$(T$.StringN(), T$.ObjectN())))(),
    JSArrayOfPigeonInitializeResponseN: () => (T$.JSArrayOfPigeonInitializeResponseN = dart.constFn(_interceptors.JSArray$(T$.PigeonInitializeResponseN())))(),
    FutureOfMapOfObjectN$ObjectN: () => (T$.FutureOfMapOfObjectN$ObjectN = dart.constFn(async.Future$(T$.MapOfObjectN$ObjectN())))(),
    ObjectNToFutureOfMapOfObjectN$ObjectN: () => (T$.ObjectNToFutureOfMapOfObjectN$ObjectN = dart.constFn(dart.fnType(T$.FutureOfMapOfObjectN$ObjectN(), [T$.ObjectN()])))(),
    VoidToRN: () => (T$.VoidToRN = dart.constFn(dart.gFnType(R => {
      var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
      return [__t$RN(), []];
    }, R => {
      var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
      return [T$.ObjectN()];
    })))(),
    dynamicAnddynamicToNever: () => (T$.dynamicAnddynamicToNever = dart.constFn(dart.fnType(dart.Never, [dart.dynamic, dart.dynamic])))(),
    ObjectNTobool: () => (T$.ObjectNTobool = dart.constFn(dart.fnType(core.bool, [T$.ObjectN()])))(),
    dynamicAnddynamicTovoid: () => (T$.dynamicAnddynamicTovoid = dart.constFn(dart.fnType(dart.void, [dart.dynamic, dart.dynamic])))(),
    ObjectTodynamic: () => (T$.ObjectTodynamic = dart.constFn(dart.fnType(dart.dynamic, [core.Object])))(),
    IdentityMapOfString$ObjectN: () => (T$.IdentityMapOfString$ObjectN = dart.constFn(_js_helper.IdentityMap$(core.String, T$.ObjectN())))(),
    ExpandoOfApp: () => (T$.ExpandoOfApp = dart.constFn(core.Expando$(app$.App)))(),
    ExpandoOfStorage: () => (T$.ExpandoOfStorage = dart.constFn(core.Expando$(storage.Storage)))(),
    FullMetadataJsImplToFullMetadata: () => (T$.FullMetadataJsImplToFullMetadata = dart.constFn(dart.fnType(storage.FullMetadata, [dart.packageJSType("FullMetadataJsImpl", false)])))(),
    ListResultJsImplToListResult: () => (T$.ListResultJsImplToListResult = dart.constFn(dart.fnType(storage.ListResult, [dart.packageJSType("ListResultJsImpl", false)])))(),
    ExpandoOfStorageReference: () => (T$.ExpandoOfStorageReference = dart.constFn(core.Expando$(storage.StorageReference)))(),
    LinkedHashMapOfString$String: () => (T$.LinkedHashMapOfString$String = dart.constFn(collection.LinkedHashMap$(core.String, core.String)))(),
    IdentityMapOfString$String: () => (T$.IdentityMapOfString$String = dart.constFn(_js_helper.IdentityMap$(core.String, core.String)))(),
    ExpandoOfFullMetadata: () => (T$.ExpandoOfFullMetadata = dart.constFn(core.Expando$(storage.FullMetadata)))(),
    UploadTaskSnapshotJsImplToUploadTaskSnapshot: () => (T$.UploadTaskSnapshotJsImplToUploadTaskSnapshot = dart.constFn(dart.fnType(storage.UploadTaskSnapshot, [dart.packageJSType("UploadTaskSnapshotJsImpl", false)])))(),
    UploadTaskSnapshotJsImplToNull: () => (T$.UploadTaskSnapshotJsImplToNull = dart.constFn(dart.fnType(core.Null, [dart.packageJSType("UploadTaskSnapshotJsImpl", false)])))(),
    StreamControllerOfUploadTaskSnapshot: () => (T$.StreamControllerOfUploadTaskSnapshot = dart.constFn(async.StreamController$(storage.UploadTaskSnapshot)))(),
    ExpandoOfUploadTask: () => (T$.ExpandoOfUploadTask = dart.constFn(core.Expando$(storage.UploadTask)))(),
    ExpandoOfUploadTaskSnapshot: () => (T$.ExpandoOfUploadTaskSnapshot = dart.constFn(core.Expando$(storage.UploadTaskSnapshot)))(),
    dynamicToStorageReference: () => (T$.dynamicToStorageReference = dart.constFn(dart.fnType(storage.StorageReference, [dart.dynamic])))(),
    ExpandoOfListResult: () => (T$.ExpandoOfListResult = dart.constFn(core.Expando$(storage.ListResult)))(),
    FutureOfString: () => (T$.FutureOfString = dart.constFn(async.Future$(core.String)))(),
    VoidToFutureOfString: () => (T$.VoidToFutureOfString = dart.constFn(dart.fnType(T$.FutureOfString(), [])))(),
    FutureOfFullMetadata: () => (T$.FutureOfFullMetadata = dart.constFn(async.Future$(full_metadata.FullMetadata)))(),
    VoidToFutureOfFullMetadata: () => (T$.VoidToFutureOfFullMetadata = dart.constFn(dart.fnType(T$.FutureOfFullMetadata(), [])))(),
    FutureOrOfListResultPlatform: () => (T$.FutureOrOfListResultPlatform = dart.constFn(async.FutureOr$(platform_interface_list_result.ListResultPlatform)))(),
    FutureOfListResultWeb: () => (T$.FutureOfListResultWeb = dart.constFn(async.Future$(list_result_web.ListResultWeb)))(),
    VoidToFutureOfListResultWeb: () => (T$.VoidToFutureOfListResultWeb = dart.constFn(dart.fnType(T$.FutureOfListResultWeb(), [])))(),
    FutureOfListResultPlatform: () => (T$.FutureOfListResultPlatform = dart.constFn(async.Future$(platform_interface_list_result.ListResultPlatform)))(),
    FutureOfUint8List: () => (T$.FutureOfUint8List = dart.constFn(async.Future$(typed_data.Uint8List)))(),
    MapOfString$String: () => (T$.MapOfString$String = dart.constFn(core.Map$(core.String, core.String)))(),
    MapNOfString$String: () => (T$.MapNOfString$String = dart.constFn(dart.nullable(T$.MapOfString$String())))(),
    Uri__ToFutureOfUint8List: () => (T$.Uri__ToFutureOfUint8List = dart.constFn(dart.fnType(T$.FutureOfUint8List(), [core.Uri], {headers: T$.MapNOfString$String()}, {})))(),
    Uint8ListN: () => (T$.Uint8ListN = dart.constFn(dart.nullable(typed_data.Uint8List)))(),
    FutureOrOfUint8ListN: () => (T$.FutureOrOfUint8ListN = dart.constFn(async.FutureOr$(T$.Uint8ListN())))(),
    VoidToFutureOfUint8List: () => (T$.VoidToFutureOfUint8List = dart.constFn(dart.fnType(T$.FutureOfUint8List(), [])))(),
    StringAndStringToString: () => (T$.StringAndStringToString = dart.constFn(dart.fnType(core.String, [core.String, core.String])))(),
    IdentityMapOfString$Object: () => (T$.IdentityMapOfString$Object = dart.constFn(_js_helper.IdentityMap$(core.String, core.Object)))(),
    dynamicToFutureOfvoid: () => (T$.dynamicToFutureOfvoid = dart.constFn(dart.fnType(T$.FutureOfvoid(), [dart.dynamic])))(),
    ObjectAndStackTraceTodynamic: () => (T$.ObjectAndStackTraceTodynamic = dart.constFn(dart.fnType(dart.dynamic, [core.Object, core.StackTrace])))(),
    __ToStream: () => (T$.__ToStream = dart.constFn(dart.fnType(async.Stream, [], {arguments: dart.dynamic, onError: T$.ObjectAndStackTraceTodynamic()}, {})))(),
    StringNToNull: () => (T$.StringNToNull = dart.constFn(dart.fnType(core.Null, [T$.StringN()])))(),
    _ValueWrapperOfUserPlatform: () => (T$._ValueWrapperOfUserPlatform = dart.constFn(method_channel_firebase_auth._ValueWrapper$(platform_interface_user.UserPlatform)))(),
    VoidToMethodChannelFirebaseAuth: () => (T$.VoidToMethodChannelFirebaseAuth = dart.constFn(dart.fnType(method_channel_firebase_auth.MethodChannelFirebaseAuth, [])))(),
    _ValueWrapperOfUserPlatformToUserPlatformN: () => (T$._ValueWrapperOfUserPlatformToUserPlatformN = dart.constFn(dart.fnType(T$.UserPlatformN(), [T$._ValueWrapperOfUserPlatform()])))(),
    FutureOrOfString: () => (T$.FutureOrOfString = dart.constFn(async.FutureOr$(core.String)))(),
    MapN: () => (T$.MapN = dart.constFn(dart.nullable(core.Map)))(),
    IdentityMapOfString$MethodChannelFirebaseAuth: () => (T$.IdentityMapOfString$MethodChannelFirebaseAuth = dart.constFn(_js_helper.IdentityMap$(core.String, method_channel_firebase_auth.MethodChannelFirebaseAuth)))(),
    IdentityMapOfString$MethodChannelMultiFactor: () => (T$.IdentityMapOfString$MethodChannelMultiFactor = dart.constFn(_js_helper.IdentityMap$(core.String, method_channel_multi_factor.MethodChannelMultiFactor)))(),
    StreamControllerOf_ValueWrapperOfUserPlatform: () => (T$.StreamControllerOf_ValueWrapperOfUserPlatform = dart.constFn(async.StreamController$(T$._ValueWrapperOfUserPlatform())))(),
    IdentityMapOfString$StreamControllerOf_ValueWrapperOfUserPlatform: () => (T$.IdentityMapOfString$StreamControllerOf_ValueWrapperOfUserPlatform = dart.constFn(_js_helper.IdentityMap$(core.String, T$.StreamControllerOf_ValueWrapperOfUserPlatform())))(),
    UnmodifiableMapViewOfString$String: () => (T$.UnmodifiableMapViewOfString$String = dart.constFn(collection.UnmodifiableMapView$(core.String, core.String)))(),
    CaseInsensitiveMapOfString: () => (T$.CaseInsensitiveMapOfString = dart.constFn(case_insensitive_map.CaseInsensitiveMap$(core.String)))(),
    ListOfAuthenticationChallenge: () => (T$.ListOfAuthenticationChallenge = dart.constFn(core.List$(authentication_challenge.AuthenticationChallenge)))(),
    VoidToAuthenticationChallenge: () => (T$.VoidToAuthenticationChallenge = dart.constFn(dart.fnType(authentication_challenge.AuthenticationChallenge, [])))(),
    VoidToListOfAuthenticationChallenge: () => (T$.VoidToListOfAuthenticationChallenge = dart.constFn(dart.fnType(T$.ListOfAuthenticationChallenge(), [])))(),
    VoidToDateTime: () => (T$.VoidToDateTime = dart.constFn(dart.fnType(core.DateTime, [])))(),
    VoidToMediaType: () => (T$.VoidToMediaType = dart.constFn(dart.fnType(media_type.MediaType, [])))(),
    MatchToString: () => (T$.MatchToString = dart.constFn(dart.fnType(core.String, [core.Match])))(),
    StringAndStringTovoid: () => (T$.StringAndStringTovoid = dart.constFn(dart.fnType(dart.void, [core.String, core.String])))(),
    FutureOfResponse: () => (T$.FutureOfResponse = dart.constFn(async.Future$(response$.Response)))(),
    ClientToFutureOfResponse: () => (T$.ClientToFutureOfResponse = dart.constFn(dart.fnType(T$.FutureOfResponse(), [client$.Client])))(),
    ClientToFutureOfString: () => (T$.ClientToFutureOfString = dart.constFn(dart.fnType(T$.FutureOfString(), [client$.Client])))(),
    ClientToFutureOfUint8List: () => (T$.ClientToFutureOfUint8List = dart.constFn(dart.fnType(T$.FutureOfUint8List(), [client$.Client])))(),
    LinkedMapOfPutStringFormat$String: () => (T$.LinkedMapOfPutStringFormat$String = dart.constFn(_js_helper.LinkedMap$(put_string_format.PutStringFormat, core.String)))(),
    StreamOfTaskSnapshotPlatform: () => (T$.StreamOfTaskSnapshotPlatform = dart.constFn(async.Stream$(platform_interface_task_snapshot.TaskSnapshotPlatform)))(),
    StreamGroupOfTaskSnapshotPlatform: () => (T$.StreamGroupOfTaskSnapshotPlatform = dart.constFn(stream_group.StreamGroup$(platform_interface_task_snapshot.TaskSnapshotPlatform)))(),
    UploadTaskSnapshotToTaskSnapshotWeb: () => (T$.UploadTaskSnapshotToTaskSnapshotWeb = dart.constFn(dart.fnType(task_snapshot_web.TaskSnapshotWeb, [storage.UploadTaskSnapshot])))(),
    VoidToStreamOfTaskSnapshotPlatform: () => (T$.VoidToStreamOfTaskSnapshotPlatform = dart.constFn(dart.fnType(T$.StreamOfTaskSnapshotPlatform(), [])))(),
    FutureOfTaskSnapshotPlatform: () => (T$.FutureOfTaskSnapshotPlatform = dart.constFn(async.Future$(platform_interface_task_snapshot.TaskSnapshotPlatform)))(),
    FutureOfTaskSnapshotWeb: () => (T$.FutureOfTaskSnapshotWeb = dart.constFn(async.Future$(task_snapshot_web.TaskSnapshotWeb)))(),
    VoidToFutureOfTaskSnapshotWeb: () => (T$.VoidToFutureOfTaskSnapshotWeb = dart.constFn(dart.fnType(T$.FutureOfTaskSnapshotWeb(), [])))(),
    TaskSnapshotPlatformTobool: () => (T$.TaskSnapshotPlatformTobool = dart.constFn(dart.fnType(core.bool, [platform_interface_task_snapshot.TaskSnapshotPlatform])))(),
    StorageReferenceToString: () => (T$.StorageReferenceToString = dart.constFn(dart.fnType(core.String, [storage.StorageReference])))(),
    _AsyncStarImplOfLoadBundleTaskSnapshotPlatform: () => (T$._AsyncStarImplOfLoadBundleTaskSnapshotPlatform = dart.constFn(async._AsyncStarImpl$(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform)))(),
    StreamOfLoadBundleTaskSnapshotPlatform: () => (T$.StreamOfLoadBundleTaskSnapshotPlatform = dart.constFn(async.Stream$(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform)))(),
    VoidToStreamOfLoadBundleTaskSnapshotPlatform: () => (T$.VoidToStreamOfLoadBundleTaskSnapshotPlatform = dart.constFn(dart.fnType(T$.StreamOfLoadBundleTaskSnapshotPlatform(), [])))(),
    StreamSubscriptionOfLoadBundleTaskSnapshotPlatform: () => (T$.StreamSubscriptionOfLoadBundleTaskSnapshotPlatform = dart.constFn(async.StreamSubscription$(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform)))(),
    StreamSubscriptionOfLoadBundleTaskSnapshotPlatformTovoid: () => (T$.StreamSubscriptionOfLoadBundleTaskSnapshotPlatformTovoid = dart.constFn(dart.fnType(dart.void, [T$.StreamSubscriptionOfLoadBundleTaskSnapshotPlatform()])))(),
    ListOfDocumentSnapshotPlatform: () => (T$.ListOfDocumentSnapshotPlatform = dart.constFn(core.List$(platform_interface_document_snapshot.DocumentSnapshotPlatform)))(),
    intToDocumentSnapshotPlatform: () => (T$.intToDocumentSnapshotPlatform = dart.constFn(dart.fnType(platform_interface_document_snapshot.DocumentSnapshotPlatform, [core.int])))(),
    ListOfDocumentChangePlatform: () => (T$.ListOfDocumentChangePlatform = dart.constFn(core.List$(platform_interface_document_change.DocumentChangePlatform)))(),
    intToMethodChannelDocumentChange: () => (T$.intToMethodChannelDocumentChange = dart.constFn(dart.fnType(method_channel_document_change.MethodChannelDocumentChange, [core.int])))(),
    StreamControllerOfQuerySnapshotPlatform: () => (T$.StreamControllerOfQuerySnapshotPlatform = dart.constFn(async.StreamController$(platform_interface_query_snapshot.QuerySnapshotPlatform)))(),
    StreamControllerOfDocumentSnapshotPlatform: () => (T$.StreamControllerOfDocumentSnapshotPlatform = dart.constFn(async.StreamController$(platform_interface_document_snapshot.DocumentSnapshotPlatform)))(),
    JSArrayOfMapOfString$dynamic: () => (T$.JSArrayOfMapOfString$dynamic = dart.constFn(_interceptors.JSArray$(T$.MapOfString$dynamic())))(),
    MethodChannelUserN: () => (T$.MethodChannelUserN = dart.constFn(dart.nullable(method_channel_user.MethodChannelUser)))(),
    ObjectToPigeonMultiFactorInfo: () => (T$.ObjectToPigeonMultiFactorInfo = dart.constFn(dart.fnType(messages$46pigeon$.PigeonMultiFactorInfo, [core.Object])))(),
    PigeonMultiFactorInfoToMultiFactorInfo: () => (T$.PigeonMultiFactorInfoToMultiFactorInfo = dart.constFn(dart.fnType(platform_interface_multi_factor.MultiFactorInfo, [messages$46pigeon$.PigeonMultiFactorInfo])))(),
    PigeonMultiFactorSessionN: () => (T$.PigeonMultiFactorSessionN = dart.constFn(dart.nullable(messages$46pigeon$.PigeonMultiFactorSession)))(),
    PigeonMultiFactorInfoN: () => (T$.PigeonMultiFactorInfoN = dart.constFn(dart.nullable(messages$46pigeon$.PigeonMultiFactorInfo)))(),
    ListOfPigeonMultiFactorInfoN: () => (T$.ListOfPigeonMultiFactorInfoN = dart.constFn(core.List$(T$.PigeonMultiFactorInfoN())))(),
    MapOfStringN$ObjectN: () => (T$.MapOfStringN$ObjectN = dart.constFn(core.Map$(T$.StringN(), T$.ObjectN())))(),
    ListOfint: () => (T$.ListOfint = dart.constFn(core.List$(core.int)))(),
    StreamControllerOfListOfint: () => (T$.StreamControllerOfListOfint = dart.constFn(async.StreamController$(T$.ListOfint())))(),
    SinkOfListOfint: () => (T$.SinkOfListOfint = dart.constFn(core.Sink$(T$.ListOfint())))(),
    intAndStringTovoid: () => (T$.intAndStringTovoid = dart.constFn(dart.fnType(dart.void, [core.int, core.String])))(),
    JSArrayOfint: () => (T$.JSArrayOfint = dart.constFn(_interceptors.JSArray$(core.int)))(),
    MethodCallToFutureOfvoid: () => (T$.MethodCallToFutureOfvoid = dart.constFn(dart.fnType(T$.FutureOfvoid(), [message_codec.MethodCall])))(),
    IdentityMapOfString$MethodChannelFirebaseStorage: () => (T$.IdentityMapOfString$MethodChannelFirebaseStorage = dart.constFn(_js_helper.IdentityMap$(core.String, method_channel_firebase_storage.MethodChannelFirebaseStorage)))(),
    StreamControllerOfTaskSnapshotPlatform: () => (T$.StreamControllerOfTaskSnapshotPlatform = dart.constFn(async.StreamController$(platform_interface_task_snapshot.TaskSnapshotPlatform)))(),
    IdentityMapOfint$StreamControllerOfTaskSnapshotPlatform: () => (T$.IdentityMapOfint$StreamControllerOfTaskSnapshotPlatform = dart.constFn(_js_helper.IdentityMap$(core.int, T$.StreamControllerOfTaskSnapshotPlatform())))(),
    VoidToClient: () => (T$.VoidToClient = dart.constFn(dart.fnType(client$.Client, [])))(),
    StringAndStringTobool: () => (T$.StringAndStringTobool = dart.constFn(dart.fnType(core.bool, [core.String, core.String])))(),
    StringToint: () => (T$.StringToint = dart.constFn(dart.fnType(core.int, [core.String])))(),
    _EmptyStreamOfListOfint: () => (T$._EmptyStreamOfListOfint = dart.constFn(async._EmptyStream$(T$.ListOfint())))(),
    StreamOfListOfint: () => (T$.StreamOfListOfint = dart.constFn(async.Stream$(T$.ListOfint())))(),
    CompleterOfUint8List: () => (T$.CompleterOfUint8List = dart.constFn(async.Completer$(typed_data.Uint8List)))(),
    ListOfintTovoid: () => (T$.ListOfintTovoid = dart.constFn(dart.fnType(dart.void, [T$.ListOfint()])))(),
    JSArrayOfMultipartFile: () => (T$.JSArrayOfMultipartFile = dart.constFn(_interceptors.JSArray$(multipart_file.MultipartFile)))(),
    _AsyncStarImplOfListOfint: () => (T$._AsyncStarImplOfListOfint = dart.constFn(async._AsyncStarImpl$(T$.ListOfint())))(),
    intToint: () => (T$.intToint = dart.constFn(dart.fnType(core.int, [core.int])))(),
    LinkedMapOfTaskState$TaskState: () => (T$.LinkedMapOfTaskState$TaskState = dart.constFn(_js_helper.LinkedMap$(storage.TaskState, task_state.TaskState)))(),
    DocumentChangeTypeTobool: () => (T$.DocumentChangeTypeTobool = dart.constFn(dart.fnType(core.bool, [platform_interface_document_change.DocumentChangeType])))(),
    LinkedHashSetOfHttpRequest: () => (T$.LinkedHashSetOfHttpRequest = dart.constFn(collection.LinkedHashSet$(html.HttpRequest)))(),
    CompleterOfStreamedResponse: () => (T$.CompleterOfStreamedResponse = dart.constFn(async.Completer$(streamed_response.StreamedResponse)))(),
    ProgressEventToNull: () => (T$.ProgressEventToNull = dart.constFn(dart.fnType(core.Null, [html.ProgressEvent])))(),
    JSArrayOfListOfString: () => (T$.JSArrayOfListOfString = dart.constFn(_interceptors.JSArray$(T$.ListOfString())))(),
    ListOfStringToString: () => (T$.ListOfStringToString = dart.constFn(dart.fnType(core.String, [T$.ListOfString()])))(),
    StringToMethodChannelReference: () => (T$.StringToMethodChannelReference = dart.constFn(dart.fnType(method_channel_reference.MethodChannelReference, [core.String])))(),
    voidToNull: () => (T$.voidToNull = dart.constFn(dart.fnType(core.Null, [dart.void])))(),
    ObjectAndStackTraceToNull: () => (T$.ObjectAndStackTraceToNull = dart.constFn(dart.fnType(core.Null, [core.Object, core.StackTrace])))(),
    TaskSnapshotPlatformToFutureOfvoid: () => (T$.TaskSnapshotPlatformToFutureOfvoid = dart.constFn(dart.fnType(T$.FutureOfvoid(), [platform_interface_task_snapshot.TaskSnapshotPlatform])))(),
    CompleterOfTaskSnapshotPlatform: () => (T$.CompleterOfTaskSnapshotPlatform = dart.constFn(async.Completer$(platform_interface_task_snapshot.TaskSnapshotPlatform)))()
  };
  var S$ = {
    $toString: dartx.toString,
    Widget_key: dart.privateName(framework, "Widget.key"),
    Text_selectionColor: dart.privateName(text, "Text.selectionColor"),
    Text_textHeightBehavior: dart.privateName(text, "Text.textHeightBehavior"),
    Text_textWidthBasis: dart.privateName(text, "Text.textWidthBasis"),
    Text_semanticsLabel: dart.privateName(text, "Text.semanticsLabel"),
    Text_maxLines: dart.privateName(text, "Text.maxLines"),
    Text_textScaleFactor: dart.privateName(text, "Text.textScaleFactor"),
    Text_overflow: dart.privateName(text, "Text.overflow"),
    Text_softWrap: dart.privateName(text, "Text.softWrap"),
    Text_locale: dart.privateName(text, "Text.locale"),
    Text_textDirection: dart.privateName(text, "Text.textDirection"),
    Text_textAlign: dart.privateName(text, "Text.textAlign"),
    Text_strutStyle: dart.privateName(text, "Text.strutStyle"),
    Text_style: dart.privateName(text, "Text.style"),
    Text_textSpan: dart.privateName(text, "Text.textSpan"),
    Text_data: dart.privateName(text, "Text.data"),
    ProgressIndicator_semanticsValue: dart.privateName(progress_indicator, "ProgressIndicator.semanticsValue"),
    ProgressIndicator_semanticsLabel: dart.privateName(progress_indicator, "ProgressIndicator.semanticsLabel"),
    ProgressIndicator_valueColor: dart.privateName(progress_indicator, "ProgressIndicator.valueColor"),
    ProgressIndicator_color: dart.privateName(progress_indicator, "ProgressIndicator.color"),
    ProgressIndicator_backgroundColor: dart.privateName(progress_indicator, "ProgressIndicator.backgroundColor"),
    ProgressIndicator_value: dart.privateName(progress_indicator, "ProgressIndicator.value"),
    CircularProgressIndicator_strokeWidth: dart.privateName(progress_indicator, "CircularProgressIndicator.strokeWidth"),
    _Enum__name: dart.privateName(core, "_Enum._name"),
    _Enum_index: dart.privateName(core, "_Enum.index"),
    CircularProgressIndicator__indicatorType: dart.privateName(progress_indicator, "CircularProgressIndicator._indicatorType"),
    SingleChildRenderObjectWidget_child: dart.privateName(framework, "SingleChildRenderObjectWidget.child"),
    SizedBox_height: dart.privateName(basic, "SizedBox.height"),
    SizedBox_width: dart.privateName(basic, "SizedBox.width"),
    Align_heightFactor: dart.privateName(basic, "Align.heightFactor"),
    Align_widthFactor: dart.privateName(basic, "Align.widthFactor"),
    Alignment_y: dart.privateName(alignment, "Alignment.y"),
    Alignment_x: dart.privateName(alignment, "Alignment.x"),
    Align_alignment: dart.privateName(basic, "Align.alignment"),
    $length: dartx.length,
    EdgeInsets_bottom: dart.privateName(edge_insets, "EdgeInsets.bottom"),
    EdgeInsets_right: dart.privateName(edge_insets, "EdgeInsets.right"),
    EdgeInsets_top: dart.privateName(edge_insets, "EdgeInsets.top"),
    EdgeInsets_left: dart.privateName(edge_insets, "EdgeInsets.left"),
    $_get: dartx._get,
    InputDecoration_constraints: dart.privateName(input_decorator, "InputDecoration.constraints"),
    InputDecoration_alignLabelWithHint: dart.privateName(input_decorator, "InputDecoration.alignLabelWithHint"),
    InputDecoration_semanticCounterText: dart.privateName(input_decorator, "InputDecoration.semanticCounterText"),
    InputDecoration_enabled: dart.privateName(input_decorator, "InputDecoration.enabled"),
    BorderSide_strokeAlign: dart.privateName(borders, "BorderSide.strokeAlign"),
    BorderSide_style: dart.privateName(borders, "BorderSide.style"),
    BorderSide_width: dart.privateName(borders, "BorderSide.width"),
    Color_value: dart.privateName(ui, "Color.value"),
    BorderSide_color: dart.privateName(borders, "BorderSide.color"),
    InputBorder_borderSide: dart.privateName(input_border, "InputBorder.borderSide"),
    Radius_y: dart.privateName(ui, "Radius.y"),
    Radius_x: dart.privateName(ui, "Radius.x"),
    BorderRadius_bottomRight: dart.privateName(border_radius, "BorderRadius.bottomRight"),
    BorderRadius_bottomLeft: dart.privateName(border_radius, "BorderRadius.bottomLeft"),
    BorderRadius_topRight: dart.privateName(border_radius, "BorderRadius.topRight"),
    BorderRadius_topLeft: dart.privateName(border_radius, "BorderRadius.topLeft"),
    OutlineInputBorder_borderRadius: dart.privateName(input_border, "OutlineInputBorder.borderRadius"),
    OutlineInputBorder_gapPadding: dart.privateName(input_border, "OutlineInputBorder.gapPadding"),
    InputDecoration_border: dart.privateName(input_decorator, "InputDecoration.border"),
    InputDecoration_enabledBorder: dart.privateName(input_decorator, "InputDecoration.enabledBorder"),
    InputDecoration_disabledBorder: dart.privateName(input_decorator, "InputDecoration.disabledBorder"),
    InputDecoration_focusedErrorBorder: dart.privateName(input_decorator, "InputDecoration.focusedErrorBorder"),
    InputDecoration_focusedBorder: dart.privateName(input_decorator, "InputDecoration.focusedBorder"),
    InputDecoration_errorBorder: dart.privateName(input_decorator, "InputDecoration.errorBorder"),
    InputDecoration_hoverColor: dart.privateName(input_decorator, "InputDecoration.hoverColor"),
    InputDecoration_focusColor: dart.privateName(input_decorator, "InputDecoration.focusColor"),
    InputDecoration_fillColor: dart.privateName(input_decorator, "InputDecoration.fillColor"),
    InputDecoration_filled: dart.privateName(input_decorator, "InputDecoration.filled"),
    InputDecoration_counterStyle: dart.privateName(input_decorator, "InputDecoration.counterStyle"),
    InputDecoration_counter: dart.privateName(input_decorator, "InputDecoration.counter"),
    InputDecoration_counterText: dart.privateName(input_decorator, "InputDecoration.counterText"),
    InputDecoration_suffixIconConstraints: dart.privateName(input_decorator, "InputDecoration.suffixIconConstraints"),
    InputDecoration_suffixIconColor: dart.privateName(input_decorator, "InputDecoration.suffixIconColor"),
    InputDecoration_suffixStyle: dart.privateName(input_decorator, "InputDecoration.suffixStyle"),
    InputDecoration_suffixText: dart.privateName(input_decorator, "InputDecoration.suffixText"),
    InputDecoration_suffix: dart.privateName(input_decorator, "InputDecoration.suffix"),
    InputDecoration_suffixIcon: dart.privateName(input_decorator, "InputDecoration.suffixIcon"),
    InputDecoration_prefixIconColor: dart.privateName(input_decorator, "InputDecoration.prefixIconColor"),
    InputDecoration_prefixStyle: dart.privateName(input_decorator, "InputDecoration.prefixStyle"),
    InputDecoration_prefixText: dart.privateName(input_decorator, "InputDecoration.prefixText"),
    InputDecoration_prefix: dart.privateName(input_decorator, "InputDecoration.prefix"),
    InputDecoration_prefixIconConstraints: dart.privateName(input_decorator, "InputDecoration.prefixIconConstraints"),
    InputDecoration_prefixIcon: dart.privateName(input_decorator, "InputDecoration.prefixIcon"),
    InputDecoration_isCollapsed: dart.privateName(input_decorator, "InputDecoration.isCollapsed"),
    InputDecoration_contentPadding: dart.privateName(input_decorator, "InputDecoration.contentPadding"),
    InputDecoration_isDense: dart.privateName(input_decorator, "InputDecoration.isDense"),
    InputDecoration_floatingLabelAlignment: dart.privateName(input_decorator, "InputDecoration.floatingLabelAlignment"),
    InputDecoration_floatingLabelBehavior: dart.privateName(input_decorator, "InputDecoration.floatingLabelBehavior"),
    InputDecoration_errorMaxLines: dart.privateName(input_decorator, "InputDecoration.errorMaxLines"),
    InputDecoration_errorStyle: dart.privateName(input_decorator, "InputDecoration.errorStyle"),
    InputDecoration_errorText: dart.privateName(input_decorator, "InputDecoration.errorText"),
    InputDecoration_hintMaxLines: dart.privateName(input_decorator, "InputDecoration.hintMaxLines"),
    InputDecoration_hintTextDirection: dart.privateName(input_decorator, "InputDecoration.hintTextDirection"),
    InputDecoration_hintStyle: dart.privateName(input_decorator, "InputDecoration.hintStyle"),
    InputDecoration_hintText: dart.privateName(input_decorator, "InputDecoration.hintText"),
    InputDecoration_helperMaxLines: dart.privateName(input_decorator, "InputDecoration.helperMaxLines"),
    InputDecoration_helperStyle: dart.privateName(input_decorator, "InputDecoration.helperStyle"),
    InputDecoration_helperText: dart.privateName(input_decorator, "InputDecoration.helperText"),
    InputDecoration_floatingLabelStyle: dart.privateName(input_decorator, "InputDecoration.floatingLabelStyle"),
    InputDecoration_labelStyle: dart.privateName(input_decorator, "InputDecoration.labelStyle"),
    InputDecoration_labelText: dart.privateName(input_decorator, "InputDecoration.labelText"),
    InputDecoration_label: dart.privateName(input_decorator, "InputDecoration.label"),
    InputDecoration_iconColor: dart.privateName(input_decorator, "InputDecoration.iconColor"),
    InputDecoration_icon: dart.privateName(input_decorator, "InputDecoration.icon"),
    isUser: dart.privateName(main, "ChatBubble.isUser"),
    text: dart.privateName(main, "ChatBubble.text"),
    isLoading: dart.privateName(main, "ChatBubble.isLoading"),
    FirebaseOptions_appGroupId: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.appGroupId"),
    FirebaseOptions_iosBundleId: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.iosBundleId"),
    FirebaseOptions_iosClientId: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.iosClientId"),
    FirebaseOptions_androidClientId: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.androidClientId"),
    FirebaseOptions_deepLinkURLScheme: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.deepLinkURLScheme"),
    FirebaseOptions_trackingId: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.trackingId"),
    FirebaseOptions_measurementId: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.measurementId"),
    FirebaseOptions_storageBucket: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.storageBucket"),
    FirebaseOptions_databaseURL: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.databaseURL"),
    FirebaseOptions_authDomain: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.authDomain"),
    FirebaseOptions_projectId: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.projectId"),
    FirebaseOptions_messagingSenderId: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.messagingSenderId"),
    FirebaseOptions_appId: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.appId"),
    FirebaseOptions_apiKey: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.apiKey"),
    _delegate: dart.privateName(cloud_firestore, "_delegate"),
    $isNotEmpty: dartx.isNotEmpty,
    $contains: dartx.contains,
    $runtimeType: dartx.runtimeType,
    _delegate$1: dart.privateName(cloud_firestore, "_JsonQuery._delegate"),
    _hasStartCursor: dart.privateName(cloud_firestore, "_hasStartCursor"),
    _hasEndCursor: dart.privateName(cloud_firestore, "_hasEndCursor"),
    _isInequality: dart.privateName(cloud_firestore, "_isInequality"),
    $add: dartx.add,
    $last: dartx.last,
    _assertQueryCursorSnapshot: dart.privateName(cloud_firestore, "_assertQueryCursorSnapshot"),
    _assertQueryCursorValues: dart.privateName(cloud_firestore, "_assertQueryCursorValues"),
    $_equals: dartx._equals,
    _assertValidFieldType: dart.privateName(cloud_firestore, "_assertValidFieldType"),
    GetOptions_source: dart.privateName(get_options, "GetOptions.source"),
    $isEmpty: dartx.isEmpty,
    $where: dartx.where,
    ListEquality__elementEquality: dart.privateName(equality, "ListEquality._elementEquality"),
    _originalQuery: dart.privateName(cloud_firestore, "_originalQuery"),
    _originalCollectionReferenceQuery: dart.privateName(cloud_firestore, "_originalCollectionReferenceQuery"),
    _toFirestore: dart.privateName(cloud_firestore, "_toFirestore"),
    _fromFirestore: dart.privateName(cloud_firestore, "_fromFirestore"),
    _mapQuery: dart.privateName(cloud_firestore, "_mapQuery"),
    _firestore: dart.privateName(cloud_firestore, "_firestore"),
    _originalDocumentChange: dart.privateName(cloud_firestore, "_originalDocumentChange"),
    _originalDocumentReference: dart.privateName(cloud_firestore, "_originalDocumentReference"),
    ___JsonDocumentSnapshot_reference: dart.privateName(cloud_firestore, "_#_JsonDocumentSnapshot#reference"),
    ___JsonDocumentSnapshot_metadata: dart.privateName(cloud_firestore, "_#_JsonDocumentSnapshot#metadata"),
    _originalDocumentSnapshot: dart.privateName(cloud_firestore, "_originalDocumentSnapshot"),
    $hashCode: dartx.hashCode,
    _delegate$2: dart.privateName(platform_interface_field_value, "_delegate"),
    app: dart.privateName(cloud_firestore, "FirebaseFirestore.app"),
    _delegatePackingProperty: dart.privateName(cloud_firestore, "_delegatePackingProperty"),
    $containsKey: dartx.containsKey,
    $_set: dartx._set,
    Duration__duration: dart.privateName(core, "Duration._duration"),
    _appName: dart.privateName(firebase_core_platform_interface, "_appName"),
    _methodChannelName: dart.privateName(firebase_core_platform_interface, "_methodChannelName"),
    __LoadBundleTask_stream: dart.privateName(cloud_firestore, "_#LoadBundleTask#stream"),
    $map: dartx.map,
    $toList: dartx.toList,
    _originalQuerySnapshot: dart.privateName(cloud_firestore, "_originalQuerySnapshot"),
    $updateAll: dartx.updateAll,
    _delegate$3: dart.privateName(firebase_core, "_delegate"),
    _webFirestore: dart.privateName(cloud_firestore_web, "_webFirestore"),
    _settings: dart.privateName(cloud_firestore_web, "_settings"),
    _delegate$4: dart.privateName(cloud_firestore_web, "_delegate"),
    Settings_ignoreUndefinedProperties: dart.privateName(settings, "Settings.ignoreUndefinedProperties"),
    Settings_cacheSizeBytes: dart.privateName(settings, "Settings.cacheSizeBytes"),
    Settings_sslEnabled: dart.privateName(settings, "Settings.sslEnabled"),
    Settings_host: dart.privateName(settings, "Settings.host"),
    Settings_persistenceEnabled: dart.privateName(settings, "Settings.persistenceEnabled"),
    appInstance: dart.privateName(platform_interface_firestore, "FirebaseFirestorePlatform.appInstance"),
    _initialized: dart.privateName(firebase_auth_web, "_initialized"),
    _persistence: dart.privateName(firebase_auth_web, "_persistence"),
    _webAuth: dart.privateName(firebase_auth_web, "_webAuth"),
    appInstance$1: dart.privateName(platform_interface_firebase_auth, "FirebaseAuthPlatform.appInstance"),
    tenantId: dart.privateName(platform_interface_firebase_auth, "FirebaseAuthPlatform.tenantId"),
    _isAutomaticDataCollectionEnabled: dart.privateName(firebase_core_web, "_isAutomaticDataCollectionEnabled"),
    name: dart.privateName(firebase_core_platform_interface, "FirebaseAppPlatform.name"),
    options: dart.privateName(firebase_core_platform_interface, "FirebaseAppPlatform.options"),
    _isDefault: dart.privateName(firebase_core_platform_interface, "_isDefault"),
    name$1: dart.privateName(firebase_core_web, "FirebaseWebService.name"),
    override: dart.privateName(firebase_core_web, "FirebaseWebService.override"),
    $putIfAbsent: dartx.putIfAbsent,
    _firebaseSDKVersion: dart.privateName(firebase_core_web, "_firebaseSDKVersion"),
    _ignoredServiceScripts: dart.privateName(firebase_core_web, "_ignoredServiceScripts"),
    $type: dartx.type,
    $text: dartx.text,
    $head: dartx.head,
    $append: dartx.append,
    _injectSrcScript: dart.privateName(firebase_core_web, "_injectSrcScript"),
    $values: dartx.values,
    _initializeCore: dart.privateName(firebase_core_web, "_initializeCore"),
    $split: dartx.split,
    $replaceAll: dartx.replaceAll,
    plugin: dart.privateName(firebase_core_platform_interface, "FirebaseException.plugin"),
    message: dart.privateName(firebase_core_platform_interface, "FirebaseException.message"),
    code: dart.privateName(firebase_core_platform_interface, "FirebaseException.code"),
    stackTrace: dart.privateName(firebase_core_platform_interface, "FirebaseException.stackTrace"),
    apiKey: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.apiKey"),
    appId: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.appId"),
    messagingSenderId: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.messagingSenderId"),
    projectId: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.projectId"),
    authDomain: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.authDomain"),
    databaseURL: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.databaseURL"),
    storageBucket: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.storageBucket"),
    measurementId: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.measurementId"),
    trackingId: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.trackingId"),
    deepLinkURLScheme: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.deepLinkURLScheme"),
    androidClientId: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.androidClientId"),
    iosClientId: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.iosClientId"),
    iosBundleId: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.iosBundleId"),
    appGroupId: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.appGroupId"),
    MapEquality__valueEquality: dart.privateName(equality, "MapEquality._valueEquality"),
    MapEquality__keyEquality: dart.privateName(equality, "MapEquality._keyEquality"),
    $cast: dartx.cast,
    _initializeFirebaseAppFromMap: dart.privateName(firebase_core_platform_interface, "_initializeFirebaseAppFromMap"),
    $forEach: dartx.forEach,
    _initializeCore$1: dart.privateName(firebase_core_platform_interface, "_initializeCore"),
    _isDeleted: dart.privateName(firebase_core_platform_interface, "_isDeleted"),
    _api: dart.privateName(firebase_core_platform_interface, "_api"),
    _isAutomaticDataCollectionEnabled$1: dart.privateName(firebase_core_platform_interface, "_isAutomaticDataCollectionEnabled"),
    $remove: dartx.remove,
    $replaceFirst: dartx.replaceFirst,
    __LoadBundleTaskWeb_stream: dart.privateName(load_bundle_task_web, "_#LoadBundleTaskWeb#stream"),
    $toLowerCase: dartx.toLowerCase,
    $join: dartx.join,
    _firestorePlatform: dart.privateName(collection_reference_web, "_firestorePlatform"),
    _webFirestore$1: dart.privateName(collection_reference_web, "_webFirestore"),
    _delegate$5: dart.privateName(collection_reference_web, "_delegate"),
    _pointer: dart.privateName(collection_reference_web, "_pointer"),
    _pointer$1: dart.privateName(platform_interface_collection_reference, "_pointer"),
    isCollectionGroupQuery: dart.privateName(query_web, "QueryWeb.isCollectionGroupQuery"),
    _path: dart.privateName(query_web, "_path"),
    _webQuery: dart.privateName(query_web, "_webQuery"),
    DeepCollectionEquality__unordered: dart.privateName(equality, "DeepCollectionEquality._unordered"),
    DeepCollectionEquality__base: dart.privateName(equality, "DeepCollectionEquality._base"),
    $addAll: dartx.addAll,
    _copyWithParameters: dart.privateName(query_web, "_copyWithParameters"),
    _buildWebQueryWithParameters: dart.privateName(query_web, "_buildWebQueryWithParameters"),
    firestore: dart.privateName(platform_interface_query, "QueryPlatform.firestore"),
    parameters: dart.privateName(platform_interface_query, "QueryPlatform.parameters"),
    firestoreWeb: dart.privateName(document_reference_web, "DocumentReferenceWeb.firestoreWeb"),
    _delegate$6: dart.privateName(document_reference_web, "_delegate"),
    firestore$1: dart.privateName(platform_interface_document_reference, "DocumentReferencePlatform.firestore"),
    _pointer$2: dart.privateName(platform_interface_document_reference, "_pointer"),
    jsObject: dart.privateName(js$, "JsObjectWrapper.jsObject"),
    taskState: dart.privateName(firestore, "LoadBundleTaskProgress.taskState"),
    bytesLoaded: dart.privateName(firestore, "LoadBundleTaskProgress.bytesLoaded"),
    documentsLoaded: dart.privateName(firestore, "LoadBundleTaskProgress.documentsLoaded"),
    totalBytes: dart.privateName(firestore, "LoadBundleTaskProgress.totalBytes"),
    totalDocuments: dart.privateName(firestore, "LoadBundleTaskProgress.totalDocuments"),
    _wrapUpdateFunctionCall: dart.privateName(firestore, "_wrapUpdateFunctionCall"),
    $insert: dartx.insert,
    _createSnapshotStream: dart.privateName(firestore, "_createSnapshotStream"),
    __Query_onSnapshot: dart.privateName(firestore, "_#Query#onSnapshot"),
    __Query_onSnapshotMetadata: dart.privateName(firestore, "_#Query#onSnapshotMetadata"),
    _createQueryConstraint: dart.privateName(firestore, "_createQueryConstraint"),
    _jsify: dart.privateName(firestore, "_jsify"),
    _firestore$1: dart.privateName(transaction_web, "_firestore"),
    _webFirestoreDelegate: dart.privateName(transaction_web, "_webFirestoreDelegate"),
    _webTransactionDelegate: dart.privateName(transaction_web, "_webTransactionDelegate"),
    _webFirestoreDelegate$1: dart.privateName(write_batch_web, "_webFirestoreDelegate"),
    _webWriteBatchDelegate: dart.privateName(write_batch_web, "_webWriteBatchDelegate"),
    _webMultiFactorUser: dart.privateName(firebase_auth_web_multi_factor, "_webMultiFactorUser"),
    auth: dart.privateName(platform_interface_multi_factor, "MultiFactorPlatform.auth"),
    assertion: dart.privateName(firebase_auth_web_multi_factor, "MultiFactorAssertionWeb.assertion"),
    _auth: dart.privateName(firebase_auth_web_multi_factor, "_auth"),
    _webMultiFactorResolver: dart.privateName(firebase_auth_web_multi_factor, "_webMultiFactorResolver"),
    hints: dart.privateName(platform_interface_multi_factor, "MultiFactorResolverPlatform.hints"),
    session: dart.privateName(platform_interface_multi_factor, "MultiFactorResolverPlatform.session"),
    webSession: dart.privateName(firebase_auth_web_multi_factor, "MultiFactorSessionWeb.webSession"),
    id: dart.privateName(platform_interface_multi_factor, "MultiFactorSession.id"),
    _auth$1: dart.privateName(firebase_auth_web_confirmation_result, "_auth"),
    _webConfirmationResult: dart.privateName(firebase_auth_web_confirmation_result, "_webConfirmationResult"),
    verificationId: dart.privateName(platform_interface_confirmation_result, "ConfirmationResultPlatform.verificationId"),
    __RecaptchaVerifierFactoryWeb__delegate: dart.privateName(firebase_auth_web_recaptcha_verifier_factory, "_#RecaptchaVerifierFactoryWeb#_delegate"),
    $document: dartx.document,
    $children: dartx.children,
    $id: dartx.id,
    _delegate$7: dart.privateName(firebase_auth_web_recaptcha_verifier_factory, "_delegate"),
    _webUser: dart.privateName(firebase_auth_web_user, "_webUser"),
    auth$1: dart.privateName(platform_interface_user, "UserPlatform.auth"),
    multiFactor: dart.privateName(platform_interface_user, "UserPlatform.multiFactor"),
    _user: dart.privateName(platform_interface_user, "_user"),
    auth$2: dart.privateName(platform_interface_user_credential, "UserCredentialPlatform.auth"),
    additionalUserInfo: dart.privateName(platform_interface_user_credential, "UserCredentialPlatform.additionalUserInfo"),
    credential: dart.privateName(platform_interface_user_credential, "UserCredentialPlatform.credential"),
    user: dart.privateName(platform_interface_user_credential, "UserCredentialPlatform.user"),
    _onAuthUnsubscribe: dart.privateName(auth$, "_onAuthUnsubscribe"),
    _changeController: dart.privateName(auth$, "_changeController"),
    _onIdTokenChangedUnsubscribe: dart.privateName(auth$, "_onIdTokenChangedUnsubscribe"),
    _idTokenChangedController: dart.privateName(auth$, "_idTokenChangedController"),
    _maxDownloadRetryTime: dart.privateName(firebase_storage_web$, "_maxDownloadRetryTime"),
    _maxOperationRetryTime: dart.privateName(firebase_storage_web$, "_maxOperationRetryTime"),
    _webStorage: dart.privateName(firebase_storage_web$, "_webStorage"),
    _bucket: dart.privateName(firebase_storage_web$, "_bucket"),
    _createReference: dart.privateName(firebase_storage_web$, "_createReference"),
    appInstance$2: dart.privateName(platform_interface_firebase_storage, "FirebaseStoragePlatform.appInstance"),
    bucket: dart.privateName(platform_interface_firebase_storage, "FirebaseStoragePlatform.bucket"),
    emulatorHost: dart.privateName(platform_interface_firebase_storage, "FirebaseStoragePlatform.emulatorHost"),
    emulatorPort: dart.privateName(platform_interface_firebase_storage, "FirebaseStoragePlatform.emulatorPort"),
    components: dart.privateName(pointer, "Pointer.components"),
    $isOdd: dartx.isOdd,
    $isEven: dartx.isEven,
    $removeLast: dartx.removeLast,
    bytes: dart.privateName(blob, "Blob.bytes"),
    components$1: dart.privateName(field_path, "FieldPath.components"),
    $startsWith: dartx.startsWith,
    $endsWith: dartx.endsWith,
    latitude: dart.privateName(geo_point, "GeoPoint.latitude"),
    longitude: dart.privateName(geo_point, "GeoPoint.longitude"),
    _name: dart.privateName(core, "_name"),
    _enumToString: dart.privateName(core, "_enumToString"),
    type: dart.privateName(platform_interface_document_change, "DocumentChangePlatform.type"),
    oldIndex: dart.privateName(platform_interface_document_change, "DocumentChangePlatform.oldIndex"),
    newIndex: dart.privateName(platform_interface_document_change, "DocumentChangePlatform.newIndex"),
    document: dart.privateName(platform_interface_document_change, "DocumentChangePlatform.document"),
    _firestore$2: dart.privateName(platform_interface_document_snapshot, "_firestore"),
    _data: dart.privateName(platform_interface_document_snapshot, "_data"),
    _pointer$3: dart.privateName(platform_interface_document_snapshot, "_pointer"),
    docs: dart.privateName(platform_interface_query_snapshot, "QuerySnapshotPlatform.docs"),
    docChanges: dart.privateName(platform_interface_query_snapshot, "QuerySnapshotPlatform.docChanges"),
    metadata: dart.privateName(platform_interface_query_snapshot, "QuerySnapshotPlatform.metadata"),
    taskState$1: dart.privateName(platform_interface_load_bundle_task_snapshot, "LoadBundleTaskSnapshotPlatform.taskState"),
    bytesLoaded$1: dart.privateName(platform_interface_load_bundle_task_snapshot, "LoadBundleTaskSnapshotPlatform.bytesLoaded"),
    documentsLoaded$1: dart.privateName(platform_interface_load_bundle_task_snapshot, "LoadBundleTaskSnapshotPlatform.documentsLoaded"),
    totalBytes$1: dart.privateName(platform_interface_load_bundle_task_snapshot, "LoadBundleTaskSnapshotPlatform.totalBytes"),
    totalDocuments$1: dart.privateName(platform_interface_load_bundle_task_snapshot, "LoadBundleTaskSnapshotPlatform.totalDocuments"),
    hasPendingWrites: dart.privateName(snapshot_metadata, "SnapshotMetadataPlatform.hasPendingWrites"),
    isFromCache: dart.privateName(snapshot_metadata, "SnapshotMetadataPlatform.isFromCache"),
    _seconds: dart.privateName(timestamp, "_seconds"),
    _nanoseconds: dart.privateName(timestamp, "_nanoseconds"),
    $floor: dartx.floor,
    $truncate: dartx.truncate,
    $compareTo: dartx.compareTo,
    persistenceEnabled: dart.privateName(settings, "Settings.persistenceEnabled"),
    host: dart.privateName(settings, "Settings.host"),
    sslEnabled: dart.privateName(settings, "Settings.sslEnabled"),
    cacheSizeBytes: dart.privateName(settings, "Settings.cacheSizeBytes"),
    ignoreUndefinedProperties: dart.privateName(settings, "Settings.ignoreUndefinedProperties"),
    source: dart.privateName(get_options, "GetOptions.source"),
    merge: dart.privateName(set_options, "SetOptions.merge"),
    mergeFields: dart.privateName(set_options, "SetOptions.mergeFields"),
    synchronizeTabs: dart.privateName(persistence_settings, "PersistenceSettings.synchronizeTabs"),
    apiKey$1: dart.privateName(messages$46pigeon, "PigeonFirebaseOptions.apiKey"),
    appId$1: dart.privateName(messages$46pigeon, "PigeonFirebaseOptions.appId"),
    messagingSenderId$1: dart.privateName(messages$46pigeon, "PigeonFirebaseOptions.messagingSenderId"),
    projectId$1: dart.privateName(messages$46pigeon, "PigeonFirebaseOptions.projectId"),
    authDomain$1: dart.privateName(messages$46pigeon, "PigeonFirebaseOptions.authDomain"),
    databaseURL$1: dart.privateName(messages$46pigeon, "PigeonFirebaseOptions.databaseURL"),
    storageBucket$1: dart.privateName(messages$46pigeon, "PigeonFirebaseOptions.storageBucket"),
    measurementId$1: dart.privateName(messages$46pigeon, "PigeonFirebaseOptions.measurementId"),
    trackingId$1: dart.privateName(messages$46pigeon, "PigeonFirebaseOptions.trackingId"),
    deepLinkURLScheme$1: dart.privateName(messages$46pigeon, "PigeonFirebaseOptions.deepLinkURLScheme"),
    androidClientId$1: dart.privateName(messages$46pigeon, "PigeonFirebaseOptions.androidClientId"),
    iosClientId$1: dart.privateName(messages$46pigeon, "PigeonFirebaseOptions.iosClientId"),
    iosBundleId$1: dart.privateName(messages$46pigeon, "PigeonFirebaseOptions.iosBundleId"),
    appGroupId$1: dart.privateName(messages$46pigeon, "PigeonFirebaseOptions.appGroupId"),
    name$2: dart.privateName(messages$46pigeon, "PigeonInitializeResponse.name"),
    options$1: dart.privateName(messages$46pigeon, "PigeonInitializeResponse.options"),
    isAutomaticDataCollectionEnabled: dart.privateName(messages$46pigeon, "PigeonInitializeResponse.isAutomaticDataCollectionEnabled"),
    pluginConstants: dart.privateName(messages$46pigeon, "PigeonInitializeResponse.pluginConstants"),
    _binaryMessenger: dart.privateName(messages$46pigeon, "_binaryMessenger"),
    data: dart.privateName(field_value_web, "FieldValueWeb.data"),
    _operation: dart.privateName(action_code_info, "_operation"),
    _data$1: dart.privateName(action_code_info, "_data"),
    androidPackageName: dart.privateName(action_code_settings, "ActionCodeSettings.androidPackageName"),
    androidMinimumVersion: dart.privateName(action_code_settings, "ActionCodeSettings.androidMinimumVersion"),
    androidInstallApp: dart.privateName(action_code_settings, "ActionCodeSettings.androidInstallApp"),
    iOSBundleId: dart.privateName(action_code_settings, "ActionCodeSettings.iOSBundleId"),
    dynamicLinkDomain: dart.privateName(action_code_settings, "ActionCodeSettings.dynamicLinkDomain"),
    handleCodeInApp: dart.privateName(action_code_settings, "ActionCodeSettings.handleCodeInApp"),
    url: dart.privateName(action_code_settings, "ActionCodeSettings.url"),
    isNewUser: dart.privateName(additional_user_info, "AdditionalUserInfo.isNewUser"),
    profile: dart.privateName(additional_user_info, "AdditionalUserInfo.profile"),
    providerId: dart.privateName(additional_user_info, "AdditionalUserInfo.providerId"),
    username: dart.privateName(additional_user_info, "AdditionalUserInfo.username"),
    providerId$1: dart.privateName(auth_credential, "AuthCredential.providerId"),
    signInMethod: dart.privateName(auth_credential, "AuthCredential.signInMethod"),
    token: dart.privateName(auth_credential, "AuthCredential.token"),
    accessToken: dart.privateName(auth_credential, "AuthCredential.accessToken"),
    providerId$2: dart.privateName(auth_provider, "AuthProvider.providerId"),
    email: dart.privateName(firebase_auth_exception, "FirebaseAuthException.email"),
    credential$1: dart.privateName(firebase_auth_exception, "FirebaseAuthException.credential"),
    phoneNumber: dart.privateName(firebase_auth_exception, "FirebaseAuthException.phoneNumber"),
    tenantId$1: dart.privateName(firebase_auth_exception, "FirebaseAuthException.tenantId"),
    resolver: dart.privateName(firebase_auth_multi_factor_exception, "FirebaseAuthMultiFactorExceptionPlatform.resolver"),
    _data$2: dart.privateName(id_token_result, "_data"),
    displayName: dart.privateName(platform_interface_multi_factor, "MultiFactorInfo.displayName"),
    enrollmentTimestamp: dart.privateName(platform_interface_multi_factor, "MultiFactorInfo.enrollmentTimestamp"),
    factorId: dart.privateName(platform_interface_multi_factor, "MultiFactorInfo.factorId"),
    uid: dart.privateName(platform_interface_multi_factor, "MultiFactorInfo.uid"),
    phoneNumber$1: dart.privateName(platform_interface_multi_factor, "PhoneMultiFactorInfo.phoneNumber"),
    _scopes: dart.privateName(apple_auth, "_scopes"),
    _parameters: dart.privateName(apple_auth, "_parameters"),
    idToken: dart.privateName(oauth, "OAuthCredential.idToken"),
    secret: dart.privateName(oauth, "OAuthCredential.secret"),
    rawNonce: dart.privateName(oauth, "OAuthCredential.rawNonce"),
    email$1: dart.privateName(email_auth, "EmailAuthCredential.email"),
    password: dart.privateName(email_auth, "EmailAuthCredential.password"),
    emailLink: dart.privateName(email_auth, "EmailAuthCredential.emailLink"),
    _scopes$1: dart.privateName(facebook_auth, "_scopes"),
    _parameters$1: dart.privateName(facebook_auth, "_parameters"),
    _scopes$2: dart.privateName(github_auth, "_scopes"),
    _parameters$2: dart.privateName(github_auth, "_parameters"),
    _scopes$3: dart.privateName(google_auth, "_scopes"),
    _parameters$3: dart.privateName(google_auth, "_parameters"),
    _scopes$4: dart.privateName(microsoft_auth, "_scopes"),
    _parameters$4: dart.privateName(microsoft_auth, "_parameters"),
    _scopes$5: dart.privateName(oauth, "_scopes"),
    _parameters$5: dart.privateName(oauth, "_parameters"),
    verificationId$1: dart.privateName(phone_auth, "PhoneAuthCredential.verificationId"),
    smsCode: dart.privateName(phone_auth, "PhoneAuthCredential.smsCode"),
    _parameters$6: dart.privateName(twitter_auth, "_parameters"),
    _scopes$6: dart.privateName(yahoo_auth, "_scopes"),
    _parameters$7: dart.privateName(yahoo_auth, "_parameters"),
    _data$3: dart.privateName(user_info, "_data"),
    _creationTimestamp: dart.privateName(user_metadata, "_creationTimestamp"),
    _lastSignInTime: dart.privateName(user_metadata, "_lastSignInTime"),
    _future: dart.privateName(storage, "_future"),
    __ReferenceWeb__ref: dart.privateName(reference_web, "_#ReferenceWeb#_ref"),
    _cache: dart.privateName(reference_web, "_cache"),
    _path$1: dart.privateName(reference_web, "_path"),
    _ref: dart.privateName(reference_web, "_ref"),
    storage: dart.privateName(platform_interface_reference, "ReferencePlatform.storage"),
    _pointer$4: dart.privateName(platform_interface_reference, "_pointer"),
    settings: dart.privateName(method_channel_firestore, "MethodChannelFirebaseFirestore.settings"),
    StandardMethodCodec_messageCodec: dart.privateName(message_codecs, "StandardMethodCodec.messageCodec"),
    MethodChannel__binaryMessenger: dart.privateName(platform_channel, "MethodChannel._binaryMessenger"),
    MethodChannel_codec: dart.privateName(platform_channel, "MethodChannel.codec"),
    MethodChannel_name: dart.privateName(platform_channel, "MethodChannel.name"),
    currentUser: dart.privateName(method_channel_firebase_auth, "MethodChannelFirebaseAuth.currentUser"),
    languageCode: dart.privateName(method_channel_firebase_auth, "MethodChannelFirebaseAuth.languageCode"),
    _handleIdTokenChangesListener: dart.privateName(method_channel_firebase_auth, "_handleIdTokenChangesListener"),
    _handleAuthStateChangesListener: dart.privateName(method_channel_firebase_auth, "_handleAuthStateChangesListener"),
    _createBroadcastStream: dart.privateName(method_channel_firebase_auth, "_createBroadcastStream"),
    _ValueWrapper_value: dart.privateName(method_channel_firebase_auth, "_ValueWrapper.value"),
    _withChannelDefaults: dart.privateName(method_channel_firebase_auth, "_withChannelDefaults"),
    value: dart.privateName(method_channel_firebase_auth, "_ValueWrapper.value"),
    _api$1: dart.privateName(method_channel_multi_factor, "_api"),
    _resolverId: dart.privateName(method_channel_multi_factor, "_resolverId"),
    _auth$2: dart.privateName(method_channel_multi_factor, "_auth"),
    credential$2: dart.privateName(method_channel_multi_factor, "MultiFactorAssertion.credential"),
    scheme: dart.privateName(authentication_challenge, "AuthenticationChallenge.scheme"),
    parameters$1: dart.privateName(authentication_challenge, "AuthenticationChallenge.parameters"),
    $indexOf: dartx.indexOf,
    type$1: dart.privateName(media_type, "MediaType.type"),
    subtype: dart.privateName(media_type, "MediaType.subtype"),
    parameters$2: dart.privateName(media_type, "MediaType.parameters"),
    $replaceAllMapped: dartx.replaceAllMapped,
    _metadata: dart.privateName(full_metadata, "_metadata"),
    maxResults: dart.privateName(list_options, "ListOptions.maxResults"),
    pageToken: dart.privateName(list_options, "ListOptions.pageToken"),
    storage$1: dart.privateName(platform_interface_list_result, "ListResultPlatform.storage"),
    nextPageToken: dart.privateName(platform_interface_list_result, "ListResultPlatform.nextPageToken"),
    _state: dart.privateName(platform_interface_task_snapshot, "_state"),
    _data$4: dart.privateName(platform_interface_task_snapshot, "_data"),
    cacheControl: dart.privateName(settable_metadata, "SettableMetadata.cacheControl"),
    contentDisposition: dart.privateName(settable_metadata, "SettableMetadata.contentDisposition"),
    contentEncoding: dart.privateName(settable_metadata, "SettableMetadata.contentEncoding"),
    contentLanguage: dart.privateName(settable_metadata, "SettableMetadata.contentLanguage"),
    contentType: dart.privateName(settable_metadata, "SettableMetadata.contentType"),
    customMetadata: dart.privateName(settable_metadata, "SettableMetadata.customMetadata"),
    _reference: dart.privateName(task_web, "_reference"),
    _task: dart.privateName(task_web, "_task"),
    _cache$1: dart.privateName(metadata_cache, "_cache"),
    __MethodChannelLoadBundleTask_stream: dart.privateName(method_channel_load_bundle_task, "_#MethodChannelLoadBundleTask#stream"),
    _pointer$5: dart.privateName(method_channel_collection_reference, "MethodChannelCollectionReference._pointer"),
    _pointer$6: dart.privateName(method_channel_collection_reference, "_pointer"),
    isCollectionGroupQuery$1: dart.privateName(method_channel_query, "MethodChannelQuery.isCollectionGroupQuery"),
    _pointer$7: dart.privateName(method_channel_query, "_pointer"),
    _copyWithParameters$1: dart.privateName(method_channel_query, "_copyWithParameters"),
    __MethodChannelDocumentReference__pointer: dart.privateName(method_channel_document_reference, "_#MethodChannelDocumentReference#_pointer"),
    _pointer$8: dart.privateName(method_channel_document_reference, "_pointer"),
    appName: dart.privateName(method_channel_transaction, "MethodChannelTransaction.appName"),
    __MethodChannelTransaction__transactionId: dart.privateName(method_channel_transaction, "_#MethodChannelTransaction#_transactionId"),
    __MethodChannelTransaction__firestore: dart.privateName(method_channel_transaction, "_#MethodChannelTransaction#_firestore"),
    _commands: dart.privateName(method_channel_transaction, "_commands"),
    _firestore$3: dart.privateName(method_channel_transaction, "_firestore"),
    _transactionId: dart.privateName(method_channel_transaction, "_transactionId"),
    _writes: dart.privateName(method_channel_write_batch, "_writes"),
    _committed: dart.privateName(method_channel_write_batch, "_committed"),
    _firestore$4: dart.privateName(method_channel_write_batch, "_firestore"),
    _assertNotCommitted: dart.privateName(method_channel_write_batch, "_assertNotCommitted"),
    type$2: dart.privateName(method_channel_field_value, "MethodChannelFieldValue.type"),
    value$1: dart.privateName(method_channel_field_value, "MethodChannelFieldValue.value"),
    _withChannelDefaults$1: dart.privateName(method_channel_user, "_withChannelDefaults"),
    id$1: dart.privateName(messages$46pigeon$, "PigeonMultiFactorSession.id"),
    verificationId$2: dart.privateName(messages$46pigeon$, "PigeonPhoneMultiFactorAssertion.verificationId"),
    verificationCode: dart.privateName(messages$46pigeon$, "PigeonPhoneMultiFactorAssertion.verificationCode"),
    displayName$1: dart.privateName(messages$46pigeon$, "PigeonMultiFactorInfo.displayName"),
    enrollmentTimestamp$1: dart.privateName(messages$46pigeon$, "PigeonMultiFactorInfo.enrollmentTimestamp"),
    factorId$1: dart.privateName(messages$46pigeon$, "PigeonMultiFactorInfo.factorId"),
    uid$1: dart.privateName(messages$46pigeon$, "PigeonMultiFactorInfo.uid"),
    phoneNumber$2: dart.privateName(messages$46pigeon$, "PigeonMultiFactorInfo.phoneNumber"),
    _binaryMessenger$1: dart.privateName(messages$46pigeon$, "_binaryMessenger")
  };
  var S = {
    $substring: dartx.substring,
    _decode: dart.privateName(decoder, "_decode"),
    _state$1: dart.privateName(decoder, "_state"),
    ___Sink__size: dart.privateName(decoder, "_#_Sink#_size"),
    _sink: dart.privateName(decoder, "_sink"),
    _size: dart.privateName(decoder, "_size"),
    _close: dart.privateName(decoder, "_close"),
    _digitForByte: dart.privateName(decoder, "_digitForByte"),
    _State__name: dart.privateName(decoder, "_State._name"),
    $asUint8List: dartx.asUint8List,
    $toRadixString: dartx.toRadixString,
    $toUpperCase: dartx.toUpperCase,
    _name$1: dart.privateName(decoder, "_State._name"),
    _name$2: dart.privateName(decoder, "_name"),
    _sink$1: dart.privateName(encoder, "_sink"),
    $codeUnits: dartx.codeUnits,
    $setRange: dartx.setRange,
    maxOperationRetryTime: dart.privateName(method_channel_firebase_storage, "MethodChannelFirebaseStorage.maxOperationRetryTime"),
    maxUploadRetryTime: dart.privateName(method_channel_firebase_storage, "MethodChannelFirebaseStorage.maxUploadRetryTime"),
    maxDownloadRetryTime: dart.privateName(method_channel_firebase_storage, "MethodChannelFirebaseStorage.maxDownloadRetryTime"),
    _handleTaskStateChange: dart.privateName(method_channel_firebase_storage, "_handleTaskStateChange"),
    _sendTaskException: dart.privateName(method_channel_firebase_storage, "_sendTaskException"),
    _path$2: dart.privateName(pointer$, "_path"),
    _clientToken: dart.privateName(client$, "_clientToken"),
    message$1: dart.privateName(exception$1, "ClientException.message"),
    uri: dart.privateName(exception$1, "ClientException.uri"),
    _defaultEncoding: dart.privateName(request$, "_defaultEncoding"),
    _bodyBytes: dart.privateName(request$, "_bodyBytes"),
    _contentType: dart.privateName(request$, "_contentType"),
    _checkFinalized: dart.privateName(request$, "_checkFinalized"),
    method: dart.privateName(base_request, "BaseRequest.method"),
    url$1: dart.privateName(base_request, "BaseRequest.url"),
    headers: dart.privateName(base_request, "BaseRequest.headers"),
    _contentLength: dart.privateName(base_request, "_contentLength"),
    _persistentConnection: dart.privateName(base_request, "_persistentConnection"),
    _followRedirects: dart.privateName(base_request, "_followRedirects"),
    _maxRedirects: dart.privateName(base_request, "_maxRedirects"),
    _finalized: dart.privateName(base_request, "_finalized"),
    _checkFinalized$1: dart.privateName(base_request, "_checkFinalized"),
    StreamView__stream: dart.privateName(async, "StreamView._stream"),
    bodyBytes: dart.privateName(response$, "Response.bodyBytes"),
    request: dart.privateName(base_response, "BaseResponse.request"),
    statusCode: dart.privateName(base_response, "BaseResponse.statusCode"),
    reasonPhrase: dart.privateName(base_response, "BaseResponse.reasonPhrase"),
    contentLength: dart.privateName(base_response, "BaseResponse.contentLength"),
    headers$1: dart.privateName(base_response, "BaseResponse.headers"),
    isRedirect: dart.privateName(base_response, "BaseResponse.isRedirect"),
    persistentConnection: dart.privateName(base_response, "BaseResponse.persistentConnection"),
    _controller: dart.privateName(streamed_request, "_controller"),
    _sendUnstreamed: dart.privateName(base_client, "_sendUnstreamed"),
    _checkResponseSuccess: dart.privateName(base_client, "_checkResponseSuccess"),
    Utf8Codec__allowMalformed: dart.privateName(convert, "Utf8Codec._allowMalformed"),
    field: dart.privateName(multipart_file, "MultipartFile.field"),
    length: dart.privateName(multipart_file, "MultipartFile.length"),
    filename: dart.privateName(multipart_file, "MultipartFile.filename"),
    contentType$1: dart.privateName(multipart_file, "MultipartFile.contentType"),
    _isFinalized: dart.privateName(multipart_file, "_isFinalized"),
    _stream: dart.privateName(multipart_file, "_stream"),
    fields: dart.privateName(multipart_request, "MultipartRequest.fields"),
    files: dart.privateName(multipart_request, "MultipartRequest.files"),
    _headerForField: dart.privateName(multipart_request, "_headerForField"),
    _headerForFile: dart.privateName(multipart_request, "_headerForFile"),
    _boundaryString: dart.privateName(multipart_request, "_boundaryString"),
    _finalize: dart.privateName(multipart_request, "_finalize"),
    $entries: dartx.entries,
    _browserEncode: dart.privateName(multipart_request, "_browserEncode"),
    stream: dart.privateName(streamed_response, "StreamedResponse.stream"),
    _items: dart.privateName(list_result_web, "_items"),
    _prefixes: dart.privateName(list_result_web, "_prefixes"),
    $firstWhere: dartx.firstWhere,
    storage$2: dart.privateName(method_channel_task_snapshot, "MethodChannelTaskSnapshot.storage"),
    _data$5: dart.privateName(method_channel_task_snapshot, "_data"),
    withCredentials: dart.privateName(browser_client, "BrowserClient.withCredentials"),
    _xhrs: dart.privateName(browser_client, "_xhrs"),
    _isClosed: dart.privateName(browser_client, "_isClosed"),
    $responseType: dartx.responseType,
    $onLoad: dartx.onLoad,
    $response: dartx.response,
    $responseHeaders: dartx.responseHeaders,
    $onError: dartx.onError,
    Latin1Codec__allowInvalid: dart.privateName(convert, "Latin1Codec._allowInvalid"),
    $buffer: dartx.buffer,
    _reference$1: dart.privateName(task_snapshot_web, "_reference"),
    _snapshot: dart.privateName(task_snapshot_web, "_snapshot"),
    _table: dart.privateName(typed_queue, "_TypedQueue._table"),
    _head: dart.privateName(typed_queue, "_TypedQueue._head"),
    _tail: dart.privateName(typed_queue, "_TypedQueue._tail"),
    _table$1: dart.privateName(typed_queue, "_table"),
    _head$1: dart.privateName(typed_queue, "_head"),
    _tail$1: dart.privateName(typed_queue, "_tail"),
    _createBuffer: dart.privateName(typed_queue, "_createBuffer"),
    _createList: dart.privateName(typed_queue, "_createList"),
    _writeToList: dart.privateName(typed_queue, "_writeToList"),
    _growAtCapacity: dart.privateName(typed_queue, "_growAtCapacity"),
    _growTo: dart.privateName(typed_queue, "_growTo"),
    _defaultValue: dart.privateName(typed_queue, "_defaultValue"),
    $fillRange: dartx.fillRange,
    $rightShift: dartx['>>'],
    $sublist: dartx.sublist,
    _add: dart.privateName(typed_queue, "_add"),
    _add$1: dart.privateName(queue_list, "_add"),
    _head$2: dart.privateName(queue_list, "_head"),
    _writeToList$1: dart.privateName(queue_list, "_writeToList"),
    _grow: dart.privateName(typed_queue, "_grow"),
    _grow$1: dart.privateName(queue_list, "_grow"),
    _preGrow: dart.privateName(typed_queue, "_preGrow"),
    _preGrow$1: dart.privateName(queue_list, "_preGrow"),
    _table$2: dart.privateName(queue_list, "_table"),
    _tail$2: dart.privateName(queue_list, "_tail"),
    _head_: dart.privateName(typed_queue, "_head="),
    _table_: dart.privateName(typed_queue, "_table="),
    _tail_: dart.privateName(typed_queue, "_tail="),
    _items$1: dart.privateName(method_channel_list_result, "_items"),
    _prefixes$1: dart.privateName(method_channel_list_result, "_prefixes"),
    storage$3: dart.privateName(method_channel_task, "MethodChannelTask.storage"),
    _exception: dart.privateName(method_channel_task, "_exception"),
    __MethodChannelTask__stackTrace: dart.privateName(method_channel_task, "_#MethodChannelTask#_stackTrace"),
    _didComplete: dart.privateName(method_channel_task, "_didComplete"),
    _completer: dart.privateName(method_channel_task, "_completer"),
    __MethodChannelTask__stream: dart.privateName(method_channel_task, "_#MethodChannelTask#_stream"),
    __MethodChannelTask__initialTaskCompleter: dart.privateName(method_channel_task, "_#MethodChannelTask#_initialTaskCompleter"),
    __MethodChannelTask__snapshot: dart.privateName(method_channel_task, "_#MethodChannelTask#_snapshot"),
    _handle: dart.privateName(method_channel_task, "_handle"),
    _initialTask: dart.privateName(method_channel_task, "_initialTask"),
    _initialTaskCompleter: dart.privateName(method_channel_task, "_initialTaskCompleter"),
    _snapshot$1: dart.privateName(method_channel_task, "_snapshot"),
    _stackTrace: dart.privateName(method_channel_task, "_stackTrace"),
    _stream$1: dart.privateName(method_channel_task, "_stream"),
    _buffer: dart.privateName(typed_buffer, "_buffer"),
    _length: dart.privateName(typed_buffer, "_length"),
    _typedBuffer: dart.privateName(typed_buffer, "_typedBuffer"),
    _defaultValue$1: dart.privateName(typed_buffer, "_defaultValue"),
    _createBuffer$1: dart.privateName(typed_buffer, "_createBuffer"),
    _createBiggerBuffer: dart.privateName(typed_buffer, "_createBiggerBuffer"),
    _grow$2: dart.privateName(typed_buffer, "_grow"),
    _add$2: dart.privateName(typed_buffer, "_add"),
    _addAll: dart.privateName(typed_buffer, "_addAll"),
    _insertKnownLength: dart.privateName(typed_buffer, "_insertKnownLength"),
    _ensureCapacity: dart.privateName(typed_buffer, "_ensureCapacity"),
    _setRange: dart.privateName(typed_buffer, "_setRange"),
    $elementSizeInBytes: dartx.elementSizeInBytes,
    $offsetInBytes: dartx.offsetInBytes,
    $insertAll: dartx.insertAll
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.fn(main.main, T$.VoidToFutureOfvoid());
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: main.ChatPage.prototype,
        [S$.Widget_key]: null
      });
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: text.Text.prototype,
        [S$.Widget_key]: null,
        [S$.Text_selectionColor]: null,
        [S$.Text_textHeightBehavior]: null,
        [S$.Text_textWidthBasis]: null,
        [S$.Text_semanticsLabel]: null,
        [S$.Text_maxLines]: null,
        [S$.Text_textScaleFactor]: null,
        [S$.Text_overflow]: null,
        [S$.Text_softWrap]: null,
        [S$.Text_locale]: null,
        [S$.Text_textDirection]: null,
        [S$.Text_textAlign]: null,
        [S$.Text_strutStyle]: null,
        [S$.Text_style]: null,
        [S$.Text_textSpan]: null,
        [S$.Text_data]: "Gemini Chat"
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: progress_indicator._ActivityIndicatorType.prototype,
        [S$._Enum__name]: "material",
        [S$._Enum_index]: 0
      });
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: progress_indicator.CircularProgressIndicator.prototype,
        [S$.Widget_key]: null,
        [S$.ProgressIndicator_semanticsValue]: null,
        [S$.ProgressIndicator_semanticsLabel]: null,
        [S$.ProgressIndicator_valueColor]: null,
        [S$.ProgressIndicator_color]: null,
        [S$.ProgressIndicator_backgroundColor]: null,
        [S$.ProgressIndicator_value]: null,
        [S$.CircularProgressIndicator_strokeWidth]: 4,
        [S$.CircularProgressIndicator__indicatorType]: C[6] || CT.C6
      });
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [S$.Widget_key]: null,
        [S$.SingleChildRenderObjectWidget_child]: C[5] || CT.C5,
        [S$.SizedBox_height]: 50,
        [S$.SizedBox_width]: 50
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: alignment.Alignment.prototype,
        [S$.Alignment_y]: 0,
        [S$.Alignment_x]: 0
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: basic.Center.prototype,
        [S$.Widget_key]: null,
        [S$.SingleChildRenderObjectWidget_child]: C[4] || CT.C4,
        [S$.Align_heightFactor]: null,
        [S$.Align_widthFactor]: null,
        [S$.Align_alignment]: C[7] || CT.C7
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S$.EdgeInsets_bottom]: 0,
        [S$.EdgeInsets_right]: 10,
        [S$.EdgeInsets_top]: 0,
        [S$.EdgeInsets_left]: 10
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S$.EdgeInsets_bottom]: 10,
        [S$.EdgeInsets_right]: 10,
        [S$.EdgeInsets_top]: 10,
        [S$.EdgeInsets_left]: 10
      });
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: borders.BorderStyle.prototype,
        [S$._Enum__name]: "solid",
        [S$._Enum_index]: 1
      });
    },
    get C14() {
      return C[14] = dart.const({
        __proto__: ui.Color.prototype,
        [S$.Color_value]: 4278190080
      });
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: borders.BorderSide.prototype,
        [S$.BorderSide_strokeAlign]: -1,
        [S$.BorderSide_style]: C[13] || CT.C13,
        [S$.BorderSide_width]: 1,
        [S$.BorderSide_color]: C[14] || CT.C14
      });
    },
    get C16() {
      return C[16] = dart.const({
        __proto__: ui.Radius.prototype,
        [S$.Radius_y]: 4,
        [S$.Radius_x]: 4
      });
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: border_radius.BorderRadius.prototype,
        [S$.BorderRadius_bottomRight]: C[16] || CT.C16,
        [S$.BorderRadius_bottomLeft]: C[16] || CT.C16,
        [S$.BorderRadius_topRight]: C[16] || CT.C16,
        [S$.BorderRadius_topLeft]: C[16] || CT.C16
      });
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: input_border.OutlineInputBorder.prototype,
        [S$.InputBorder_borderSide]: C[12] || CT.C12,
        [S$.OutlineInputBorder_borderRadius]: C[15] || CT.C15,
        [S$.OutlineInputBorder_gapPadding]: 4
      });
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: input_decorator.InputDecoration.prototype,
        [S$.InputDecoration_constraints]: null,
        [S$.InputDecoration_alignLabelWithHint]: null,
        [S$.InputDecoration_semanticCounterText]: null,
        [S$.InputDecoration_enabled]: true,
        [S$.InputDecoration_border]: C[11] || CT.C11,
        [S$.InputDecoration_enabledBorder]: null,
        [S$.InputDecoration_disabledBorder]: null,
        [S$.InputDecoration_focusedErrorBorder]: null,
        [S$.InputDecoration_focusedBorder]: null,
        [S$.InputDecoration_errorBorder]: null,
        [S$.InputDecoration_hoverColor]: null,
        [S$.InputDecoration_focusColor]: null,
        [S$.InputDecoration_fillColor]: null,
        [S$.InputDecoration_filled]: null,
        [S$.InputDecoration_counterStyle]: null,
        [S$.InputDecoration_counter]: null,
        [S$.InputDecoration_counterText]: null,
        [S$.InputDecoration_suffixIconConstraints]: null,
        [S$.InputDecoration_suffixIconColor]: null,
        [S$.InputDecoration_suffixStyle]: null,
        [S$.InputDecoration_suffixText]: null,
        [S$.InputDecoration_suffix]: null,
        [S$.InputDecoration_suffixIcon]: null,
        [S$.InputDecoration_prefixIconColor]: null,
        [S$.InputDecoration_prefixStyle]: null,
        [S$.InputDecoration_prefixText]: null,
        [S$.InputDecoration_prefix]: null,
        [S$.InputDecoration_prefixIconConstraints]: null,
        [S$.InputDecoration_prefixIcon]: null,
        [S$.InputDecoration_isCollapsed]: false,
        [S$.InputDecoration_contentPadding]: null,
        [S$.InputDecoration_isDense]: null,
        [S$.InputDecoration_floatingLabelAlignment]: null,
        [S$.InputDecoration_floatingLabelBehavior]: null,
        [S$.InputDecoration_errorMaxLines]: null,
        [S$.InputDecoration_errorStyle]: null,
        [S$.InputDecoration_errorText]: null,
        [S$.InputDecoration_hintMaxLines]: null,
        [S$.InputDecoration_hintTextDirection]: null,
        [S$.InputDecoration_hintStyle]: null,
        [S$.InputDecoration_hintText]: "Enter your message and hit Enter",
        [S$.InputDecoration_helperMaxLines]: null,
        [S$.InputDecoration_helperStyle]: null,
        [S$.InputDecoration_helperText]: null,
        [S$.InputDecoration_floatingLabelStyle]: null,
        [S$.InputDecoration_labelStyle]: null,
        [S$.InputDecoration_labelText]: null,
        [S$.InputDecoration_label]: null,
        [S$.InputDecoration_iconColor]: null,
        [S$.InputDecoration_icon]: null
      });
    },
    get C17() {
      return C[17] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S$.EdgeInsets_bottom]: 8,
        [S$.EdgeInsets_right]: 8,
        [S$.EdgeInsets_top]: 8,
        [S$.EdgeInsets_left]: 8
      });
    },
    get C18() {
      return C[18] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S$.EdgeInsets_bottom]: 12,
        [S$.EdgeInsets_right]: 12,
        [S$.EdgeInsets_top]: 12,
        [S$.EdgeInsets_left]: 12
      });
    },
    get C19() {
      return C[19] = dart.const({
        __proto__: firebase_core_platform_interface.FirebaseOptions.prototype,
        [S$.FirebaseOptions_appGroupId]: null,
        [S$.FirebaseOptions_iosBundleId]: null,
        [S$.FirebaseOptions_iosClientId]: null,
        [S$.FirebaseOptions_androidClientId]: null,
        [S$.FirebaseOptions_deepLinkURLScheme]: null,
        [S$.FirebaseOptions_trackingId]: null,
        [S$.FirebaseOptions_measurementId]: "G-PQ18H8Y5XM",
        [S$.FirebaseOptions_storageBucket]: "fir-x-gemini-c13cd.appspot.com",
        [S$.FirebaseOptions_databaseURL]: null,
        [S$.FirebaseOptions_authDomain]: "fir-x-gemini-c13cd.firebaseapp.com",
        [S$.FirebaseOptions_projectId]: "fir-x-gemini-c13cd",
        [S$.FirebaseOptions_messagingSenderId]: "131366233798",
        [S$.FirebaseOptions_appId]: "1:131366233798:web:87c2e1564a9baacf9b19c7",
        [S$.FirebaseOptions_apiKey]: "AIzaSyCWMh2qdGf_ikLdJ4FchyxiefpuCC4nLqs"
      });
    },
    get C20() {
      return C[20] = dart.const({
        __proto__: main.MyApp.prototype,
        [S$.Widget_key]: null
      });
    },
    get C22() {
      return C[22] = dart.const({
        __proto__: source.Source.prototype,
        [S$._Enum__name]: "serverAndCache",
        [S$._Enum_index]: 0
      });
    },
    get C21() {
      return C[21] = dart.const({
        __proto__: get_options.GetOptions.prototype,
        [S$.GetOptions_source]: C[22] || CT.C22
      });
    },
    get C24() {
      return C[24] = dart.const({
        __proto__: T$.DefaultEqualityOfNever().prototype
      });
    },
    get C23() {
      return C[23] = dart.const({
        __proto__: equality.ListEquality.prototype,
        [S$.ListEquality__elementEquality]: C[24] || CT.C24
      });
    },
    get C25() {
      return C[25] = dart.const({
        __proto__: core.Duration.prototype,
        [S$.Duration__duration]: 30000000
      });
    },
    get C26() {
      return C[26] = dart.const({
        __proto__: core.Object.prototype
      });
    },
    get C27() {
      return C[27] = dart.fn(cloud_firestore._CodecUtility.valueEncode, T$.dynamicTodynamic());
    },
    get C28() {
      return C[28] = dart.fn(firebase_core.FirebaseApp['_#_#tearOff'], T$.FirebaseAppPlatformToFirebaseApp());
    },
    get C29() {
      return C[29] = dart.const({
        __proto__: settings.Settings.prototype,
        [S$.Settings_ignoreUndefinedProperties]: false,
        [S$.Settings_cacheSizeBytes]: null,
        [S$.Settings_sslEnabled]: null,
        [S$.Settings_host]: null,
        [S$.Settings_persistenceEnabled]: null
      });
    },
    get C30() {
      return C[30] = dart.fn(firebase_core_web._createFromJsApp, T$.AppToFirebaseAppPlatform());
    },
    get C31() {
      return C[31] = dart.fn(firebase_core_web._handleException, T$.ObjectAndStackTraceToNever());
    },
    get C32() {
      return C[32] = dart.const({
        __proto__: equality.MapEquality.prototype,
        [S$.MapEquality__valueEquality]: C[24] || CT.C24,
        [S$.MapEquality__keyEquality]: C[24] || CT.C24
      });
    },
    get C33() {
      return C[33] = dart.const({
        __proto__: source.Source.prototype,
        [S$._Enum__name]: "cache",
        [S$._Enum_index]: 2
      });
    },
    get C34() {
      return C[34] = dart.const({
        __proto__: source.Source.prototype,
        [S$._Enum__name]: "server",
        [S$._Enum_index]: 1
      });
    },
    get C35() {
      return C[35] = dart.const(new _js_helper.PrivateSymbol.new('_pointer', S$._pointer));
    },
    get C36() {
      return C[36] = dart.const({
        __proto__: equality.DeepCollectionEquality.prototype,
        [S$.DeepCollectionEquality__unordered]: false,
        [S$.DeepCollectionEquality__base]: C[24] || CT.C24
      });
    },
    get C37() {
      return C[37] = dart.fn(utils$0.jsify, T$.ObjectNTodynamic());
    },
    get C38() {
      return C[38] = dart.fn(firestore.DocumentSnapshot.getInstance, T$.DocumentSnapshotJsImplToDocumentSnapshot());
    },
    get C39() {
      return C[39] = dart.fn(firestore.QuerySnapshot.getInstance, T$.QuerySnapshotJsImplToQuerySnapshot());
    },
    get C40() {
      return C[40] = dart.fn(firestore.DocumentReference.getInstance, T$.DocumentReferenceJsImplToDocumentReference());
    },
    get C41() {
      return C[41] = dart.const({
        __proto__: platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize.prototype,
        [S$._Enum__name]: "compact",
        [S$._Enum_index]: 1
      });
    },
    get C42() {
      return C[42] = dart.const({
        __proto__: platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize.prototype,
        [S$._Enum__name]: "normal",
        [S$._Enum_index]: 0
      });
    },
    get C43() {
      return C[43] = dart.const({
        __proto__: platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme.prototype,
        [S$._Enum__name]: "dark",
        [S$._Enum_index]: 1
      });
    },
    get C44() {
      return C[44] = dart.const({
        __proto__: platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme.prototype,
        [S$._Enum__name]: "light",
        [S$._Enum_index]: 0
      });
    },
    get C45() {
      return C[45] = dart.fn(auth$.UserCredential['_#fromJsObject#tearOff'], T$.UserCredentialJsImplToUserCredential());
    },
    get C46() {
      return C[46] = dart.fn(auth$.ConfirmationResult['_#fromJsObject#tearOff'], T$.ConfirmationResultJsImplToConfirmationResult());
    },
    get C47() {
      return C[47] = dart.fn(auth$.IdTokenResult['_#_fromJsObject#tearOff'], T$.IdTokenResultImplToIdTokenResult());
    },
    get C49() {
      return C[49] = dart.fn(core.List['_#from#tearOff'], T$.Iterable__ToListOfE());
    },
    get C48() {
      return C[48] = dart.const(dart.gbind(C[49] || CT.C49, core.String));
    },
    get C50() {
      return C[50] = dart.const({
        __proto__: types.Persistence.prototype,
        [S$._Enum__name]: "LOCAL",
        [S$._Enum_index]: 0
      });
    },
    get C51() {
      return C[51] = dart.const({
        __proto__: types.Persistence.prototype,
        [S$._Enum__name]: "INDEXED_DB",
        [S$._Enum_index]: 1
      });
    },
    get C52() {
      return C[52] = dart.const({
        __proto__: types.Persistence.prototype,
        [S$._Enum__name]: "SESSION",
        [S$._Enum_index]: 3
      });
    },
    get C53() {
      return C[53] = dart.const({
        __proto__: types.Persistence.prototype,
        [S$._Enum__name]: "NONE",
        [S$._Enum_index]: 2
      });
    },
    get C55() {
      return C[55] = dart.fn(multi_factor.MultiFactorInfo['_#fromJsObject#tearOff'], T$.TToMultiFactorInfoOfT());
    },
    get C54() {
      return C[54] = dart.const(dart.gbind(C[55] || CT.C55, dart.packageJSType("MultiFactorInfoJsImpl", false)));
    },
    get C56() {
      return C[56] = dart.fn(multi_factor.MultiFactorSession['_#fromJsObject#tearOff'], T$.MultiFactorSessionJsImplToMultiFactorSession());
    },
    get C57() {
      return C[57] = dart.const({
        __proto__: core.Duration.prototype,
        [S$.Duration__duration]: 600000000
      });
    },
    get C58() {
      return C[58] = dart.const({
        __proto__: core.Duration.prototype,
        [S$.Duration__duration]: 120000000
      });
    },
    get C60() {
      return C[60] = dart.const({
        __proto__: platform_interface_document_change.DocumentChangeType.prototype,
        [S$._Enum__name]: "added",
        [S$._Enum_index]: 0
      });
    },
    get C61() {
      return C[61] = dart.const({
        __proto__: platform_interface_document_change.DocumentChangeType.prototype,
        [S$._Enum__name]: "modified",
        [S$._Enum_index]: 1
      });
    },
    get C62() {
      return C[62] = dart.const({
        __proto__: platform_interface_document_change.DocumentChangeType.prototype,
        [S$._Enum__name]: "removed",
        [S$._Enum_index]: 2
      });
    },
    get C59() {
      return C[59] = dart.constList([C[60] || CT.C60, C[61] || CT.C61, C[62] || CT.C62], platform_interface_document_change.DocumentChangeType);
    },
    get C63() {
      return C[63] = dart.constList([C[22] || CT.C22, C[34] || CT.C34, C[33] || CT.C33], source.Source);
    },
    get C65() {
      return C[65] = dart.const({
        __proto__: load_bundle_task_state.LoadBundleTaskState.prototype,
        [S$._Enum__name]: "running",
        [S$._Enum_index]: 0
      });
    },
    get C66() {
      return C[66] = dart.const({
        __proto__: load_bundle_task_state.LoadBundleTaskState.prototype,
        [S$._Enum__name]: "success",
        [S$._Enum_index]: 1
      });
    },
    get C67() {
      return C[67] = dart.const({
        __proto__: load_bundle_task_state.LoadBundleTaskState.prototype,
        [S$._Enum__name]: "error",
        [S$._Enum_index]: 2
      });
    },
    get C64() {
      return C[64] = dart.constList([C[65] || CT.C65, C[66] || CT.C66, C[67] || CT.C67], load_bundle_task_state.LoadBundleTaskState);
    },
    get C68() {
      return C[68] = dart.const({
        __proto__: messages$46pigeon._FirebaseCoreHostApiCodec.prototype
      });
    },
    get C69() {
      return C[69] = dart.const({
        __proto__: messages$46pigeon._FirebaseAppHostApiCodec.prototype
      });
    },
    get C70() {
      return C[70] = dart.const({
        __proto__: test_api._TestFirebaseCoreHostApiCodec.prototype
      });
    },
    get C71() {
      return C[71] = dart.const({
        __proto__: test_api._TestFirebaseAppHostApiCodec.prototype
      });
    },
    get C72() {
      return C[72] = dart.fn(_flutterfire_internals._testException, T$.ObjectNTobool());
    },
    get C73() {
      return C[73] = dart.fn(decode_utility.DecodeUtility.valueDecode, T$.dynamicTodynamic());
    },
    get C74() {
      return C[74] = dart.fn(encode_utility.EncodeUtility.valueEncode, T$.dynamicTodynamic());
    },
    get C76() {
      return C[76] = dart.const({
        __proto__: action_code_info.ActionCodeInfoOperation.prototype,
        [S$._Enum__name]: "unknown",
        [S$._Enum_index]: 0
      });
    },
    get C77() {
      return C[77] = dart.const({
        __proto__: action_code_info.ActionCodeInfoOperation.prototype,
        [S$._Enum__name]: "passwordReset",
        [S$._Enum_index]: 1
      });
    },
    get C78() {
      return C[78] = dart.const({
        __proto__: action_code_info.ActionCodeInfoOperation.prototype,
        [S$._Enum__name]: "verifyEmail",
        [S$._Enum_index]: 2
      });
    },
    get C79() {
      return C[79] = dart.const({
        __proto__: action_code_info.ActionCodeInfoOperation.prototype,
        [S$._Enum__name]: "recoverEmail",
        [S$._Enum_index]: 3
      });
    },
    get C80() {
      return C[80] = dart.const({
        __proto__: action_code_info.ActionCodeInfoOperation.prototype,
        [S$._Enum__name]: "emailSignIn",
        [S$._Enum_index]: 4
      });
    },
    get C81() {
      return C[81] = dart.const({
        __proto__: action_code_info.ActionCodeInfoOperation.prototype,
        [S$._Enum__name]: "verifyAndChangeEmail",
        [S$._Enum_index]: 5
      });
    },
    get C82() {
      return C[82] = dart.const({
        __proto__: action_code_info.ActionCodeInfoOperation.prototype,
        [S$._Enum__name]: "revertSecondFactorAddition",
        [S$._Enum_index]: 6
      });
    },
    get C75() {
      return C[75] = dart.constList([C[76] || CT.C76, C[77] || CT.C77, C[78] || CT.C78, C[79] || CT.C79, C[80] || CT.C80, C[81] || CT.C81, C[82] || CT.C82], action_code_info.ActionCodeInfoOperation);
    },
    get C83() {
      return C[83] = dart.constList([C[42] || CT.C42, C[41] || CT.C41], platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize);
    },
    get C84() {
      return C[84] = dart.constList([C[44] || CT.C44, C[43] || CT.C43], platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme);
    },
    get C85() {
      return C[85] = dart.constList([C[50] || CT.C50, C[51] || CT.C51, C[53] || CT.C53, C[52] || CT.C52], types.Persistence);
    },
    get C87() {
      return C[87] = dart.const({
        __proto__: storage.TaskState.prototype,
        [S$._Enum__name]: "RUNNING",
        [S$._Enum_index]: 0
      });
    },
    get C88() {
      return C[88] = dart.const({
        __proto__: storage.TaskState.prototype,
        [S$._Enum__name]: "PAUSED",
        [S$._Enum_index]: 1
      });
    },
    get C89() {
      return C[89] = dart.const({
        __proto__: storage.TaskState.prototype,
        [S$._Enum__name]: "SUCCESS",
        [S$._Enum_index]: 2
      });
    },
    get C90() {
      return C[90] = dart.const({
        __proto__: storage.TaskState.prototype,
        [S$._Enum__name]: "CANCELED",
        [S$._Enum_index]: 3
      });
    },
    get C91() {
      return C[91] = dart.const({
        __proto__: storage.TaskState.prototype,
        [S$._Enum__name]: "ERROR",
        [S$._Enum_index]: 4
      });
    },
    get C86() {
      return C[86] = dart.constList([C[87] || CT.C87, C[88] || CT.C88, C[89] || CT.C89, C[90] || CT.C90, C[91] || CT.C91], storage.TaskState);
    },
    get C92() {
      return C[92] = dart.fn(storage.FullMetadata.getInstance, T$.FullMetadataJsImplToFullMetadata());
    },
    get C93() {
      return C[93] = dart.fn(storage.ListResult.getInstance, T$.ListResultJsImplToListResult());
    },
    get C94() {
      return C[94] = dart.fn(storage.UploadTaskSnapshot.getInstance, T$.UploadTaskSnapshotJsImplToUploadTaskSnapshot());
    },
    get C95() {
      return C[95] = dart.fn(http.readBytes, T$.Uri__ToFutureOfUint8List());
    },
    get C97() {
      return C[97] = dart.const({
        __proto__: field_path_type.FieldPathType.prototype,
        [S$._Enum__name]: "documentId",
        [S$._Enum_index]: 0
      });
    },
    get C96() {
      return C[96] = dart.constList([C[97] || CT.C97], field_path_type.FieldPathType);
    },
    get C99() {
      return C[99] = dart.const({
        __proto__: firestore_message_codec.FirestoreMessageCodec.prototype
      });
    },
    get C98() {
      return C[98] = dart.const({
        __proto__: message_codecs.StandardMethodCodec.prototype,
        [S$.StandardMethodCodec_messageCodec]: C[99] || CT.C99
      });
    },
    get C100() {
      return C[100] = dart.fn(exception.convertPlatformException, T$.ObjectAndStackTraceToNever());
    },
    get C101() {
      return C[101] = dart.const({
        __proto__: platform_channel.MethodChannel.prototype,
        [S$.MethodChannel__binaryMessenger]: null,
        [S$.MethodChannel_codec]: C[98] || CT.C98,
        [S$.MethodChannel_name]: "plugins.flutter.io/firebase_firestore"
      });
    },
    get C102() {
      return C[102] = dart.fn(exception$0.convertPlatformException, T$.ObjectAndStackTraceToNever());
    },
    get C103() {
      return C[103] = dart.const({
        __proto__: T$._ValueWrapperOfUserPlatform().prototype,
        [S$._ValueWrapper_value]: null
      });
    },
    get C106() {
      return C[106] = dart.const({
        __proto__: message_codecs.StandardMessageCodec.prototype
      });
    },
    get C105() {
      return C[105] = dart.const({
        __proto__: message_codecs.StandardMethodCodec.prototype,
        [S$.StandardMethodCodec_messageCodec]: C[106] || CT.C106
      });
    },
    get C104() {
      return C[104] = dart.const({
        __proto__: platform_channel.MethodChannel.prototype,
        [S$.MethodChannel__binaryMessenger]: null,
        [S$.MethodChannel_codec]: C[105] || CT.C105,
        [S$.MethodChannel_name]: "plugins.flutter.io/firebase_auth"
      });
    },
    get C107() {
      return C[107] = dart.const({
        __proto__: chunked_coding.ChunkedCodingCodec.prototype
      });
    },
    get C108() {
      return C[108] = dart.constList(["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"], core.String);
    },
    get C109() {
      return C[109] = dart.constList(["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], core.String);
    },
    get C111() {
      return C[111] = dart.const({
        __proto__: put_string_format.PutStringFormat.prototype,
        [S$._Enum__name]: "raw",
        [S$._Enum_index]: 0
      });
    },
    get C112() {
      return C[112] = dart.const({
        __proto__: put_string_format.PutStringFormat.prototype,
        [S$._Enum__name]: "base64",
        [S$._Enum_index]: 1
      });
    },
    get C113() {
      return C[113] = dart.const({
        __proto__: put_string_format.PutStringFormat.prototype,
        [S$._Enum__name]: "base64Url",
        [S$._Enum_index]: 2
      });
    },
    get C114() {
      return C[114] = dart.const({
        __proto__: put_string_format.PutStringFormat.prototype,
        [S$._Enum__name]: "dataUrl",
        [S$._Enum_index]: 3
      });
    },
    get C110() {
      return C[110] = dart.constList([C[111] || CT.C111, C[112] || CT.C112, C[113] || CT.C113, C[114] || CT.C114], put_string_format.PutStringFormat);
    },
    get C116() {
      return C[116] = dart.const({
        __proto__: task_state.TaskState.prototype,
        [S$._Enum__name]: "paused",
        [S$._Enum_index]: 0
      });
    },
    get C117() {
      return C[117] = dart.const({
        __proto__: task_state.TaskState.prototype,
        [S$._Enum__name]: "running",
        [S$._Enum_index]: 1
      });
    },
    get C118() {
      return C[118] = dart.const({
        __proto__: task_state.TaskState.prototype,
        [S$._Enum__name]: "success",
        [S$._Enum_index]: 2
      });
    },
    get C119() {
      return C[119] = dart.const({
        __proto__: task_state.TaskState.prototype,
        [S$._Enum__name]: "canceled",
        [S$._Enum_index]: 3
      });
    },
    get C120() {
      return C[120] = dart.const({
        __proto__: task_state.TaskState.prototype,
        [S$._Enum__name]: "error",
        [S$._Enum_index]: 4
      });
    },
    get C115() {
      return C[115] = dart.constList([C[116] || CT.C116, C[117] || CT.C117, C[118] || CT.C118, C[119] || CT.C119, C[120] || CT.C120], task_state.TaskState);
    },
    get C121() {
      return C[121] = dart.const(new _js_helper.PrivateSymbol.new('_pointer', S$._pointer$6));
    },
    get C123() {
      return C[123] = dart.const({
        __proto__: method_channel_field_value.FieldValueType.prototype,
        [S$._Enum__name]: "arrayUnion",
        [S$._Enum_index]: 0
      });
    },
    get C124() {
      return C[124] = dart.const({
        __proto__: method_channel_field_value.FieldValueType.prototype,
        [S$._Enum__name]: "arrayRemove",
        [S$._Enum_index]: 1
      });
    },
    get C125() {
      return C[125] = dart.const({
        __proto__: method_channel_field_value.FieldValueType.prototype,
        [S$._Enum__name]: "delete",
        [S$._Enum_index]: 2
      });
    },
    get C126() {
      return C[126] = dart.const({
        __proto__: method_channel_field_value.FieldValueType.prototype,
        [S$._Enum__name]: "serverTimestamp",
        [S$._Enum_index]: 3
      });
    },
    get C127() {
      return C[127] = dart.const({
        __proto__: method_channel_field_value.FieldValueType.prototype,
        [S$._Enum__name]: "incrementDouble",
        [S$._Enum_index]: 4
      });
    },
    get C128() {
      return C[128] = dart.const({
        __proto__: method_channel_field_value.FieldValueType.prototype,
        [S$._Enum__name]: "incrementInteger",
        [S$._Enum_index]: 5
      });
    },
    get C122() {
      return C[122] = dart.constMap(method_channel_field_value.FieldValueType, core.int, [C[123] || CT.C123, 132, C[124] || CT.C124, 133, C[125] || CT.C125, 134, C[126] || CT.C126, 135, C[127] || CT.C127, 137, C[128] || CT.C128, 138]);
    },
    get C129() {
      return C[129] = dart.constMap(field_path_type.FieldPathType, core.int, [C[97] || CT.C97, 139]);
    },
    get C130() {
      return C[130] = dart.constList([C[123] || CT.C123, C[124] || CT.C124, C[125] || CT.C125, C[126] || CT.C126, C[127] || CT.C127, C[128] || CT.C128], method_channel_field_value.FieldValueType);
    },
    get C131() {
      return C[131] = dart.fn(messages$46pigeon$.PigeonMultiFactorInfo.decode, T$.ObjectToPigeonMultiFactorInfo());
    },
    get C132() {
      return C[132] = dart.const({
        __proto__: messages$46pigeon$._MultiFactorUserHostApiCodec.prototype
      });
    },
    get C133() {
      return C[133] = dart.const({
        __proto__: messages$46pigeon$._MultiFactoResolverHostApiCodec.prototype
      });
    },
    get C134() {
      return C[134] = dart.const({
        __proto__: messages$46pigeon$._GenerateInterfacesCodec.prototype
      });
    },
    get C135() {
      return C[135] = dart.const({
        __proto__: decoder._State.prototype,
        [S._State__name]: "boundary"
      });
    },
    get C136() {
      return C[136] = dart.const({
        __proto__: decoder._State.prototype,
        [S._State__name]: "size"
      });
    },
    get C137() {
      return C[137] = dart.const({
        __proto__: decoder._State.prototype,
        [S._State__name]: "size before LF"
      });
    },
    get C138() {
      return C[138] = dart.const({
        __proto__: decoder._State.prototype,
        [S._State__name]: "body"
      });
    },
    get C139() {
      return C[139] = dart.const({
        __proto__: decoder._State.prototype,
        [S._State__name]: "body before CR"
      });
    },
    get C140() {
      return C[140] = dart.const({
        __proto__: decoder._State.prototype,
        [S._State__name]: "body before LF"
      });
    },
    get C141() {
      return C[141] = dart.const({
        __proto__: decoder._State.prototype,
        [S._State__name]: "end before CR"
      });
    },
    get C142() {
      return C[142] = dart.const({
        __proto__: decoder._State.prototype,
        [S._State__name]: "end before LF"
      });
    },
    get C143() {
      return C[143] = dart.const({
        __proto__: decoder._State.prototype,
        [S._State__name]: "end"
      });
    },
    get C144() {
      return C[144] = dart.const({
        __proto__: decoder.ChunkedCodingDecoder.prototype
      });
    },
    get C145() {
      return C[145] = dart.constList([], core.int);
    },
    get C146() {
      return C[146] = dart.const({
        __proto__: encoder.ChunkedCodingEncoder.prototype
      });
    },
    get C147() {
      return C[147] = dart.const({
        __proto__: platform_channel.MethodChannel.prototype,
        [S$.MethodChannel__binaryMessenger]: null,
        [S$.MethodChannel_codec]: C[105] || CT.C105,
        [S$.MethodChannel_name]: "plugins.flutter.io/firebase_storage"
      });
    },
    get C148() {
      return C[148] = dart.const(new _js_helper.PrivateSymbol.new('_clientToken', S._clientToken));
    },
    get C150() {
      return C[150] = dart.const({
        __proto__: T$._EmptyStreamOfListOfint().prototype
      });
    },
    get C149() {
      return C[149] = dart.const({
        __proto__: byte_stream.ByteStream.prototype,
        [S.StreamView__stream]: C[150] || CT.C150
      });
    },
    get C151() {
      return C[151] = dart.constMap(core.String, core.String, []);
    },
    get C152() {
      return C[152] = dart.const({
        __proto__: convert.Utf8Codec.prototype,
        [S.Utf8Codec__allowMalformed]: false
      });
    },
    get C153() {
      return C[153] = dart.constList([13, 10], core.int);
    },
    get C154() {
      return C[154] = dart.const({
        __proto__: convert.Latin1Codec.prototype,
        [S.Latin1Codec__allowInvalid]: false
      });
    },
    get C155() {
      return C[155] = dart.constList([43, 95, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122], core.int);
    },
    get C156() {
      return C[156] = dart.const(new _js_helper.PrivateSymbol.new('_add', S._add));
    },
    get C157() {
      return C[157] = dart.const(new _js_helper.PrivateSymbol.new('_head', S._head$1));
    },
    get C158() {
      return C[158] = dart.const(new _js_helper.PrivateSymbol.new('_writeToList', S._writeToList));
    },
    get C159() {
      return C[159] = dart.const(new _js_helper.PrivateSymbol.new('_grow', S._grow));
    },
    get C160() {
      return C[160] = dart.const(new _js_helper.PrivateSymbol.new('_preGrow', S._preGrow));
    },
    get C161() {
      return C[161] = dart.const(new _js_helper.PrivateSymbol.new('_table', S._table$1));
    },
    get C162() {
      return C[162] = dart.const(new _js_helper.PrivateSymbol.new('_tail', S._tail$1));
    },
    get C163() {
      return C[163] = dart.const(new _js_helper.PrivateSymbol.new('_head=', S._head_));
    },
    get C164() {
      return C[164] = dart.const(new _js_helper.PrivateSymbol.new('_table=', S._table_));
    },
    get C165() {
      return C[165] = dart.const(new _js_helper.PrivateSymbol.new('_tail=', S._tail_));
    }
  }, false);
  var C = Array(166).fill(void 0);
  var I = [
    "file:///zapp/project/lib/main.dart",
    "package:cloud_firestore/cloud_firestore.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-3.5.1/lib/src/collection_reference.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-3.5.1/lib/src/query.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-3.5.1/lib/src/document_reference.dart",
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_field_value.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-3.5.1/lib/src/firestore.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/plugin_platform_interface-2.1.6/lib/plugin_platform_interface.dart",
    "package:plugin_platform_interface/plugin_platform_interface.dart",
    "package:firebase_core_platform_interface/firebase_core_platform_interface.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-3.5.1/lib/src/transaction.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-3.5.1/lib/src/write_batch.dart",
    "package:firebase_core/firebase_core.dart",
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_firestore.dart",
    "package:cloud_firestore_web/cloud_firestore_web.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_web-4.6.1/lib/firebase_auth_web.dart",
    "package:firebase_auth_platform_interface/src/platform_interface/platform_interface_firebase_auth.dart",
    "package:firebase_auth_web/firebase_auth_web.dart",
    "package:firebase_core_web/firebase_core_web.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_web-1.7.3/lib/src/firebase_core_web.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-4.5.1/lib/src/method_channel/method_channel_firebase.dart",
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_load_bundle_task.dart",
    "package:cloud_firestore_web/src/load_bundle_task_web.dart",
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_query.dart",
    "package:cloud_firestore_web/src/query_web.dart",
    "package:cloud_firestore_web/src/collection_reference_web.dart",
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_document_reference.dart",
    "package:cloud_firestore_web/src/document_reference_web.dart",
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_field_value_factory.dart",
    "package:cloud_firestore_web/src/field_value_factory_web.dart",
    "package:firebase_core_web/src/interop/utils/js.dart",
    "package:cloud_firestore_web/src/interop/firestore.dart",
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_transaction.dart",
    "package:cloud_firestore_web/src/transaction_web.dart",
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_write_batch.dart",
    "package:cloud_firestore_web/src/write_batch_web.dart",
    "package:firebase_auth_platform_interface/src/platform_interface/platform_interface_multi_factor.dart",
    "package:firebase_auth_web/src/firebase_auth_web_multi_factor.dart",
    "package:firebase_auth_platform_interface/src/platform_interface/platform_interface_confirmation_result.dart",
    "package:firebase_auth_web/src/firebase_auth_web_confirmation_result.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_web-4.6.1/lib/src/firebase_auth_web_recaptcha_verifier_factory.dart",
    "package:firebase_auth_platform_interface/src/platform_interface/platform_interface_recaptcha_verifier_factory.dart",
    "package:firebase_auth_web/src/firebase_auth_web_recaptcha_verifier_factory.dart",
    "package:firebase_auth_platform_interface/src/platform_interface/platform_interface_user.dart",
    "package:firebase_auth_web/src/firebase_auth_web_user.dart",
    "package:firebase_auth_platform_interface/src/platform_interface/platform_interface_user_credential.dart",
    "package:firebase_auth_web/src/firebase_auth_web_user_credential.dart",
    "package:firebase_auth_web/src/interop/auth.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_web-4.6.1/lib/src/interop/auth.dart",
    "package:firebase_auth_web/src/interop/multi_factor.dart",
    "package:firebase_storage_platform_interface/src/platform_interface/platform_interface_firebase_storage.dart",
    "package:firebase_storage_web/src/firebase_storage_web.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-5.7.7/lib/src/internal/pointer.dart",
    "package:cloud_firestore_platform_interface/src/internal/pointer.dart",
    "package:cloud_firestore_platform_interface/src/blob.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-5.7.7/lib/src/field_path.dart",
    "package:cloud_firestore_platform_interface/src/field_path.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-5.7.7/lib/src/geo_point.dart",
    "package:cloud_firestore_platform_interface/src/geo_point.dart",
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_collection_reference.dart",
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_document_change.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-5.7.7/lib/src/platform_interface/platform_interface_document_snapshot.dart",
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_document_snapshot.dart",
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_query_snapshot.dart",
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_load_bundle_task_snapshot.dart",
    "package:cloud_firestore_platform_interface/src/snapshot_metadata.dart",
    "package:cloud_firestore_platform_interface/src/source.dart",
    "package:cloud_firestore_platform_interface/src/load_bundle_task_state.dart",
    "package:cloud_firestore_platform_interface/src/timestamp.dart",
    "package:cloud_firestore_platform_interface/src/settings.dart",
    "package:cloud_firestore_platform_interface/src/get_options.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-5.7.7/lib/src/set_options.dart",
    "package:cloud_firestore_platform_interface/src/set_options.dart",
    "package:cloud_firestore_platform_interface/src/persistence_settings.dart",
    "package:firebase_core_platform_interface/src/pigeon/messages.pigeon.dart",
    "package:firebase_core_platform_interface/src/pigeon/mocks.dart",
    "package:firebase_core_platform_interface/src/pigeon/test_api.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-4.5.1/lib/src/pigeon/test_api.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/_flutterfire_internals-1.0.2/lib/_flutterfire_internals.dart",
    "package:cloud_firestore_web/src/utils/decode_utility.dart",
    "package:cloud_firestore_web/src/utils/encode_utility.dart",
    "package:cloud_firestore_web/src/field_value_web.dart",
    "package:firebase_auth_platform_interface/src/action_code_info.dart",
    "package:firebase_auth_platform_interface/src/action_code_settings.dart",
    "package:firebase_auth_platform_interface/src/additional_user_info.dart",
    "package:firebase_auth_platform_interface/src/auth_credential.dart",
    "package:firebase_auth_platform_interface/src/auth_provider.dart",
    "package:firebase_auth_platform_interface/src/firebase_auth_exception.dart",
    "package:firebase_auth_platform_interface/src/firebase_auth_multi_factor_exception.dart",
    "package:firebase_auth_platform_interface/src/id_token_result.dart",
    "package:firebase_auth_platform_interface/src/providers/apple_auth.dart",
    "package:firebase_auth_platform_interface/src/providers/oauth.dart",
    "package:firebase_auth_platform_interface/src/providers/email_auth.dart",
    "package:firebase_auth_platform_interface/src/providers/facebook_auth.dart",
    "package:firebase_auth_platform_interface/src/providers/github_auth.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.10.1/lib/src/providers/google_auth.dart",
    "package:firebase_auth_platform_interface/src/providers/google_auth.dart",
    "package:firebase_auth_platform_interface/src/providers/microsoft_auth.dart",
    "package:firebase_auth_platform_interface/src/providers/phone_auth.dart",
    "package:firebase_auth_platform_interface/src/providers/saml_auth.dart",
    "package:firebase_auth_platform_interface/src/providers/twitter_auth.dart",
    "package:firebase_auth_platform_interface/src/providers/yahoo_auth.dart",
    "package:firebase_auth_platform_interface/src/types.dart",
    "package:firebase_auth_platform_interface/src/user_info.dart",
    "package:firebase_auth_platform_interface/src/user_metadata.dart",
    "package:firebase_core_web/src/interop/app.dart",
    "package:firebase_storage_web/src/interop/storage.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage_web-3.3.9/lib/src/reference_web.dart",
    "package:firebase_storage_platform_interface/src/platform_interface/platform_interface_reference.dart",
    "package:firebase_storage_web/src/reference_web.dart",
    "package:cloud_firestore_platform_interface/src/internal/field_path_type.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-5.7.7/lib/src/method_channel/method_channel_firestore.dart",
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_firestore.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-5.7.7/lib/src/method_channel/method_channel_field_value_factory.dart",
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_field_value_factory.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.10.1/lib/src/method_channel/method_channel_firebase_auth.dart",
    "package:firebase_auth_platform_interface/src/method_channel/method_channel_firebase_auth.dart",
    "package:firebase_auth_platform_interface/src/method_channel/method_channel_multi_factor.dart",
    "package:http_parser/src/authentication_challenge.dart",
    "package:http_parser/src/case_insensitive_map.dart",
    "package:http_parser/src/chunked_coding.dart",
    "package:http_parser/src/media_type.dart",
    "package:firebase_storage_platform_interface/src/full_metadata.dart",
    "package:firebase_storage_platform_interface/src/list_options.dart",
    "package:firebase_storage_platform_interface/src/platform_interface/platform_interface_list_result.dart",
    "package:firebase_storage_platform_interface/src/platform_interface/platform_interface_task.dart",
    "package:firebase_storage_platform_interface/src/platform_interface/platform_interface_task_snapshot.dart",
    "package:firebase_storage_platform_interface/src/put_string_format.dart",
    "package:firebase_storage_platform_interface/src/settable_metadata.dart",
    "package:firebase_storage_platform_interface/src/task_state.dart",
    "package:firebase_storage_web/src/task_web.dart",
    "package:firebase_storage_web/src/utils/metadata_cache.dart",
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_load_bundle_task.dart",
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_query_snapshot.dart",
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_query.dart",
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_collection_reference.dart",
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_document_reference.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-5.7.7/lib/src/method_channel/method_channel_transaction.dart",
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_transaction.dart",
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_write_batch.dart",
    "package:cloud_firestore_platform_interface/src/method_channel/utils/firestore_message_codec.dart",
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_field_value.dart",
    "package:firebase_auth_platform_interface/src/method_channel/method_channel_user.dart",
    "package:firebase_auth_platform_interface/src/method_channel/method_channel_user_credential.dart",
    "package:firebase_auth_platform_interface/src/pigeon/messages.pigeon.dart",
    "package:http_parser/src/chunked_coding/decoder.dart",
    "package:http_parser/src/chunked_coding/encoder.dart",
    "package:firebase_storage_platform_interface/src/method_channel/method_channel_firebase_storage.dart",
    "package:firebase_storage_platform_interface/src/internal/pointer.dart",
    "package:http/src/client.dart",
    "package:http/src/exception.dart",
    "package:http/src/base_request.dart",
    "package:http/src/request.dart",
    "package:http/src/base_response.dart",
    "package:http/src/response.dart",
    "package:http/src/streamed_request.dart",
    "package:http/src/base_client.dart",
    "package:http/src/byte_stream.dart",
    "package:http/src/multipart_file.dart",
    "package:http/src/multipart_request.dart",
    "package:http/src/streamed_response.dart",
    "package:firebase_storage_web/src/list_result_web.dart",
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_document_change.dart",
    "package:cloud_firestore_platform_interface/src/method_channel/utils/auto_id_generator.dart",
    "package:firebase_storage_platform_interface/src/method_channel/method_channel_reference.dart",
    "package:firebase_storage_platform_interface/src/method_channel/method_channel_task_snapshot.dart",
    "package:http/src/browser_client.dart",
    "package:firebase_storage_web/src/task_snapshot_web.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/typed_data-1.3.2/lib/src/typed_queue.dart",
    "package:typed_data/src/typed_queue.dart",
    "package:firebase_storage_platform_interface/src/method_channel/method_channel_list_result.dart",
    "package:firebase_storage_platform_interface/src/method_channel/method_channel_task.dart",
    "package:typed_data/src/typed_buffer.dart"
  ];
  $46zapp_entry.runAppGuarded = function runAppGuarded() {
    async.runZonedGuarded(core.Null, dart.fn(() => {
      if (T$.ListOfStringTodynamic().is(C[0] || CT.C0)) {
        T$.ListOfStringTodynamic().as(C[0] || CT.C0)(T$.JSArrayOfString().of([]));
      } else {
        (C[0] || CT.C0)();
      }
      if (js.context.hasProperty("__notifyFlutterRendered")) {
        async.Future.delayed(new core.Duration.new({milliseconds: 250})).then(core.Null, dart.fn(_ => {
          js.context.callMethod("__notifyFlutterRendered", [false]);
        }, T$.dynamicToNull()));
      }
    }, T$.VoidToNull()), dart.fn((e, stackTrace) => {
      if (js.context.hasProperty("zappHandlerUserError")) {
        js.context.callMethod("zappHandlerUserError", [e[S$.$toString](), stackTrace.toString()]);
      }
    }, T$.ObjectAndStackTraceTovoid()), {zoneSpecification: new async._ZoneSpecification.new({print: dart.fn((self, parent, zone, line) => {
          if (js.context.hasProperty("zappHandlerUserPrint")) {
            js.context.callMethod("zappHandlerUserPrint", [line]);
          }
        }, T$.ZoneAndZoneDelegateAndZone__Tovoid())})});
  };
  $46zapp_entry.main = function main$() {
    return async.async(dart.void, function* main() {
      yield ui.webOnlyWarmupEngine({runApp: dart.fn(() => {
          $46zapp_entry.runAppGuarded();
        }, T$.VoidToNull()), registerPlugins: dart.fn(() => {
          web_plugin_registrant.registerPlugins();
        }, T$.VoidToNull())});
    });
  };
  main.MyApp = class MyApp extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new main.MyApp.new({key: key});
    }
    build(context) {
      return new app.MaterialApp.new({title: "Gemini Workshop", debugShowCheckedModeBanner: false, theme: theme_data.ThemeData.new({colorSchemeSeed: colors.Colors.indigo, brightness: ui.Brightness.light}), darkTheme: theme_data.ThemeData.new({colorSchemeSeed: colors.Colors.indigo, brightness: ui.Brightness.dark}), themeMode: app.ThemeMode.system, home: C[1] || CT.C1});
    }
  };
  (main.MyApp.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    main.MyApp.__proto__.new.call(this, {key: key});
    ;
  }).prototype = main.MyApp.prototype;
  dart.addTypeTests(main.MyApp);
  dart.addTypeCaches(main.MyApp);
  dart.setMethodSignature(main.MyApp, () => ({
    __proto__: dart.getMethods(main.MyApp.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main.MyApp, I[0]);
  main.ChatPage = class ChatPage extends framework.StatefulWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new main.ChatPage.new({key: key});
    }
    createState() {
      return new main._ChatPageState.new();
    }
  };
  (main.ChatPage.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    main.ChatPage.__proto__.new.call(this, {key: key});
    ;
  }).prototype = main.ChatPage.prototype;
  dart.addTypeTests(main.ChatPage);
  dart.addTypeCaches(main.ChatPage);
  dart.setMethodSignature(main.ChatPage, () => ({
    __proto__: dart.getMethods(main.ChatPage.__proto__),
    createState: dart.fnType(framework.State$(main.ChatPage), [])
  }));
  dart.setLibraryUri(main.ChatPage, I[0]);
  main._ChatPageState = class _ChatPageState extends framework.State$(main.ChatPage) {
    build(context) {
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: C[2] || CT.C2}), body: new basic.Center.new({child: new basic.Column.new({mainAxisAlignment: flex.MainAxisAlignment.center, children: T$.JSArrayOfWidget().of([new basic.Expanded.new({child: new (T$.StreamBuilderOfQuerySnapshotOfMapOfString$dynamic()).new({stream: cloud_firestore.FirebaseFirestore.instance.collection("generate").snapshots(), builder: dart.fn((context, snapshot) => {
                    if (snapshot.hasError) {
                      return new basic.Center.new({child: new text.Text.new(dart.str(snapshot) + ".error")});
                    } else if (!snapshot.hasData) {
                      return C[3] || CT.C3;
                    }
                    let docs = dart.nullCheck(snapshot.data).docs;
                    return new scroll_view.ListView.builder({itemCount: docs[S$.$length], reverse: true, padding: C[8] || CT.C8, itemBuilder: dart.fn((context, i) => {
                        let t0, t0$;
                        let data = docs[S$.$_get](i).data();
                        return new basic.Column.new({children: T$.JSArrayOfWidget().of([new main.ChatBubble.new({isUser: true, text: core.String.as((t0 = data[S$.$_get]("prompt"), t0 == null ? "" : t0))}), new main.ChatBubble.new({isUser: false, text: core.String.as((t0$ = data[S$.$_get]("response"), t0$ == null ? "" : t0$)), isLoading: data[S$.$_get]("response") == null})])});
                      }, T$.BuildContextAndintToColumn())});
                  }, T$.BuildContextAndAsyncSnapshotOfQuerySnapshotOfMapOfString$dynamicToWidget())})}), new basic.Padding.new({padding: C[9] || CT.C9, child: new text_field.TextField.new({controller: this.messageController, decoration: C[10] || CT.C10, onSubmitted: dart.fn(value => {
                    this.messageController.clear();
                    cloud_firestore.FirebaseFirestore.instance.collection("generate").add(new (T$.IdentityMapOfString$dynamic()).from(["prompt", value, "timestamp", new core.DateTime.now()]));
                  }, T$.StringTovoid())})})])})})});
    }
    static ['_#new#tearOff']() {
      return new main._ChatPageState.new();
    }
  };
  (main._ChatPageState.new = function() {
    this.messageController = new editable_text.TextEditingController.new();
    main._ChatPageState.__proto__.new.call(this);
    ;
  }).prototype = main._ChatPageState.prototype;
  dart.addTypeTests(main._ChatPageState);
  dart.addTypeCaches(main._ChatPageState);
  dart.setMethodSignature(main._ChatPageState, () => ({
    __proto__: dart.getMethods(main._ChatPageState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main._ChatPageState, I[0]);
  dart.setFieldSignature(main._ChatPageState, () => ({
    __proto__: dart.getFields(main._ChatPageState.__proto__),
    messageController: dart.fieldType(editable_text.TextEditingController)
  }));
  main.ChatBubble = class ChatBubble extends framework.StatelessWidget {
    get isUser() {
      return this[S$.isUser];
    }
    set isUser(value) {
      super.isUser = value;
    }
    get text() {
      return this[S$.text];
    }
    set text(value) {
      super.text = value;
    }
    get isLoading() {
      return this[S$.isLoading];
    }
    set isLoading(value) {
      super.isLoading = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let isUser = opts && 'isUser' in opts ? opts.isUser : null;
      let text = opts && 'text' in opts ? opts.text : null;
      let isLoading = opts && 'isLoading' in opts ? opts.isLoading : false;
      return new main.ChatBubble.new({key: key, isUser: isUser, text: text, isLoading: isLoading});
    }
    build(context) {
      return new basic.Row.new({mainAxisAlignment: this.isUser ? flex.MainAxisAlignment.end : flex.MainAxisAlignment.start, children: T$.JSArrayOfWidget().of([new basic.Flexible.new({child: new container.Container.new({constraints: new box.BoxConstraints.new({maxWidth: media_query.MediaQuery.of(context).size.width * 0.8}), margin: C[17] || CT.C17, padding: C[18] || CT.C18, decoration: new box_decoration.BoxDecoration.new({borderRadius: new border_radius.BorderRadius.circular(10), color: this.isUser ? colors.Colors.indigo : theme.Theme.of(context).colorScheme.onInverseSurface}), child: this.isLoading ? C[5] || CT.C5 : new text.Text.new(this.text, {style: new text_style.TextStyle.new({color: this.isUser ? colors.Colors.white : theme.Theme.of(context).colorScheme.onBackground})})})})])});
    }
  };
  (main.ChatBubble.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let isUser = opts && 'isUser' in opts ? opts.isUser : null;
    let text = opts && 'text' in opts ? opts.text : null;
    let isLoading = opts && 'isLoading' in opts ? opts.isLoading : false;
    this[S$.isUser] = isUser;
    this[S$.text] = text;
    this[S$.isLoading] = isLoading;
    main.ChatBubble.__proto__.new.call(this, {key: key});
    ;
  }).prototype = main.ChatBubble.prototype;
  dart.addTypeTests(main.ChatBubble);
  dart.addTypeCaches(main.ChatBubble);
  dart.setMethodSignature(main.ChatBubble, () => ({
    __proto__: dart.getMethods(main.ChatBubble.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main.ChatBubble, I[0]);
  dart.setFieldSignature(main.ChatBubble, () => ({
    __proto__: dart.getFields(main.ChatBubble.__proto__),
    isUser: dart.finalFieldType(core.bool),
    text: dart.finalFieldType(core.String),
    isLoading: dart.finalFieldType(core.bool)
  }));
  main.main = function main$0() {
    return async.async(dart.void, function* main() {
      binding.WidgetsFlutterBinding.ensureInitialized();
      yield firebase_core.Firebase.initializeApp({options: C[19] || CT.C19});
      binding.runApp(C[20] || CT.C20);
    });
  };
  web_plugin_registrant.registerPlugins = function registerPlugins(pluginRegistrar = null) {
    let t0;
    let registrar = (t0 = pluginRegistrar, t0 == null ? plugin_registry.webPluginRegistrar : t0);
    cloud_firestore_web.FirebaseFirestoreWeb.registerWith(registrar);
    firebase_auth_web.FirebaseAuthWeb.registerWith(registrar);
    firebase_core_web.FirebaseCoreWeb.registerWith(registrar);
    firebase_storage_web$.FirebaseStorageWeb.registerWith(registrar);
    registrar.registerMessageHandler();
  };
  const _is_CollectionReference_default = Symbol('_is_CollectionReference_default');
  cloud_firestore.CollectionReference$ = dart.generic(T => {
    class CollectionReference extends core.Object {}
    (CollectionReference.new = function() {
      ;
    }).prototype = CollectionReference.prototype;
    dart.addTypeTests(CollectionReference);
    CollectionReference.prototype[_is_CollectionReference_default] = true;
    dart.addTypeCaches(CollectionReference);
    CollectionReference[dart.implements] = () => [cloud_firestore.Query$(T)];
    dart.setLibraryUri(CollectionReference, I[1]);
    return CollectionReference;
  });
  cloud_firestore.CollectionReference = cloud_firestore.CollectionReference$();
  dart.addTypeTests(cloud_firestore.CollectionReference, _is_CollectionReference_default);
  cloud_firestore._JsonQuery = class _JsonQuery extends core.Object {
    get [S$._delegate]() {
      return this[S$._delegate$1];
    }
    set [S$._delegate](value) {
      super[S$._delegate] = value;
    }
    static ['_#new#tearOff'](firestore, _delegate) {
      return new cloud_firestore._JsonQuery.new(firestore, _delegate);
    }
    get parameters() {
      return this[S$._delegate].parameters;
    }
    [S$._hasStartCursor]() {
      return this.parameters[S$.$_get]("startAt") != null || this.parameters[S$.$_get]("startAfter") != null;
    }
    [S$._hasEndCursor]() {
      return this.parameters[S$.$_get]("endAt") != null || this.parameters[S$.$_get]("endBefore") != null;
    }
    [S$._isInequality](operator) {
      return operator === "<" || operator === "<=" || operator === ">" || operator === ">=" || operator === "!=";
    }
    isNotIn(operator) {
      return operator === "not-in";
    }
    [S$._assertQueryCursorSnapshot](documentSnapshot) {
      if (!documentSnapshot.exists) dart.assertFailed("a document snapshot must exist to be used within a query", I[3], 250, 7, "documentSnapshot.exists");
      let orders = T$.ListOfList().from(core.Iterable.as(this.parameters[S$.$_get]("orderBy")));
      let values = [];
      for (let order of orders) {
        let field = order[S$.$_get](0);
        if (!dart.equals(field, field_path.FieldPath.documentId)) {
          try {
            values[S$.$add](documentSnapshot.get(core.Object.as(field)));
          } catch (e) {
            let ex = dart.getThrown(e);
            if (core.StateError.is(ex)) {
              dart.throw("You are trying to start or end a query using a document for which the field '" + dart.str(field) + "' (used as the orderBy) does not exist.");
            } else
              throw e;
          }
        }
      }
      if (orders[S$.$isNotEmpty]) {
        let lastOrder = orders[S$.$last];
        if (!dart.equals(lastOrder[S$.$_get](0), field_path.FieldPath.documentId)) {
          orders[S$.$add]([field_path.FieldPath.documentId, lastOrder[S$.$_get](1)]);
        }
      } else {
        orders[S$.$add]([field_path.FieldPath.documentId, false]);
      }
      if (this[S$._delegate].isCollectionGroupQuery) {
        values[S$.$add](documentSnapshot.reference.path);
      } else {
        values[S$.$add](documentSnapshot.id);
      }
      return new (T$.IdentityMapOfString$dynamic()).from(["orders", orders, "values", values]);
    }
    [S$._assertQueryCursorValues](fields) {
      let orders = T$.ListOfListOfObjectN().from(core.Iterable.as(this.parameters[S$.$_get]("orderBy")));
      if (!(fields[S$.$length] <= orders[S$.$length])) dart.assertFailed("Too many arguments provided. " + "The number of arguments must be less than or equal to the number of orderBy() clauses.", I[3], 300, 7, "fields.length <= orders.length");
      return fields;
    }
    [S$._assertValidFieldType](field) {
      if (!(typeof field == 'string' || field_path.FieldPath.is(field) || field[S$.$_equals](field_path.FieldPath.documentId))) dart.assertFailed("Supported [field] types are [String] and [FieldPath].", I[3], 311, 7, "field is String || field is FieldPath || field == FieldPath.documentId");
    }
    endAtDocument(documentSnapshot) {
      let results = this[S$._assertQueryCursorSnapshot](documentSnapshot);
      return new cloud_firestore._JsonQuery.new(this.firestore, this[S$._delegate].endAtDocument(core.List.as(results[S$.$_get]("orders")), core.List.as(results[S$.$_get]("values"))));
    }
    endAt(values) {
      this[S$._assertQueryCursorValues](values);
      return new cloud_firestore._JsonQuery.new(this.firestore, this[S$._delegate].endAt(values));
    }
    endBeforeDocument(documentSnapshot) {
      let results = this[S$._assertQueryCursorSnapshot](documentSnapshot);
      return new cloud_firestore._JsonQuery.new(this.firestore, this[S$._delegate].endBeforeDocument(core.List.as(results[S$.$_get]("orders")), core.List.as(results[S$.$_get]("values"))));
    }
    endBefore(values) {
      this[S$._assertQueryCursorValues](values);
      return new cloud_firestore._JsonQuery.new(this.firestore, this[S$._delegate].endBefore(values));
    }
    get(options = null) {
      return async.async(T$.QuerySnapshotOfMapOfString$dynamic(), (function* get() {
        let t2;
        let snapshotDelegate = (yield this[S$._delegate].get((t2 = options, t2 == null ? C[21] || CT.C21 : t2)));
        return new cloud_firestore._JsonQuerySnapshot.new(this.firestore, snapshotDelegate);
      }).bind(this));
    }
    limit(limit) {
      if (!(limit > 0)) dart.assertFailed("limit must be a positive number greater than 0", I[3], 398, 12, "limit > 0");
      return new cloud_firestore._JsonQuery.new(this.firestore, this[S$._delegate].limit(limit));
    }
    limitToLast(limit) {
      if (!(limit > 0)) dart.assertFailed("limit must be a positive number greater than 0", I[3], 408, 12, "limit > 0");
      let orders = T$.ListOfList().from(core.Iterable.as(this.parameters[S$.$_get]("orderBy")));
      if (!orders[S$.$isNotEmpty]) dart.assertFailed("limitToLast() queries require specifying at least one orderBy() clause", I[3], 411, 7, "orders.isNotEmpty");
      return new cloud_firestore._JsonQuery.new(this.firestore, this[S$._delegate].limitToLast(limit));
    }
    snapshots(opts) {
      let includeMetadataChanges = opts && 'includeMetadataChanges' in opts ? opts.includeMetadataChanges : false;
      return this[S$._delegate].snapshots({includeMetadataChanges: includeMetadataChanges}).map(T$.QuerySnapshotOfMapOfString$dynamic(), dart.fn(item => new cloud_firestore._JsonQuerySnapshot.new(this.firestore, item), T$.QuerySnapshotPlatformTo_JsonQuerySnapshot()));
    }
    orderBy(field, opts) {
      let descending = opts && 'descending' in opts ? opts.descending : false;
      this[S$._assertValidFieldType](field);
      if (!!this[S$._hasStartCursor]()) dart.assertFailed("Invalid query. " + "You must not call startAt(), startAtDocument(), " + "startAfter() or startAfterDocument() before calling orderBy()", I[3], 445, 7, "!_hasStartCursor()");
      if (!!this[S$._hasEndCursor]()) dart.assertFailed("Invalid query. " + "You must not call endAt(), endAtDocument(), " + "endBefore() or endBeforeDocument() before calling orderBy()", I[3], 451, 7, "!_hasEndCursor()");
      let orders = T$.ListOfList().from(core.Iterable.as(this.parameters[S$.$_get]("orderBy")));
      if (!orders[S$.$where](dart.fn(item => field[S$.$_equals](item[S$.$_get](0)), T$.ListTobool()))[S$.$isEmpty]) dart.assertFailed("OrderBy field \"" + dart.str(field) + "\" already exists in this query", I[3], 461, 7, "orders.where((List<dynamic> item) => field == item[0]).isEmpty");
      if (field[S$.$_equals](field_path.FieldPath.documentId)) {
        orders[S$.$add]([field, descending]);
      } else {
        let fieldPath = typeof field == 'string' ? new field_path.FieldPath.fromString(field) : field_path.FieldPath.as(field);
        orders[S$.$add]([fieldPath, descending]);
      }
      let conditions = T$.ListOfList().from(core.Iterable.as(this.parameters[S$.$_get]("where")));
      if (conditions[S$.$isNotEmpty]) {
        for (let condition of conditions) {
          let conditionField = dart.dsend(condition, '_get', [0]);
          let operator = core.String.as(dart.dsend(condition, '_get', [1]));
          if (this[S$._isInequality](operator) || this.isNotIn(operator)) {
            if (!dart.equals(conditionField, orders[S$.$_get](0)[S$.$_get](0))) dart.assertFailed("The initial orderBy() field \"" + dart.str(orders) + "[0][0]\" has to be the same as " + "the where() field parameter \"" + dart.str(conditionField) + "\" when an inequality operator is invoked.", I[3], 485, 13, "conditionField == orders[0][0]");
          }
          for (let order of orders) {
            let orderField = dart.dsend(order, '_get', [0]);
            if (operator === "==") {
              if (!!dart.equals(conditionField, orderField)) dart.assertFailed("The '" + dart.str(orderField) + "' cannot be the same as your where() field parameter '" + dart.str(conditionField) + "'.", I[3], 498, 15, "conditionField != orderField");
            }
            if (dart.equals(conditionField, field_path.FieldPath.documentId)) {
              if (!dart.equals(orderField, field_path.FieldPath.documentId)) dart.assertFailed("'[FieldPath.documentId]' cannot be used in conjunction with a different orderBy() parameter.", I[3], 505, 15, "orderField == FieldPath.documentId");
            }
          }
        }
      }
      return new cloud_firestore._JsonQuery.new(this.firestore, this[S$._delegate].orderBy(orders));
    }
    startAfterDocument(documentSnapshot) {
      let results = this[S$._assertQueryCursorSnapshot](documentSnapshot);
      return new cloud_firestore._JsonQuery.new(this.firestore, this[S$._delegate].startAfterDocument(core.List.as(results[S$.$_get]("orders")), core.List.as(results[S$.$_get]("values"))));
    }
    startAfter(values) {
      this[S$._assertQueryCursorValues](values);
      return new cloud_firestore._JsonQuery.new(this.firestore, this[S$._delegate].startAfter(values));
    }
    startAtDocument(documentSnapshot) {
      let results = this[S$._assertQueryCursorSnapshot](documentSnapshot);
      return new cloud_firestore._JsonQuery.new(this.firestore, this[S$._delegate].startAtDocument(core.List.as(results[S$.$_get]("orders")), core.List.as(results[S$.$_get]("values"))));
    }
    startAt(values) {
      this[S$._assertQueryCursorValues](values);
      return new cloud_firestore._JsonQuery.new(this.firestore, this[S$._delegate].startAt(values));
    }
    where(field, opts) {
      let isEqualTo = opts && 'isEqualTo' in opts ? opts.isEqualTo : null;
      let isNotEqualTo = opts && 'isNotEqualTo' in opts ? opts.isNotEqualTo : null;
      let isLessThan = opts && 'isLessThan' in opts ? opts.isLessThan : null;
      let isLessThanOrEqualTo = opts && 'isLessThanOrEqualTo' in opts ? opts.isLessThanOrEqualTo : null;
      let isGreaterThan = opts && 'isGreaterThan' in opts ? opts.isGreaterThan : null;
      let isGreaterThanOrEqualTo = opts && 'isGreaterThanOrEqualTo' in opts ? opts.isGreaterThanOrEqualTo : null;
      let arrayContains = opts && 'arrayContains' in opts ? opts.arrayContains : null;
      let arrayContainsAny = opts && 'arrayContainsAny' in opts ? opts.arrayContainsAny : null;
      let whereIn = opts && 'whereIn' in opts ? opts.whereIn : null;
      let whereNotIn = opts && 'whereNotIn' in opts ? opts.whereNotIn : null;
      let isNull = opts && 'isNull' in opts ? opts.isNull : null;
      this[S$._assertValidFieldType](field);
      let equality = C[23] || CT.C23;
      let conditions = T$.ListOfList().from(core.Iterable.as(this.parameters[S$.$_get]("where")));
      function addCondition(field, operator, value) {
        let condition = null;
        let codecValue = cloud_firestore._CodecUtility.valueEncode(value);
        if (dart.equals(field, field_path.FieldPath.documentId)) {
          condition = [field, operator, codecValue];
        } else {
          let fieldPath = typeof field == 'string' ? new field_path.FieldPath.fromString(field) : field_path.FieldPath.as(field);
          condition = [fieldPath, operator, codecValue];
        }
        if (!conditions[S$.$where](dart.fn(item => equality.equals(condition, item), T$.ListTobool()))[S$.$isEmpty]) dart.assertFailed("Condition " + dart.str(condition) + " already exists in this query.", I[3], 622, 9, "conditions\n            .where((List<dynamic> item) => equality.equals(condition, item))\n            .isEmpty");
        conditions[S$.$add](condition);
      }
      dart.fn(addCondition, T$.dynamicAndStringAnddynamicTovoid());
      if (isEqualTo != null) addCondition(field, "==", isEqualTo);
      if (isNotEqualTo != null) addCondition(field, "!=", isNotEqualTo);
      if (isLessThan != null) addCondition(field, "<", isLessThan);
      if (isLessThanOrEqualTo != null) {
        addCondition(field, "<=", isLessThanOrEqualTo);
      }
      if (isGreaterThan != null) addCondition(field, ">", isGreaterThan);
      if (isGreaterThanOrEqualTo != null) {
        addCondition(field, ">=", isGreaterThanOrEqualTo);
      }
      if (arrayContains != null) {
        addCondition(field, "array-contains", arrayContains);
      }
      if (arrayContainsAny != null) {
        addCondition(field, "array-contains-any", arrayContainsAny);
      }
      if (whereIn != null) addCondition(field, "in", whereIn);
      if (whereNotIn != null) addCondition(field, "not-in", whereNotIn);
      if (isNull != null) {
        if (isNull === true) {
          addCondition(field, "==", null);
        } else {
          addCondition(field, "!=", null);
        }
      }
      let hasInequality = null;
      let hasIn = false;
      let hasNotIn = false;
      let hasNotEqualTo = false;
      let hasNotEqualToOperatorAndNotDocumentIdField = false;
      let hasArrayContains = false;
      let hasArrayContainsAny = false;
      let hasDocumentIdField = false;
      for (let condition of conditions) {
        let field = dart.dsend(condition, '_get', [0]);
        let operator = core.String.as(dart.dsend(condition, '_get', [1]));
        let value = dart.dsend(condition, '_get', [2]);
        let orders = T$.ListOfList().from(core.Iterable.as(this.parameters[S$.$_get]("orderBy")));
        if (this[S$._isInequality](operator) && orders[S$.$isNotEmpty]) {
          if (!dart.equals(field, orders[S$.$_get](0)[S$.$_get](0))) dart.assertFailed("The initial orderBy() field '" + dart.str(orders) + "[0][0]' has to be the same as " + "the where() field parameter '" + dart.str(field) + "' when an inequality operator is invoked.", I[3], 677, 11, "field == orders[0][0]");
        }
        if (!dart.equals(field, field_path.FieldPath.documentId) && hasDocumentIdField) {
          if (!(operator !== "!=")) dart.assertFailed("You cannot use '!=' filters whilst using a FieldPath.documentId field in another filter.", I[3], 685, 11, "operator != '!='");
        }
        if (dart.equals(field, field_path.FieldPath.documentId)) {
          if (!!hasNotEqualToOperatorAndNotDocumentIdField) dart.assertFailed("You cannot use FieldPath.documentId field whilst using a '!=' filter on a different field.", I[3], 692, 11, "!hasNotEqualToOperatorAndNotDocumentIdField");
          hasDocumentIdField = true;
        }
        if (operator === "in" || operator === "array-contains-any" || this.isNotIn(operator)) {
          if (!core.List.is(value)) dart.assertFailed("A non-empty [List] is required for '" + operator + "' filters.", I[3], 702, 11, "value is List");
          if (!(core.List.as(value)[S$.$length] <= 10)) dart.assertFailed("'" + operator + "' filters support a maximum of 10 elements in the value [List].", I[3], 706, 11, "(value as List).length <= 10");
          if (!core.List.as(value)[S$.$isNotEmpty]) dart.assertFailed("'" + operator + "' filters require a non-empty [List].", I[3], 710, 11, "(value as List).isNotEmpty");
          if (!core.List.as(value)[S$.$where](dart.fn(value => value == null, T$.dynamicTobool()))[S$.$isEmpty]) dart.assertFailed("'" + operator + "' filters cannot contain 'null' in the [List].", I[3], 714, 11, "(value as List).where((value) => value == null).isEmpty");
        }
        if (operator === "!=") {
          if (!!hasNotEqualTo) dart.assertFailed("You cannot use '!=' filters more than once.", I[3], 720, 16, "!hasNotEqualTo");
          if (!!hasNotIn) dart.assertFailed("You cannot use '!=' filters with 'not-in' filters.", I[3], 721, 16, "!hasNotIn");
          hasNotEqualTo = true;
          if (!dart.equals(field, field_path.FieldPath.documentId)) {
            hasNotEqualToOperatorAndNotDocumentIdField = true;
          }
        }
        if (this.isNotIn(operator)) {
          if (!!hasNotIn) dart.assertFailed("You cannot use 'not-in' filters more than once.", I[3], 731, 16, "!hasNotIn");
          if (!!hasNotEqualTo) dart.assertFailed("You cannot use 'not-in' filters with '!=' filters.", I[3], 733, 11, "!hasNotEqualTo");
        }
        if (operator === "in") {
          if (!!hasIn) dart.assertFailed("You cannot use 'whereIn' filters more than once.", I[3], 739, 16, "!hasIn");
          hasIn = true;
        }
        if (operator === "array-contains") {
          if (!!hasArrayContains) dart.assertFailed("You cannot use 'array-contains' filters more than once.", I[3], 745, 11, "!hasArrayContains");
          hasArrayContains = true;
        }
        if (operator === "array-contains-any") {
          if (!!hasArrayContainsAny) dart.assertFailed("You cannot use 'array-contains-any' filters more than once.", I[3], 753, 11, "!hasArrayContainsAny");
          hasArrayContainsAny = true;
        }
        if (operator === "array-contains-any" || operator === "in") {
          if (!!(hasIn && hasArrayContainsAny)) dart.assertFailed("You cannot use 'in' filters with 'array-contains-any' filters.", I[3], 761, 11, "!(hasIn && hasArrayContainsAny)");
        }
        if (operator === "array-contains" || operator === "array-contains-any") {
          if (!!(hasArrayContains && hasArrayContainsAny)) dart.assertFailed("You cannot use both 'array-contains-any' or 'array-contains' filters together.", I[3], 768, 11, "!(hasArrayContains && hasArrayContainsAny)");
        }
        if (this[S$._isInequality](operator)) {
          if (hasInequality == null) {
            hasInequality = field;
          } else {
            if (!dart.equals(hasInequality, field)) dart.assertFailed("All where filters with an inequality (<, <=, >, or >=) must be " + "on the same field. But you have inequality filters on '" + dart.str(hasInequality) + "' and '" + dart.str(field) + "'.", I[3], 778, 13, "hasInequality == field");
          }
        }
      }
      return new cloud_firestore._JsonQuery.new(this.firestore, this[S$._delegate].where(conditions));
    }
    withConverter(R, opts) {
      let fromFirestore = opts && 'fromFirestore' in opts ? opts.fromFirestore : null;
      let toFirestore = opts && 'toFirestore' in opts ? opts.toFirestore : null;
      return new (cloud_firestore._WithConverterQuery$(R)).new(this, fromFirestore, toFirestore);
    }
    _equals(other) {
      if (other == null) return false;
      return this[S$.$runtimeType]._equals(other[S$.$runtimeType]) && cloud_firestore._JsonQuery.is(other) && other.firestore._equals(this.firestore) && other[S$._delegate][S$.$_equals](this[S$._delegate]);
    }
    get hashCode() {
      return core.Object.hash(this[S$.$runtimeType], this.firestore, this[S$._delegate]);
    }
  };
  (cloud_firestore._JsonQuery.new = function(firestore, _delegate) {
    this.firestore = firestore;
    this[S$._delegate$1] = _delegate;
    platform_interface_query.QueryPlatform.verifyExtends(this[S$._delegate]);
  }).prototype = cloud_firestore._JsonQuery.prototype;
  dart.addTypeTests(cloud_firestore._JsonQuery);
  dart.addTypeCaches(cloud_firestore._JsonQuery);
  cloud_firestore._JsonQuery[dart.implements] = () => [cloud_firestore.Query$(core.Map$(core.String, dart.dynamic))];
  dart.setMethodSignature(cloud_firestore._JsonQuery, () => ({
    __proto__: dart.getMethods(cloud_firestore._JsonQuery.__proto__),
    [S$._hasStartCursor]: dart.fnType(core.bool, []),
    [S$._hasEndCursor]: dart.fnType(core.bool, []),
    [S$._isInequality]: dart.fnType(core.bool, [core.String]),
    isNotIn: dart.fnType(core.bool, [core.String]),
    [S$._assertQueryCursorSnapshot]: dart.fnType(core.Map$(core.String, dart.dynamic), [cloud_firestore.DocumentSnapshot$(dart.nullable(core.Object))]),
    [S$._assertQueryCursorValues]: dart.fnType(core.List, [core.List$(dart.nullable(core.Object))]),
    [S$._assertValidFieldType]: dart.fnType(dart.void, [core.Object]),
    endAtDocument: dart.fnType(cloud_firestore.Query$(core.Map$(core.String, dart.dynamic)), [cloud_firestore.DocumentSnapshot$(dart.nullable(core.Object))]),
    endAt: dart.fnType(cloud_firestore.Query$(core.Map$(core.String, dart.dynamic)), [core.List$(dart.nullable(core.Object))]),
    endBeforeDocument: dart.fnType(cloud_firestore.Query$(core.Map$(core.String, dart.dynamic)), [cloud_firestore.DocumentSnapshot$(dart.nullable(core.Object))]),
    endBefore: dart.fnType(cloud_firestore.Query$(core.Map$(core.String, dart.dynamic)), [core.List$(dart.nullable(core.Object))]),
    get: dart.fnType(async.Future$(cloud_firestore.QuerySnapshot$(core.Map$(core.String, dart.dynamic))), [], [dart.nullable(get_options.GetOptions)]),
    limit: dart.fnType(cloud_firestore.Query$(core.Map$(core.String, dart.dynamic)), [core.int]),
    limitToLast: dart.fnType(cloud_firestore.Query$(core.Map$(core.String, dart.dynamic)), [core.int]),
    snapshots: dart.fnType(async.Stream$(cloud_firestore.QuerySnapshot$(core.Map$(core.String, dart.dynamic))), [], {includeMetadataChanges: core.bool}, {}),
    orderBy: dart.fnType(cloud_firestore.Query$(core.Map$(core.String, dart.dynamic)), [core.Object], {descending: core.bool}, {}),
    startAfterDocument: dart.fnType(cloud_firestore.Query$(core.Map$(core.String, dart.dynamic)), [cloud_firestore.DocumentSnapshot$(dart.nullable(core.Object))]),
    startAfter: dart.fnType(cloud_firestore.Query$(core.Map$(core.String, dart.dynamic)), [core.List$(dart.nullable(core.Object))]),
    startAtDocument: dart.fnType(cloud_firestore.Query$(core.Map$(core.String, dart.dynamic)), [cloud_firestore.DocumentSnapshot$(dart.nullable(core.Object))]),
    startAt: dart.fnType(cloud_firestore.Query$(core.Map$(core.String, dart.dynamic)), [core.List$(dart.nullable(core.Object))]),
    where: dart.fnType(cloud_firestore.Query$(core.Map$(core.String, dart.dynamic)), [core.Object], {arrayContains: dart.nullable(core.Object), arrayContainsAny: dart.nullable(core.List$(dart.nullable(core.Object))), isEqualTo: dart.nullable(core.Object), isGreaterThan: dart.nullable(core.Object), isGreaterThanOrEqualTo: dart.nullable(core.Object), isLessThan: dart.nullable(core.Object), isLessThanOrEqualTo: dart.nullable(core.Object), isNotEqualTo: dart.nullable(core.Object), isNull: dart.nullable(core.bool), whereIn: dart.nullable(core.List$(dart.nullable(core.Object))), whereNotIn: dart.nullable(core.List$(dart.nullable(core.Object)))}, {}),
    withConverter: dart.gFnType(R => [cloud_firestore.Query$(R), [], {}, {fromFirestore: dart.fnType(R, [cloud_firestore.DocumentSnapshot$(core.Map$(core.String, dart.dynamic)), dart.nullable(cloud_firestore.SnapshotOptions)]), toFirestore: dart.fnType(core.Map$(core.String, dart.nullable(core.Object)), [R, dart.nullable(set_options.SetOptions)])}], R => [dart.nullable(core.Object)])
  }));
  dart.setGetterSignature(cloud_firestore._JsonQuery, () => ({
    __proto__: dart.getGetters(cloud_firestore._JsonQuery.__proto__),
    parameters: core.Map$(core.String, dart.dynamic)
  }));
  dart.setLibraryUri(cloud_firestore._JsonQuery, I[1]);
  dart.setFieldSignature(cloud_firestore._JsonQuery, () => ({
    __proto__: dart.getFields(cloud_firestore._JsonQuery.__proto__),
    firestore: dart.finalFieldType(cloud_firestore.FirebaseFirestore),
    [S$._delegate]: dart.finalFieldType(platform_interface_query.QueryPlatform)
  }));
  dart.defineExtensionMethods(cloud_firestore._JsonQuery, ['_equals']);
  dart.defineExtensionAccessors(cloud_firestore._JsonQuery, ['hashCode']);
  cloud_firestore._JsonCollectionReference = class _JsonCollectionReference extends cloud_firestore._JsonQuery {
    static ['_#new#tearOff'](firestore, _delegate) {
      return new cloud_firestore._JsonCollectionReference.new(firestore, _delegate);
    }
    get [S$._delegate]() {
      return platform_interface_collection_reference.CollectionReferencePlatform.as(super[S$._delegate]);
    }
    get id() {
      return this[S$._delegate].id;
    }
    get parent() {
      let _documentReferencePlatform = this[S$._delegate].parent;
      if (_documentReferencePlatform == null) {
        return null;
      }
      return new cloud_firestore._JsonDocumentReference.new(this.firestore, _documentReferencePlatform);
    }
    get path() {
      return this[S$._delegate].path;
    }
    add(data) {
      T$.MapOfString$dynamic().as(data);
      return async.async(T$.DocumentReferenceOfMapOfString$dynamic(), (function* add() {
        let newDocument = this.doc();
        yield newDocument.set(data);
        return newDocument;
      }).bind(this));
    }
    doc(path = null) {
      if (path != null) {
        if (!path[S$.$isNotEmpty]) dart.assertFailed("a document path must be a non-empty string", I[2], 116, 14, "path.isNotEmpty");
        if (!!path[S$.$contains]("//")) dart.assertFailed("a document path must not contain \"//\"", I[2], 117, 14, "!path.contains('//')");
        if (!(path !== "/")) dart.assertFailed("a document path must point to a valid document", I[2], 118, 14, "path != '/'");
      }
      return new cloud_firestore._JsonDocumentReference.new(this.firestore, this[S$._delegate].doc(path));
    }
    withConverter(R, opts) {
      let fromFirestore = opts && 'fromFirestore' in opts ? opts.fromFirestore : null;
      let toFirestore = opts && 'toFirestore' in opts ? opts.toFirestore : null;
      return new (cloud_firestore._WithConverterCollectionReference$(R)).new(this, fromFirestore, toFirestore);
    }
    _equals(other) {
      if (other == null) return false;
      return cloud_firestore._JsonCollectionReference.is(other) && other[S$.$runtimeType]._equals(this[S$.$runtimeType]) && other.firestore._equals(this.firestore) && other.path === this.path;
    }
    get hashCode() {
      return core.Object.hash(this.firestore, this.path);
    }
    toString() {
      return "CollectionReference<Map<String, dynamic>>(" + this.path + ")";
    }
  };
  (cloud_firestore._JsonCollectionReference.new = function(firestore, _delegate) {
    cloud_firestore._JsonCollectionReference.__proto__.new.call(this, firestore, _delegate);
    ;
  }).prototype = cloud_firestore._JsonCollectionReference.prototype;
  dart.addTypeTests(cloud_firestore._JsonCollectionReference);
  dart.addTypeCaches(cloud_firestore._JsonCollectionReference);
  cloud_firestore._JsonCollectionReference[dart.implements] = () => [cloud_firestore.CollectionReference$(core.Map$(core.String, dart.dynamic))];
  dart.setMethodSignature(cloud_firestore._JsonCollectionReference, () => ({
    __proto__: dart.getMethods(cloud_firestore._JsonCollectionReference.__proto__),
    add: dart.fnType(async.Future$(cloud_firestore.DocumentReference$(core.Map$(core.String, dart.dynamic))), [dart.nullable(core.Object)]),
    doc: dart.fnType(cloud_firestore.DocumentReference$(core.Map$(core.String, dart.dynamic)), [], [dart.nullable(core.String)]),
    withConverter: dart.gFnType(R => [cloud_firestore.CollectionReference$(R), [], {}, {fromFirestore: dart.fnType(R, [cloud_firestore.DocumentSnapshot$(core.Map$(core.String, dart.dynamic)), dart.nullable(cloud_firestore.SnapshotOptions)]), toFirestore: dart.fnType(core.Map$(core.String, dart.nullable(core.Object)), [R, dart.nullable(set_options.SetOptions)])}], R => [dart.nullable(core.Object)])
  }));
  dart.setGetterSignature(cloud_firestore._JsonCollectionReference, () => ({
    __proto__: dart.getGetters(cloud_firestore._JsonCollectionReference.__proto__),
    [S$._delegate]: platform_interface_collection_reference.CollectionReferencePlatform,
    id: core.String,
    parent: dart.nullable(cloud_firestore.DocumentReference$(core.Map$(core.String, dart.dynamic))),
    path: core.String
  }));
  dart.setLibraryUri(cloud_firestore._JsonCollectionReference, I[1]);
  dart.defineExtensionMethods(cloud_firestore._JsonCollectionReference, ['_equals', 'toString']);
  dart.defineExtensionAccessors(cloud_firestore._JsonCollectionReference, ['hashCode']);
  const _is__WithConverterQuery_default = Symbol('_is__WithConverterQuery_default');
  cloud_firestore._WithConverterQuery$ = dart.generic(T => {
    var __t$_WithConverterQueryOfT = () => (__t$_WithConverterQueryOfT = dart.constFn(cloud_firestore._WithConverterQuery$(T)))();
    var __t$_WithConverterQuerySnapshotOfT = () => (__t$_WithConverterQuerySnapshotOfT = dart.constFn(cloud_firestore._WithConverterQuerySnapshot$(T)))();
    var __t$QuerySnapshotOfT = () => (__t$QuerySnapshotOfT = dart.constFn(cloud_firestore.QuerySnapshot$(T)))();
    var __t$QuerySnapshotOfMapOfString$dynamicTo_WithConverterQuerySnapshotOfT = () => (__t$QuerySnapshotOfMapOfString$dynamicTo_WithConverterQuerySnapshotOfT = dart.constFn(dart.fnType(__t$_WithConverterQuerySnapshotOfT(), [T$.QuerySnapshotOfMapOfString$dynamic()])))();
    var __t$TAndSetOptionsNToMapOfString$ObjectN = () => (__t$TAndSetOptionsNToMapOfString$ObjectN = dart.constFn(dart.fnType(T$.MapOfString$ObjectN(), [T, T$.SetOptionsN()])))();
    class _WithConverterQuery extends core.Object {
      static ['_#new#tearOff'](T, _originalQuery, _fromFirestore, _toFirestore) {
        return new (cloud_firestore._WithConverterQuery$(T)).new(_originalQuery, _fromFirestore, _toFirestore);
      }
      get firestore() {
        return this[S$._originalQuery].firestore;
      }
      get parameters() {
        return this[S$._originalQuery].parameters;
      }
      [S$._mapQuery](newOriginalQuery) {
        return new (__t$_WithConverterQueryOfT()).new(newOriginalQuery, this[S$._fromFirestore], this[S$._toFirestore]);
      }
      get(options = null) {
        return async.async(__t$QuerySnapshotOfT(), (function* get() {
          let snapshot = (yield this[S$._originalQuery].get(options));
          return new (__t$_WithConverterQuerySnapshotOfT()).new(snapshot, this[S$._fromFirestore], this[S$._toFirestore]);
        }).bind(this));
      }
      snapshots(opts) {
        let includeMetadataChanges = opts && 'includeMetadataChanges' in opts ? opts.includeMetadataChanges : false;
        return this[S$._originalQuery].snapshots({includeMetadataChanges: includeMetadataChanges}).map(__t$QuerySnapshotOfT(), dart.fn(snapshot => new (__t$_WithConverterQuerySnapshotOfT()).new(snapshot, this[S$._fromFirestore], this[S$._toFirestore]), __t$QuerySnapshotOfMapOfString$dynamicTo_WithConverterQuerySnapshotOfT()));
      }
      endAt(values) {
        return this[S$._mapQuery](this[S$._originalQuery].endAt(values));
      }
      endAtDocument(documentSnapshot) {
        return this[S$._mapQuery](this[S$._originalQuery].endAtDocument(documentSnapshot));
      }
      endBefore(values) {
        return this[S$._mapQuery](this[S$._originalQuery].endBefore(values));
      }
      endBeforeDocument(documentSnapshot) {
        return this[S$._mapQuery](this[S$._originalQuery].endBeforeDocument(documentSnapshot));
      }
      limit(limit) {
        return this[S$._mapQuery](this[S$._originalQuery].limit(limit));
      }
      limitToLast(limit) {
        return this[S$._mapQuery](this[S$._originalQuery].limitToLast(limit));
      }
      orderBy(field, opts) {
        let descending = opts && 'descending' in opts ? opts.descending : false;
        return this[S$._mapQuery](this[S$._originalQuery].orderBy(field, {descending: descending}));
      }
      startAfter(values) {
        return this[S$._mapQuery](this[S$._originalQuery].startAfter(values));
      }
      startAfterDocument(documentSnapshot) {
        return this[S$._mapQuery](this[S$._originalQuery].startAfterDocument(documentSnapshot));
      }
      startAt(values) {
        return this[S$._mapQuery](this[S$._originalQuery].startAt(values));
      }
      startAtDocument(documentSnapshot) {
        return this[S$._mapQuery](this[S$._originalQuery].startAtDocument(documentSnapshot));
      }
      where(field, opts) {
        let isEqualTo = opts && 'isEqualTo' in opts ? opts.isEqualTo : null;
        let isNotEqualTo = opts && 'isNotEqualTo' in opts ? opts.isNotEqualTo : null;
        let isLessThan = opts && 'isLessThan' in opts ? opts.isLessThan : null;
        let isLessThanOrEqualTo = opts && 'isLessThanOrEqualTo' in opts ? opts.isLessThanOrEqualTo : null;
        let isGreaterThan = opts && 'isGreaterThan' in opts ? opts.isGreaterThan : null;
        let isGreaterThanOrEqualTo = opts && 'isGreaterThanOrEqualTo' in opts ? opts.isGreaterThanOrEqualTo : null;
        let arrayContains = opts && 'arrayContains' in opts ? opts.arrayContains : null;
        let arrayContainsAny = opts && 'arrayContainsAny' in opts ? opts.arrayContainsAny : null;
        let whereIn = opts && 'whereIn' in opts ? opts.whereIn : null;
        let whereNotIn = opts && 'whereNotIn' in opts ? opts.whereNotIn : null;
        let isNull = opts && 'isNull' in opts ? opts.isNull : null;
        return this[S$._mapQuery](this[S$._originalQuery].where(field, {isEqualTo: isEqualTo, isNotEqualTo: isNotEqualTo, isLessThan: isLessThan, isLessThanOrEqualTo: isLessThanOrEqualTo, isGreaterThan: isGreaterThan, isGreaterThanOrEqualTo: isGreaterThanOrEqualTo, arrayContains: arrayContains, arrayContainsAny: arrayContainsAny, whereIn: whereIn, whereNotIn: whereNotIn, isNull: isNull}));
      }
      withConverter(R, opts) {
        let fromFirestore = opts && 'fromFirestore' in opts ? opts.fromFirestore : null;
        let toFirestore = opts && 'toFirestore' in opts ? opts.toFirestore : null;
        return new (cloud_firestore._WithConverterQuery$(R)).new(this[S$._originalQuery], fromFirestore, toFirestore);
      }
      _equals(other) {
        if (other == null) return false;
        return this[S$.$runtimeType]._equals(other[S$.$runtimeType]) && __t$_WithConverterQueryOfT().is(other) && other[S$._fromFirestore][S$.$_equals](this[S$._fromFirestore]) && __t$TAndSetOptionsNToMapOfString$ObjectN().as(other[S$._toFirestore])[S$.$_equals](this[S$._toFirestore]) && other[S$._originalQuery][S$.$_equals](this[S$._originalQuery]);
      }
      get hashCode() {
        return core.Object.hash(this[S$.$runtimeType], this[S$._fromFirestore], this[S$._toFirestore], this[S$._originalQuery]);
      }
    }
    (_WithConverterQuery.new = function(_originalQuery, _fromFirestore, _toFirestore) {
      this[S$._originalQuery] = _originalQuery;
      this[S$._fromFirestore] = _fromFirestore;
      this[S$._toFirestore] = _toFirestore;
      ;
    }).prototype = _WithConverterQuery.prototype;
    dart.addTypeTests(_WithConverterQuery);
    _WithConverterQuery.prototype[_is__WithConverterQuery_default] = true;
    dart.addTypeCaches(_WithConverterQuery);
    _WithConverterQuery[dart.implements] = () => [cloud_firestore.Query$(T)];
    dart.setMethodSignature(_WithConverterQuery, () => ({
      __proto__: dart.getMethods(_WithConverterQuery.__proto__),
      [S$._mapQuery]: dart.fnType(cloud_firestore.Query$(T), [cloud_firestore.Query$(core.Map$(core.String, dart.dynamic))]),
      get: dart.fnType(async.Future$(cloud_firestore.QuerySnapshot$(T)), [], [dart.nullable(get_options.GetOptions)]),
      snapshots: dart.fnType(async.Stream$(cloud_firestore.QuerySnapshot$(T)), [], {includeMetadataChanges: core.bool}, {}),
      endAt: dart.fnType(cloud_firestore.Query$(T), [core.List$(dart.nullable(core.Object))]),
      endAtDocument: dart.fnType(cloud_firestore.Query$(T), [cloud_firestore.DocumentSnapshot$(dart.nullable(core.Object))]),
      endBefore: dart.fnType(cloud_firestore.Query$(T), [core.List$(dart.nullable(core.Object))]),
      endBeforeDocument: dart.fnType(cloud_firestore.Query$(T), [cloud_firestore.DocumentSnapshot$(dart.nullable(core.Object))]),
      limit: dart.fnType(cloud_firestore.Query$(T), [core.int]),
      limitToLast: dart.fnType(cloud_firestore.Query$(T), [core.int]),
      orderBy: dart.fnType(cloud_firestore.Query$(T), [core.Object], {descending: core.bool}, {}),
      startAfter: dart.fnType(cloud_firestore.Query$(T), [core.List$(dart.nullable(core.Object))]),
      startAfterDocument: dart.fnType(cloud_firestore.Query$(T), [cloud_firestore.DocumentSnapshot$(dart.nullable(core.Object))]),
      startAt: dart.fnType(cloud_firestore.Query$(T), [core.List$(dart.nullable(core.Object))]),
      startAtDocument: dart.fnType(cloud_firestore.Query$(T), [cloud_firestore.DocumentSnapshot$(dart.nullable(core.Object))]),
      where: dart.fnType(cloud_firestore.Query$(T), [core.Object], {arrayContains: dart.nullable(core.Object), arrayContainsAny: dart.nullable(core.List$(dart.nullable(core.Object))), isEqualTo: dart.nullable(core.Object), isGreaterThan: dart.nullable(core.Object), isGreaterThanOrEqualTo: dart.nullable(core.Object), isLessThan: dart.nullable(core.Object), isLessThanOrEqualTo: dart.nullable(core.Object), isNotEqualTo: dart.nullable(core.Object), isNull: dart.nullable(core.bool), whereIn: dart.nullable(core.List$(dart.nullable(core.Object))), whereNotIn: dart.nullable(core.List$(dart.nullable(core.Object)))}, {}),
      withConverter: dart.gFnType(R => [cloud_firestore.Query$(R), [], {}, {fromFirestore: dart.fnType(R, [cloud_firestore.DocumentSnapshot$(core.Map$(core.String, dart.dynamic)), dart.nullable(cloud_firestore.SnapshotOptions)]), toFirestore: dart.fnType(core.Map$(core.String, dart.nullable(core.Object)), [R, dart.nullable(set_options.SetOptions)])}], R => [dart.nullable(core.Object)])
    }));
    dart.setGetterSignature(_WithConverterQuery, () => ({
      __proto__: dart.getGetters(_WithConverterQuery.__proto__),
      firestore: cloud_firestore.FirebaseFirestore,
      parameters: core.Map$(core.String, dart.dynamic)
    }));
    dart.setLibraryUri(_WithConverterQuery, I[1]);
    dart.setFieldSignature(_WithConverterQuery, () => ({
      __proto__: dart.getFields(_WithConverterQuery.__proto__),
      [S$._originalQuery]: dart.finalFieldType(cloud_firestore.Query$(core.Map$(core.String, dart.dynamic))),
      [S$._fromFirestore]: dart.finalFieldType(dart.fnType(T, [cloud_firestore.DocumentSnapshot$(core.Map$(core.String, dart.dynamic)), dart.nullable(cloud_firestore.SnapshotOptions)])),
      [S$._toFirestore]: dart.finalFieldType(dart.fnType(core.Map$(core.String, dart.nullable(core.Object)), [T, dart.nullable(set_options.SetOptions)]))
    }));
    dart.defineExtensionMethods(_WithConverterQuery, ['_equals']);
    dart.defineExtensionAccessors(_WithConverterQuery, ['hashCode']);
    return _WithConverterQuery;
  });
  cloud_firestore._WithConverterQuery = cloud_firestore._WithConverterQuery$();
  dart.addTypeTests(cloud_firestore._WithConverterQuery, _is__WithConverterQuery_default);
  const _is__WithConverterCollectionReference_default = Symbol('_is__WithConverterCollectionReference_default');
  cloud_firestore._WithConverterCollectionReference$ = dart.generic(T => {
    var __t$_WithConverterDocumentReferenceOfT = () => (__t$_WithConverterDocumentReferenceOfT = dart.constFn(cloud_firestore._WithConverterDocumentReference$(T)))();
    var __t$DocumentReferenceOfT = () => (__t$DocumentReferenceOfT = dart.constFn(cloud_firestore.DocumentReference$(T)))();
    var __t$_WithConverterCollectionReferenceOfT = () => (__t$_WithConverterCollectionReferenceOfT = dart.constFn(cloud_firestore._WithConverterCollectionReference$(T)))();
    var __t$TAndSetOptionsNToMapOfString$ObjectN = () => (__t$TAndSetOptionsNToMapOfString$ObjectN = dart.constFn(dart.fnType(T$.MapOfString$ObjectN(), [T, T$.SetOptionsN()])))();
    class _WithConverterCollectionReference extends cloud_firestore._WithConverterQuery$(T) {
      static ['_#new#tearOff'](T, collectionReference, fromFirestore, toFirestore) {
        return new (cloud_firestore._WithConverterCollectionReference$(T)).new(collectionReference, fromFirestore, toFirestore);
      }
      get [S$._originalCollectionReferenceQuery]() {
        return T$.CollectionReferenceOfMapOfString$dynamic().as(this[S$._originalQuery]);
      }
      get id() {
        return this[S$._originalCollectionReferenceQuery].id;
      }
      get parent() {
        return this[S$._originalCollectionReferenceQuery].parent;
      }
      get path() {
        return this[S$._originalCollectionReferenceQuery].path;
      }
      add(data) {
        T.as(data);
        return async.async(__t$DocumentReferenceOfT(), (function* add() {
          let t3, t2;
          let snapshot = (yield this[S$._originalCollectionReferenceQuery].add((t2 = data, t3 = null, this[S$._toFirestore](t2, t3))));
          return new (__t$_WithConverterDocumentReferenceOfT()).new(snapshot, this[S$._fromFirestore], this[S$._toFirestore]);
        }).bind(this));
      }
      doc(path = null) {
        return new (__t$_WithConverterDocumentReferenceOfT()).new(this[S$._originalCollectionReferenceQuery].doc(path), this[S$._fromFirestore], this[S$._toFirestore]);
      }
      withConverter(R, opts) {
        let fromFirestore = opts && 'fromFirestore' in opts ? opts.fromFirestore : null;
        let toFirestore = opts && 'toFirestore' in opts ? opts.toFirestore : null;
        return new (cloud_firestore._WithConverterCollectionReference$(R)).new(this[S$._originalCollectionReferenceQuery], fromFirestore, toFirestore);
      }
      _equals(other) {
        if (other == null) return false;
        return __t$_WithConverterCollectionReferenceOfT().is(other) && other[S$.$runtimeType]._equals(this[S$.$runtimeType]) && other[S$._originalCollectionReferenceQuery][S$.$_equals](this[S$._originalCollectionReferenceQuery]) && other[S$._fromFirestore][S$.$_equals](this[S$._fromFirestore]) && __t$TAndSetOptionsNToMapOfString$ObjectN().as(other[S$._toFirestore])[S$.$_equals](this[S$._toFirestore]);
      }
      get hashCode() {
        return core.Object.hash(this[S$.$runtimeType], this[S$._originalCollectionReferenceQuery], this[S$._fromFirestore], this[S$._toFirestore]);
      }
      toString() {
        return "CollectionReference<" + dart.str(dart.wrapType(T)) + ">(" + this.path + ")";
      }
    }
    (_WithConverterCollectionReference.new = function(collectionReference, fromFirestore, toFirestore) {
      _WithConverterCollectionReference.__proto__.new.call(this, collectionReference, fromFirestore, toFirestore);
      ;
    }).prototype = _WithConverterCollectionReference.prototype;
    dart.addTypeTests(_WithConverterCollectionReference);
    _WithConverterCollectionReference.prototype[_is__WithConverterCollectionReference_default] = true;
    dart.addTypeCaches(_WithConverterCollectionReference);
    _WithConverterCollectionReference[dart.implements] = () => [cloud_firestore.CollectionReference$(T)];
    dart.setMethodSignature(_WithConverterCollectionReference, () => ({
      __proto__: dart.getMethods(_WithConverterCollectionReference.__proto__),
      add: dart.fnType(async.Future$(cloud_firestore.DocumentReference$(T)), [dart.nullable(core.Object)]),
      doc: dart.fnType(cloud_firestore.DocumentReference$(T), [], [dart.nullable(core.String)]),
      withConverter: dart.gFnType(R => [cloud_firestore.CollectionReference$(R), [], {}, {fromFirestore: dart.fnType(R, [cloud_firestore.DocumentSnapshot$(core.Map$(core.String, dart.dynamic)), dart.nullable(cloud_firestore.SnapshotOptions)]), toFirestore: dart.fnType(core.Map$(core.String, dart.nullable(core.Object)), [R, dart.nullable(set_options.SetOptions)])}], R => [dart.nullable(core.Object)])
    }));
    dart.setGetterSignature(_WithConverterCollectionReference, () => ({
      __proto__: dart.getGetters(_WithConverterCollectionReference.__proto__),
      [S$._originalCollectionReferenceQuery]: cloud_firestore.CollectionReference$(core.Map$(core.String, dart.dynamic)),
      id: core.String,
      parent: dart.nullable(cloud_firestore.DocumentReference$(core.Map$(core.String, dart.dynamic))),
      path: core.String
    }));
    dart.setLibraryUri(_WithConverterCollectionReference, I[1]);
    dart.defineExtensionMethods(_WithConverterCollectionReference, ['_equals', 'toString']);
    dart.defineExtensionAccessors(_WithConverterCollectionReference, ['hashCode']);
    return _WithConverterCollectionReference;
  });
  cloud_firestore._WithConverterCollectionReference = cloud_firestore._WithConverterCollectionReference$();
  dart.addTypeTests(cloud_firestore._WithConverterCollectionReference, _is__WithConverterCollectionReference_default);
  const _is_DocumentChange_default = Symbol('_is_DocumentChange_default');
  cloud_firestore.DocumentChange$ = dart.generic(T => {
    class DocumentChange extends core.Object {}
    (DocumentChange.new = function() {
      ;
    }).prototype = DocumentChange.prototype;
    dart.addTypeTests(DocumentChange);
    DocumentChange.prototype[_is_DocumentChange_default] = true;
    dart.addTypeCaches(DocumentChange);
    dart.setLibraryUri(DocumentChange, I[1]);
    return DocumentChange;
  });
  cloud_firestore.DocumentChange = cloud_firestore.DocumentChange$();
  dart.addTypeTests(cloud_firestore.DocumentChange, _is_DocumentChange_default);
  cloud_firestore._JsonDocumentChange = class _JsonDocumentChange extends core.Object {
    static ['_#new#tearOff'](_firestore, _delegate) {
      return new cloud_firestore._JsonDocumentChange.new(_firestore, _delegate);
    }
    get type() {
      return this[S$._delegate].type;
    }
    get oldIndex() {
      return this[S$._delegate].oldIndex;
    }
    get newIndex() {
      return this[S$._delegate].newIndex;
    }
    get doc() {
      return new cloud_firestore._JsonDocumentSnapshot.new(this[S$._firestore], this[S$._delegate].document);
    }
  };
  (cloud_firestore._JsonDocumentChange.new = function(_firestore, _delegate) {
    this[S$._firestore] = _firestore;
    this[S$._delegate] = _delegate;
    platform_interface_document_change.DocumentChangePlatform.verifyExtends(this[S$._delegate]);
  }).prototype = cloud_firestore._JsonDocumentChange.prototype;
  dart.addTypeTests(cloud_firestore._JsonDocumentChange);
  dart.addTypeCaches(cloud_firestore._JsonDocumentChange);
  cloud_firestore._JsonDocumentChange[dart.implements] = () => [cloud_firestore.DocumentChange$(core.Map$(core.String, dart.dynamic))];
  dart.setGetterSignature(cloud_firestore._JsonDocumentChange, () => ({
    __proto__: dart.getGetters(cloud_firestore._JsonDocumentChange.__proto__),
    type: platform_interface_document_change.DocumentChangeType,
    oldIndex: core.int,
    newIndex: core.int,
    doc: cloud_firestore.DocumentSnapshot$(core.Map$(core.String, dart.dynamic))
  }));
  dart.setLibraryUri(cloud_firestore._JsonDocumentChange, I[1]);
  dart.setFieldSignature(cloud_firestore._JsonDocumentChange, () => ({
    __proto__: dart.getFields(cloud_firestore._JsonDocumentChange.__proto__),
    [S$._delegate]: dart.finalFieldType(platform_interface_document_change.DocumentChangePlatform),
    [S$._firestore]: dart.finalFieldType(cloud_firestore.FirebaseFirestore)
  }));
  const _is__WithConverterDocumentChange_default = Symbol('_is__WithConverterDocumentChange_default');
  cloud_firestore._WithConverterDocumentChange$ = dart.generic(T => {
    var __t$_WithConverterDocumentSnapshotOfT = () => (__t$_WithConverterDocumentSnapshotOfT = dart.constFn(cloud_firestore._WithConverterDocumentSnapshot$(T)))();
    class _WithConverterDocumentChange extends core.Object {
      static ['_#new#tearOff'](T, _originalDocumentChange, _fromFirestore, _toFirestore) {
        return new (cloud_firestore._WithConverterDocumentChange$(T)).new(_originalDocumentChange, _fromFirestore, _toFirestore);
      }
      get type() {
        return this[S$._originalDocumentChange].type;
      }
      get oldIndex() {
        return this[S$._originalDocumentChange].oldIndex;
      }
      get newIndex() {
        return this[S$._originalDocumentChange].newIndex;
      }
      get doc() {
        return new (__t$_WithConverterDocumentSnapshotOfT()).new(this[S$._originalDocumentChange].doc, this[S$._fromFirestore], this[S$._toFirestore]);
      }
    }
    (_WithConverterDocumentChange.new = function(_originalDocumentChange, _fromFirestore, _toFirestore) {
      this[S$._originalDocumentChange] = _originalDocumentChange;
      this[S$._fromFirestore] = _fromFirestore;
      this[S$._toFirestore] = _toFirestore;
      ;
    }).prototype = _WithConverterDocumentChange.prototype;
    dart.addTypeTests(_WithConverterDocumentChange);
    _WithConverterDocumentChange.prototype[_is__WithConverterDocumentChange_default] = true;
    dart.addTypeCaches(_WithConverterDocumentChange);
    _WithConverterDocumentChange[dart.implements] = () => [cloud_firestore.DocumentChange$(T)];
    dart.setGetterSignature(_WithConverterDocumentChange, () => ({
      __proto__: dart.getGetters(_WithConverterDocumentChange.__proto__),
      type: platform_interface_document_change.DocumentChangeType,
      oldIndex: core.int,
      newIndex: core.int,
      doc: cloud_firestore.DocumentSnapshot$(T)
    }));
    dart.setLibraryUri(_WithConverterDocumentChange, I[1]);
    dart.setFieldSignature(_WithConverterDocumentChange, () => ({
      __proto__: dart.getFields(_WithConverterDocumentChange.__proto__),
      [S$._originalDocumentChange]: dart.finalFieldType(cloud_firestore.DocumentChange$(core.Map$(core.String, dart.dynamic))),
      [S$._fromFirestore]: dart.finalFieldType(dart.fnType(T, [cloud_firestore.DocumentSnapshot$(core.Map$(core.String, dart.dynamic)), dart.nullable(cloud_firestore.SnapshotOptions)])),
      [S$._toFirestore]: dart.finalFieldType(dart.fnType(core.Map$(core.String, dart.nullable(core.Object)), [T, dart.nullable(set_options.SetOptions)]))
    }));
    return _WithConverterDocumentChange;
  });
  cloud_firestore._WithConverterDocumentChange = cloud_firestore._WithConverterDocumentChange$();
  dart.addTypeTests(cloud_firestore._WithConverterDocumentChange, _is__WithConverterDocumentChange_default);
  const _is_DocumentReference_default = Symbol('_is_DocumentReference_default');
  cloud_firestore.DocumentReference$ = dart.generic(T => {
    class DocumentReference extends core.Object {}
    (DocumentReference.new = function() {
      ;
    }).prototype = DocumentReference.prototype;
    dart.addTypeTests(DocumentReference);
    DocumentReference.prototype[_is_DocumentReference_default] = true;
    dart.addTypeCaches(DocumentReference);
    dart.setLibraryUri(DocumentReference, I[1]);
    return DocumentReference;
  });
  cloud_firestore.DocumentReference = cloud_firestore.DocumentReference$();
  dart.addTypeTests(cloud_firestore.DocumentReference, _is_DocumentReference_default);
  cloud_firestore._JsonDocumentReference = class _JsonDocumentReference extends core.Object {
    static ['_#new#tearOff'](firestore, _delegate) {
      return new cloud_firestore._JsonDocumentReference.new(firestore, _delegate);
    }
    get id() {
      return this[S$._delegate].id;
    }
    get parent() {
      return new cloud_firestore._JsonCollectionReference.new(this.firestore, this[S$._delegate].parent);
    }
    get path() {
      return this[S$._delegate].path;
    }
    collection(collectionPath) {
      if (!collectionPath[S$.$isNotEmpty]) dart.assertFailed("a collectionPath path must be a non-empty string", I[4], 119, 7, "collectionPath.isNotEmpty");
      if (!!collectionPath[S$.$contains]("//")) dart.assertFailed("a collection path must not contain \"//\"", I[4], 123, 7, "!collectionPath.contains('//')");
      if (!cloud_firestore_platform_interface.isValidCollectionPath(collectionPath)) dart.assertFailed("a collection path must point to a valid collection.", I[4], 127, 7, "isValidCollectionPath(collectionPath)");
      return new cloud_firestore._JsonCollectionReference.new(this.firestore, this[S$._delegate].collection(collectionPath));
    }
    delete() {
      return this[S$._delegate].delete();
    }
    get(options = null) {
      return async.async(T$.DocumentSnapshotOfMapOfString$dynamic(), (function* get() {
        let t2;
        return new cloud_firestore._JsonDocumentSnapshot.new(this.firestore, yield this[S$._delegate].get((t2 = options, t2 == null ? C[21] || CT.C21 : t2)));
      }).bind(this));
    }
    snapshots(opts) {
      let includeMetadataChanges = opts && 'includeMetadataChanges' in opts ? opts.includeMetadataChanges : false;
      return this[S$._delegate].snapshots({includeMetadataChanges: includeMetadataChanges}).map(T$.DocumentSnapshotOfMapOfString$dynamic(), dart.fn(delegateSnapshot => new cloud_firestore._JsonDocumentSnapshot.new(this.firestore, delegateSnapshot), T$.DocumentSnapshotPlatformTo_JsonDocumentSnapshot()));
    }
    set(data, options = null) {
      T$.MapOfString$dynamic().as(data);
      return this[S$._delegate].set(dart.nullCheck(cloud_firestore._CodecUtility.replaceValueWithDelegatesInMap(data)), options);
    }
    update(data) {
      return this[S$._delegate].update(dart.nullCheck(cloud_firestore._CodecUtility.replaceValueWithDelegatesInMap(data)));
    }
    withConverter(T, opts) {
      let fromFirestore = opts && 'fromFirestore' in opts ? opts.fromFirestore : null;
      let toFirestore = opts && 'toFirestore' in opts ? opts.toFirestore : null;
      return new (cloud_firestore._WithConverterDocumentReference$(T)).new(this, fromFirestore, toFirestore);
    }
    _equals(other) {
      if (other == null) return false;
      return T$.DocumentReferenceOfObjectN().is(other) && other.firestore._equals(this.firestore) && other.path === this.path;
    }
    get hashCode() {
      return core.Object.hash(this.firestore, this.path);
    }
    toString() {
      return "DocumentReference<Map<String, dynamic>>(" + this.path + ")";
    }
  };
  (cloud_firestore._JsonDocumentReference.new = function(firestore, _delegate) {
    this.firestore = firestore;
    this[S$._delegate] = _delegate;
    platform_interface_document_reference.DocumentReferencePlatform.verifyExtends(this[S$._delegate]);
  }).prototype = cloud_firestore._JsonDocumentReference.prototype;
  dart.addTypeTests(cloud_firestore._JsonDocumentReference);
  dart.addTypeCaches(cloud_firestore._JsonDocumentReference);
  cloud_firestore._JsonDocumentReference[dart.implements] = () => [cloud_firestore.DocumentReference$(core.Map$(core.String, dart.dynamic))];
  dart.setMethodSignature(cloud_firestore._JsonDocumentReference, () => ({
    __proto__: dart.getMethods(cloud_firestore._JsonDocumentReference.__proto__),
    collection: dart.fnType(cloud_firestore.CollectionReference$(core.Map$(core.String, dart.dynamic)), [core.String]),
    delete: dart.fnType(async.Future$(dart.void), []),
    get: dart.fnType(async.Future$(cloud_firestore.DocumentSnapshot$(core.Map$(core.String, dart.dynamic))), [], [dart.nullable(get_options.GetOptions)]),
    snapshots: dart.fnType(async.Stream$(cloud_firestore.DocumentSnapshot$(core.Map$(core.String, dart.dynamic))), [], {includeMetadataChanges: core.bool}, {}),
    set: dart.fnType(async.Future$(dart.void), [dart.nullable(core.Object)], [dart.nullable(set_options.SetOptions)]),
    update: dart.fnType(async.Future$(dart.void), [core.Map$(core.String, dart.nullable(core.Object))]),
    withConverter: dart.gFnType(T => [cloud_firestore.DocumentReference$(T), [], {}, {fromFirestore: dart.fnType(T, [cloud_firestore.DocumentSnapshot$(core.Map$(core.String, dart.dynamic)), dart.nullable(cloud_firestore.SnapshotOptions)]), toFirestore: dart.fnType(core.Map$(core.String, dart.nullable(core.Object)), [T, dart.nullable(set_options.SetOptions)])}], T => [dart.nullable(core.Object)])
  }));
  dart.setGetterSignature(cloud_firestore._JsonDocumentReference, () => ({
    __proto__: dart.getGetters(cloud_firestore._JsonDocumentReference.__proto__),
    id: core.String,
    parent: cloud_firestore.CollectionReference$(core.Map$(core.String, dart.dynamic)),
    path: core.String
  }));
  dart.setLibraryUri(cloud_firestore._JsonDocumentReference, I[1]);
  dart.setFieldSignature(cloud_firestore._JsonDocumentReference, () => ({
    __proto__: dart.getFields(cloud_firestore._JsonDocumentReference.__proto__),
    [S$._delegate]: dart.finalFieldType(platform_interface_document_reference.DocumentReferencePlatform),
    firestore: dart.finalFieldType(cloud_firestore.FirebaseFirestore)
  }));
  dart.defineExtensionMethods(cloud_firestore._JsonDocumentReference, ['_equals', 'toString']);
  dart.defineExtensionAccessors(cloud_firestore._JsonDocumentReference, ['hashCode']);
  const _is__WithConverterDocumentReference_default = Symbol('_is__WithConverterDocumentReference_default');
  cloud_firestore._WithConverterDocumentReference$ = dart.generic(T => {
    var __t$_WithConverterDocumentSnapshotOfT = () => (__t$_WithConverterDocumentSnapshotOfT = dart.constFn(cloud_firestore._WithConverterDocumentSnapshot$(T)))();
    var __t$DocumentSnapshotOfMapOfString$dynamicTo_WithConverterDocumentSnapshotOfT = () => (__t$DocumentSnapshotOfMapOfString$dynamicTo_WithConverterDocumentSnapshotOfT = dart.constFn(dart.fnType(__t$_WithConverterDocumentSnapshotOfT(), [T$.DocumentSnapshotOfMapOfString$dynamic()])))();
    var __t$_WithConverterCollectionReferenceOfT = () => (__t$_WithConverterCollectionReferenceOfT = dart.constFn(cloud_firestore._WithConverterCollectionReference$(T)))();
    var __t$_WithConverterDocumentReferenceOfT = () => (__t$_WithConverterDocumentReferenceOfT = dart.constFn(cloud_firestore._WithConverterDocumentReference$(T)))();
    var __t$TAndSetOptionsNToMapOfString$ObjectN = () => (__t$TAndSetOptionsNToMapOfString$ObjectN = dart.constFn(dart.fnType(T$.MapOfString$ObjectN(), [T, T$.SetOptionsN()])))();
    class _WithConverterDocumentReference extends core.Object {
      static ['_#new#tearOff'](T, _originalDocumentReference, _fromFirestore, _toFirestore) {
        return new (cloud_firestore._WithConverterDocumentReference$(T)).new(_originalDocumentReference, _fromFirestore, _toFirestore);
      }
      collection(collectionPath) {
        return this[S$._originalDocumentReference].collection(collectionPath);
      }
      delete() {
        return this[S$._originalDocumentReference].delete();
      }
      get(options = null) {
        return this[S$._originalDocumentReference].get(options).then(__t$_WithConverterDocumentSnapshotOfT(), dart.fn(snapshot => new (__t$_WithConverterDocumentSnapshotOfT()).new(snapshot, this[S$._fromFirestore], this[S$._toFirestore]), __t$DocumentSnapshotOfMapOfString$dynamicTo_WithConverterDocumentSnapshotOfT()));
      }
      get [S$._delegate]() {
        return this[S$._originalDocumentReference][S$._delegate];
      }
      get firestore() {
        return this[S$._originalDocumentReference].firestore;
      }
      get id() {
        return this[S$._originalDocumentReference].id;
      }
      get parent() {
        return new (__t$_WithConverterCollectionReferenceOfT()).new(this[S$._originalDocumentReference].parent, this[S$._fromFirestore], this[S$._toFirestore]);
      }
      get path() {
        return this[S$._originalDocumentReference].path;
      }
      set(data, options = null) {
        let t3, t2;
        T.as(data);
        return this[S$._originalDocumentReference].set((t2 = data, t3 = options, this[S$._toFirestore](t2, t3)), options);
      }
      snapshots(opts) {
        let includeMetadataChanges = opts && 'includeMetadataChanges' in opts ? opts.includeMetadataChanges : false;
        return this[S$._originalDocumentReference].snapshots({includeMetadataChanges: includeMetadataChanges}).map(__t$_WithConverterDocumentSnapshotOfT(), dart.fn(snapshot => new (__t$_WithConverterDocumentSnapshotOfT()).new(snapshot, this[S$._fromFirestore], this[S$._toFirestore]), __t$DocumentSnapshotOfMapOfString$dynamicTo_WithConverterDocumentSnapshotOfT()));
      }
      update(data) {
        return this[S$._originalDocumentReference].update(data);
      }
      withConverter(R, opts) {
        let fromFirestore = opts && 'fromFirestore' in opts ? opts.fromFirestore : null;
        let toFirestore = opts && 'toFirestore' in opts ? opts.toFirestore : null;
        return new (cloud_firestore._WithConverterDocumentReference$(R)).new(this[S$._originalDocumentReference], fromFirestore, toFirestore);
      }
      _equals(other) {
        if (other == null) return false;
        return __t$_WithConverterDocumentReferenceOfT().is(other) && other[S$.$runtimeType]._equals(this[S$.$runtimeType]) && other[S$._originalDocumentReference][S$.$_equals](this[S$._originalDocumentReference]) && other[S$._fromFirestore][S$.$_equals](this[S$._fromFirestore]) && __t$TAndSetOptionsNToMapOfString$ObjectN().as(other[S$._toFirestore])[S$.$_equals](this[S$._toFirestore]);
      }
      get hashCode() {
        return core.Object.hash(this[S$.$runtimeType], this[S$._originalDocumentReference], this[S$._fromFirestore], this[S$._toFirestore]);
      }
      toString() {
        return "DocumentReference<" + dart.str(dart.wrapType(T)) + ">(" + this.path + ")";
      }
    }
    (_WithConverterDocumentReference.new = function(_originalDocumentReference, _fromFirestore, _toFirestore) {
      this[S$._originalDocumentReference] = _originalDocumentReference;
      this[S$._fromFirestore] = _fromFirestore;
      this[S$._toFirestore] = _toFirestore;
      ;
    }).prototype = _WithConverterDocumentReference.prototype;
    dart.addTypeTests(_WithConverterDocumentReference);
    _WithConverterDocumentReference.prototype[_is__WithConverterDocumentReference_default] = true;
    dart.addTypeCaches(_WithConverterDocumentReference);
    _WithConverterDocumentReference[dart.implements] = () => [cloud_firestore.DocumentReference$(T)];
    dart.setMethodSignature(_WithConverterDocumentReference, () => ({
      __proto__: dart.getMethods(_WithConverterDocumentReference.__proto__),
      collection: dart.fnType(cloud_firestore.CollectionReference$(core.Map$(core.String, dart.dynamic)), [core.String]),
      delete: dart.fnType(async.Future$(dart.void), []),
      get: dart.fnType(async.Future$(cloud_firestore._WithConverterDocumentSnapshot$(T)), [], [dart.nullable(get_options.GetOptions)]),
      set: dart.fnType(async.Future$(dart.void), [dart.nullable(core.Object)], [dart.nullable(set_options.SetOptions)]),
      snapshots: dart.fnType(async.Stream$(cloud_firestore._WithConverterDocumentSnapshot$(T)), [], {includeMetadataChanges: core.bool}, {}),
      update: dart.fnType(async.Future$(dart.void), [core.Map$(core.String, dart.nullable(core.Object))]),
      withConverter: dart.gFnType(R => [cloud_firestore.DocumentReference$(R), [], {}, {fromFirestore: dart.fnType(R, [cloud_firestore.DocumentSnapshot$(core.Map$(core.String, dart.dynamic)), dart.nullable(cloud_firestore.SnapshotOptions)]), toFirestore: dart.fnType(core.Map$(core.String, dart.nullable(core.Object)), [R, dart.nullable(set_options.SetOptions)])}], R => [dart.nullable(core.Object)])
    }));
    dart.setGetterSignature(_WithConverterDocumentReference, () => ({
      __proto__: dart.getGetters(_WithConverterDocumentReference.__proto__),
      [S$._delegate]: platform_interface_document_reference.DocumentReferencePlatform,
      firestore: cloud_firestore.FirebaseFirestore,
      id: core.String,
      parent: cloud_firestore.CollectionReference$(T),
      path: core.String
    }));
    dart.setLibraryUri(_WithConverterDocumentReference, I[1]);
    dart.setFieldSignature(_WithConverterDocumentReference, () => ({
      __proto__: dart.getFields(_WithConverterDocumentReference.__proto__),
      [S$._originalDocumentReference]: dart.finalFieldType(cloud_firestore.DocumentReference$(core.Map$(core.String, dart.dynamic))),
      [S$._fromFirestore]: dart.finalFieldType(dart.fnType(T, [cloud_firestore.DocumentSnapshot$(core.Map$(core.String, dart.dynamic)), dart.nullable(cloud_firestore.SnapshotOptions)])),
      [S$._toFirestore]: dart.finalFieldType(dart.fnType(core.Map$(core.String, dart.nullable(core.Object)), [T, dart.nullable(set_options.SetOptions)]))
    }));
    dart.defineExtensionMethods(_WithConverterDocumentReference, ['_equals', 'toString']);
    dart.defineExtensionAccessors(_WithConverterDocumentReference, ['hashCode']);
    return _WithConverterDocumentReference;
  });
  cloud_firestore._WithConverterDocumentReference = cloud_firestore._WithConverterDocumentReference$();
  dart.addTypeTests(cloud_firestore._WithConverterDocumentReference, _is__WithConverterDocumentReference_default);
  cloud_firestore.SnapshotOptions = class SnapshotOptions extends core.Object {
    static ['_#new#tearOff']() {
      return new cloud_firestore.SnapshotOptions.new();
    }
  };
  (cloud_firestore.SnapshotOptions.new = function() {
    ;
  }).prototype = cloud_firestore.SnapshotOptions.prototype;
  dart.addTypeTests(cloud_firestore.SnapshotOptions);
  dart.addTypeCaches(cloud_firestore.SnapshotOptions);
  dart.setLibraryUri(cloud_firestore.SnapshotOptions, I[1]);
  const _is_DocumentSnapshot_default = Symbol('_is_DocumentSnapshot_default');
  cloud_firestore.DocumentSnapshot$ = dart.generic(T => {
    class DocumentSnapshot extends core.Object {}
    (DocumentSnapshot.new = function() {
      ;
    }).prototype = DocumentSnapshot.prototype;
    dart.addTypeTests(DocumentSnapshot);
    DocumentSnapshot.prototype[_is_DocumentSnapshot_default] = true;
    dart.addTypeCaches(DocumentSnapshot);
    dart.setLibraryUri(DocumentSnapshot, I[1]);
    return DocumentSnapshot;
  });
  cloud_firestore.DocumentSnapshot = cloud_firestore.DocumentSnapshot$();
  dart.addTypeTests(cloud_firestore.DocumentSnapshot, _is_DocumentSnapshot_default);
  cloud_firestore._JsonDocumentSnapshot = class _JsonDocumentSnapshot extends core.Object {
    static ['_#new#tearOff'](_firestore, _delegate) {
      return new cloud_firestore._JsonDocumentSnapshot.new(_firestore, _delegate);
    }
    get id() {
      return this[S$._delegate].id;
    }
    get reference() {
      let t3, t2;
      t2 = this[S$.___JsonDocumentSnapshot_reference];
      return t2 == null ? (t3 = this[S$._firestore].doc(this[S$._delegate].reference.path), this[S$.___JsonDocumentSnapshot_reference] == null ? this[S$.___JsonDocumentSnapshot_reference] = t3 : dart.throw(new _internal.LateError.fieldADI("reference"))) : t2;
    }
    get metadata() {
      let t3, t2;
      t2 = this[S$.___JsonDocumentSnapshot_metadata];
      return t2 == null ? (t3 = new cloud_firestore.SnapshotMetadata.__(this[S$._delegate].metadata), this[S$.___JsonDocumentSnapshot_metadata] == null ? this[S$.___JsonDocumentSnapshot_metadata] = t3 : dart.throw(new _internal.LateError.fieldADI("metadata"))) : t2;
    }
    get exists() {
      return this[S$._delegate].exists;
    }
    data() {
      return cloud_firestore._CodecUtility.replaceDelegatesWithValueInMap(this[S$._delegate].data(), this[S$._firestore]);
    }
    get(field) {
      return cloud_firestore._CodecUtility.valueDecode(this[S$._delegate].get(field), this[S$._firestore]);
    }
    _get(field) {
      return this.get(field);
    }
  };
  (cloud_firestore._JsonDocumentSnapshot.new = function(_firestore, _delegate) {
    this[S$.___JsonDocumentSnapshot_reference] = null;
    this[S$.___JsonDocumentSnapshot_metadata] = null;
    this[S$._firestore] = _firestore;
    this[S$._delegate] = _delegate;
    platform_interface_document_snapshot.DocumentSnapshotPlatform.verifyExtends(this[S$._delegate]);
  }).prototype = cloud_firestore._JsonDocumentSnapshot.prototype;
  dart.addTypeTests(cloud_firestore._JsonDocumentSnapshot);
  dart.addTypeCaches(cloud_firestore._JsonDocumentSnapshot);
  cloud_firestore._JsonDocumentSnapshot[dart.implements] = () => [cloud_firestore.DocumentSnapshot$(core.Map$(core.String, dart.dynamic))];
  dart.setMethodSignature(cloud_firestore._JsonDocumentSnapshot, () => ({
    __proto__: dart.getMethods(cloud_firestore._JsonDocumentSnapshot.__proto__),
    data: dart.fnType(dart.nullable(core.Map$(core.String, dart.dynamic)), []),
    get: dart.fnType(dart.dynamic, [core.Object]),
    _get: dart.fnType(dart.dynamic, [core.Object])
  }));
  dart.setGetterSignature(cloud_firestore._JsonDocumentSnapshot, () => ({
    __proto__: dart.getGetters(cloud_firestore._JsonDocumentSnapshot.__proto__),
    id: core.String,
    reference: cloud_firestore.DocumentReference$(core.Map$(core.String, dart.dynamic)),
    metadata: cloud_firestore.SnapshotMetadata,
    exists: core.bool
  }));
  dart.setLibraryUri(cloud_firestore._JsonDocumentSnapshot, I[1]);
  dart.setFieldSignature(cloud_firestore._JsonDocumentSnapshot, () => ({
    __proto__: dart.getFields(cloud_firestore._JsonDocumentSnapshot.__proto__),
    [S$._firestore]: dart.finalFieldType(cloud_firestore.FirebaseFirestore),
    [S$._delegate]: dart.finalFieldType(platform_interface_document_snapshot.DocumentSnapshotPlatform),
    [S$.___JsonDocumentSnapshot_reference]: dart.fieldType(dart.nullable(cloud_firestore.DocumentReference$(core.Map$(core.String, dart.dynamic)))),
    [S$.___JsonDocumentSnapshot_metadata]: dart.fieldType(dart.nullable(cloud_firestore.SnapshotMetadata))
  }));
  const _is__WithConverterDocumentSnapshot_default = Symbol('_is__WithConverterDocumentSnapshot_default');
  cloud_firestore._WithConverterDocumentSnapshot$ = dart.generic(T => {
    var __t$_WithConverterDocumentReferenceOfT = () => (__t$_WithConverterDocumentReferenceOfT = dart.constFn(cloud_firestore._WithConverterDocumentReference$(T)))();
    class _WithConverterDocumentSnapshot extends core.Object {
      static ['_#new#tearOff'](T, _originalDocumentSnapshot, _fromFirestore, _toFirestore) {
        return new (cloud_firestore._WithConverterDocumentSnapshot$(T)).new(_originalDocumentSnapshot, _fromFirestore, _toFirestore);
      }
      data() {
        let t3, t2;
        if (!this[S$._originalDocumentSnapshot].exists) return null;
        t2 = this[S$._originalDocumentSnapshot];
        t3 = null;
        return this[S$._fromFirestore](t2, t3);
      }
      get exists() {
        return this[S$._originalDocumentSnapshot].exists;
      }
      get id() {
        return this[S$._originalDocumentSnapshot].id;
      }
      get metadata() {
        return this[S$._originalDocumentSnapshot].metadata;
      }
      get reference() {
        return new (__t$_WithConverterDocumentReferenceOfT()).new(this[S$._originalDocumentSnapshot].reference, this[S$._fromFirestore], this[S$._toFirestore]);
      }
      get(field) {
        return this[S$._originalDocumentSnapshot].get(field);
      }
      _get(field) {
        return this[S$._originalDocumentSnapshot]._get(field);
      }
    }
    (_WithConverterDocumentSnapshot.new = function(_originalDocumentSnapshot, _fromFirestore, _toFirestore) {
      this[S$._originalDocumentSnapshot] = _originalDocumentSnapshot;
      this[S$._fromFirestore] = _fromFirestore;
      this[S$._toFirestore] = _toFirestore;
      ;
    }).prototype = _WithConverterDocumentSnapshot.prototype;
    dart.addTypeTests(_WithConverterDocumentSnapshot);
    _WithConverterDocumentSnapshot.prototype[_is__WithConverterDocumentSnapshot_default] = true;
    dart.addTypeCaches(_WithConverterDocumentSnapshot);
    _WithConverterDocumentSnapshot[dart.implements] = () => [cloud_firestore.DocumentSnapshot$(T)];
    dart.setMethodSignature(_WithConverterDocumentSnapshot, () => ({
      __proto__: dart.getMethods(_WithConverterDocumentSnapshot.__proto__),
      data: dart.fnType(dart.nullable(T), []),
      get: dart.fnType(dart.dynamic, [core.Object]),
      _get: dart.fnType(dart.dynamic, [core.Object])
    }));
    dart.setGetterSignature(_WithConverterDocumentSnapshot, () => ({
      __proto__: dart.getGetters(_WithConverterDocumentSnapshot.__proto__),
      exists: core.bool,
      id: core.String,
      metadata: cloud_firestore.SnapshotMetadata,
      reference: cloud_firestore.DocumentReference$(T)
    }));
    dart.setLibraryUri(_WithConverterDocumentSnapshot, I[1]);
    dart.setFieldSignature(_WithConverterDocumentSnapshot, () => ({
      __proto__: dart.getFields(_WithConverterDocumentSnapshot.__proto__),
      [S$._originalDocumentSnapshot]: dart.finalFieldType(cloud_firestore.DocumentSnapshot$(core.Map$(core.String, dart.dynamic))),
      [S$._fromFirestore]: dart.finalFieldType(dart.fnType(T, [cloud_firestore.DocumentSnapshot$(core.Map$(core.String, dart.dynamic)), dart.nullable(cloud_firestore.SnapshotOptions)])),
      [S$._toFirestore]: dart.finalFieldType(dart.fnType(core.Map$(core.String, dart.nullable(core.Object)), [T, dart.nullable(set_options.SetOptions)]))
    }));
    return _WithConverterDocumentSnapshot;
  });
  cloud_firestore._WithConverterDocumentSnapshot = cloud_firestore._WithConverterDocumentSnapshot$();
  dart.addTypeTests(cloud_firestore._WithConverterDocumentSnapshot, _is__WithConverterDocumentSnapshot_default);
  platform_interface_field_value.FieldValuePlatform = class FieldValuePlatform extends core.Object {
    static ['_#new#tearOff'](_delegate) {
      return new platform_interface_field_value.FieldValuePlatform.new(_delegate);
    }
    static getDelegate(fieldValue) {
      return fieldValue[S$._delegate$2];
    }
  };
  (platform_interface_field_value.FieldValuePlatform.new = function(_delegate) {
    this[S$._delegate$2] = _delegate;
    ;
  }).prototype = platform_interface_field_value.FieldValuePlatform.prototype;
  dart.addTypeTests(platform_interface_field_value.FieldValuePlatform);
  dart.addTypeCaches(platform_interface_field_value.FieldValuePlatform);
  dart.setStaticMethodSignature(platform_interface_field_value.FieldValuePlatform, () => ['getDelegate']);
  dart.setLibraryUri(platform_interface_field_value.FieldValuePlatform, I[5]);
  dart.setFieldSignature(platform_interface_field_value.FieldValuePlatform, () => ({
    __proto__: dart.getFields(platform_interface_field_value.FieldValuePlatform.__proto__),
    [S$._delegate$2]: dart.finalFieldType(dart.dynamic)
  }));
  cloud_firestore.FieldValue = class FieldValue extends platform_interface_field_value.FieldValuePlatform {
    static ['_#_#tearOff'](_delegate) {
      return new cloud_firestore.FieldValue.__(_delegate);
    }
    static arrayUnion(elements) {
      return new cloud_firestore.FieldValue.__(cloud_firestore.FieldValue._factory.arrayUnion(core.List.as(cloud_firestore._CodecUtility.valueEncode(elements))));
    }
    static arrayRemove(elements) {
      return new cloud_firestore.FieldValue.__(cloud_firestore.FieldValue._factory.arrayRemove(core.List.as(cloud_firestore._CodecUtility.valueEncode(elements))));
    }
    static delete() {
      return new cloud_firestore.FieldValue.__(cloud_firestore.FieldValue._factory.delete());
    }
    static serverTimestamp() {
      return new cloud_firestore.FieldValue.__(cloud_firestore.FieldValue._factory.serverTimestamp());
    }
    static increment(value) {
      return new cloud_firestore.FieldValue.__(cloud_firestore.FieldValue._factory.increment(value));
    }
    toString() {
      return dart.str(dart.wrapType(cloud_firestore.FieldValue)) + "(" + dart.str(this[S$._delegate]) + ")";
    }
    _equals(other) {
      if (other == null) return false;
      return cloud_firestore.FieldValue.is(other) && dart.equals(other[S$._delegate], this[S$._delegate]);
    }
    get hashCode() {
      return dart.hashCode(this[S$._delegate]);
    }
  };
  (cloud_firestore.FieldValue.__ = function(_delegate) {
    this[S$._delegate] = _delegate;
    cloud_firestore.FieldValue.__proto__.new.call(this, _delegate);
    ;
  }).prototype = cloud_firestore.FieldValue.prototype;
  dart.addTypeTests(cloud_firestore.FieldValue);
  dart.addTypeCaches(cloud_firestore.FieldValue);
  dart.setStaticMethodSignature(cloud_firestore.FieldValue, () => ['arrayUnion', 'arrayRemove', 'delete', 'serverTimestamp', 'increment']);
  dart.setLibraryUri(cloud_firestore.FieldValue, I[1]);
  dart.setFieldSignature(cloud_firestore.FieldValue, () => ({
    __proto__: dart.getFields(cloud_firestore.FieldValue.__proto__),
    [S$._delegate]: dart.fieldType(dart.dynamic)
  }));
  dart.setStaticFieldSignature(cloud_firestore.FieldValue, () => ['_factory']);
  dart.defineExtensionMethods(cloud_firestore.FieldValue, ['toString', '_equals']);
  dart.defineExtensionAccessors(cloud_firestore.FieldValue, ['hashCode']);
  dart.defineLazy(cloud_firestore.FieldValue, {
    /*cloud_firestore.FieldValue._factory*/get _factory() {
      return platform_interface_field_value_factory.FieldValueFactoryPlatform.instance;
    }
  }, false);
  plugin_platform_interface.PlatformInterface = class PlatformInterface extends core.Object {
    static verify(instance, token) {
      plugin_platform_interface.PlatformInterface._verify(instance, token, {preventConstObject: true});
    }
    static verifyToken(instance, token) {
      plugin_platform_interface.PlatformInterface._verify(instance, token, {preventConstObject: false});
    }
    static _verify(instance, token, opts) {
      let preventConstObject = opts && 'preventConstObject' in opts ? opts.preventConstObject : null;
      if (plugin_platform_interface.MockPlatformInterfaceMixin.is(instance)) {
        let assertionsEnabled = false;
        if (!dart.fn(() => {
          assertionsEnabled = true;
          return true;
        }, T$.VoidTobool())()) dart.assertFailed(null, I[7], 92, 14, "() {\n        assertionsEnabled = true;\n        return true;\n      }()");
        if (!assertionsEnabled) {
          dart.throw(new core.AssertionError.new("`MockPlatformInterfaceMixin` is not intended for use in release builds."));
        }
        return;
      }
      if (preventConstObject && plugin_platform_interface.PlatformInterface._instanceTokens._get(instance) === (C[26] || CT.C26)) {
        dart.throw(new core.AssertionError.new("`const Object()` cannot be used as the token."));
      }
      if (token !== plugin_platform_interface.PlatformInterface._instanceTokens._get(instance)) {
        dart.throw(new core.AssertionError.new("Platform interfaces must not be implemented with `implements`"));
      }
    }
  };
  (plugin_platform_interface.PlatformInterface.new = function(opts) {
    let token = opts && 'token' in opts ? opts.token : null;
    plugin_platform_interface.PlatformInterface._instanceTokens._set(this, token);
  }).prototype = plugin_platform_interface.PlatformInterface.prototype;
  dart.addTypeTests(plugin_platform_interface.PlatformInterface);
  dart.addTypeCaches(plugin_platform_interface.PlatformInterface);
  dart.setStaticMethodSignature(plugin_platform_interface.PlatformInterface, () => ['verify', 'verifyToken', '_verify']);
  dart.setLibraryUri(plugin_platform_interface.PlatformInterface, I[8]);
  dart.setStaticFieldSignature(plugin_platform_interface.PlatformInterface, () => ['_instanceTokens']);
  dart.defineLazy(plugin_platform_interface.PlatformInterface, {
    /*plugin_platform_interface.PlatformInterface._instanceTokens*/get _instanceTokens() {
      return new (T$.ExpandoOfObject()).new();
    }
  }, false);
  firebase_core_platform_interface.FirebasePluginPlatform = class FirebasePluginPlatform extends plugin_platform_interface.PlatformInterface {
    static verifyExtends(instance) {
      plugin_platform_interface.PlatformInterface.verifyToken(instance, firebase_core_platform_interface.FirebasePluginPlatform._token);
    }
    get pluginConstants() {
      let appConstants = T$.MapNOfObjectN$ObjectN().as(firebase_core_platform_interface.FirebasePluginPlatform._constantsForPluginApps[S$.$_get](this[S$._appName]));
      if (appConstants != null && appConstants[S$.$_get](this[S$._methodChannelName]) != null) {
        return core.Map.as(dart.nullCheck(appConstants[S$.$_get](this[S$._methodChannelName])));
      }
      return new _js_helper.LinkedMap.new();
    }
  };
  (firebase_core_platform_interface.FirebasePluginPlatform.new = function(_appName, _methodChannelName) {
    this[S$._appName] = _appName;
    this[S$._methodChannelName] = _methodChannelName;
    firebase_core_platform_interface.FirebasePluginPlatform.__proto__.new.call(this, {token: firebase_core_platform_interface.FirebasePluginPlatform._token});
    ;
  }).prototype = firebase_core_platform_interface.FirebasePluginPlatform.prototype;
  dart.addTypeTests(firebase_core_platform_interface.FirebasePluginPlatform);
  dart.addTypeCaches(firebase_core_platform_interface.FirebasePluginPlatform);
  dart.setStaticMethodSignature(firebase_core_platform_interface.FirebasePluginPlatform, () => ['verifyExtends']);
  dart.setGetterSignature(firebase_core_platform_interface.FirebasePluginPlatform, () => ({
    __proto__: dart.getGetters(firebase_core_platform_interface.FirebasePluginPlatform.__proto__),
    pluginConstants: core.Map
  }));
  dart.setLibraryUri(firebase_core_platform_interface.FirebasePluginPlatform, I[9]);
  dart.setFieldSignature(firebase_core_platform_interface.FirebasePluginPlatform, () => ({
    __proto__: dart.getFields(firebase_core_platform_interface.FirebasePluginPlatform.__proto__),
    [S$._appName]: dart.finalFieldType(core.String),
    [S$._methodChannelName]: dart.finalFieldType(core.String)
  }));
  dart.setStaticFieldSignature(firebase_core_platform_interface.FirebasePluginPlatform, () => ['_constantsForPluginApps', '_token']);
  dart.defineLazy(firebase_core_platform_interface.FirebasePluginPlatform, {
    /*firebase_core_platform_interface.FirebasePluginPlatform._constantsForPluginApps*/get _constantsForPluginApps() {
      return new _js_helper.LinkedMap.new();
    },
    set _constantsForPluginApps(value) {},
    /*firebase_core_platform_interface.FirebasePluginPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  cloud_firestore.FirebaseFirestore = class FirebaseFirestore extends firebase_core_platform_interface.FirebasePluginPlatform {
    get app() {
      return this[S$.app];
    }
    set app(value) {
      this[S$.app] = value;
    }
    static ['_#_#tearOff'](opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      return new cloud_firestore.FirebaseFirestore.__({app: app});
    }
    static get instance() {
      return cloud_firestore.FirebaseFirestore.instanceFor({app: firebase_core.Firebase.app()});
    }
    static instanceFor(opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      if (cloud_firestore.FirebaseFirestore._cachedInstances[S$.$containsKey](app.name)) {
        return dart.nullCheck(cloud_firestore.FirebaseFirestore._cachedInstances[S$.$_get](app.name));
      }
      let newInstance = new cloud_firestore.FirebaseFirestore.__({app: app});
      cloud_firestore.FirebaseFirestore._cachedInstances[S$.$_set](app.name, newInstance);
      return newInstance;
    }
    get [S$._delegate]() {
      let t2;
      t2 = this[S$._delegatePackingProperty];
      return t2 == null ? this[S$._delegatePackingProperty] = platform_interface_firestore.FirebaseFirestorePlatform.instanceFor({app: this.app}) : t2;
    }
    collection(collectionPath) {
      if (!collectionPath[S$.$isNotEmpty]) dart.assertFailed("a collectionPath path must be a non-empty string", I[6], 59, 7, "collectionPath.isNotEmpty");
      if (!!collectionPath[S$.$contains]("//")) dart.assertFailed("a collection path must not contain \"//\"", I[6], 63, 7, "!collectionPath.contains('//')");
      if (!cloud_firestore_platform_interface.isValidCollectionPath(collectionPath)) dart.assertFailed("a collection path must point to a valid collection.", I[6], 67, 7, "isValidCollectionPath(collectionPath)");
      return new cloud_firestore._JsonCollectionReference.new(this, this[S$._delegate].collection(collectionPath));
    }
    batch() {
      return new cloud_firestore.WriteBatch.__(this, this[S$._delegate].batch());
    }
    clearPersistence() {
      return this[S$._delegate].clearPersistence();
    }
    enablePersistence(persistenceSettings = null) {
      return async.async(dart.void, (function* enablePersistence() {
        return this[S$._delegate].enablePersistence(persistenceSettings);
      }).bind(this));
    }
    loadBundle(bundle) {
      return new cloud_firestore.LoadBundleTask.__(this[S$._delegate].loadBundle(bundle));
    }
    useFirestoreEmulator(host, port, opts) {
      let sslEnabled = opts && 'sslEnabled' in opts ? opts.sslEnabled : false;
      {
        try {
          this[S$._delegate].useEmulator(host, port);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            let code = core.String.as(dart.dload(e, 'code'));
            if (code !== "failed-precondition") {
              dart.rethrow(e$);
            }
          } else
            throw e$;
        }
      }
    }
    namedQueryGet(name, opts) {
      let options = opts && 'options' in opts ? opts.options : C[21] || CT.C21;
      return async.async(T$.QuerySnapshotOfMapOfString$dynamic(), (function* namedQueryGet() {
        let snapshotDelegate = (yield this[S$._delegate].namedQueryGet(name, {options: options}));
        return new cloud_firestore._JsonQuerySnapshot.new(cloud_firestore.FirebaseFirestore.instance, snapshotDelegate);
      }).bind(this));
    }
    collectionGroup(collectionPath) {
      if (!collectionPath[S$.$isNotEmpty]) dart.assertFailed("a collection path must be a non-empty string", I[6], 153, 7, "collectionPath.isNotEmpty");
      if (!!collectionPath[S$.$contains]("/")) dart.assertFailed("a collection path passed to collectionGroup() cannot contain \"/\"", I[6], 157, 7, "!collectionPath.contains('/')");
      return new cloud_firestore._JsonQuery.new(this, this[S$._delegate].collectionGroup(collectionPath));
    }
    disableNetwork() {
      return this[S$._delegate].disableNetwork();
    }
    doc(documentPath) {
      if (!documentPath[S$.$isNotEmpty]) dart.assertFailed("a document path must be a non-empty string", I[6], 176, 7, "documentPath.isNotEmpty");
      if (!!documentPath[S$.$contains]("//")) dart.assertFailed("a collection path must not contain \"//\"", I[6], 180, 7, "!documentPath.contains('//')");
      if (!cloud_firestore_platform_interface.isValidDocumentPath(documentPath)) dart.assertFailed("a document path must point to a valid document.", I[6], 184, 7, "isValidDocumentPath(documentPath)");
      return new cloud_firestore._JsonDocumentReference.new(this, this[S$._delegate].doc(documentPath));
    }
    enableNetwork() {
      return this[S$._delegate].enableNetwork();
    }
    snapshotsInSync() {
      return this[S$._delegate].snapshotsInSync();
    }
    runTransaction(T, transactionHandler, opts) {
      let timeout = opts && 'timeout' in opts ? opts.timeout : C[25] || CT.C25;
      let maxAttempts = opts && 'maxAttempts' in opts ? opts.maxAttempts : 5;
      return async.async(T, (function* runTransaction() {
        let output = null;
        let output$35isSet = false;
        function output$35get() {
          return output$35isSet ? output : dart.throw(new _internal.LateError.localNI("output"));
        }
        function output$35set(output$35param) {
          output$35isSet = true;
          return output = output$35param;
        }
        yield this[S$._delegate].runTransaction(core.Null, dart.fn(transaction => async.async(core.Null, (function*() {
          output$35set(yield transactionHandler(new cloud_firestore.Transaction.__(this, transaction)));
        }).bind(this)), T$.TransactionPlatformToFutureOfNull()), {timeout: timeout, maxAttempts: maxAttempts});
        return output$35get();
      }).bind(this));
    }
    set settings(settings) {
      this[S$._delegate].settings = this[S$._delegate].settings.copyWith({sslEnabled: settings.sslEnabled, persistenceEnabled: settings.persistenceEnabled, host: settings.host, cacheSizeBytes: settings.cacheSizeBytes});
    }
    get settings() {
      return this[S$._delegate].settings;
    }
    terminate() {
      return this[S$._delegate].terminate();
    }
    waitForPendingWrites() {
      return this[S$._delegate].waitForPendingWrites();
    }
    _equals(other) {
      if (other == null) return false;
      return cloud_firestore.FirebaseFirestore.is(other) && other.app.name === this.app.name;
    }
    get hashCode() {
      return core.Object.hash(this.app.name, this.app.options);
    }
    toString() {
      return dart.str(dart.wrapType(cloud_firestore.FirebaseFirestore)) + "(app: " + this.app.name + ")";
    }
  };
  (cloud_firestore.FirebaseFirestore.__ = function(opts) {
    let app = opts && 'app' in opts ? opts.app : null;
    this[S$._delegatePackingProperty] = null;
    this[S$.app] = app;
    cloud_firestore.FirebaseFirestore.__proto__.new.call(this, app.name, "plugins.flutter.io/firebase_firestore");
    ;
  }).prototype = cloud_firestore.FirebaseFirestore.prototype;
  dart.addTypeTests(cloud_firestore.FirebaseFirestore);
  dart.addTypeCaches(cloud_firestore.FirebaseFirestore);
  dart.setMethodSignature(cloud_firestore.FirebaseFirestore, () => ({
    __proto__: dart.getMethods(cloud_firestore.FirebaseFirestore.__proto__),
    collection: dart.fnType(cloud_firestore.CollectionReference$(core.Map$(core.String, dart.dynamic)), [core.String]),
    batch: dart.fnType(cloud_firestore.WriteBatch, []),
    clearPersistence: dart.fnType(async.Future$(dart.void), []),
    enablePersistence: dart.fnType(async.Future$(dart.void), [], [dart.nullable(persistence_settings.PersistenceSettings)]),
    loadBundle: dart.fnType(cloud_firestore.LoadBundleTask, [typed_data.Uint8List]),
    useFirestoreEmulator: dart.fnType(dart.void, [core.String, core.int], {sslEnabled: core.bool}, {}),
    namedQueryGet: dart.fnType(async.Future$(cloud_firestore.QuerySnapshot$(core.Map$(core.String, dart.dynamic))), [core.String], {options: get_options.GetOptions}, {}),
    collectionGroup: dart.fnType(cloud_firestore.Query$(core.Map$(core.String, dart.dynamic)), [core.String]),
    disableNetwork: dart.fnType(async.Future$(dart.void), []),
    doc: dart.fnType(cloud_firestore.DocumentReference$(core.Map$(core.String, dart.dynamic)), [core.String]),
    enableNetwork: dart.fnType(async.Future$(dart.void), []),
    snapshotsInSync: dart.fnType(async.Stream$(dart.void), []),
    runTransaction: dart.gFnType(T => [async.Future$(T), [dart.fnType(async.Future$(T), [cloud_firestore.Transaction])], {maxAttempts: core.int, timeout: core.Duration}, {}], T => [dart.nullable(core.Object)]),
    terminate: dart.fnType(async.Future$(dart.void), []),
    waitForPendingWrites: dart.fnType(async.Future$(dart.void), [])
  }));
  dart.setStaticMethodSignature(cloud_firestore.FirebaseFirestore, () => ['instanceFor']);
  dart.setGetterSignature(cloud_firestore.FirebaseFirestore, () => ({
    __proto__: dart.getGetters(cloud_firestore.FirebaseFirestore.__proto__),
    [S$._delegate]: platform_interface_firestore.FirebaseFirestorePlatform,
    settings: settings.Settings
  }));
  dart.setSetterSignature(cloud_firestore.FirebaseFirestore, () => ({
    __proto__: dart.getSetters(cloud_firestore.FirebaseFirestore.__proto__),
    settings: settings.Settings
  }));
  dart.setStaticGetterSignature(cloud_firestore.FirebaseFirestore, () => ['instance']);
  dart.setLibraryUri(cloud_firestore.FirebaseFirestore, I[1]);
  dart.setFieldSignature(cloud_firestore.FirebaseFirestore, () => ({
    __proto__: dart.getFields(cloud_firestore.FirebaseFirestore.__proto__),
    [S$._delegatePackingProperty]: dart.fieldType(dart.nullable(platform_interface_firestore.FirebaseFirestorePlatform)),
    app: dart.fieldType(firebase_core.FirebaseApp)
  }));
  dart.setStaticFieldSignature(cloud_firestore.FirebaseFirestore, () => ['_cachedInstances']);
  dart.defineExtensionMethods(cloud_firestore.FirebaseFirestore, ['_equals', 'toString']);
  dart.defineExtensionAccessors(cloud_firestore.FirebaseFirestore, ['hashCode']);
  dart.defineLazy(cloud_firestore.FirebaseFirestore, {
    /*cloud_firestore.FirebaseFirestore._cachedInstances*/get _cachedInstances() {
      return new (T$.IdentityMapOfString$FirebaseFirestore()).new();
    }
  }, false);
  cloud_firestore.LoadBundleTask = class LoadBundleTask extends core.Object {
    static ['_#_#tearOff'](_delegate) {
      return new cloud_firestore.LoadBundleTask.__(_delegate);
    }
    get stream() {
      let t8, t7;
      t7 = this[S$.__LoadBundleTask_stream];
      return t7 == null ? (t8 = this[S$._delegate].stream.map(cloud_firestore.LoadBundleTaskSnapshot, dart.fn(event => new cloud_firestore.LoadBundleTaskSnapshot.__(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform.as(event)), T$.dynamicToLoadBundleTaskSnapshot())), this[S$.__LoadBundleTask_stream] == null ? this[S$.__LoadBundleTask_stream] = t8 : dart.throw(new _internal.LateError.fieldADI("stream"))) : t7;
    }
  };
  (cloud_firestore.LoadBundleTask.__ = function(_delegate) {
    this[S$.__LoadBundleTask_stream] = null;
    this[S$._delegate] = _delegate;
    platform_interface_load_bundle_task.LoadBundleTaskPlatform.verifyExtends(this[S$._delegate]);
  }).prototype = cloud_firestore.LoadBundleTask.prototype;
  dart.addTypeTests(cloud_firestore.LoadBundleTask);
  dart.addTypeCaches(cloud_firestore.LoadBundleTask);
  dart.setGetterSignature(cloud_firestore.LoadBundleTask, () => ({
    __proto__: dart.getGetters(cloud_firestore.LoadBundleTask.__proto__),
    stream: async.Stream$(cloud_firestore.LoadBundleTaskSnapshot)
  }));
  dart.setLibraryUri(cloud_firestore.LoadBundleTask, I[1]);
  dart.setFieldSignature(cloud_firestore.LoadBundleTask, () => ({
    __proto__: dart.getFields(cloud_firestore.LoadBundleTask.__proto__),
    [S$._delegate]: dart.finalFieldType(platform_interface_load_bundle_task.LoadBundleTaskPlatform),
    [S$.__LoadBundleTask_stream]: dart.fieldType(dart.nullable(async.Stream$(cloud_firestore.LoadBundleTaskSnapshot)))
  }));
  cloud_firestore.LoadBundleTaskSnapshot = class LoadBundleTaskSnapshot extends core.Object {
    static ['_#_#tearOff'](_delegate) {
      return new cloud_firestore.LoadBundleTaskSnapshot.__(_delegate);
    }
    get bytesLoaded() {
      return this[S$._delegate].bytesLoaded;
    }
    get documentsLoaded() {
      return this[S$._delegate].documentsLoaded;
    }
    get taskState() {
      return this[S$._delegate].taskState;
    }
    get totalBytes() {
      return this[S$._delegate].totalBytes;
    }
    get totalDocuments() {
      return this[S$._delegate].totalDocuments;
    }
  };
  (cloud_firestore.LoadBundleTaskSnapshot.__ = function(_delegate) {
    this[S$._delegate] = _delegate;
    platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform.verifyExtends(this[S$._delegate]);
  }).prototype = cloud_firestore.LoadBundleTaskSnapshot.prototype;
  dart.addTypeTests(cloud_firestore.LoadBundleTaskSnapshot);
  dart.addTypeCaches(cloud_firestore.LoadBundleTaskSnapshot);
  dart.setGetterSignature(cloud_firestore.LoadBundleTaskSnapshot, () => ({
    __proto__: dart.getGetters(cloud_firestore.LoadBundleTaskSnapshot.__proto__),
    bytesLoaded: core.int,
    documentsLoaded: core.int,
    taskState: load_bundle_task_state.LoadBundleTaskState,
    totalBytes: core.int,
    totalDocuments: core.int
  }));
  dart.setLibraryUri(cloud_firestore.LoadBundleTaskSnapshot, I[1]);
  dart.setFieldSignature(cloud_firestore.LoadBundleTaskSnapshot, () => ({
    __proto__: dart.getFields(cloud_firestore.LoadBundleTaskSnapshot.__proto__),
    [S$._delegate]: dart.fieldType(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform)
  }));
  const _is_Query_default = Symbol('_is_Query_default');
  cloud_firestore.Query$ = dart.generic(T => {
    class Query extends core.Object {}
    (Query.new = function() {
      ;
    }).prototype = Query.prototype;
    dart.addTypeTests(Query);
    Query.prototype[_is_Query_default] = true;
    dart.addTypeCaches(Query);
    dart.setLibraryUri(Query, I[1]);
    return Query;
  });
  cloud_firestore.Query = cloud_firestore.Query$();
  dart.addTypeTests(cloud_firestore.Query, _is_Query_default);
  const _is_QueryDocumentSnapshot_default = Symbol('_is_QueryDocumentSnapshot_default');
  cloud_firestore.QueryDocumentSnapshot$ = dart.generic(T => {
    class QueryDocumentSnapshot extends core.Object {}
    (QueryDocumentSnapshot.new = function() {
      ;
    }).prototype = QueryDocumentSnapshot.prototype;
    dart.addTypeTests(QueryDocumentSnapshot);
    QueryDocumentSnapshot.prototype[_is_QueryDocumentSnapshot_default] = true;
    dart.addTypeCaches(QueryDocumentSnapshot);
    QueryDocumentSnapshot[dart.implements] = () => [cloud_firestore.DocumentSnapshot$(T)];
    dart.setLibraryUri(QueryDocumentSnapshot, I[1]);
    return QueryDocumentSnapshot;
  });
  cloud_firestore.QueryDocumentSnapshot = cloud_firestore.QueryDocumentSnapshot$();
  dart.addTypeTests(cloud_firestore.QueryDocumentSnapshot, _is_QueryDocumentSnapshot_default);
  cloud_firestore._JsonQueryDocumentSnapshot = class _JsonQueryDocumentSnapshot extends cloud_firestore._JsonDocumentSnapshot {
    static ['_#new#tearOff'](_firestore, _delegate) {
      return new cloud_firestore._JsonQueryDocumentSnapshot.new(_firestore, _delegate);
    }
    get exists() {
      return true;
    }
    data() {
      return dart.nullCheck(super.data());
    }
  };
  (cloud_firestore._JsonQueryDocumentSnapshot.new = function(_firestore, _delegate) {
    cloud_firestore._JsonQueryDocumentSnapshot.__proto__.new.call(this, cloud_firestore.FirebaseFirestore.as(_firestore), platform_interface_document_snapshot.DocumentSnapshotPlatform.as(_delegate));
    ;
  }).prototype = cloud_firestore._JsonQueryDocumentSnapshot.prototype;
  dart.addTypeTests(cloud_firestore._JsonQueryDocumentSnapshot);
  dart.addTypeCaches(cloud_firestore._JsonQueryDocumentSnapshot);
  cloud_firestore._JsonQueryDocumentSnapshot[dart.implements] = () => [cloud_firestore.QueryDocumentSnapshot$(core.Map$(core.String, dart.dynamic))];
  dart.setMethodSignature(cloud_firestore._JsonQueryDocumentSnapshot, () => ({
    __proto__: dart.getMethods(cloud_firestore._JsonQueryDocumentSnapshot.__proto__),
    data: dart.fnType(core.Map$(core.String, dart.dynamic), [])
  }));
  dart.setLibraryUri(cloud_firestore._JsonQueryDocumentSnapshot, I[1]);
  const _is__WithConverterQueryDocumentSnapshot_default = Symbol('_is__WithConverterQueryDocumentSnapshot_default');
  cloud_firestore._WithConverterQueryDocumentSnapshot$ = dart.generic(T => {
    class _WithConverterQueryDocumentSnapshot extends cloud_firestore._WithConverterDocumentSnapshot$(T) {
      static ['_#new#tearOff'](T, originalQueryDocumentSnapshot, fromFirestore, toFirestore) {
        return new (cloud_firestore._WithConverterQueryDocumentSnapshot$(T)).new(originalQueryDocumentSnapshot, fromFirestore, toFirestore);
      }
      get exists() {
        return true;
      }
      data() {
        return dart.nullCheck(super.data());
      }
    }
    (_WithConverterQueryDocumentSnapshot.new = function(originalQueryDocumentSnapshot, fromFirestore, toFirestore) {
      _WithConverterQueryDocumentSnapshot.__proto__.new.call(this, originalQueryDocumentSnapshot, fromFirestore, toFirestore);
      ;
    }).prototype = _WithConverterQueryDocumentSnapshot.prototype;
    dart.addTypeTests(_WithConverterQueryDocumentSnapshot);
    _WithConverterQueryDocumentSnapshot.prototype[_is__WithConverterQueryDocumentSnapshot_default] = true;
    dart.addTypeCaches(_WithConverterQueryDocumentSnapshot);
    _WithConverterQueryDocumentSnapshot[dart.implements] = () => [cloud_firestore.QueryDocumentSnapshot$(T)];
    dart.setMethodSignature(_WithConverterQueryDocumentSnapshot, () => ({
      __proto__: dart.getMethods(_WithConverterQueryDocumentSnapshot.__proto__),
      data: dart.fnType(T, [])
    }));
    dart.setLibraryUri(_WithConverterQueryDocumentSnapshot, I[1]);
    return _WithConverterQueryDocumentSnapshot;
  });
  cloud_firestore._WithConverterQueryDocumentSnapshot = cloud_firestore._WithConverterQueryDocumentSnapshot$();
  dart.addTypeTests(cloud_firestore._WithConverterQueryDocumentSnapshot, _is__WithConverterQueryDocumentSnapshot_default);
  const _is_QuerySnapshot_default = Symbol('_is_QuerySnapshot_default');
  cloud_firestore.QuerySnapshot$ = dart.generic(T => {
    class QuerySnapshot extends core.Object {}
    (QuerySnapshot.new = function() {
      ;
    }).prototype = QuerySnapshot.prototype;
    dart.addTypeTests(QuerySnapshot);
    QuerySnapshot.prototype[_is_QuerySnapshot_default] = true;
    dart.addTypeCaches(QuerySnapshot);
    dart.setLibraryUri(QuerySnapshot, I[1]);
    return QuerySnapshot;
  });
  cloud_firestore.QuerySnapshot = cloud_firestore.QuerySnapshot$();
  dart.addTypeTests(cloud_firestore.QuerySnapshot, _is_QuerySnapshot_default);
  cloud_firestore._JsonQuerySnapshot = class _JsonQuerySnapshot extends core.Object {
    static ['_#new#tearOff'](_firestore, _delegate) {
      return new cloud_firestore._JsonQuerySnapshot.new(_firestore, _delegate);
    }
    get docs() {
      return this[S$._delegate].docs[S$.$map](cloud_firestore._JsonQueryDocumentSnapshot, dart.fn(documentDelegate => new cloud_firestore._JsonQueryDocumentSnapshot.new(this[S$._firestore], documentDelegate), T$.DocumentSnapshotPlatformTo_JsonQueryDocumentSnapshot()))[S$.$toList]();
    }
    get docChanges() {
      return this[S$._delegate].docChanges[S$.$map](cloud_firestore._JsonDocumentChange, dart.fn(documentDelegate => new cloud_firestore._JsonDocumentChange.new(this[S$._firestore], documentDelegate), T$.DocumentChangePlatformTo_JsonDocumentChange()))[S$.$toList]();
    }
    get metadata() {
      return new cloud_firestore.SnapshotMetadata.__(this[S$._delegate].metadata);
    }
    get size() {
      return this[S$._delegate].size;
    }
  };
  (cloud_firestore._JsonQuerySnapshot.new = function(_firestore, _delegate) {
    this[S$._firestore] = _firestore;
    this[S$._delegate] = _delegate;
    platform_interface_query_snapshot.QuerySnapshotPlatform.verifyExtends(this[S$._delegate]);
  }).prototype = cloud_firestore._JsonQuerySnapshot.prototype;
  dart.addTypeTests(cloud_firestore._JsonQuerySnapshot);
  dart.addTypeCaches(cloud_firestore._JsonQuerySnapshot);
  cloud_firestore._JsonQuerySnapshot[dart.implements] = () => [cloud_firestore.QuerySnapshot$(core.Map$(core.String, dart.dynamic))];
  dart.setGetterSignature(cloud_firestore._JsonQuerySnapshot, () => ({
    __proto__: dart.getGetters(cloud_firestore._JsonQuerySnapshot.__proto__),
    docs: core.List$(cloud_firestore.QueryDocumentSnapshot$(core.Map$(core.String, dart.dynamic))),
    docChanges: core.List$(cloud_firestore.DocumentChange$(core.Map$(core.String, dart.dynamic))),
    metadata: cloud_firestore.SnapshotMetadata,
    size: core.int
  }));
  dart.setLibraryUri(cloud_firestore._JsonQuerySnapshot, I[1]);
  dart.setFieldSignature(cloud_firestore._JsonQuerySnapshot, () => ({
    __proto__: dart.getFields(cloud_firestore._JsonQuerySnapshot.__proto__),
    [S$._firestore]: dart.finalFieldType(cloud_firestore.FirebaseFirestore),
    [S$._delegate]: dart.finalFieldType(platform_interface_query_snapshot.QuerySnapshotPlatform)
  }));
  const _is__WithConverterQuerySnapshot_default = Symbol('_is__WithConverterQuerySnapshot_default');
  cloud_firestore._WithConverterQuerySnapshot$ = dart.generic(T => {
    var __t$QueryDocumentSnapshotOfT = () => (__t$QueryDocumentSnapshotOfT = dart.constFn(cloud_firestore.QueryDocumentSnapshot$(T)))();
    var __t$JSArrayOfQueryDocumentSnapshotOfT = () => (__t$JSArrayOfQueryDocumentSnapshotOfT = dart.constFn(_interceptors.JSArray$(__t$QueryDocumentSnapshotOfT())))();
    var __t$_WithConverterQueryDocumentSnapshotOfT = () => (__t$_WithConverterQueryDocumentSnapshotOfT = dart.constFn(cloud_firestore._WithConverterQueryDocumentSnapshot$(T)))();
    var __t$DocumentChangeOfT = () => (__t$DocumentChangeOfT = dart.constFn(cloud_firestore.DocumentChange$(T)))();
    var __t$JSArrayOfDocumentChangeOfT = () => (__t$JSArrayOfDocumentChangeOfT = dart.constFn(_interceptors.JSArray$(__t$DocumentChangeOfT())))();
    var __t$_WithConverterDocumentChangeOfT = () => (__t$_WithConverterDocumentChangeOfT = dart.constFn(cloud_firestore._WithConverterDocumentChange$(T)))();
    class _WithConverterQuerySnapshot extends core.Object {
      static ['_#new#tearOff'](T, _originalQuerySnapshot, _fromFirestore, _toFirestore) {
        return new (cloud_firestore._WithConverterQuerySnapshot$(T)).new(_originalQuerySnapshot, _fromFirestore, _toFirestore);
      }
      get docs() {
        return (() => {
          let t7 = __t$JSArrayOfQueryDocumentSnapshotOfT().of([]);
          for (let snapshot of this[S$._originalQuerySnapshot].docs)
            t7.push(new (__t$_WithConverterQueryDocumentSnapshotOfT()).new(snapshot, this[S$._fromFirestore], this[S$._toFirestore]));
          return t7;
        })();
      }
      get docChanges() {
        return (() => {
          let t8 = __t$JSArrayOfDocumentChangeOfT().of([]);
          for (let change of this[S$._originalQuerySnapshot].docChanges)
            t8.push(new (__t$_WithConverterDocumentChangeOfT()).new(change, this[S$._fromFirestore], this[S$._toFirestore]));
          return t8;
        })();
      }
      get metadata() {
        return this[S$._originalQuerySnapshot].metadata;
      }
      get size() {
        return this[S$._originalQuerySnapshot].size;
      }
    }
    (_WithConverterQuerySnapshot.new = function(_originalQuerySnapshot, _fromFirestore, _toFirestore) {
      this[S$._originalQuerySnapshot] = _originalQuerySnapshot;
      this[S$._fromFirestore] = _fromFirestore;
      this[S$._toFirestore] = _toFirestore;
      ;
    }).prototype = _WithConverterQuerySnapshot.prototype;
    dart.addTypeTests(_WithConverterQuerySnapshot);
    _WithConverterQuerySnapshot.prototype[_is__WithConverterQuerySnapshot_default] = true;
    dart.addTypeCaches(_WithConverterQuerySnapshot);
    _WithConverterQuerySnapshot[dart.implements] = () => [cloud_firestore.QuerySnapshot$(T)];
    dart.setGetterSignature(_WithConverterQuerySnapshot, () => ({
      __proto__: dart.getGetters(_WithConverterQuerySnapshot.__proto__),
      docs: core.List$(cloud_firestore.QueryDocumentSnapshot$(T)),
      docChanges: core.List$(cloud_firestore.DocumentChange$(T)),
      metadata: cloud_firestore.SnapshotMetadata,
      size: core.int
    }));
    dart.setLibraryUri(_WithConverterQuerySnapshot, I[1]);
    dart.setFieldSignature(_WithConverterQuerySnapshot, () => ({
      __proto__: dart.getFields(_WithConverterQuerySnapshot.__proto__),
      [S$._originalQuerySnapshot]: dart.finalFieldType(cloud_firestore.QuerySnapshot$(core.Map$(core.String, dart.dynamic))),
      [S$._fromFirestore]: dart.finalFieldType(dart.fnType(T, [cloud_firestore.DocumentSnapshot$(core.Map$(core.String, dart.dynamic)), dart.nullable(cloud_firestore.SnapshotOptions)])),
      [S$._toFirestore]: dart.finalFieldType(dart.fnType(core.Map$(core.String, dart.nullable(core.Object)), [T, dart.nullable(set_options.SetOptions)]))
    }));
    return _WithConverterQuerySnapshot;
  });
  cloud_firestore._WithConverterQuerySnapshot = cloud_firestore._WithConverterQuerySnapshot$();
  dart.addTypeTests(cloud_firestore._WithConverterQuerySnapshot, _is__WithConverterQuerySnapshot_default);
  cloud_firestore.SnapshotMetadata = class SnapshotMetadata extends core.Object {
    static ['_#_#tearOff'](_delegate) {
      return new cloud_firestore.SnapshotMetadata.__(_delegate);
    }
    get hasPendingWrites() {
      return this[S$._delegate].hasPendingWrites;
    }
    get isFromCache() {
      return this[S$._delegate].isFromCache;
    }
  };
  (cloud_firestore.SnapshotMetadata.__ = function(_delegate) {
    this[S$._delegate] = _delegate;
    ;
  }).prototype = cloud_firestore.SnapshotMetadata.prototype;
  dart.addTypeTests(cloud_firestore.SnapshotMetadata);
  dart.addTypeCaches(cloud_firestore.SnapshotMetadata);
  dart.setGetterSignature(cloud_firestore.SnapshotMetadata, () => ({
    __proto__: dart.getGetters(cloud_firestore.SnapshotMetadata.__proto__),
    hasPendingWrites: core.bool,
    isFromCache: core.bool
  }));
  dart.setLibraryUri(cloud_firestore.SnapshotMetadata, I[1]);
  dart.setFieldSignature(cloud_firestore.SnapshotMetadata, () => ({
    __proto__: dart.getFields(cloud_firestore.SnapshotMetadata.__proto__),
    [S$._delegate]: dart.fieldType(snapshot_metadata.SnapshotMetadataPlatform)
  }));
  cloud_firestore.Transaction = class Transaction extends core.Object {
    static ['_#_#tearOff'](_firestore, _delegate) {
      return new cloud_firestore.Transaction.__(_firestore, _delegate);
    }
    get(T, documentReference) {
      return async.async(cloud_firestore.DocumentSnapshot$(T), (function* get() {
        let documentSnapshotPlatform = (yield this[S$._delegate].get(documentReference.path));
        let snapshot = new cloud_firestore._JsonDocumentSnapshot.new(this[S$._firestore], documentSnapshotPlatform);
        if (cloud_firestore.DocumentSnapshot$(T).is(snapshot)) {
          return cloud_firestore.DocumentSnapshot$(T).as(snapshot);
        }
        let withConverterDocRef = cloud_firestore._WithConverterDocumentReference$(T).as(documentReference);
        return new (cloud_firestore._WithConverterDocumentSnapshot$(T)).new(snapshot, withConverterDocRef[S$._fromFirestore], dart.fnType(T$.MapOfString$ObjectN(), [T, T$.SetOptionsN()]).as(withConverterDocRef[S$._toFirestore]));
      }).bind(this));
    }
    delete(documentReference) {
      if (!documentReference.firestore._equals(this[S$._firestore])) dart.assertFailed("the document provided is from a different Firestore instance", I[10], 50, 7, "documentReference.firestore == _firestore");
      return new cloud_firestore.Transaction.__(this[S$._firestore], this[S$._delegate].delete(documentReference.path));
    }
    update(documentReference, data) {
      if (!documentReference.firestore._equals(this[S$._firestore])) dart.assertFailed("the document provided is from a different Firestore instance", I[10], 67, 7, "documentReference.firestore == _firestore");
      return new cloud_firestore.Transaction.__(this[S$._firestore], this[S$._delegate].update(documentReference.path, dart.nullCheck(cloud_firestore._CodecUtility.replaceValueWithDelegatesInMap(data))));
    }
    set(T, documentReference, data, options = null) {
      let t11, t10, t9;
      if (!documentReference.firestore._equals(this[S$._firestore])) dart.assertFailed("the document provided is from a different Firestore instance", I[10], 89, 7, "documentReference.firestore == _firestore");
      let firestoreData = null;
      if (cloud_firestore._JsonDocumentReference.is(documentReference)) {
        firestoreData = T$.MapOfString$dynamic().as(data);
      } else {
        let withConverterDoc = cloud_firestore._WithConverterDocumentReference$(T).as(documentReference);
        firestoreData = (t9 = withConverterDoc, t10 = data, t11 = options, dart.fnType(T$.MapOfString$ObjectN(), [T, T$.SetOptionsN()]).as(t9[S$._toFirestore])(t10, t11));
      }
      return new cloud_firestore.Transaction.__(this[S$._firestore], this[S$._delegate].set(documentReference.path, dart.nullCheck(cloud_firestore._CodecUtility.replaceValueWithDelegatesInMap(firestoreData)), options));
    }
  };
  (cloud_firestore.Transaction.__ = function(_firestore, _delegate) {
    this[S$._firestore] = _firestore;
    this[S$._delegate] = _delegate;
    platform_interface_transaction.TransactionPlatform.verifyExtends(this[S$._delegate]);
  }).prototype = cloud_firestore.Transaction.prototype;
  dart.addTypeTests(cloud_firestore.Transaction);
  dart.addTypeCaches(cloud_firestore.Transaction);
  dart.setMethodSignature(cloud_firestore.Transaction, () => ({
    __proto__: dart.getMethods(cloud_firestore.Transaction.__proto__),
    get: dart.gFnType(T => [async.Future$(cloud_firestore.DocumentSnapshot$(T)), [cloud_firestore.DocumentReference$(T)]], T => [dart.nullable(core.Object)]),
    delete: dart.fnType(cloud_firestore.Transaction, [cloud_firestore.DocumentReference$(dart.nullable(core.Object))]),
    update: dart.fnType(cloud_firestore.Transaction, [cloud_firestore.DocumentReference$(dart.nullable(core.Object)), core.Map$(core.String, dart.dynamic)]),
    set: dart.gFnType(T => [cloud_firestore.Transaction, [cloud_firestore.DocumentReference$(T), T], [dart.nullable(set_options.SetOptions)]], T => [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(cloud_firestore.Transaction, I[1]);
  dart.setFieldSignature(cloud_firestore.Transaction, () => ({
    __proto__: dart.getFields(cloud_firestore.Transaction.__proto__),
    [S$._firestore]: dart.finalFieldType(cloud_firestore.FirebaseFirestore),
    [S$._delegate]: dart.finalFieldType(platform_interface_transaction.TransactionPlatform)
  }));
  cloud_firestore._CodecUtility = class _CodecUtility extends core.Object {
    static replaceValueWithDelegatesInMap(data) {
      if (data == null) {
        return null;
      }
      let output = T$.LinkedHashMapOfString$dynamic().from(data);
      output[S$.$updateAll](dart.fn((_, value) => cloud_firestore._CodecUtility.valueEncode(value), T$.StringAnddynamicTodynamic()));
      return output;
    }
    static replaceValueWithDelegatesInArray(data) {
      if (data == null) {
        return null;
      }
      return core.List.from(data)[S$.$map](dart.dynamic, C[27] || CT.C27)[S$.$toList]();
    }
    static replaceDelegatesWithValueInMap(data, firestore) {
      if (data == null) {
        return null;
      }
      let output = T$.LinkedHashMapOfString$dynamic().from(data);
      output[S$.$updateAll](dart.fn((_, value) => cloud_firestore._CodecUtility.valueDecode(value, firestore), T$.StringAnddynamicTodynamic()));
      return output;
    }
    static replaceDelegatesWithValueInArray(data, firestore) {
      if (data == null) {
        return null;
      }
      return core.List.from(data)[S$.$map](dart.dynamic, dart.fn(value => cloud_firestore._CodecUtility.valueDecode(value, firestore), T$.dynamicTodynamic()))[S$.$toList]();
    }
    static valueEncode(value) {
      if (T$.DocumentReferenceOfObjectN().is(value)) {
        return value[S$._delegate];
      } else if (core.List.is(value)) {
        return cloud_firestore._CodecUtility.replaceValueWithDelegatesInArray(value);
      } else if (core.Map.is(value)) {
        return cloud_firestore._CodecUtility.replaceValueWithDelegatesInMap(value);
      }
      return value;
    }
    static valueDecode(value, firestore) {
      if (platform_interface_document_reference.DocumentReferencePlatform.is(value)) {
        return new cloud_firestore._JsonDocumentReference.new(firestore, value);
      } else if (core.List.is(value)) {
        return cloud_firestore._CodecUtility.replaceDelegatesWithValueInArray(value, firestore);
      } else if (core.Map.is(value)) {
        return cloud_firestore._CodecUtility.replaceDelegatesWithValueInMap(value, firestore);
      }
      return value;
    }
    static ['_#new#tearOff']() {
      return new cloud_firestore._CodecUtility.new();
    }
  };
  (cloud_firestore._CodecUtility.new = function() {
    ;
  }).prototype = cloud_firestore._CodecUtility.prototype;
  dart.addTypeTests(cloud_firestore._CodecUtility);
  dart.addTypeCaches(cloud_firestore._CodecUtility);
  dart.setStaticMethodSignature(cloud_firestore._CodecUtility, () => ['replaceValueWithDelegatesInMap', 'replaceValueWithDelegatesInArray', 'replaceDelegatesWithValueInMap', 'replaceDelegatesWithValueInArray', 'valueEncode', 'valueDecode']);
  dart.setLibraryUri(cloud_firestore._CodecUtility, I[1]);
  cloud_firestore.WriteBatch = class WriteBatch extends core.Object {
    static ['_#_#tearOff'](_firestore, _delegate) {
      return new cloud_firestore.WriteBatch.__(_firestore, _delegate);
    }
    commit() {
      return this[S$._delegate].commit();
    }
    delete(document) {
      if (!document.firestore._equals(this[S$._firestore])) dart.assertFailed("the document provided is from a different Firestore instance", I[11], 29, 7, "document.firestore == _firestore");
      return this[S$._delegate].delete(document.path);
    }
    set(T, document, data, options = null) {
      let t11, t10, t9;
      if (!document.firestore._equals(this[S$._firestore])) dart.assertFailed("the document provided is from a different Firestore instance", I[11], 47, 7, "document.firestore == _firestore");
      let firestoreData = null;
      if (cloud_firestore._JsonDocumentReference.is(document)) {
        firestoreData = T$.MapOfString$dynamic().as(data);
      } else {
        let withConverterDoc = cloud_firestore._WithConverterDocumentReference$(T).as(document);
        firestoreData = (t9 = withConverterDoc, t10 = data, t11 = options, dart.fnType(T$.MapOfString$ObjectN(), [T, T$.SetOptionsN()]).as(t9[S$._toFirestore])(t10, t11));
      }
      return this[S$._delegate].set(document.path, dart.nullCheck(cloud_firestore._CodecUtility.replaceValueWithDelegatesInMap(firestoreData)), options);
    }
    update(document, data) {
      if (!document.firestore._equals(this[S$._firestore])) dart.assertFailed("the document provided is from a different Firestore instance", I[11], 71, 7, "document.firestore == _firestore");
      return this[S$._delegate].update(document.path, dart.nullCheck(cloud_firestore._CodecUtility.replaceValueWithDelegatesInMap(data)));
    }
  };
  (cloud_firestore.WriteBatch.__ = function(_firestore, _delegate) {
    this[S$._firestore] = _firestore;
    this[S$._delegate] = _delegate;
    platform_interface_write_batch.WriteBatchPlatform.verifyExtends(this[S$._delegate]);
  }).prototype = cloud_firestore.WriteBatch.prototype;
  dart.addTypeTests(cloud_firestore.WriteBatch);
  dart.addTypeCaches(cloud_firestore.WriteBatch);
  dart.setMethodSignature(cloud_firestore.WriteBatch, () => ({
    __proto__: dart.getMethods(cloud_firestore.WriteBatch.__proto__),
    commit: dart.fnType(async.Future$(dart.void), []),
    delete: dart.fnType(dart.void, [cloud_firestore.DocumentReference$(dart.nullable(core.Object))]),
    set: dart.gFnType(T => [dart.void, [cloud_firestore.DocumentReference$(T), T], [dart.nullable(set_options.SetOptions)]], T => [dart.nullable(core.Object)]),
    update: dart.fnType(dart.void, [cloud_firestore.DocumentReference$(dart.nullable(core.Object)), core.Map$(core.String, dart.dynamic)])
  }));
  dart.setLibraryUri(cloud_firestore.WriteBatch, I[1]);
  dart.setFieldSignature(cloud_firestore.WriteBatch, () => ({
    __proto__: dart.getFields(cloud_firestore.WriteBatch.__proto__),
    [S$._firestore]: dart.finalFieldType(cloud_firestore.FirebaseFirestore),
    [S$._delegate]: dart.finalFieldType(platform_interface_write_batch.WriteBatchPlatform)
  }));
  firebase_core.FirebaseApp = class FirebaseApp extends core.Object {
    static ['_#_#tearOff'](_delegate) {
      return new firebase_core.FirebaseApp.__(_delegate);
    }
    delete() {
      return async.async(dart.void, (function* $delete() {
        yield this[S$._delegate$3].delete();
      }).bind(this));
    }
    get name() {
      return this[S$._delegate$3].name;
    }
    get options() {
      return this[S$._delegate$3].options;
    }
    get isAutomaticDataCollectionEnabled() {
      return this[S$._delegate$3].isAutomaticDataCollectionEnabled;
    }
    setAutomaticDataCollectionEnabled(enabled) {
      return this[S$._delegate$3].setAutomaticDataCollectionEnabled(enabled);
    }
    setAutomaticResourceManagementEnabled(enabled) {
      return this[S$._delegate$3].setAutomaticResourceManagementEnabled(enabled);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!firebase_core.FirebaseApp.is(other)) return false;
      return other.name === this.name && other.options._equals(this.options);
    }
    get hashCode() {
      return core.Object.hash(this.name, this.options);
    }
    toString() {
      return dart.str(dart.wrapType(firebase_core.FirebaseApp)) + "(" + this.name + ")";
    }
  };
  (firebase_core.FirebaseApp.__ = function(_delegate) {
    this[S$._delegate$3] = _delegate;
    firebase_core_platform_interface.FirebaseAppPlatform.verifyExtends(this[S$._delegate$3]);
  }).prototype = firebase_core.FirebaseApp.prototype;
  dart.addTypeTests(firebase_core.FirebaseApp);
  dart.addTypeCaches(firebase_core.FirebaseApp);
  dart.setMethodSignature(firebase_core.FirebaseApp, () => ({
    __proto__: dart.getMethods(firebase_core.FirebaseApp.__proto__),
    delete: dart.fnType(async.Future$(dart.void), []),
    setAutomaticDataCollectionEnabled: dart.fnType(async.Future$(dart.void), [core.bool]),
    setAutomaticResourceManagementEnabled: dart.fnType(async.Future$(dart.void), [core.bool])
  }));
  dart.setGetterSignature(firebase_core.FirebaseApp, () => ({
    __proto__: dart.getGetters(firebase_core.FirebaseApp.__proto__),
    name: core.String,
    options: firebase_core_platform_interface.FirebaseOptions,
    isAutomaticDataCollectionEnabled: core.bool
  }));
  dart.setLibraryUri(firebase_core.FirebaseApp, I[12]);
  dart.setFieldSignature(firebase_core.FirebaseApp, () => ({
    __proto__: dart.getFields(firebase_core.FirebaseApp.__proto__),
    [S$._delegate$3]: dart.finalFieldType(firebase_core_platform_interface.FirebaseAppPlatform)
  }));
  dart.defineExtensionMethods(firebase_core.FirebaseApp, ['_equals', 'toString']);
  dart.defineExtensionAccessors(firebase_core.FirebaseApp, ['hashCode']);
  firebase_core.Firebase = class Firebase extends core.Object {
    static ['_#_#tearOff']() {
      return new firebase_core.Firebase.__();
    }
    static get _delegate() {
      let t9;
      t9 = firebase_core.Firebase.delegatePackingProperty;
      return t9 == null ? firebase_core.Firebase.delegatePackingProperty = firebase_core_platform_interface.FirebasePlatform.instance : t9;
    }
    static get apps() {
      return firebase_core.Firebase._delegate.apps[S$.$map](firebase_core.FirebaseApp, C[28] || CT.C28)[S$.$toList]({growable: false});
    }
    static initializeApp(opts) {
      let name = opts && 'name' in opts ? opts.name : null;
      let options = opts && 'options' in opts ? opts.options : null;
      return async.async(firebase_core.FirebaseApp, function* initializeApp() {
        let app = (yield firebase_core.Firebase._delegate.initializeApp({name: name, options: options}));
        return new firebase_core.FirebaseApp.__(app);
      });
    }
    static app(name = "[DEFAULT]") {
      let app = firebase_core.Firebase._delegate.app(name);
      return new firebase_core.FirebaseApp.__(app);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!firebase_core.Firebase.is(other)) return false;
      return other.hashCode === this.hashCode;
    }
    get hashCode() {
      return this.toString()[S$.$hashCode];
    }
    toString() {
      return dart.str(dart.wrapType(firebase_core.Firebase));
    }
  };
  (firebase_core.Firebase.__ = function() {
    ;
  }).prototype = firebase_core.Firebase.prototype;
  dart.addTypeTests(firebase_core.Firebase);
  dart.addTypeCaches(firebase_core.Firebase);
  dart.setStaticMethodSignature(firebase_core.Firebase, () => ['initializeApp', 'app']);
  dart.setStaticGetterSignature(firebase_core.Firebase, () => ['_delegate', 'apps']);
  dart.setLibraryUri(firebase_core.Firebase, I[12]);
  dart.setStaticFieldSignature(firebase_core.Firebase, () => ['delegatePackingProperty']);
  dart.defineExtensionMethods(firebase_core.Firebase, ['_equals', 'toString']);
  dart.defineExtensionAccessors(firebase_core.Firebase, ['hashCode']);
  dart.defineLazy(firebase_core.Firebase, {
    /*firebase_core.Firebase.delegatePackingProperty*/get delegatePackingProperty() {
      return null;
    },
    set delegatePackingProperty(value) {}
  }, false);
  platform_interface_firestore.FirebaseFirestorePlatform = class FirebaseFirestorePlatform extends plugin_platform_interface.PlatformInterface {
    get appInstance() {
      return this[S$.appInstance];
    }
    set appInstance(value) {
      super.appInstance = value;
    }
    get app() {
      let t9;
      t9 = this.appInstance;
      return t9 == null ? firebase_core.Firebase.app() : t9;
    }
    static instanceFor(opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      return platform_interface_firestore.FirebaseFirestorePlatform.instance.delegateFor({app: app});
    }
    static ['_#instanceFor#tearOff'](opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      return platform_interface_firestore.FirebaseFirestorePlatform.instanceFor({app: app});
    }
    static get instance() {
      let t9;
      t9 = platform_interface_firestore.FirebaseFirestorePlatform._instance;
      return t9 == null ? platform_interface_firestore.FirebaseFirestorePlatform._instance = new method_channel_firestore.MethodChannelFirebaseFirestore.new({app: firebase_core.Firebase.app()}) : t9;
    }
    static set instance(instance) {
      plugin_platform_interface.PlatformInterface.verifyToken(instance, platform_interface_firestore.FirebaseFirestorePlatform._token);
      platform_interface_firestore.FirebaseFirestorePlatform._instance = instance;
    }
    delegateFor(opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      dart.throw(new core.UnimplementedError.new("delegateFor() is not implemented"));
    }
    useEmulator(host, port) {
      dart.throw(new core.UnimplementedError.new("useEmulator() is not implemented"));
    }
    batch() {
      dart.throw(new core.UnimplementedError.new("batch() is not implemented"));
    }
    clearPersistence() {
      dart.throw(new core.UnimplementedError.new("clearPersistence() is not implemented"));
    }
    enablePersistence(persistenceSettings = null) {
      return async.async(dart.void, function* enablePersistence() {
        dart.throw(new core.UnimplementedError.new("enablePersistence() is not implemented"));
      });
    }
    collection(collectionPath) {
      dart.throw(new core.UnimplementedError.new("collection() is not implemented"));
    }
    collectionGroup(collectionPath) {
      dart.throw(new core.UnimplementedError.new("collectionGroup() is not implemented"));
    }
    disableNetwork() {
      dart.throw(new core.UnimplementedError.new("disableNetwork() is not implemented"));
    }
    doc(documentPath) {
      dart.throw(new core.UnimplementedError.new("doc() is not implemented"));
    }
    enableNetwork() {
      dart.throw(new core.UnimplementedError.new("enableNetwork() is not implemented"));
    }
    snapshotsInSync() {
      dart.throw(new core.UnimplementedError.new("snapshotsInSync() is not implemented"));
    }
    loadBundle(bundle) {
      dart.throw(new core.UnimplementedError.new("loadBundle() is not implemented"));
    }
    namedQueryGet(name, opts) {
      let options = opts && 'options' in opts ? opts.options : C[21] || CT.C21;
      dart.throw(new core.UnimplementedError.new("namedQueryGet() is not implemented"));
    }
    runTransaction(T, transactionHandler, opts) {
      let timeout = opts && 'timeout' in opts ? opts.timeout : C[25] || CT.C25;
      let maxAttempts = opts && 'maxAttempts' in opts ? opts.maxAttempts : 5;
      dart.throw(new core.UnimplementedError.new("runTransaction() is not implemented"));
    }
    get settings() {
      dart.throw(new core.UnimplementedError.new("settings getter is not implemented"));
    }
    set settings(settings) {
      dart.throw(new core.UnimplementedError.new("settings setter is not implemented"));
    }
    terminate() {
      dart.throw(new core.UnimplementedError.new("terminate() is not implemented"));
    }
    waitForPendingWrites() {
      dart.throw(new core.UnimplementedError.new("waitForPendingWrites() is not implemented"));
    }
    _equals(other) {
      if (other == null) return false;
      return platform_interface_firestore.FirebaseFirestorePlatform.is(other) && other.app.name === this.app.name;
    }
    get hashCode() {
      return this.toString()[S$.$hashCode];
    }
    toString() {
      return dart.str(dart.wrapType(platform_interface_firestore.FirebaseFirestorePlatform)) + "(app: " + this.app.name + ")";
    }
  };
  (platform_interface_firestore.FirebaseFirestorePlatform.new = function(opts) {
    let appInstance = opts && 'appInstance' in opts ? opts.appInstance : null;
    this[S$.appInstance] = appInstance;
    platform_interface_firestore.FirebaseFirestorePlatform.__proto__.new.call(this, {token: platform_interface_firestore.FirebaseFirestorePlatform._token});
    ;
  }).prototype = platform_interface_firestore.FirebaseFirestorePlatform.prototype;
  dart.addTypeTests(platform_interface_firestore.FirebaseFirestorePlatform);
  dart.addTypeCaches(platform_interface_firestore.FirebaseFirestorePlatform);
  dart.setMethodSignature(platform_interface_firestore.FirebaseFirestorePlatform, () => ({
    __proto__: dart.getMethods(platform_interface_firestore.FirebaseFirestorePlatform.__proto__),
    delegateFor: dart.fnType(platform_interface_firestore.FirebaseFirestorePlatform, [], {}, {app: firebase_core.FirebaseApp}),
    useEmulator: dart.fnType(dart.void, [core.String, core.int]),
    batch: dart.fnType(platform_interface_write_batch.WriteBatchPlatform, []),
    clearPersistence: dart.fnType(async.Future$(dart.void), []),
    enablePersistence: dart.fnType(async.Future$(dart.void), [], [dart.nullable(persistence_settings.PersistenceSettings)]),
    collection: dart.fnType(platform_interface_collection_reference.CollectionReferencePlatform, [core.String]),
    collectionGroup: dart.fnType(platform_interface_query.QueryPlatform, [core.String]),
    disableNetwork: dart.fnType(async.Future$(dart.void), []),
    doc: dart.fnType(platform_interface_document_reference.DocumentReferencePlatform, [core.String]),
    enableNetwork: dart.fnType(async.Future$(dart.void), []),
    snapshotsInSync: dart.fnType(async.Stream$(dart.void), []),
    loadBundle: dart.fnType(platform_interface_load_bundle_task.LoadBundleTaskPlatform, [typed_data.Uint8List]),
    namedQueryGet: dart.fnType(async.Future$(platform_interface_query_snapshot.QuerySnapshotPlatform), [core.String], {options: get_options.GetOptions}, {}),
    runTransaction: dart.gFnType(T => [async.Future$(dart.nullable(T)), [dart.fnType(dart.nullable(async.Future$(dart.nullable(T))), [platform_interface_transaction.TransactionPlatform])], {maxAttempts: core.int, timeout: core.Duration}, {}], T => [dart.nullable(core.Object)]),
    terminate: dart.fnType(async.Future$(dart.void), []),
    waitForPendingWrites: dart.fnType(async.Future$(dart.void), [])
  }));
  dart.setStaticMethodSignature(platform_interface_firestore.FirebaseFirestorePlatform, () => ['instanceFor']);
  dart.setGetterSignature(platform_interface_firestore.FirebaseFirestorePlatform, () => ({
    __proto__: dart.getGetters(platform_interface_firestore.FirebaseFirestorePlatform.__proto__),
    app: firebase_core.FirebaseApp,
    settings: settings.Settings
  }));
  dart.setSetterSignature(platform_interface_firestore.FirebaseFirestorePlatform, () => ({
    __proto__: dart.getSetters(platform_interface_firestore.FirebaseFirestorePlatform.__proto__),
    settings: settings.Settings
  }));
  dart.setStaticGetterSignature(platform_interface_firestore.FirebaseFirestorePlatform, () => ['instance']);
  dart.setStaticSetterSignature(platform_interface_firestore.FirebaseFirestorePlatform, () => ['instance']);
  dart.setLibraryUri(platform_interface_firestore.FirebaseFirestorePlatform, I[13]);
  dart.setFieldSignature(platform_interface_firestore.FirebaseFirestorePlatform, () => ({
    __proto__: dart.getFields(platform_interface_firestore.FirebaseFirestorePlatform.__proto__),
    appInstance: dart.finalFieldType(dart.nullable(firebase_core.FirebaseApp))
  }));
  dart.setStaticFieldSignature(platform_interface_firestore.FirebaseFirestorePlatform, () => ['_token', '_instance']);
  dart.defineExtensionMethods(platform_interface_firestore.FirebaseFirestorePlatform, ['_equals', 'toString']);
  dart.defineExtensionAccessors(platform_interface_firestore.FirebaseFirestorePlatform, ['hashCode']);
  dart.defineLazy(platform_interface_firestore.FirebaseFirestorePlatform, {
    /*platform_interface_firestore.FirebaseFirestorePlatform._token*/get _token() {
      return new core.Object.new();
    },
    /*platform_interface_firestore.FirebaseFirestorePlatform._instance*/get _instance() {
      return null;
    },
    set _instance(value) {}
  }, false);
  cloud_firestore_web.FirebaseFirestoreWeb = class FirebaseFirestoreWeb extends platform_interface_firestore.FirebaseFirestorePlatform {
    get [S$._delegate$4]() {
      let t9;
      t9 = this[S$._webFirestore];
      return t9 == null ? this[S$._webFirestore] = firestore.getFirestoreInstance(core$.app(this.app.name), this[S$._settings]) : t9;
    }
    static registerWith(registrar) {
      firebase_core_web.FirebaseCoreWeb.registerService("firestore");
      platform_interface_firestore.FirebaseFirestorePlatform.instance = new cloud_firestore_web.FirebaseFirestoreWeb.new();
    }
    static ['_#new#tearOff'](opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      return new cloud_firestore_web.FirebaseFirestoreWeb.new({app: app});
    }
    delegateFor(opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      return new cloud_firestore_web.FirebaseFirestoreWeb.new({app: app});
    }
    collection(collectionPath) {
      return new collection_reference_web.CollectionReferenceWeb.new(this, this[S$._delegate$4], collectionPath);
    }
    batch() {
      return new write_batch_web.WriteBatchWeb.new(this[S$._delegate$4]);
    }
    clearPersistence() {
      return internals.convertWebExceptions(T$.FutureOfvoid(), dart.bind(this[S$._delegate$4], 'clearPersistence'));
    }
    useEmulator(host, port) {
      return this[S$._delegate$4].useEmulator(host, port);
    }
    collectionGroup(collectionPath) {
      return new query_web.QueryWeb.new(this, collectionPath, this[S$._delegate$4].collectionGroup(collectionPath), {isCollectionGroupQuery: true});
    }
    disableNetwork() {
      return internals.convertWebExceptions(T$.FutureOfvoid(), dart.bind(this[S$._delegate$4], 'disableNetwork'));
    }
    doc(documentPath) {
      return new document_reference_web.DocumentReferenceWeb.new(this, this[S$._delegate$4], documentPath);
    }
    enableNetwork() {
      return internals.convertWebExceptions(T$.FutureOfvoid(), dart.bind(this[S$._delegate$4], 'enableNetwork'));
    }
    snapshotsInSync() {
      return this[S$._delegate$4].snapshotsInSync();
    }
    runTransaction(T, transactionHandler, opts) {
      let timeout = opts && 'timeout' in opts ? opts.timeout : C[25] || CT.C25;
      let maxAttempts = opts && 'maxAttempts' in opts ? opts.maxAttempts : 5;
      return async.async(dart.nullable(T), (function* runTransaction() {
        yield internals.convertWebExceptions(async.Future, dart.fn(() => this[S$._delegate$4].runTransaction(dart.fn(transaction => async.async(dart.nullable(T), (function*() {
          return transactionHandler(new transaction_web.TransactionWeb.new(this, this[S$._delegate$4], dart.nullCheck(transaction)));
        }).bind(this)), dart.fnType(async.Future$(dart.nullable(T)), [T$.TransactionN()])), maxAttempts).timeout(timeout), T$.VoidToFuture()));
        return null;
      }).bind(this));
    }
    get settings() {
      return C[29] || CT.C29;
    }
    set settings(settings) {
      let cacheSizeBytes = null;
      if (settings.cacheSizeBytes == null) {
        cacheSizeBytes = 40000000;
      } else if (settings.cacheSizeBytes === -1) {
        cacheSizeBytes = -1;
      } else {
        cacheSizeBytes = settings.cacheSizeBytes;
      }
      if (settings.host != null && settings.sslEnabled != null) {
        this[S$._settings] = {cacheSizeBytes: cacheSizeBytes, host: settings.host, ssl: settings.sslEnabled, ignoreUndefinedProperties: settings.ignoreUndefinedProperties};
      } else {
        this[S$._settings] = {cacheSizeBytes: cacheSizeBytes, ignoreUndefinedProperties: settings.ignoreUndefinedProperties};
      }
    }
    enablePersistence(settings = null) {
      if (settings != null) {
        let interopSettings = {synchronizeTabs: settings.synchronizeTabs};
        return internals.convertWebExceptions(T$.FutureOfvoid(), dart.fn(() => this[S$._delegate$4].enablePersistence(interopSettings), T$.VoidToFutureOfvoid()));
      }
      return internals.convertWebExceptions(T$.FutureOfvoid(), dart.bind(this[S$._delegate$4], 'enablePersistence'));
    }
    terminate() {
      return internals.convertWebExceptions(T$.FutureOfvoid(), dart.bind(this[S$._delegate$4], 'terminate'));
    }
    waitForPendingWrites() {
      return internals.convertWebExceptions(T$.FutureOfvoid(), dart.bind(this[S$._delegate$4], 'waitForPendingWrites'));
    }
    loadBundle(bundle) {
      return new load_bundle_task_web.LoadBundleTaskWeb.new(this[S$._delegate$4].loadBundle(bundle));
    }
    namedQueryGet(name, opts) {
      let options = opts && 'options' in opts ? opts.options : C[21] || CT.C21;
      return async.async(platform_interface_query_snapshot.QuerySnapshotPlatform, (function* namedQueryGet() {
        let query = (yield this[S$._delegate$4].namedQuery(name));
        let snapshot = (yield query.get(web_utils.convertGetOptions(options)));
        return web_utils.convertWebQuerySnapshot(this, snapshot);
      }).bind(this));
    }
  };
  (cloud_firestore_web.FirebaseFirestoreWeb.new = function(opts) {
    let app = opts && 'app' in opts ? opts.app : null;
    this[S$._webFirestore] = null;
    this[S$._settings] = null;
    cloud_firestore_web.FirebaseFirestoreWeb.__proto__.new.call(this, {appInstance: app});
    platform_interface_field_value_factory.FieldValueFactoryPlatform.instance = new field_value_factory_web.FieldValueFactoryWeb.new();
  }).prototype = cloud_firestore_web.FirebaseFirestoreWeb.prototype;
  dart.addTypeTests(cloud_firestore_web.FirebaseFirestoreWeb);
  dart.addTypeCaches(cloud_firestore_web.FirebaseFirestoreWeb);
  dart.setMethodSignature(cloud_firestore_web.FirebaseFirestoreWeb, () => ({
    __proto__: dart.getMethods(cloud_firestore_web.FirebaseFirestoreWeb.__proto__),
    runTransaction: dart.gFnType(T => [async.Future$(dart.nullable(T)), [dart.fnType(dart.nullable(async.Future$(dart.nullable(T))), [platform_interface_transaction.TransactionPlatform])], {maxAttempts: core.int, timeout: core.Duration}, {}], T => [dart.nullable(core.Object)])
  }));
  dart.setStaticMethodSignature(cloud_firestore_web.FirebaseFirestoreWeb, () => ['registerWith']);
  dart.setGetterSignature(cloud_firestore_web.FirebaseFirestoreWeb, () => ({
    __proto__: dart.getGetters(cloud_firestore_web.FirebaseFirestoreWeb.__proto__),
    [S$._delegate$4]: firestore.Firestore
  }));
  dart.setLibraryUri(cloud_firestore_web.FirebaseFirestoreWeb, I[14]);
  dart.setFieldSignature(cloud_firestore_web.FirebaseFirestoreWeb, () => ({
    __proto__: dart.getFields(cloud_firestore_web.FirebaseFirestoreWeb.__proto__),
    [S$._webFirestore]: dart.fieldType(dart.nullable(firestore.Firestore)),
    [S$._settings]: dart.fieldType(dart.nullable(dart.packageJSType("Settings", false)))
  }));
  platform_interface_firebase_auth.FirebaseAuthPlatform = class FirebaseAuthPlatform extends plugin_platform_interface.PlatformInterface {
    get appInstance() {
      return this[S$.appInstance$1];
    }
    set appInstance(value) {
      super.appInstance = value;
    }
    get tenantId() {
      return this[S$.tenantId];
    }
    set tenantId(value) {
      this[S$.tenantId] = value;
    }
    get app() {
      if (this.appInstance == null) {
        return firebase_core.Firebase.app();
      }
      return dart.nullCheck(this.appInstance);
    }
    static ['_#instanceFor#tearOff'](opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      let pluginConstants = opts && 'pluginConstants' in opts ? opts.pluginConstants : null;
      let persistence = opts && 'persistence' in opts ? opts.persistence : null;
      return platform_interface_firebase_auth.FirebaseAuthPlatform.instanceFor({app: app, pluginConstants: pluginConstants, persistence: persistence});
    }
    static instanceFor(opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      let pluginConstants = opts && 'pluginConstants' in opts ? opts.pluginConstants : null;
      let persistence = opts && 'persistence' in opts ? opts.persistence : null;
      return platform_interface_firebase_auth.FirebaseAuthPlatform.instance.delegateFor({app: app, persistence: persistence}).setInitialValues({languageCode: T$.StringN().as(pluginConstants[S$.$_get]("APP_LANGUAGE_CODE")), currentUser: pluginConstants[S$.$_get]("APP_CURRENT_USER") == null ? null : T$.LinkedHashMapOfString$dynamic().from(core.Map.as(pluginConstants[S$.$_get]("APP_CURRENT_USER")))});
    }
    static get instance() {
      platform_interface_firebase_auth.FirebaseAuthPlatform._instance == null ? platform_interface_firebase_auth.FirebaseAuthPlatform._instance = method_channel_firebase_auth.MethodChannelFirebaseAuth.instance : null;
      return dart.nullCheck(platform_interface_firebase_auth.FirebaseAuthPlatform._instance);
    }
    static set instance(instance) {
      plugin_platform_interface.PlatformInterface.verifyToken(instance, platform_interface_firebase_auth.FirebaseAuthPlatform._token);
      platform_interface_firebase_auth.FirebaseAuthPlatform._instance = instance;
    }
    delegateFor(opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      let persistence = opts && 'persistence' in opts ? opts.persistence : null;
      dart.throw(new core.UnimplementedError.new("delegateFor() is not implemented"));
    }
    setInitialValues(opts) {
      let currentUser = opts && 'currentUser' in opts ? opts.currentUser : null;
      let languageCode = opts && 'languageCode' in opts ? opts.languageCode : null;
      dart.throw(new core.UnimplementedError.new("setInitialValues() is not implemented"));
    }
    get currentUser() {
      dart.throw(new core.UnimplementedError.new("get.currentUser is not implemented"));
    }
    set currentUser(userPlatform) {
      dart.throw(new core.UnimplementedError.new("set.currentUser is not implemented"));
    }
    get languageCode() {
      dart.throw(new core.UnimplementedError.new("languageCode is not implemented"));
    }
    sendAuthChangesEvent(appName, userPlatform) {
      dart.throw(new core.UnimplementedError.new("sendAuthChangesEvent() is not implemented"));
    }
    useAuthEmulator(host, port) {
      dart.throw(new core.UnimplementedError.new("useAuthEmulator() is not implemented"));
    }
    applyActionCode(code) {
      dart.throw(new core.UnimplementedError.new("applyActionCode() is not implemented"));
    }
    checkActionCode(code) {
      dart.throw(new core.UnimplementedError.new("checkActionCode() is not implemented"));
    }
    confirmPasswordReset(code, newPassword) {
      dart.throw(new core.UnimplementedError.new("confirmPasswordReset() is not implemented"));
    }
    createUserWithEmailAndPassword(email, password) {
      dart.throw(new core.UnimplementedError.new("createUserWithEmailAndPassword() is not implemented"));
    }
    fetchSignInMethodsForEmail(email) {
      dart.throw(new core.UnimplementedError.new("fetchSignInMethodsForEmail() is not implemented"));
    }
    getRedirectResult() {
      dart.throw(new core.UnimplementedError.new("getRedirectResult() is not implemented"));
    }
    isSignInWithEmailLink(emailLink) {
      return (emailLink[S$.$contains]("mode=signIn") || emailLink[S$.$contains]("mode%3DsignIn")) && (emailLink[S$.$contains]("oobCode=") || emailLink[S$.$contains]("oobCode%3D"));
    }
    authStateChanges() {
      dart.throw(new core.UnimplementedError.new("authStateChanges() is not implemented"));
    }
    idTokenChanges() {
      dart.throw(new core.UnimplementedError.new("idTokenChanges() is not implemented"));
    }
    userChanges() {
      dart.throw(new core.UnimplementedError.new("userChanges() is not implemented"));
    }
    sendPasswordResetEmail(email, actionCodeSettings = null) {
      dart.throw(new core.UnimplementedError.new("sendPasswordResetEmail() is not implemented"));
    }
    sendSignInLinkToEmail(email, actionCodeSettings) {
      dart.throw(new core.UnimplementedError.new("sendSignInLinkToEmail() is not implemented"));
    }
    setLanguageCode(languageCode) {
      dart.throw(new core.UnimplementedError.new("setLanguageCode() is not implemented"));
    }
    setSettings(opts) {
      let appVerificationDisabledForTesting = opts && 'appVerificationDisabledForTesting' in opts ? opts.appVerificationDisabledForTesting : null;
      let userAccessGroup = opts && 'userAccessGroup' in opts ? opts.userAccessGroup : null;
      let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
      let smsCode = opts && 'smsCode' in opts ? opts.smsCode : null;
      let forceRecaptchaFlow = opts && 'forceRecaptchaFlow' in opts ? opts.forceRecaptchaFlow : null;
      dart.throw(new core.UnimplementedError.new("setSettings() is not implemented"));
    }
    setPersistence(persistence) {
      return async.async(dart.void, function* setPersistence() {
        dart.throw(new core.UnimplementedError.new("setPersistence() is not implemented"));
      });
    }
    signInAnonymously() {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, function* signInAnonymously() {
        dart.throw(new core.UnimplementedError.new("signInAnonymously() is not implemented"));
      });
    }
    signInWithCredential(credential) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, function* signInWithCredential() {
        dart.throw(new core.UnimplementedError.new("signInWithCredential() is not implemented"));
      });
    }
    signInWithCustomToken(token) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, function* signInWithCustomToken() {
        dart.throw(new core.UnimplementedError.new("signInWithCustomToken() is not implemented"));
      });
    }
    signInWithEmailAndPassword(email, password) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, function* signInWithEmailAndPassword() {
        dart.throw(new core.UnimplementedError.new("signInWithEmailAndPassword() is not implemented"));
      });
    }
    signInWithEmailLink(email, emailLink) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, function* signInWithEmailLink() {
        dart.throw(new core.UnimplementedError.new("signInWithEmailLink() is not implemented"));
      });
    }
    signInWithProvider(provider) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, function* signInWithProvider() {
        dart.throw(new core.UnimplementedError.new("signInWithProvider() is not implemented"));
      });
    }
    signInWithPhoneNumber(phoneNumber, applicationVerifier) {
      return async.async(platform_interface_confirmation_result.ConfirmationResultPlatform, function* signInWithPhoneNumber() {
        dart.throw(new core.UnimplementedError.new("signInWithPhoneNumber() is not implemented"));
      });
    }
    signInWithPopup(provider) {
      dart.throw(new core.UnimplementedError.new("signInWithPopup() is not implemented"));
    }
    signInWithRedirect(provider) {
      dart.throw(new core.UnimplementedError.new("signInWithRedirect() is not implemented"));
    }
    signOut() {
      return async.async(dart.void, function* signOut() {
        dart.throw(new core.UnimplementedError.new("signOut() is not implemented"));
      });
    }
    verifyPasswordResetCode(code) {
      dart.throw(new core.UnimplementedError.new("verifyPasswordResetCode() is not implemented"));
    }
    verifyPhoneNumber(opts) {
      let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
      let multiFactorInfo = opts && 'multiFactorInfo' in opts ? opts.multiFactorInfo : null;
      let verificationCompleted = opts && 'verificationCompleted' in opts ? opts.verificationCompleted : null;
      let verificationFailed = opts && 'verificationFailed' in opts ? opts.verificationFailed : null;
      let codeSent = opts && 'codeSent' in opts ? opts.codeSent : null;
      let codeAutoRetrievalTimeout = opts && 'codeAutoRetrievalTimeout' in opts ? opts.codeAutoRetrievalTimeout : null;
      let timeout = opts && 'timeout' in opts ? opts.timeout : C[25] || CT.C25;
      let forceResendingToken = opts && 'forceResendingToken' in opts ? opts.forceResendingToken : null;
      let multiFactorSession = opts && 'multiFactorSession' in opts ? opts.multiFactorSession : null;
      let autoRetrievedSmsCodeForTesting = opts && 'autoRetrievedSmsCodeForTesting' in opts ? opts.autoRetrievedSmsCodeForTesting : null;
      dart.throw(new core.UnimplementedError.new("verifyPhoneNumber() is not implemented"));
    }
  };
  (platform_interface_firebase_auth.FirebaseAuthPlatform.new = function(opts) {
    let appInstance = opts && 'appInstance' in opts ? opts.appInstance : null;
    this[S$.tenantId] = null;
    this[S$.appInstance$1] = appInstance;
    platform_interface_firebase_auth.FirebaseAuthPlatform.__proto__.new.call(this, {token: platform_interface_firebase_auth.FirebaseAuthPlatform._token});
    ;
  }).prototype = platform_interface_firebase_auth.FirebaseAuthPlatform.prototype;
  dart.addTypeTests(platform_interface_firebase_auth.FirebaseAuthPlatform);
  dart.addTypeCaches(platform_interface_firebase_auth.FirebaseAuthPlatform);
  dart.setMethodSignature(platform_interface_firebase_auth.FirebaseAuthPlatform, () => ({
    __proto__: dart.getMethods(platform_interface_firebase_auth.FirebaseAuthPlatform.__proto__),
    delegateFor: dart.fnType(platform_interface_firebase_auth.FirebaseAuthPlatform, [], {persistence: dart.nullable(types.Persistence)}, {app: firebase_core.FirebaseApp}),
    setInitialValues: dart.fnType(platform_interface_firebase_auth.FirebaseAuthPlatform, [], {currentUser: dart.nullable(core.Map$(core.String, dart.dynamic)), languageCode: dart.nullable(core.String)}, {}),
    sendAuthChangesEvent: dart.fnType(dart.void, [core.String, dart.nullable(platform_interface_user.UserPlatform)]),
    useAuthEmulator: dart.fnType(async.Future$(dart.void), [core.String, core.int]),
    applyActionCode: dart.fnType(async.Future$(dart.void), [core.String]),
    checkActionCode: dart.fnType(async.Future$(action_code_info.ActionCodeInfo), [core.String]),
    confirmPasswordReset: dart.fnType(async.Future$(dart.void), [core.String, core.String]),
    createUserWithEmailAndPassword: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), [core.String, core.String]),
    fetchSignInMethodsForEmail: dart.fnType(async.Future$(core.List$(core.String)), [core.String]),
    getRedirectResult: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), []),
    isSignInWithEmailLink: dart.fnType(core.bool, [core.String]),
    authStateChanges: dart.fnType(async.Stream$(dart.nullable(platform_interface_user.UserPlatform)), []),
    idTokenChanges: dart.fnType(async.Stream$(dart.nullable(platform_interface_user.UserPlatform)), []),
    userChanges: dart.fnType(async.Stream$(dart.nullable(platform_interface_user.UserPlatform)), []),
    sendPasswordResetEmail: dart.fnType(async.Future$(dart.void), [core.String], [dart.nullable(action_code_settings.ActionCodeSettings)]),
    sendSignInLinkToEmail: dart.fnType(async.Future$(dart.void), [core.String, action_code_settings.ActionCodeSettings]),
    setLanguageCode: dart.fnType(async.Future$(dart.void), [dart.nullable(core.String)]),
    setSettings: dart.fnType(async.Future$(dart.void), [], {appVerificationDisabledForTesting: dart.nullable(core.bool), forceRecaptchaFlow: dart.nullable(core.bool), phoneNumber: dart.nullable(core.String), smsCode: dart.nullable(core.String), userAccessGroup: dart.nullable(core.String)}, {}),
    setPersistence: dart.fnType(async.Future$(dart.void), [types.Persistence]),
    signInAnonymously: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), []),
    signInWithCredential: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), [auth_credential.AuthCredential]),
    signInWithCustomToken: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), [core.String]),
    signInWithEmailAndPassword: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), [core.String, core.String]),
    signInWithEmailLink: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), [core.String, core.String]),
    signInWithProvider: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), [auth_provider.AuthProvider]),
    signInWithPhoneNumber: dart.fnType(async.Future$(platform_interface_confirmation_result.ConfirmationResultPlatform), [core.String, platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform]),
    signInWithPopup: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), [auth_provider.AuthProvider]),
    signInWithRedirect: dart.fnType(async.Future$(dart.void), [auth_provider.AuthProvider]),
    signOut: dart.fnType(async.Future$(dart.void), []),
    verifyPasswordResetCode: dart.fnType(async.Future$(core.String), [core.String]),
    verifyPhoneNumber: dart.fnType(async.Future$(dart.void), [], {autoRetrievedSmsCodeForTesting: dart.nullable(core.String), forceResendingToken: dart.nullable(core.int), multiFactorInfo: dart.nullable(platform_interface_multi_factor.PhoneMultiFactorInfo), multiFactorSession: dart.nullable(platform_interface_multi_factor.MultiFactorSession), phoneNumber: dart.nullable(core.String), timeout: core.Duration}, {codeAutoRetrievalTimeout: dart.fnType(dart.void, [core.String]), codeSent: dart.fnType(dart.void, [core.String, dart.nullable(core.int)]), verificationCompleted: dart.fnType(dart.void, [phone_auth.PhoneAuthCredential]), verificationFailed: dart.fnType(dart.void, [firebase_auth_exception.FirebaseAuthException])})
  }));
  dart.setStaticMethodSignature(platform_interface_firebase_auth.FirebaseAuthPlatform, () => ['instanceFor']);
  dart.setGetterSignature(platform_interface_firebase_auth.FirebaseAuthPlatform, () => ({
    __proto__: dart.getGetters(platform_interface_firebase_auth.FirebaseAuthPlatform.__proto__),
    app: firebase_core.FirebaseApp,
    currentUser: dart.nullable(platform_interface_user.UserPlatform),
    languageCode: dart.nullable(core.String)
  }));
  dart.setSetterSignature(platform_interface_firebase_auth.FirebaseAuthPlatform, () => ({
    __proto__: dart.getSetters(platform_interface_firebase_auth.FirebaseAuthPlatform.__proto__),
    currentUser: dart.nullable(platform_interface_user.UserPlatform)
  }));
  dart.setStaticGetterSignature(platform_interface_firebase_auth.FirebaseAuthPlatform, () => ['instance']);
  dart.setStaticSetterSignature(platform_interface_firebase_auth.FirebaseAuthPlatform, () => ['instance']);
  dart.setLibraryUri(platform_interface_firebase_auth.FirebaseAuthPlatform, I[16]);
  dart.setFieldSignature(platform_interface_firebase_auth.FirebaseAuthPlatform, () => ({
    __proto__: dart.getFields(platform_interface_firebase_auth.FirebaseAuthPlatform.__proto__),
    appInstance: dart.finalFieldType(dart.nullable(firebase_core.FirebaseApp)),
    tenantId: dart.fieldType(dart.nullable(core.String))
  }));
  dart.setStaticFieldSignature(platform_interface_firebase_auth.FirebaseAuthPlatform, () => ['_token', '_instance']);
  dart.defineLazy(platform_interface_firebase_auth.FirebaseAuthPlatform, {
    /*platform_interface_firebase_auth.FirebaseAuthPlatform._token*/get _token() {
      return new core.Object.new();
    },
    /*platform_interface_firebase_auth.FirebaseAuthPlatform._instance*/get _instance() {
      return null;
    },
    set _instance(value) {}
  }, false);
  firebase_auth_web.FirebaseAuthWeb = class FirebaseAuthWeb extends platform_interface_firebase_auth.FirebaseAuthPlatform {
    static ['_#_#tearOff']() {
      return new firebase_auth_web.FirebaseAuthWeb.__();
    }
    static ['_#new#tearOff'](opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      let persistence = opts && 'persistence' in opts ? opts.persistence : null;
      return new firebase_auth_web.FirebaseAuthWeb.new({app: app, persistence: persistence});
    }
    static registerWith(registrar) {
      firebase_core_web.FirebaseCoreWeb.registerService("auth");
      platform_interface_firebase_auth.FirebaseAuthPlatform.instance = firebase_auth_web.FirebaseAuthWeb.instance;
      platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform.instance = new firebase_auth_web_multi_factor.PhoneMultiFactorGeneratorWeb.new();
      platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform.instance = firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb.instance;
    }
    static get instance() {
      return new firebase_auth_web.FirebaseAuthWeb.__();
    }
    get delegate() {
      this[S$._webAuth] == null ? this[S$._webAuth] = auth$.getAuthInstance(core$.app(this.app.name), {persistence: this[S$._persistence]}) : null;
      return dart.nullCheck(this[S$._webAuth]);
    }
    delegateFor(opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      let persistence = opts && 'persistence' in opts ? opts.persistence : null;
      return new firebase_auth_web.FirebaseAuthWeb.new({app: app, persistence: persistence});
    }
    setInitialValues(opts) {
      let currentUser = opts && 'currentUser' in opts ? opts.currentUser : null;
      let languageCode = opts && 'languageCode' in opts ? opts.languageCode : null;
      return this;
    }
    get currentUser() {
      let webCurrentUser = this.delegate.currentUser;
      if (webCurrentUser == null) {
        return null;
      }
      return new firebase_auth_web_user.UserWeb.new(this, new firebase_auth_web_multi_factor.MultiFactorWeb.new(this, multi_factor.multiFactor(dart.nullCheck(this.delegate.currentUser))), dart.nullCheck(this.delegate.currentUser));
    }
    set currentUser(value) {
      super.currentUser = value;
    }
    get tenantId() {
      return this.delegate.tenantId;
    }
    set tenantId(tenantId) {
      this.delegate.tenantId = tenantId;
    }
    sendAuthChangesEvent(appName, userPlatform) {
      if (!(firebase_auth_web.FirebaseAuthWeb._userChangesListeners[S$.$_get](appName) != null)) dart.assertFailed(null, I[15], 156, 12, "_userChangesListeners[appName] != null");
      dart.nullCheck(firebase_auth_web.FirebaseAuthWeb._userChangesListeners[S$.$_get](appName)).add(userPlatform);
    }
    applyActionCode(code) {
      return async.async(dart.void, (function* applyActionCode() {
        try {
          yield this.delegate.applyActionCode(code);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    checkActionCode(code) {
      return async.async(action_code_info.ActionCodeInfo, (function* checkActionCode() {
        try {
          return dart.nullCheck(web_utils$.convertWebActionCodeInfo(yield this.delegate.checkActionCode(code)));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    confirmPasswordReset(code, newPassword) {
      return async.async(dart.void, (function* confirmPasswordReset() {
        try {
          yield this.delegate.confirmPasswordReset(code, newPassword);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    createUserWithEmailAndPassword(email, password) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* createUserWithEmailAndPassword() {
        try {
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this, yield this.delegate.createUserWithEmailAndPassword(email, password));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    fetchSignInMethodsForEmail(email) {
      return async.async(T$.ListOfString(), (function* fetchSignInMethodsForEmail() {
        try {
          return yield this.delegate.fetchSignInMethodsForEmail(email);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    getRedirectResult() {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* getRedirectResult() {
        try {
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this, yield this.delegate.getRedirectResult());
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    authStateChanges() {
      return new (T$._AsyncStarImplOfUserPlatformN()).new((function* authStateChanges(stream) {
        yield this[S$._initialized].future;
        if (stream.add(this.currentUser)) return;
        yield;
        if (stream.addStream(dart.nullCheck(firebase_auth_web.FirebaseAuthWeb._authStateChangesListeners[S$.$_get](this.app.name)).stream)) return;
        yield;
      }).bind(this)).stream;
    }
    idTokenChanges() {
      return new (T$._AsyncStarImplOfUserPlatformN()).new((function* idTokenChanges(stream) {
        yield this[S$._initialized].future;
        if (stream.add(this.currentUser)) return;
        yield;
        if (stream.addStream(dart.nullCheck(firebase_auth_web.FirebaseAuthWeb._idTokenChangesListeners[S$.$_get](this.app.name)).stream)) return;
        yield;
      }).bind(this)).stream;
    }
    userChanges() {
      return new (T$._AsyncStarImplOfUserPlatformN()).new((function* userChanges(stream) {
        yield this[S$._initialized].future;
        if (stream.add(this.currentUser)) return;
        yield;
        if (stream.addStream(dart.nullCheck(firebase_auth_web.FirebaseAuthWeb._userChangesListeners[S$.$_get](this.app.name)).stream)) return;
        yield;
      }).bind(this)).stream;
    }
    sendPasswordResetEmail(email, actionCodeSettings = null) {
      return async.async(dart.void, (function* sendPasswordResetEmail() {
        try {
          yield this.delegate.sendPasswordResetEmail(email, web_utils$.convertPlatformActionCodeSettings(actionCodeSettings));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    sendSignInLinkToEmail(email, actionCodeSettings = null) {
      return async.async(dart.void, (function* sendSignInLinkToEmail() {
        try {
          yield this.delegate.sendSignInLinkToEmail(email, web_utils$.convertPlatformActionCodeSettings(actionCodeSettings));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    get languageCode() {
      return this.delegate.languageCode;
    }
    setLanguageCode(languageCode) {
      return async.async(dart.void, (function* setLanguageCode() {
        this.delegate.languageCode = languageCode;
      }).bind(this));
    }
    setSettings(opts) {
      let appVerificationDisabledForTesting = opts && 'appVerificationDisabledForTesting' in opts ? opts.appVerificationDisabledForTesting : null;
      let userAccessGroup = opts && 'userAccessGroup' in opts ? opts.userAccessGroup : null;
      let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
      let smsCode = opts && 'smsCode' in opts ? opts.smsCode : null;
      let forceRecaptchaFlow = opts && 'forceRecaptchaFlow' in opts ? opts.forceRecaptchaFlow : null;
      return async.async(dart.void, (function* setSettings() {
        this.delegate.settings.appVerificationDisabledForTesting = appVerificationDisabledForTesting;
      }).bind(this));
    }
    setPersistence(persistence) {
      return async.async(dart.void, (function* setPersistence() {
        try {
          return this.delegate.setPersistence(persistence);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInAnonymously() {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* signInAnonymously() {
        try {
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this, yield this.delegate.signInAnonymously());
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithCredential(credential) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* signInWithCredential() {
        try {
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this, yield this.delegate.signInWithCredential(dart.nullCheck(web_utils$.convertPlatformCredential(credential))));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e, this[S$._webAuth]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithCustomToken(token) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* signInWithCustomToken() {
        try {
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this, yield this.delegate.signInWithCustomToken(token));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e, this[S$._webAuth]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithEmailAndPassword(email, password) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* signInWithEmailAndPassword() {
        try {
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this, yield this.delegate.signInWithEmailAndPassword(email, password));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e, this[S$._webAuth]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithEmailLink(email, emailLink) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* signInWithEmailLink() {
        try {
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this, yield this.delegate.signInWithEmailLink(email, emailLink));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e, this[S$._webAuth]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithPhoneNumber(phoneNumber, applicationVerifier) {
      return async.async(platform_interface_confirmation_result.ConfirmationResultPlatform, (function* signInWithPhoneNumber() {
        try {
          let verifier = auth$.RecaptchaVerifier.as(applicationVerifier.delegate);
          return new firebase_auth_web_confirmation_result.ConfirmationResultWeb.new(this, yield this.delegate.signInWithPhoneNumber(phoneNumber, verifier));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e, this[S$._webAuth]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithPopup(provider) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* signInWithPopup() {
        try {
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this, yield this.delegate.signInWithPopup(web_utils$.convertPlatformAuthProvider(provider)));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e, this[S$._webAuth]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithRedirect(provider) {
      return async.async(dart.void, (function* signInWithRedirect() {
        try {
          return this.delegate.signInWithRedirect(web_utils$.convertPlatformAuthProvider(provider));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e, this[S$._webAuth]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    signOut() {
      return async.async(dart.void, (function* signOut() {
        try {
          yield this.delegate.signOut();
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    useAuthEmulator(host, port) {
      return async.async(dart.void, (function* useAuthEmulator() {
        try {
          this.delegate.useAuthEmulator("http://" + host + ":" + dart.str(port));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    verifyPasswordResetCode(code) {
      return async.async(core.String, (function* verifyPasswordResetCode() {
        try {
          return yield this.delegate.verifyPasswordResetCode(code);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    verifyPhoneNumber(opts) {
      let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
      let multiFactorInfo = opts && 'multiFactorInfo' in opts ? opts.multiFactorInfo : null;
      let verificationCompleted = opts && 'verificationCompleted' in opts ? opts.verificationCompleted : null;
      let verificationFailed = opts && 'verificationFailed' in opts ? opts.verificationFailed : null;
      let codeSent = opts && 'codeSent' in opts ? opts.codeSent : null;
      let codeAutoRetrievalTimeout = opts && 'codeAutoRetrievalTimeout' in opts ? opts.codeAutoRetrievalTimeout : null;
      let autoRetrievedSmsCodeForTesting = opts && 'autoRetrievedSmsCodeForTesting' in opts ? opts.autoRetrievedSmsCodeForTesting : null;
      let timeout = opts && 'timeout' in opts ? opts.timeout : C[25] || CT.C25;
      let forceResendingToken = opts && 'forceResendingToken' in opts ? opts.forceResendingToken : null;
      let multiFactorSession = opts && 'multiFactorSession' in opts ? opts.multiFactorSession : null;
      return async.async(dart.void, (function* verifyPhoneNumber() {
        let t29;
        try {
          let data = null;
          if (multiFactorSession != null) {
            let _webMultiFactorSession = firebase_auth_web_multi_factor.MultiFactorSessionWeb.as(multiFactorSession);
            if (multiFactorInfo != null) {
              data = new (T$.IdentityMapOfString$dynamic()).from(["multiFactorUid", multiFactorInfo.uid, "session", _webMultiFactorSession.webSession.jsObject]);
            } else {
              data = new (T$.IdentityMapOfString$dynamic()).from(["phoneNumber", phoneNumber, "session", _webMultiFactorSession.webSession.jsObject]);
            }
          }
          let phoneOptions = dart.nullCheck((t29 = data, t29 == null ? phoneNumber : t29));
          let provider = auth$.PhoneAuthProvider.new(this[S$._webAuth]);
          let verifier = new firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb.new({auth: this}).delegate;
          let verificationId = (yield provider.verifyPhoneNumber(utils.jsify(phoneOptions, dart.fn(object => object, T$.ObjectNToObjectN())), verifier));
          codeSent(verificationId, null);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            verificationFailed(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
  };
  (firebase_auth_web.FirebaseAuthWeb.__ = function() {
    this[S$._initialized] = T$.CompleterOfvoid().new();
    this[S$._persistence] = null;
    this[S$._webAuth] = null;
    firebase_auth_web.FirebaseAuthWeb.__proto__.new.call(this, {appInstance: null});
    ;
  }).prototype = firebase_auth_web.FirebaseAuthWeb.prototype;
  (firebase_auth_web.FirebaseAuthWeb.new = function(opts) {
    let app = opts && 'app' in opts ? opts.app : null;
    let persistence = opts && 'persistence' in opts ? opts.persistence : null;
    this[S$._initialized] = T$.CompleterOfvoid().new();
    this[S$._persistence] = null;
    this[S$._webAuth] = null;
    firebase_auth_web.FirebaseAuthWeb.__proto__.new.call(this, {appInstance: app});
    this[S$._persistence] = persistence;
    firebase_auth_web.FirebaseAuthWeb._userChangesListeners[S$.$_set](app.name, T$.StreamControllerOfUserPlatformN().broadcast());
    firebase_auth_web.FirebaseAuthWeb._authStateChangesListeners[S$.$_set](app.name, T$.StreamControllerOfUserPlatformN().broadcast());
    firebase_auth_web.FirebaseAuthWeb._idTokenChangesListeners[S$.$_set](app.name, T$.StreamControllerOfUserPlatformN().broadcast());
    this.delegate.onAuthStateChanged.map(T$.UserWebN(), dart.fn(webUser => {
      if (!this[S$._initialized].isCompleted) {
        this[S$._initialized].complete();
      }
      if (webUser == null) {
        return null;
      } else {
        return new firebase_auth_web_user.UserWeb.new(this, new firebase_auth_web_multi_factor.MultiFactorWeb.new(this, multi_factor.multiFactor(webUser)), webUser);
      }
    }, T$.UserNToUserWebN())).listen(dart.fn(webUser => {
      dart.nullCheck(firebase_auth_web.FirebaseAuthWeb._authStateChangesListeners[S$.$_get](app.name)).add(webUser);
    }, T$.UserWebNTovoid()));
    this.delegate.onIdTokenChanged.map(T$.UserWebN(), dart.fn(webUser => {
      if (webUser == null) {
        return null;
      } else {
        return new firebase_auth_web_user.UserWeb.new(this, new firebase_auth_web_multi_factor.MultiFactorWeb.new(this, multi_factor.multiFactor(webUser)), webUser);
      }
    }, T$.UserNToUserWebN())).listen(dart.fn(webUser => {
      dart.nullCheck(firebase_auth_web.FirebaseAuthWeb._idTokenChangesListeners[S$.$_get](app.name)).add(webUser);
      dart.nullCheck(firebase_auth_web.FirebaseAuthWeb._userChangesListeners[S$.$_get](app.name)).add(webUser);
    }, T$.UserWebNTovoid()));
  }).prototype = firebase_auth_web.FirebaseAuthWeb.prototype;
  dart.addTypeTests(firebase_auth_web.FirebaseAuthWeb);
  dart.addTypeCaches(firebase_auth_web.FirebaseAuthWeb);
  dart.setMethodSignature(firebase_auth_web.FirebaseAuthWeb, () => ({
    __proto__: dart.getMethods(firebase_auth_web.FirebaseAuthWeb.__proto__),
    setInitialValues: dart.fnType(firebase_auth_web.FirebaseAuthWeb, [], {currentUser: dart.nullable(core.Map$(core.String, dart.dynamic)), languageCode: dart.nullable(core.String)}, {}),
    sendSignInLinkToEmail: dart.fnType(async.Future$(dart.void), [core.String], [dart.nullable(action_code_settings.ActionCodeSettings)])
  }));
  dart.setStaticMethodSignature(firebase_auth_web.FirebaseAuthWeb, () => ['registerWith']);
  dart.setGetterSignature(firebase_auth_web.FirebaseAuthWeb, () => ({
    __proto__: dart.getGetters(firebase_auth_web.FirebaseAuthWeb.__proto__),
    delegate: auth$.Auth,
    tenantId: dart.nullable(core.String),
    languageCode: core.String
  }));
  dart.setSetterSignature(firebase_auth_web.FirebaseAuthWeb, () => ({
    __proto__: dart.getSetters(firebase_auth_web.FirebaseAuthWeb.__proto__),
    tenantId: dart.nullable(core.String)
  }));
  dart.setStaticGetterSignature(firebase_auth_web.FirebaseAuthWeb, () => ['instance']);
  dart.setLibraryUri(firebase_auth_web.FirebaseAuthWeb, I[17]);
  dart.setFieldSignature(firebase_auth_web.FirebaseAuthWeb, () => ({
    __proto__: dart.getFields(firebase_auth_web.FirebaseAuthWeb.__proto__),
    [S$._initialized]: dart.fieldType(async.Completer$(dart.void)),
    [S$._persistence]: dart.fieldType(dart.nullable(types.Persistence)),
    [S$._webAuth]: dart.fieldType(dart.nullable(auth$.Auth))
  }));
  dart.setStaticFieldSignature(firebase_auth_web.FirebaseAuthWeb, () => ['_authStateChangesListeners', '_idTokenChangesListeners', '_userChangesListeners']);
  dart.defineLazy(firebase_auth_web.FirebaseAuthWeb, {
    /*firebase_auth_web.FirebaseAuthWeb._authStateChangesListeners*/get _authStateChangesListeners() {
      return new (T$.IdentityMapOfString$StreamControllerOfUserPlatformN()).new();
    },
    set _authStateChangesListeners(value) {},
    /*firebase_auth_web.FirebaseAuthWeb._idTokenChangesListeners*/get _idTokenChangesListeners() {
      return new (T$.IdentityMapOfString$StreamControllerOfUserPlatformN()).new();
    },
    set _idTokenChangesListeners(value) {},
    /*firebase_auth_web.FirebaseAuthWeb._userChangesListeners*/get _userChangesListeners() {
      return new (T$.IdentityMapOfString$StreamControllerOfUserPlatformN()).new();
    },
    set _userChangesListeners(value) {}
  }, false);
  firebase_core_platform_interface.FirebaseAppPlatform = class FirebaseAppPlatform extends plugin_platform_interface.PlatformInterface {
    get name() {
      return this[S$.name];
    }
    set name(value) {
      super.name = value;
    }
    get options() {
      return this[S$.options];
    }
    set options(value) {
      super.options = value;
    }
    static ['_#new#tearOff'](name, options) {
      return new firebase_core_platform_interface.FirebaseAppPlatform.new(name, options);
    }
    static verifyExtends(instance) {
      plugin_platform_interface.PlatformInterface.verifyToken(instance, firebase_core_platform_interface.FirebaseAppPlatform._token);
    }
    get [S$._isDefault]() {
      return this.name === "[DEFAULT]";
    }
    get isAutomaticDataCollectionEnabled() {
      dart.throw(new core.UnimplementedError.new("isAutomaticDataCollectionEnabled has not been implemented."));
    }
    delete() {
      return async.async(dart.void, function* $delete() {
        dart.throw(new core.UnimplementedError.new("delete() has not been implemented."));
      });
    }
    setAutomaticDataCollectionEnabled(enabled) {
      return async.async(dart.void, function* setAutomaticDataCollectionEnabled() {
        dart.throw(new core.UnimplementedError.new("setAutomaticDataCollectionEnabled() has not been implemented."));
      });
    }
    setAutomaticResourceManagementEnabled(enabled) {
      return async.async(dart.void, function* setAutomaticResourceManagementEnabled() {
        dart.throw(new core.UnimplementedError.new("setAutomaticResourceManagementEnabled() has not been implemented."));
      });
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!firebase_core_platform_interface.FirebaseAppPlatform.is(other)) return false;
      return other.name === this.name && other.options._equals(this.options);
    }
    get hashCode() {
      return core.Object.hash(this.name, this.options);
    }
    toString() {
      return dart.str(dart.wrapType(firebase_core_platform_interface.FirebaseAppPlatform)) + "(" + this.name + ")";
    }
  };
  (firebase_core_platform_interface.FirebaseAppPlatform.new = function(name, options) {
    this[S$.name] = name;
    this[S$.options] = options;
    firebase_core_platform_interface.FirebaseAppPlatform.__proto__.new.call(this, {token: firebase_core_platform_interface.FirebaseAppPlatform._token});
    ;
  }).prototype = firebase_core_platform_interface.FirebaseAppPlatform.prototype;
  dart.addTypeTests(firebase_core_platform_interface.FirebaseAppPlatform);
  dart.addTypeCaches(firebase_core_platform_interface.FirebaseAppPlatform);
  dart.setMethodSignature(firebase_core_platform_interface.FirebaseAppPlatform, () => ({
    __proto__: dart.getMethods(firebase_core_platform_interface.FirebaseAppPlatform.__proto__),
    delete: dart.fnType(async.Future$(dart.void), []),
    setAutomaticDataCollectionEnabled: dart.fnType(async.Future$(dart.void), [core.bool]),
    setAutomaticResourceManagementEnabled: dart.fnType(async.Future$(dart.void), [core.bool])
  }));
  dart.setStaticMethodSignature(firebase_core_platform_interface.FirebaseAppPlatform, () => ['verifyExtends']);
  dart.setGetterSignature(firebase_core_platform_interface.FirebaseAppPlatform, () => ({
    __proto__: dart.getGetters(firebase_core_platform_interface.FirebaseAppPlatform.__proto__),
    [S$._isDefault]: core.bool,
    isAutomaticDataCollectionEnabled: core.bool
  }));
  dart.setLibraryUri(firebase_core_platform_interface.FirebaseAppPlatform, I[9]);
  dart.setFieldSignature(firebase_core_platform_interface.FirebaseAppPlatform, () => ({
    __proto__: dart.getFields(firebase_core_platform_interface.FirebaseAppPlatform.__proto__),
    name: dart.finalFieldType(core.String),
    options: dart.finalFieldType(firebase_core_platform_interface.FirebaseOptions)
  }));
  dart.setStaticFieldSignature(firebase_core_platform_interface.FirebaseAppPlatform, () => ['_token']);
  dart.defineExtensionMethods(firebase_core_platform_interface.FirebaseAppPlatform, ['_equals', 'toString']);
  dart.defineExtensionAccessors(firebase_core_platform_interface.FirebaseAppPlatform, ['hashCode']);
  dart.defineLazy(firebase_core_platform_interface.FirebaseAppPlatform, {
    /*firebase_core_platform_interface.FirebaseAppPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  firebase_core_web.FirebaseAppWeb = class FirebaseAppWeb extends firebase_core_platform_interface.FirebaseAppPlatform {
    static ['_#_#tearOff'](name, options) {
      return new firebase_core_web.FirebaseAppWeb.__(name, options);
    }
    delete() {
      return async.async(dart.void, (function* $delete() {
        yield core$.app(this.name).delete();
      }).bind(this));
    }
    get isAutomaticDataCollectionEnabled() {
      return this[S$._isAutomaticDataCollectionEnabled];
    }
    setAutomaticDataCollectionEnabled(enabled) {
      this[S$._isAutomaticDataCollectionEnabled] = enabled;
      return T$.FutureOfvoid().value();
    }
    setAutomaticResourceManagementEnabled(enabled) {
      return T$.FutureOfvoid().value();
    }
  };
  (firebase_core_web.FirebaseAppWeb.__ = function(name, options) {
    this[S$._isAutomaticDataCollectionEnabled] = false;
    firebase_core_web.FirebaseAppWeb.__proto__.new.call(this, name, options);
    ;
  }).prototype = firebase_core_web.FirebaseAppWeb.prototype;
  dart.addTypeTests(firebase_core_web.FirebaseAppWeb);
  dart.addTypeCaches(firebase_core_web.FirebaseAppWeb);
  dart.setLibraryUri(firebase_core_web.FirebaseAppWeb, I[18]);
  dart.setFieldSignature(firebase_core_web.FirebaseAppWeb, () => ({
    __proto__: dart.getFields(firebase_core_web.FirebaseAppWeb.__proto__),
    [S$._isAutomaticDataCollectionEnabled]: dart.fieldType(core.bool)
  }));
  firebase_core_web.FirebaseWebService = class FirebaseWebService extends core.Object {
    get name() {
      return this[S$.name$1];
    }
    set name(value) {
      this[S$.name$1] = value;
    }
    get override() {
      return this[S$.override];
    }
    set override(value) {
      this[S$.override] = value;
    }
    static ['_#_#tearOff'](name, override = null) {
      return new firebase_core_web.FirebaseWebService.__(name, override);
    }
  };
  (firebase_core_web.FirebaseWebService.__ = function(name, override = null) {
    this[S$.name$1] = name;
    this[S$.override] = override;
    ;
  }).prototype = firebase_core_web.FirebaseWebService.prototype;
  dart.addTypeTests(firebase_core_web.FirebaseWebService);
  dart.addTypeCaches(firebase_core_web.FirebaseWebService);
  dart.setLibraryUri(firebase_core_web.FirebaseWebService, I[18]);
  dart.setFieldSignature(firebase_core_web.FirebaseWebService, () => ({
    __proto__: dart.getFields(firebase_core_web.FirebaseWebService.__proto__),
    name: dart.fieldType(core.String),
    override: dart.fieldType(dart.nullable(core.String))
  }));
  firebase_core_platform_interface.FirebasePlatform = class FirebasePlatform extends plugin_platform_interface.PlatformInterface {
    static get instance() {
      return firebase_core_platform_interface.FirebasePlatform._instance;
    }
    static set instance(instance) {
      plugin_platform_interface.PlatformInterface.verifyToken(instance, firebase_core_platform_interface.FirebasePlatform._token);
      firebase_core_platform_interface.FirebasePlatform._instance = instance;
    }
    get apps() {
      dart.throw(new core.UnimplementedError.new("apps has not been implemented."));
    }
    initializeApp(opts) {
      let name = opts && 'name' in opts ? opts.name : null;
      let options = opts && 'options' in opts ? opts.options : null;
      dart.throw(new core.UnimplementedError.new("initializeApp() has not been implemented."));
    }
    app(name = "[DEFAULT]") {
      dart.throw(new core.UnimplementedError.new("app() has not been implemented."));
    }
  };
  (firebase_core_platform_interface.FirebasePlatform.new = function() {
    firebase_core_platform_interface.FirebasePlatform.__proto__.new.call(this, {token: firebase_core_platform_interface.FirebasePlatform._token});
    ;
  }).prototype = firebase_core_platform_interface.FirebasePlatform.prototype;
  dart.addTypeTests(firebase_core_platform_interface.FirebasePlatform);
  dart.addTypeCaches(firebase_core_platform_interface.FirebasePlatform);
  dart.setMethodSignature(firebase_core_platform_interface.FirebasePlatform, () => ({
    __proto__: dart.getMethods(firebase_core_platform_interface.FirebasePlatform.__proto__),
    initializeApp: dart.fnType(async.Future$(firebase_core_platform_interface.FirebaseAppPlatform), [], {name: dart.nullable(core.String), options: dart.nullable(firebase_core_platform_interface.FirebaseOptions)}, {}),
    app: dart.fnType(firebase_core_platform_interface.FirebaseAppPlatform, [], [core.String])
  }));
  dart.setGetterSignature(firebase_core_platform_interface.FirebasePlatform, () => ({
    __proto__: dart.getGetters(firebase_core_platform_interface.FirebasePlatform.__proto__),
    apps: core.List$(firebase_core_platform_interface.FirebaseAppPlatform)
  }));
  dart.setStaticGetterSignature(firebase_core_platform_interface.FirebasePlatform, () => ['instance']);
  dart.setStaticSetterSignature(firebase_core_platform_interface.FirebasePlatform, () => ['instance']);
  dart.setLibraryUri(firebase_core_platform_interface.FirebasePlatform, I[9]);
  dart.setStaticFieldSignature(firebase_core_platform_interface.FirebasePlatform, () => ['_token', '_instance']);
  dart.defineLazy(firebase_core_platform_interface.FirebasePlatform, {
    /*firebase_core_platform_interface.FirebasePlatform._token*/get _token() {
      return new core.Object.new();
    },
    /*firebase_core_platform_interface.FirebasePlatform._instance*/get _instance() {
      return new firebase_core_platform_interface.MethodChannelFirebase.new();
    },
    set _instance(value) {}
  }, false);
  firebase_core_web.FirebaseCoreWeb = class FirebaseCoreWeb extends firebase_core_platform_interface.FirebasePlatform {
    static registerService(service) {
      firebase_core_web.FirebaseCoreWeb._services[S$.$putIfAbsent](service, dart.fn(() => new firebase_core_web.FirebaseWebService.__(service), T$.VoidToFirebaseWebService()));
    }
    static registerWith(registrar) {
      firebase_core_platform_interface.FirebasePlatform.instance = new firebase_core_web.FirebaseCoreWeb.new();
    }
    get [S$._firebaseSDKVersion]() {
      let t30;
      return core.String.as((t30 = js.context._get("flutterfire_web_sdk_version"), t30 == null ? "9.9.0" : t30));
    }
    get [S$._ignoredServiceScripts]() {
      try {
        let ignored = js.JsObject.fromBrowserObject(core.Object.as(js.context._get("flutterfire_ignore_scripts")));
        if (core.Iterable.is(ignored)) {
          return core.Iterable.as(ignored)[S$.$map](core.String, dart.fn(e => dart.toString(e), T$.dynamicToString()))[S$.$toList]({growable: false});
        }
      } catch (e$) {
        let e = dart.getThrown(e$);
        if (core.Object.is(e)) {
        } else
          throw e$;
      }
      return T$.JSArrayOfString().of([]);
    }
    [S$._injectSrcScript](src, windowVar) {
      return async.async(dart.void, function* _injectSrcScript() {
        let script = html.ScriptElement.new();
        script[S$.$type] = "text/javascript";
        script.crossOrigin = "anonymous";
        script[S$.$text] = "      window.ff_trigger_" + windowVar + " = async (callback) => {\n        callback(await import(\"" + src + "\"));\n      };\n    ";
        if (!(html.document[S$.$head] != null)) dart.assertFailed(null, I[19], 90, 12, "document.head != null");
        dart.nullCheck(html.document[S$.$head])[S$.$append](script);
        let completer = async.Completer.new();
        js.context.callMethod("ff_trigger_" + windowVar, [dart.fn(module => {
            js.context._set(windowVar, module);
            js.context.deleteProperty("ff_trigger_" + windowVar);
            completer.complete();
          }, T$.dynamicToNull())]);
        yield completer.future;
      });
    }
    [S$._initializeCore]() {
      return async.async(dart.void, (function* _initializeCore() {
        if (js.context._get("firebase_core") != null) {
          return;
        }
        let version = this[S$._firebaseSDKVersion];
        let ignored = this[S$._ignoredServiceScripts];
        yield async.Future.wait(dart.void, firebase_core_web.FirebaseCoreWeb._services[S$.$values][S$.$map](T$.FutureOfvoid(), dart.fn(service => {
          let t31, t31$;
          if (ignored[S$.$contains]((t31 = service.override, t31 == null ? service.name : t31))) {
            return async.Future.value();
          }
          return this[S$._injectSrcScript]("https://www.gstatic.com/firebasejs/" + version + "/firebase-" + service.name + ".js", "firebase_" + dart.str((t31$ = service.override, t31$ == null ? service.name : t31$)));
        }, T$.FirebaseWebServiceToFutureOfvoid())));
      }).bind(this));
    }
    get apps() {
      return firebase_core_web.guardNotInitialized(T$.ListOfFirebaseAppPlatform(), dart.fn(() => core$.apps[S$.$map](firebase_core_platform_interface.FirebaseAppPlatform, C[30] || CT.C30)[S$.$toList]({growable: false}), T$.VoidToListOfFirebaseAppPlatform()));
    }
    initializeApp(opts) {
      let name = opts && 'name' in opts ? opts.name : null;
      let options = opts && 'options' in opts ? opts.options : null;
      return async.async(firebase_core_platform_interface.FirebaseAppPlatform, (function* initializeApp() {
        yield this[S$._initializeCore]();
        firebase_core_web.guardNotInitialized(core.String, dart.fn(() => dart.global.firebase_core.SDK_VERSION, T$.VoidToString()));
        if (!dart.fn(() => {
          if (dart.global.firebase_core.SDK_VERSION !== "9.9.0") {
            core.print("            WARNING: FlutterFire for Web is explicitly tested against Firebase JS SDK version \"" + "9.9.0" + "\"\n            but your currently specifying \"" + dart.global.firebase_core.SDK_VERSION + "\" by either the imported Firebase JS SDKs in your web/index.html\n            file or by providing an override - this may lead to unexpected issues in your application. It is recommended that you change all of the versions of the\n            Firebase JS SDK version \"" + "9.9.0" + "\":\n\n            If you override the version manually:\n              change:\n                <script>window.flutterfire_web_sdk_version = '" + dart.global.firebase_core.SDK_VERSION + "';</script>\n              to:\n                <script>window.flutterfire_web_sdk_version = '" + "9.9.0" + "';</script>\n\n            If you import the Firebase scripts in index.html, instead allow FlutterFire to manage this for you by removing\n            any Firebase scripts in your web/index.html file:\n                e.g. remove: <script src=\"https://www.gstatic.com/firebasejs/" + dart.global.firebase_core.SDK_VERSION + "/firebase-app.js\"></script>\n          ");
          }
          return true;
        }, T$.VoidTobool())()) dart.assertFailed(null, I[19], 153, 7, "() {\n        if (firebase.SDK_VERSION != supportedFirebaseJsSdkVersion) {\n          // ignore: avoid_print\n          print(\n            '''\n            WARNING: FlutterFire for Web is explicitly tested against Firebase JS SDK version \"$supportedFirebaseJsSdkVersion\"\n            but your currently specifying \"${firebase.SDK_VERSION}\" by either the imported Firebase JS SDKs in your web/index.html\n            file or by providing an override - this may lead to unexpected issues in your application. It is recommended that you change all of the versions of the\n            Firebase JS SDK version \"$supportedFirebaseJsSdkVersion\":\n\n            If you override the version manually:\n              change:\n                <script>window.flutterfire_web_sdk_version = '${firebase.SDK_VERSION}';</script>\n              to:\n                <script>window.flutterfire_web_sdk_version = '$supportedFirebaseJsSdkVersion';</script>\n\n            If you import the Firebase scripts in index.html, instead allow FlutterFire to manage this for you by removing\n            any Firebase scripts in your web/index.html file:\n                e.g. remove: <script src=\"https://www.gstatic.com/firebasejs/${firebase.SDK_VERSION}/firebase-app.js\"></script>\n          ''',\n          );\n        }\n\n        return true;\n      }()");
        let app = null;
        if (name == null || name === "[DEFAULT]") {
          let defaultAppExists = false;
          try {
            app = core$.app();
            defaultAppExists = true;
          } catch (e$) {
            let e = dart.getThrown(e$);
            if (core.Object.is(e)) {
            } else
              throw e$;
          }
          if (defaultAppExists) {
            if (options != null) {
              if (options.apiKey !== dart.nullCheck(app).options.apiKey || options.databaseURL !== app.options.databaseURL || options.storageBucket !== app.options.storageBucket) {
                dart.throw(firebase_core_platform_interface.duplicateApp("[DEFAULT]"));
              }
            }
          } else {
            if (!(options != null)) dart.assertFailed("FirebaseOptions cannot be null when creating the default app.", I[19], 207, 11, "options != null");
            app = core$.initializeApp({apiKey: dart.nullCheck(options).apiKey, authDomain: options.authDomain, databaseURL: options.databaseURL, projectId: options.projectId, storageBucket: options.storageBucket, messagingSenderId: options.messagingSenderId, appId: options.appId, measurementId: options.measurementId});
          }
        }
        if (name != null && name !== "[DEFAULT]") {
          if (!(options != null)) dart.assertFailed("FirebaseOptions cannot be null when creating a secondary Firebase app.", I[19], 229, 9, "options != null");
          try {
            app = core$.initializeApp({name: name, apiKey: dart.nullCheck(options).apiKey, authDomain: options.authDomain, databaseURL: options.databaseURL, projectId: options.projectId, storageBucket: options.storageBucket, messagingSenderId: options.messagingSenderId, appId: options.appId, measurementId: options.measurementId});
          } catch (e$0) {
            let e = dart.getThrown(e$0);
            if (core.Object.is(e)) {
              if (firebase_core_web._getJSErrorCode(e) === "app/duplicate-app") {
                dart.throw(firebase_core_platform_interface.duplicateApp(name));
              }
              dart.throw(firebase_core_web._catchJSError(e));
            } else
              throw e$0;
          }
        }
        return firebase_core_web._createFromJsApp(dart.nullCheck(app));
      }).bind(this));
    }
    app(name = "[DEFAULT]") {
      let app = null;
      try {
        app = firebase_core_web.guardNotInitialized(app$.App, dart.fn(() => core$.app(name), T$.VoidToApp()));
      } catch (e$) {
        let e = dart.getThrown(e$);
        if (core.Object.is(e)) {
          if (firebase_core_web._getJSErrorCode(e) === "app/no-app") {
            dart.throw(firebase_core_platform_interface.noAppExists(name));
          }
          dart.throw(firebase_core_web._catchJSError(e));
        } else
          throw e$;
      }
      return firebase_core_web._createFromJsApp(app);
    }
    static ['_#new#tearOff']() {
      return new firebase_core_web.FirebaseCoreWeb.new();
    }
  };
  (firebase_core_web.FirebaseCoreWeb.new = function() {
    firebase_core_web.FirebaseCoreWeb.__proto__.new.call(this);
    ;
  }).prototype = firebase_core_web.FirebaseCoreWeb.prototype;
  dart.addTypeTests(firebase_core_web.FirebaseCoreWeb);
  dart.addTypeCaches(firebase_core_web.FirebaseCoreWeb);
  dart.setMethodSignature(firebase_core_web.FirebaseCoreWeb, () => ({
    __proto__: dart.getMethods(firebase_core_web.FirebaseCoreWeb.__proto__),
    [S$._injectSrcScript]: dart.fnType(async.Future$(dart.void), [core.String, core.String]),
    [S$._initializeCore]: dart.fnType(async.Future$(dart.void), [])
  }));
  dart.setStaticMethodSignature(firebase_core_web.FirebaseCoreWeb, () => ['registerService', 'registerWith']);
  dart.setGetterSignature(firebase_core_web.FirebaseCoreWeb, () => ({
    __proto__: dart.getGetters(firebase_core_web.FirebaseCoreWeb.__proto__),
    [S$._firebaseSDKVersion]: core.String,
    [S$._ignoredServiceScripts]: core.List$(core.String)
  }));
  dart.setLibraryUri(firebase_core_web.FirebaseCoreWeb, I[18]);
  dart.setStaticFieldSignature(firebase_core_web.FirebaseCoreWeb, () => ['_services']);
  dart.defineLazy(firebase_core_web.FirebaseCoreWeb, {
    /*firebase_core_web.FirebaseCoreWeb._services*/get _services() {
      return new (T$.IdentityMapOfString$FirebaseWebService()).from(["core", new firebase_core_web.FirebaseWebService.__("app", "core"), "app-check", new firebase_core_web.FirebaseWebService.__("app-check", "app_check"), "remote-config", new firebase_core_web.FirebaseWebService.__("remote-config", "remote_config")]);
    },
    set _services(value) {}
  }, false);
  firebase_core_web._createFromJsApp = function _createFromJsApp(jsApp) {
    return new firebase_core_web.FirebaseAppWeb.__(jsApp.name, firebase_core_web._createFromJsOptions(jsApp.options));
  };
  firebase_core_web._createFromJsOptions = function _createFromJsOptions(options) {
    return new firebase_core_platform_interface.FirebaseOptions.new({apiKey: options.apiKey, authDomain: options.authDomain, databaseURL: options.databaseURL, projectId: options.projectId, storageBucket: options.storageBucket, messagingSenderId: options.messagingSenderId, appId: options.appId, measurementId: options.measurementId});
  };
  firebase_core_web._getJSErrorCode = function _getJSErrorCode(e) {
    let t34;
    if (dart.equals(js_util.getProperty(dart.dynamic, core.Object.as(e), "name"), "FirebaseError")) {
      t34 = js_util.getProperty(T$.StringN(), core.Object.as(e), "code");
      return t34 == null ? "" : t34;
    }
    return "";
  };
  firebase_core_web._catchJSError = function _catchJSError(e) {
    let t34;
    if (dart.equals(js_util.getProperty(dart.dynamic, core.Object.as(e), "name"), "FirebaseError")) {
      let rawCode = js_util.getProperty(core.String, core.Object.as(e), "code");
      let code = rawCode;
      let message = (t34 = js_util.getProperty(T$.StringN(), core.Object.as(e), "message"), t34 == null ? "" : t34);
      if (code[S$.$contains]("/")) {
        let chunks = code[S$.$split]("/");
        code = chunks[S$.$_get](chunks[S$.$length] - 1);
      }
      return new firebase_core_platform_interface.FirebaseException.new({plugin: "core", code: code, message: message[S$.$replaceAll](" (" + rawCode + ")", "")});
    }
    dart.throw(e);
  };
  firebase_core_web._handleException = function _handleException(exception, stackTrace) {
    if (exception[S$.$toString]()[S$.$contains]("of undefined")) {
      dart.throw(firebase_core_platform_interface.coreNotInitialized());
    }
    core.Error.throwWithStackTrace(exception, stackTrace);
  };
  firebase_core_web.guardNotInitialized = function guardNotInitialized(R, cb) {
    try {
      let value = cb();
      if (async.Future.is(value)) {
        return R.as(value.catchError(C[31] || CT.C31));
      }
      return value;
    } catch (e) {
      let error = dart.getThrown(e);
      let stackTrace = dart.stackTrace(e);
      if (core.Object.is(error)) {
        firebase_core_web._handleException(error, stackTrace);
      } else
        throw e;
    }
  };
  dart.defineLazy(firebase_core_web, {
    /*firebase_core_web.supportedFirebaseJsSdkVersion*/get supportedFirebaseJsSdkVersion() {
      return "9.9.0";
    }
  }, false);
  cloud_firestore_platform_interface.isValidCollectionPath = function isValidCollectionPath(collectionPath) {
    return new pointer.Pointer.new(collectionPath).isCollection();
  };
  cloud_firestore_platform_interface.isValidDocumentPath = function isValidDocumentPath(documentPath) {
    return new pointer.Pointer.new(documentPath).isDocument();
  };
  firebase_core_platform_interface.FirebaseException = class FirebaseException extends core.Object {
    get plugin() {
      return this[S$.plugin];
    }
    set plugin(value) {
      super.plugin = value;
    }
    get message() {
      return this[S$.message];
    }
    set message(value) {
      super.message = value;
    }
    get code() {
      return this[S$.code];
    }
    set code(value) {
      super.code = value;
    }
    get stackTrace() {
      return this[S$.stackTrace];
    }
    set stackTrace(value) {
      super.stackTrace = value;
    }
    static ['_#new#tearOff'](opts) {
      let plugin = opts && 'plugin' in opts ? opts.plugin : null;
      let message = opts && 'message' in opts ? opts.message : null;
      let code = opts && 'code' in opts ? opts.code : null;
      let stackTrace = opts && 'stackTrace' in opts ? opts.stackTrace : null;
      return new firebase_core_platform_interface.FirebaseException.new({plugin: plugin, message: message, code: code, stackTrace: stackTrace});
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!firebase_core_platform_interface.FirebaseException.is(other)) return false;
      return other.hashCode === this.hashCode;
    }
    get hashCode() {
      return core.Object.hash(this.plugin, this.code, this.message);
    }
    toString() {
      let output = "[" + this.plugin + "/" + this.code + "] " + dart.str(this.message);
      if (this.stackTrace != null) {
        output = output + ("\n\n" + dart.toString(this.stackTrace));
      }
      return output;
    }
  };
  (firebase_core_platform_interface.FirebaseException.new = function(opts) {
    let t35;
    let plugin = opts && 'plugin' in opts ? opts.plugin : null;
    let message = opts && 'message' in opts ? opts.message : null;
    let code = opts && 'code' in opts ? opts.code : null;
    let stackTrace = opts && 'stackTrace' in opts ? opts.stackTrace : null;
    this[S$.plugin] = plugin;
    this[S$.message] = message;
    this[S$.stackTrace] = stackTrace;
    this[S$.code] = (t35 = code, t35 == null ? "unknown" : t35);
    ;
  }).prototype = firebase_core_platform_interface.FirebaseException.prototype;
  dart.addTypeTests(firebase_core_platform_interface.FirebaseException);
  dart.addTypeCaches(firebase_core_platform_interface.FirebaseException);
  firebase_core_platform_interface.FirebaseException[dart.implements] = () => [core.Exception];
  dart.setLibraryUri(firebase_core_platform_interface.FirebaseException, I[9]);
  dart.setFieldSignature(firebase_core_platform_interface.FirebaseException, () => ({
    __proto__: dart.getFields(firebase_core_platform_interface.FirebaseException.__proto__),
    plugin: dart.finalFieldType(core.String),
    message: dart.finalFieldType(dart.nullable(core.String)),
    code: dart.finalFieldType(core.String),
    stackTrace: dart.finalFieldType(dart.nullable(core.StackTrace))
  }));
  dart.defineExtensionMethods(firebase_core_platform_interface.FirebaseException, ['_equals', 'toString']);
  dart.defineExtensionAccessors(firebase_core_platform_interface.FirebaseException, ['hashCode']);
  firebase_core_platform_interface.FirebaseOptions = class FirebaseOptions extends core.Object {
    get apiKey() {
      return this[S$.apiKey];
    }
    set apiKey(value) {
      super.apiKey = value;
    }
    get appId() {
      return this[S$.appId];
    }
    set appId(value) {
      super.appId = value;
    }
    get messagingSenderId() {
      return this[S$.messagingSenderId];
    }
    set messagingSenderId(value) {
      super.messagingSenderId = value;
    }
    get projectId() {
      return this[S$.projectId];
    }
    set projectId(value) {
      super.projectId = value;
    }
    get authDomain() {
      return this[S$.authDomain];
    }
    set authDomain(value) {
      super.authDomain = value;
    }
    get databaseURL() {
      return this[S$.databaseURL];
    }
    set databaseURL(value) {
      super.databaseURL = value;
    }
    get storageBucket() {
      return this[S$.storageBucket];
    }
    set storageBucket(value) {
      super.storageBucket = value;
    }
    get measurementId() {
      return this[S$.measurementId];
    }
    set measurementId(value) {
      super.measurementId = value;
    }
    get trackingId() {
      return this[S$.trackingId];
    }
    set trackingId(value) {
      super.trackingId = value;
    }
    get deepLinkURLScheme() {
      return this[S$.deepLinkURLScheme];
    }
    set deepLinkURLScheme(value) {
      super.deepLinkURLScheme = value;
    }
    get androidClientId() {
      return this[S$.androidClientId];
    }
    set androidClientId(value) {
      super.androidClientId = value;
    }
    get iosClientId() {
      return this[S$.iosClientId];
    }
    set iosClientId(value) {
      super.iosClientId = value;
    }
    get iosBundleId() {
      return this[S$.iosBundleId];
    }
    set iosBundleId(value) {
      super.iosBundleId = value;
    }
    get appGroupId() {
      return this[S$.appGroupId];
    }
    set appGroupId(value) {
      super.appGroupId = value;
    }
    static ['_#new#tearOff'](opts) {
      let apiKey = opts && 'apiKey' in opts ? opts.apiKey : null;
      let appId = opts && 'appId' in opts ? opts.appId : null;
      let messagingSenderId = opts && 'messagingSenderId' in opts ? opts.messagingSenderId : null;
      let projectId = opts && 'projectId' in opts ? opts.projectId : null;
      let authDomain = opts && 'authDomain' in opts ? opts.authDomain : null;
      let databaseURL = opts && 'databaseURL' in opts ? opts.databaseURL : null;
      let storageBucket = opts && 'storageBucket' in opts ? opts.storageBucket : null;
      let measurementId = opts && 'measurementId' in opts ? opts.measurementId : null;
      let trackingId = opts && 'trackingId' in opts ? opts.trackingId : null;
      let deepLinkURLScheme = opts && 'deepLinkURLScheme' in opts ? opts.deepLinkURLScheme : null;
      let androidClientId = opts && 'androidClientId' in opts ? opts.androidClientId : null;
      let iosClientId = opts && 'iosClientId' in opts ? opts.iosClientId : null;
      let iosBundleId = opts && 'iosBundleId' in opts ? opts.iosBundleId : null;
      let appGroupId = opts && 'appGroupId' in opts ? opts.appGroupId : null;
      return new firebase_core_platform_interface.FirebaseOptions.new({apiKey: apiKey, appId: appId, messagingSenderId: messagingSenderId, projectId: projectId, authDomain: authDomain, databaseURL: databaseURL, storageBucket: storageBucket, measurementId: measurementId, trackingId: trackingId, deepLinkURLScheme: deepLinkURLScheme, androidClientId: androidClientId, iosClientId: iosClientId, iosBundleId: iosBundleId, appGroupId: appGroupId});
    }
    static ['_#fromPigeon#tearOff'](options) {
      return new firebase_core_platform_interface.FirebaseOptions.fromPigeon(options);
    }
    get asMap() {
      return new (T$.IdentityMapOfString$StringN()).from(["apiKey", this.apiKey, "appId", this.appId, "messagingSenderId", this.messagingSenderId, "projectId", this.projectId, "authDomain", this.authDomain, "databaseURL", this.databaseURL, "storageBucket", this.storageBucket, "measurementId", this.measurementId, "trackingId", this.trackingId, "deepLinkURLScheme", this.deepLinkURLScheme, "androidClientId", this.androidClientId, "iosClientId", this.iosClientId, "iosBundleId", this.iosBundleId, "appGroupId", this.appGroupId]);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!firebase_core_platform_interface.FirebaseOptions.is(other)) return false;
      return (C[32] || CT.C32).equals(this.asMap, other.asMap);
    }
    get hashCode() {
      return (C[32] || CT.C32).hash(this.asMap);
    }
    toString() {
      return this.asMap[S$.$toString]();
    }
  };
  (firebase_core_platform_interface.FirebaseOptions.new = function(opts) {
    let apiKey = opts && 'apiKey' in opts ? opts.apiKey : null;
    let appId = opts && 'appId' in opts ? opts.appId : null;
    let messagingSenderId = opts && 'messagingSenderId' in opts ? opts.messagingSenderId : null;
    let projectId = opts && 'projectId' in opts ? opts.projectId : null;
    let authDomain = opts && 'authDomain' in opts ? opts.authDomain : null;
    let databaseURL = opts && 'databaseURL' in opts ? opts.databaseURL : null;
    let storageBucket = opts && 'storageBucket' in opts ? opts.storageBucket : null;
    let measurementId = opts && 'measurementId' in opts ? opts.measurementId : null;
    let trackingId = opts && 'trackingId' in opts ? opts.trackingId : null;
    let deepLinkURLScheme = opts && 'deepLinkURLScheme' in opts ? opts.deepLinkURLScheme : null;
    let androidClientId = opts && 'androidClientId' in opts ? opts.androidClientId : null;
    let iosClientId = opts && 'iosClientId' in opts ? opts.iosClientId : null;
    let iosBundleId = opts && 'iosBundleId' in opts ? opts.iosBundleId : null;
    let appGroupId = opts && 'appGroupId' in opts ? opts.appGroupId : null;
    this[S$.apiKey] = apiKey;
    this[S$.appId] = appId;
    this[S$.messagingSenderId] = messagingSenderId;
    this[S$.projectId] = projectId;
    this[S$.authDomain] = authDomain;
    this[S$.databaseURL] = databaseURL;
    this[S$.storageBucket] = storageBucket;
    this[S$.measurementId] = measurementId;
    this[S$.trackingId] = trackingId;
    this[S$.deepLinkURLScheme] = deepLinkURLScheme;
    this[S$.androidClientId] = androidClientId;
    this[S$.iosClientId] = iosClientId;
    this[S$.iosBundleId] = iosBundleId;
    this[S$.appGroupId] = appGroupId;
    ;
  }).prototype = firebase_core_platform_interface.FirebaseOptions.prototype;
  (firebase_core_platform_interface.FirebaseOptions.fromPigeon = function(options) {
    this[S$.apiKey] = options.apiKey;
    this[S$.appId] = options.appId;
    this[S$.messagingSenderId] = options.messagingSenderId;
    this[S$.projectId] = options.projectId;
    this[S$.authDomain] = options.authDomain;
    this[S$.databaseURL] = options.databaseURL;
    this[S$.storageBucket] = options.storageBucket;
    this[S$.measurementId] = options.measurementId;
    this[S$.trackingId] = options.trackingId;
    this[S$.deepLinkURLScheme] = options.deepLinkURLScheme;
    this[S$.androidClientId] = options.androidClientId;
    this[S$.iosClientId] = options.iosClientId;
    this[S$.iosBundleId] = options.iosBundleId;
    this[S$.appGroupId] = options.appGroupId;
    ;
  }).prototype = firebase_core_platform_interface.FirebaseOptions.prototype;
  dart.addTypeTests(firebase_core_platform_interface.FirebaseOptions);
  dart.addTypeCaches(firebase_core_platform_interface.FirebaseOptions);
  dart.setGetterSignature(firebase_core_platform_interface.FirebaseOptions, () => ({
    __proto__: dart.getGetters(firebase_core_platform_interface.FirebaseOptions.__proto__),
    asMap: core.Map$(core.String, dart.nullable(core.String))
  }));
  dart.setLibraryUri(firebase_core_platform_interface.FirebaseOptions, I[9]);
  dart.setFieldSignature(firebase_core_platform_interface.FirebaseOptions, () => ({
    __proto__: dart.getFields(firebase_core_platform_interface.FirebaseOptions.__proto__),
    apiKey: dart.finalFieldType(core.String),
    appId: dart.finalFieldType(core.String),
    messagingSenderId: dart.finalFieldType(core.String),
    projectId: dart.finalFieldType(core.String),
    authDomain: dart.finalFieldType(dart.nullable(core.String)),
    databaseURL: dart.finalFieldType(dart.nullable(core.String)),
    storageBucket: dart.finalFieldType(dart.nullable(core.String)),
    measurementId: dart.finalFieldType(dart.nullable(core.String)),
    trackingId: dart.finalFieldType(dart.nullable(core.String)),
    deepLinkURLScheme: dart.finalFieldType(dart.nullable(core.String)),
    androidClientId: dart.finalFieldType(dart.nullable(core.String)),
    iosClientId: dart.finalFieldType(dart.nullable(core.String)),
    iosBundleId: dart.finalFieldType(dart.nullable(core.String)),
    appGroupId: dart.finalFieldType(dart.nullable(core.String))
  }));
  dart.defineExtensionMethods(firebase_core_platform_interface.FirebaseOptions, ['_equals', 'toString']);
  dart.defineExtensionAccessors(firebase_core_platform_interface.FirebaseOptions, ['hashCode']);
  firebase_core_platform_interface.MethodChannelFirebase = class MethodChannelFirebase extends firebase_core_platform_interface.FirebasePlatform {
    [S$._initializeCore$1]() {
      return async.async(dart.void, (function* _initializeCore() {
        let apps = (yield firebase_core_platform_interface.MethodChannelFirebase.api.initializeCore());
        apps[S$.$where](dart.fn(element => element != null, T$.PigeonInitializeResponseNTobool()))[S$.$cast](messages$46pigeon.PigeonInitializeResponse)[S$.$forEach](dart.bind(this, S$._initializeFirebaseAppFromMap));
        firebase_core_platform_interface.MethodChannelFirebase.isCoreInitialized = true;
      }).bind(this));
    }
    [S$._initializeFirebaseAppFromMap](response) {
      let methodChannelFirebaseApp = new firebase_core_platform_interface.MethodChannelFirebaseApp.new(response.name, new firebase_core_platform_interface.FirebaseOptions.fromPigeon(response.options), {isAutomaticDataCollectionEnabled: response.isAutomaticDataCollectionEnabled});
      firebase_core_platform_interface.MethodChannelFirebase.appInstances[S$.$_set](methodChannelFirebaseApp.name, methodChannelFirebaseApp);
      firebase_core_platform_interface.FirebasePluginPlatform._constantsForPluginApps[S$.$_set](methodChannelFirebaseApp.name, response.pluginConstants);
    }
    get apps() {
      return firebase_core_platform_interface.MethodChannelFirebase.appInstances[S$.$values][S$.$toList]({growable: false});
    }
    initializeApp(opts) {
      let name = opts && 'name' in opts ? opts.name : null;
      let options = opts && 'options' in opts ? opts.options : null;
      return async.async(firebase_core_platform_interface.FirebaseAppPlatform, (function* initializeApp() {
        if (!firebase_core_platform_interface.MethodChannelFirebase.isCoreInitialized) {
          yield this[S$._initializeCore$1]();
        }
        if (name == null || name === "[DEFAULT]") {
          let defaultApp = firebase_core_platform_interface.MethodChannelFirebase.appInstances[S$.$_get]("[DEFAULT]");
          let _options = options;
          if (platform.defaultTargetPlatform === platform.TargetPlatform.android && defaultApp == null && _options == null) {
            let options = (yield firebase_core_platform_interface.MethodChannelFirebase.api.optionsFromResource());
            _options = new firebase_core_platform_interface.FirebaseOptions.fromPigeon(options);
          }
          if (defaultApp == null && _options != null) {
            this[S$._initializeFirebaseAppFromMap](yield firebase_core_platform_interface.MethodChannelFirebase.api.initializeApp("[DEFAULT]", new messages$46pigeon.PigeonFirebaseOptions.new({apiKey: _options.apiKey, appId: _options.appId, messagingSenderId: _options.messagingSenderId, projectId: _options.projectId, authDomain: _options.authDomain, databaseURL: _options.databaseURL, storageBucket: _options.storageBucket, measurementId: _options.measurementId, trackingId: _options.trackingId, deepLinkURLScheme: _options.deepLinkURLScheme, androidClientId: _options.androidClientId, iosClientId: _options.iosClientId, iosBundleId: _options.iosBundleId, appGroupId: _options.appGroupId})));
            defaultApp = firebase_core_platform_interface.MethodChannelFirebase.appInstances[S$.$_get]("[DEFAULT]");
          }
          if (defaultApp == null && _options == null) {
            dart.throw(firebase_core_platform_interface.coreNotInitialized());
          }
          if (defaultApp != null && _options != null) {
            if (_options.apiKey !== defaultApp.options.apiKey || _options.databaseURL != null && _options.databaseURL != defaultApp.options.databaseURL || _options.storageBucket != null && _options.storageBucket != defaultApp.options.storageBucket) {
              dart.throw(firebase_core_platform_interface.duplicateApp("[DEFAULT]"));
            }
          }
          return dart.nullCheck(firebase_core_platform_interface.MethodChannelFirebase.appInstances[S$.$_get]("[DEFAULT]"));
        }
        if (!(options != null)) dart.assertFailed("FirebaseOptions cannot be null when creating a secondary Firebase app.", I[20], 143, 7, "options != null");
        if (firebase_core_platform_interface.MethodChannelFirebase.appInstances[S$.$containsKey](name)) {
          let existingApp = dart.nullCheck(firebase_core_platform_interface.MethodChannelFirebase.appInstances[S$.$_get](name));
          if (dart.nullCheck(options).apiKey !== existingApp.options.apiKey || options.databaseURL != null && options.databaseURL != existingApp.options.databaseURL || options.storageBucket != null && options.storageBucket != existingApp.options.storageBucket) {
            dart.throw(firebase_core_platform_interface.duplicateApp(name));
          } else {
            return existingApp;
          }
        }
        this[S$._initializeFirebaseAppFromMap](yield firebase_core_platform_interface.MethodChannelFirebase.api.initializeApp(name, new messages$46pigeon.PigeonFirebaseOptions.new({apiKey: dart.nullCheck(options).apiKey, appId: options.appId, messagingSenderId: options.messagingSenderId, projectId: options.projectId, authDomain: options.authDomain, databaseURL: options.databaseURL, storageBucket: options.storageBucket, measurementId: options.measurementId, trackingId: options.trackingId, deepLinkURLScheme: options.deepLinkURLScheme, androidClientId: options.androidClientId, iosClientId: options.iosClientId, iosBundleId: options.iosBundleId, appGroupId: options.appGroupId})));
        return dart.nullCheck(firebase_core_platform_interface.MethodChannelFirebase.appInstances[S$.$_get](name));
      }).bind(this));
    }
    app(name = "[DEFAULT]") {
      if (firebase_core_platform_interface.MethodChannelFirebase.appInstances[S$.$containsKey](name)) {
        return dart.nullCheck(firebase_core_platform_interface.MethodChannelFirebase.appInstances[S$.$_get](name));
      }
      dart.throw(firebase_core_platform_interface.noAppExists(name));
    }
    static ['_#new#tearOff']() {
      return new firebase_core_platform_interface.MethodChannelFirebase.new();
    }
  };
  (firebase_core_platform_interface.MethodChannelFirebase.new = function() {
    firebase_core_platform_interface.MethodChannelFirebase.__proto__.new.call(this);
    ;
  }).prototype = firebase_core_platform_interface.MethodChannelFirebase.prototype;
  dart.addTypeTests(firebase_core_platform_interface.MethodChannelFirebase);
  dart.addTypeCaches(firebase_core_platform_interface.MethodChannelFirebase);
  dart.setMethodSignature(firebase_core_platform_interface.MethodChannelFirebase, () => ({
    __proto__: dart.getMethods(firebase_core_platform_interface.MethodChannelFirebase.__proto__),
    [S$._initializeCore$1]: dart.fnType(async.Future$(dart.void), []),
    [S$._initializeFirebaseAppFromMap]: dart.fnType(dart.void, [messages$46pigeon.PigeonInitializeResponse])
  }));
  dart.setLibraryUri(firebase_core_platform_interface.MethodChannelFirebase, I[9]);
  dart.setStaticFieldSignature(firebase_core_platform_interface.MethodChannelFirebase, () => ['appInstances', 'isCoreInitialized', 'api']);
  dart.defineLazy(firebase_core_platform_interface.MethodChannelFirebase, {
    /*firebase_core_platform_interface.MethodChannelFirebase.appInstances*/get appInstances() {
      return new (T$.IdentityMapOfString$MethodChannelFirebaseApp()).new();
    },
    set appInstances(value) {},
    /*firebase_core_platform_interface.MethodChannelFirebase.isCoreInitialized*/get isCoreInitialized() {
      return false;
    },
    set isCoreInitialized(value) {},
    /*firebase_core_platform_interface.MethodChannelFirebase.api*/get api() {
      return new messages$46pigeon.FirebaseCoreHostApi.new();
    },
    set api(value) {}
  }, false);
  firebase_core_platform_interface.MethodChannelFirebaseApp = class MethodChannelFirebaseApp extends firebase_core_platform_interface.FirebaseAppPlatform {
    static ['_#new#tearOff'](name, options, opts) {
      let isAutomaticDataCollectionEnabled = opts && 'isAutomaticDataCollectionEnabled' in opts ? opts.isAutomaticDataCollectionEnabled : null;
      return new firebase_core_platform_interface.MethodChannelFirebaseApp.new(name, options, {isAutomaticDataCollectionEnabled: isAutomaticDataCollectionEnabled});
    }
    get isAutomaticDataCollectionEnabled() {
      return this[S$._isAutomaticDataCollectionEnabled$1];
    }
    delete() {
      return async.async(dart.void, (function* $delete() {
        if (this[S$._isDefault]) {
          dart.throw(firebase_core_platform_interface.noDefaultAppDelete());
        }
        if (this[S$._isDeleted]) {
          return;
        }
        yield this[S$._api].delete(this.name);
        firebase_core_platform_interface.MethodChannelFirebase.appInstances[S$.$remove](this.name);
        firebase_core_platform_interface.FirebasePluginPlatform._constantsForPluginApps[S$.$remove](this.name);
        this[S$._isDeleted] = true;
      }).bind(this));
    }
    setAutomaticDataCollectionEnabled(enabled) {
      return async.async(dart.void, (function* setAutomaticDataCollectionEnabled() {
        yield this[S$._api].setAutomaticDataCollectionEnabled(this.name, enabled);
        this[S$._isAutomaticDataCollectionEnabled$1] = enabled;
      }).bind(this));
    }
    setAutomaticResourceManagementEnabled(enabled) {
      return async.async(dart.void, (function* setAutomaticResourceManagementEnabled() {
        yield this[S$._api].setAutomaticResourceManagementEnabled(this.name, enabled);
      }).bind(this));
    }
  };
  (firebase_core_platform_interface.MethodChannelFirebaseApp.new = function(name, options, opts) {
    let t35;
    let isAutomaticDataCollectionEnabled = opts && 'isAutomaticDataCollectionEnabled' in opts ? opts.isAutomaticDataCollectionEnabled : null;
    this[S$._isDeleted] = false;
    this[S$._api] = new messages$46pigeon.FirebaseAppHostApi.new();
    this[S$._isAutomaticDataCollectionEnabled$1] = core.bool.as((t35 = isAutomaticDataCollectionEnabled, t35 == null ? false : t35));
    firebase_core_platform_interface.MethodChannelFirebaseApp.__proto__.new.call(this, name, options);
    ;
  }).prototype = firebase_core_platform_interface.MethodChannelFirebaseApp.prototype;
  dart.addTypeTests(firebase_core_platform_interface.MethodChannelFirebaseApp);
  dart.addTypeCaches(firebase_core_platform_interface.MethodChannelFirebaseApp);
  dart.setLibraryUri(firebase_core_platform_interface.MethodChannelFirebaseApp, I[9]);
  dart.setFieldSignature(firebase_core_platform_interface.MethodChannelFirebaseApp, () => ({
    __proto__: dart.getFields(firebase_core_platform_interface.MethodChannelFirebaseApp.__proto__),
    [S$._isDeleted]: dart.fieldType(core.bool),
    [S$._isAutomaticDataCollectionEnabled$1]: dart.fieldType(core.bool),
    [S$._api]: dart.finalFieldType(messages$46pigeon.FirebaseAppHostApi)
  }));
  firebase_core_platform_interface.noAppExists = function noAppExists(appName) {
    return new firebase_core_platform_interface.FirebaseException.new({plugin: "core", code: "no-app", message: "No Firebase App '" + appName + "' has been created - call Firebase.initializeApp()"});
  };
  firebase_core_platform_interface.duplicateApp = function duplicateApp(appName) {
    return new firebase_core_platform_interface.FirebaseException.new({plugin: "core", code: "duplicate-app", message: "A Firebase App named \"" + appName + "\" already exists"});
  };
  firebase_core_platform_interface.noDefaultAppInitialization = function noDefaultAppInitialization() {
    return new firebase_core_platform_interface.FirebaseException.new({plugin: "core", message: "The " + "[DEFAULT]" + " app cannot be initialized here. " + "To initialize the default app, follow the installation instructions " + "for the specific platform you are developing with."});
  };
  firebase_core_platform_interface.coreNotInitialized = function coreNotInitialized() {
    let message = "Firebase has not been correctly initialized.\n\nUsually this means you've attempted to use a Firebase service before calling `Firebase.initializeApp`.\n\nView the documentation for more information: https://firebase.flutter.dev/docs/overview#initialization\n    ";
    return new firebase_core_platform_interface.FirebaseException.new({plugin: "core", code: "not-initialized", message: message});
  };
  firebase_core_platform_interface.noDefaultAppDelete = function noDefaultAppDelete() {
    return new firebase_core_platform_interface.FirebaseException.new({plugin: "core", message: "The default Firebase app instance cannot be deleted."});
  };
  dart.defineLazy(firebase_core_platform_interface, {
    /*firebase_core_platform_interface.defaultFirebaseAppName*/get defaultFirebaseAppName() {
      return "[DEFAULT]";
    }
  }, false);
  internals.convertWebExceptions = function convertWebExceptions(R, cb) {
    return _flutterfire_internals.guardWebExceptions(R, cb, {plugin: "cloud_firestore", codeParser: dart.fn(code => code[S$.$replaceFirst]("firestore/", ""), T$.StringToString())});
  };
  const _is_LoadBundleTaskPlatform_default = Symbol('_is_LoadBundleTaskPlatform_default');
  platform_interface_load_bundle_task.LoadBundleTaskPlatform$ = dart.generic(T => {
    class LoadBundleTaskPlatform extends plugin_platform_interface.PlatformInterface {
      static verifyExtends(instance) {
        plugin_platform_interface.PlatformInterface.verifyToken(instance, platform_interface_load_bundle_task.LoadBundleTaskPlatform._token);
      }
    }
    (LoadBundleTaskPlatform.new = function() {
      LoadBundleTaskPlatform.__proto__.new.call(this, {token: platform_interface_load_bundle_task.LoadBundleTaskPlatform._token});
      ;
    }).prototype = LoadBundleTaskPlatform.prototype;
    dart.addTypeTests(LoadBundleTaskPlatform);
    LoadBundleTaskPlatform.prototype[_is_LoadBundleTaskPlatform_default] = true;
    dart.addTypeCaches(LoadBundleTaskPlatform);
    dart.setStaticMethodSignature(LoadBundleTaskPlatform, () => ['verifyExtends']);
    dart.setLibraryUri(LoadBundleTaskPlatform, I[21]);
    dart.setStaticFieldSignature(LoadBundleTaskPlatform, () => ['_token']);
    return LoadBundleTaskPlatform;
  });
  platform_interface_load_bundle_task.LoadBundleTaskPlatform = platform_interface_load_bundle_task.LoadBundleTaskPlatform$();
  dart.defineLazy(platform_interface_load_bundle_task.LoadBundleTaskPlatform, {
    /*platform_interface_load_bundle_task.LoadBundleTaskPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  dart.addTypeTests(platform_interface_load_bundle_task.LoadBundleTaskPlatform, _is_LoadBundleTaskPlatform_default);
  load_bundle_task_web.LoadBundleTaskWeb = class LoadBundleTaskWeb extends platform_interface_load_bundle_task.LoadBundleTaskPlatform {
    static ['_#new#tearOff'](task) {
      return new load_bundle_task_web.LoadBundleTaskWeb.new(task);
    }
    get stream() {
      let t35;
      t35 = this[S$.__LoadBundleTaskWeb_stream];
      return t35 == null ? dart.throw(new _internal.LateError.fieldNI("stream")) : t35;
    }
    set stream(stream$35param) {
      if (this[S$.__LoadBundleTaskWeb_stream] == null)
        this[S$.__LoadBundleTaskWeb_stream] = stream$35param;
      else
        dart.throw(new _internal.LateError.fieldAI("stream"));
    }
  };
  (load_bundle_task_web.LoadBundleTaskWeb.new = function(task) {
    this[S$.__LoadBundleTaskWeb_stream] = null;
    load_bundle_task_web.LoadBundleTaskWeb.__proto__.new.call(this);
    this.stream = task.stream.asBroadcastStream({onListen: dart.fn(sub => sub.resume(), T$.StreamSubscriptionOfLoadBundleTaskProgressTovoid()), onCancel: dart.fn(sub => sub.pause(), T$.StreamSubscriptionOfLoadBundleTaskProgressTovoid())}).map(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform, dart.fn(snapshot => {
      let data = new (T$.IdentityMapOfString$dynamic()).from(["bytesLoaded", snapshot.bytesLoaded, "documentsLoaded", snapshot.documentsLoaded, "totalBytes", snapshot.totalBytes, "totalDocuments", snapshot.totalDocuments]);
      return new platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform.new(snapshot.taskState, data);
    }, T$.LoadBundleTaskProgressToLoadBundleTaskSnapshotPlatform()));
  }).prototype = load_bundle_task_web.LoadBundleTaskWeb.prototype;
  dart.addTypeTests(load_bundle_task_web.LoadBundleTaskWeb);
  dart.addTypeCaches(load_bundle_task_web.LoadBundleTaskWeb);
  dart.setGetterSignature(load_bundle_task_web.LoadBundleTaskWeb, () => ({
    __proto__: dart.getGetters(load_bundle_task_web.LoadBundleTaskWeb.__proto__),
    stream: async.Stream$(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform)
  }));
  dart.setSetterSignature(load_bundle_task_web.LoadBundleTaskWeb, () => ({
    __proto__: dart.getSetters(load_bundle_task_web.LoadBundleTaskWeb.__proto__),
    stream: async.Stream$(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform)
  }));
  dart.setLibraryUri(load_bundle_task_web.LoadBundleTaskWeb, I[22]);
  dart.setFieldSignature(load_bundle_task_web.LoadBundleTaskWeb, () => ({
    __proto__: dart.getFields(load_bundle_task_web.LoadBundleTaskWeb.__proto__),
    [S$.__LoadBundleTaskWeb_stream]: dart.fieldType(dart.nullable(async.Stream$(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform)))
  }));
  web_utils.convertWebQuerySnapshot = function convertWebQuerySnapshot(firestore, webQuerySnapshot) {
    return new platform_interface_query_snapshot.QuerySnapshotPlatform.new(webQuerySnapshot.docs[S$.$map](platform_interface_document_snapshot.DocumentSnapshotPlatform, dart.fn(webDocumentSnapshot => web_utils.convertWebDocumentSnapshot(firestore, dart.nullCheck(webDocumentSnapshot)), T$.DocumentSnapshotNToDocumentSnapshotPlatform()))[S$.$toList](), webQuerySnapshot.docChanges()[S$.$map](platform_interface_document_change.DocumentChangePlatform, dart.fn(webDocumentChange => web_utils.convertWebDocumentChange(firestore, webDocumentChange), T$.DocumentChangeToDocumentChangePlatform()))[S$.$toList](), web_utils.convertWebSnapshotMetadata(webQuerySnapshot.metadata));
  };
  web_utils.convertWebDocumentSnapshot = function convertWebDocumentSnapshot(firestore, webSnapshot) {
    return new platform_interface_document_snapshot.DocumentSnapshotPlatform.new(firestore, dart.nullCheck(webSnapshot.ref).path, new (T$.IdentityMapOfString$dynamic()).from(["data", decode_utility.DecodeUtility.decodeMapData(webSnapshot.data()), "metadata", new (T$.IdentityMapOfString$bool()).from(["hasPendingWrites", webSnapshot.metadata.hasPendingWrites, "isFromCache", webSnapshot.metadata.fromCache])]));
  };
  web_utils.convertWebDocumentChange = function convertWebDocumentChange(firestore, webDocumentChange) {
    return new platform_interface_document_change.DocumentChangePlatform.new(web_utils.convertWebDocumentChangeType(webDocumentChange.type), dart.asInt(webDocumentChange.oldIndex), dart.asInt(webDocumentChange.newIndex), web_utils.convertWebDocumentSnapshot(firestore, dart.nullCheck(webDocumentChange.doc)));
  };
  web_utils.convertWebDocumentChangeType = function convertWebDocumentChangeType(changeType) {
    switch (changeType[S$.$toLowerCase]()) {
      case "added":
        {
          return platform_interface_document_change.DocumentChangeType.added;
        }
      case "modified":
        {
          return platform_interface_document_change.DocumentChangeType.modified;
        }
      case "removed":
        {
          return platform_interface_document_change.DocumentChangeType.removed;
        }
      default:
        {
          dart.throw(new core.FallThroughError.new());
        }
    }
  };
  web_utils.convertWebSnapshotMetadata = function convertWebSnapshotMetadata(webSnapshotMetadata) {
    return new snapshot_metadata.SnapshotMetadataPlatform.new(webSnapshotMetadata.hasPendingWrites, webSnapshotMetadata.fromCache);
  };
  web_utils.convertGetOptions = function convertGetOptions(options) {
    if (options == null) return null;
    let source = null;
    switch (options.source) {
      case C[22] || CT.C22:
        {
          source = "default";
          break;
        }
      case C[33] || CT.C33:
        {
          source = "cache";
          break;
        }
      case C[34] || CT.C34:
        {
          source = "server";
          break;
        }
      default:
        {
          source = "default";
          break;
        }
    }
    return {source: source};
  };
  web_utils.convertSetOptions = function convertSetOptions(options) {
    if (options == null) return null;
    let parsedOptions = null;
    if (options.merge != null) {
      parsedOptions = {merge: options.merge};
    } else if (options.mergeFields != null) {
      parsedOptions = {mergeFields: dart.nullCheck(options.mergeFields)[S$.$map](core.String, dart.fn(e => e.components[S$.$toList]()[S$.$join]("."), T$.FieldPathToString()))[S$.$toList]()};
    }
    return parsedOptions;
  };
  web_utils.convertFieldPath = function convertFieldPath(fieldPath) {
    return new dart.global.firebase_firestore.FieldPath(fieldPath.components[S$.$toList]()[S$.$join]("."));
  };
  dart.defineLazy(web_utils, {
    /*web_utils._kChangeTypeAdded*/get _kChangeTypeAdded() {
      return "added";
    },
    /*web_utils._kChangeTypeModified*/get _kChangeTypeModified() {
      return "modified";
    },
    /*web_utils._kChangeTypeRemoved*/get _kChangeTypeRemoved() {
      return "removed";
    }
  }, false);
  platform_interface_query.QueryPlatform = class QueryPlatform extends plugin_platform_interface.PlatformInterface {
    get firestore() {
      return this[S$.firestore];
    }
    set firestore(value) {
      super.firestore = value;
    }
    get parameters() {
      return this[S$.parameters];
    }
    set parameters(value) {
      super.parameters = value;
    }
    static verifyExtends(instance) {
      if (!platform_interface_collection_reference.CollectionReferencePlatform.is(instance)) {
        plugin_platform_interface.PlatformInterface.verifyToken(instance, platform_interface_query.QueryPlatform._token);
      }
    }
    get isCollectionGroupQuery() {
      dart.throw(new core.UnimplementedError.new("isCollectionGroupQuery is not implemented"));
    }
    endAtDocument(orders, values) {
      dart.throw(new core.UnimplementedError.new("endAtDocument() is not implemented"));
    }
    endAt(fields) {
      dart.throw(new core.UnimplementedError.new("endAt() is not implemented"));
    }
    endBeforeDocument(orders, values) {
      dart.throw(new core.UnimplementedError.new("endBeforeDocument() is not implemented"));
    }
    endBefore(fields) {
      dart.throw(new core.UnimplementedError.new("endBefore() is not implemented"));
    }
    get(options = C[21] || CT.C21) {
      dart.throw(new core.UnimplementedError.new("get() is not implemented"));
    }
    limit(limit) {
      dart.throw(new core.UnimplementedError.new("limit() is not implemented"));
    }
    limitToLast(limit) {
      dart.throw(new core.UnimplementedError.new("limitToLast() is not implemented"));
    }
    snapshots(opts) {
      let includeMetadataChanges = opts && 'includeMetadataChanges' in opts ? opts.includeMetadataChanges : false;
      dart.throw(new core.UnimplementedError.new("snapshots() is not implemented"));
    }
    orderBy(orders) {
      dart.throw(new core.UnimplementedError.new("orderBy() is not implemented"));
    }
    startAfterDocument(orders, values) {
      dart.throw(new core.UnimplementedError.new("startAfterDocument() is not implemented"));
    }
    startAfter(fields) {
      dart.throw(new core.UnimplementedError.new("startAfter() is not implemented"));
    }
    startAtDocument(orders, values) {
      dart.throw(new core.UnimplementedError.new("startAtDocument() is not implemented"));
    }
    startAt(fields) {
      dart.throw(new core.UnimplementedError.new("startAt() is not implemented"));
    }
    where(conditions) {
      dart.throw(new core.UnimplementedError.new("where() is not implemented"));
    }
  };
  (platform_interface_query.QueryPlatform.new = function(firestore, params) {
    let t37;
    this[S$.firestore] = firestore;
    this[S$.parameters] = (t37 = params, t37 == null ? platform_interface_query._initialParameters : t37);
    platform_interface_query.QueryPlatform.__proto__.new.call(this, {token: platform_interface_query.QueryPlatform._token});
    ;
  }).prototype = platform_interface_query.QueryPlatform.prototype;
  dart.addTypeTests(platform_interface_query.QueryPlatform);
  dart.addTypeCaches(platform_interface_query.QueryPlatform);
  dart.setMethodSignature(platform_interface_query.QueryPlatform, () => ({
    __proto__: dart.getMethods(platform_interface_query.QueryPlatform.__proto__),
    endAtDocument: dart.fnType(platform_interface_query.QueryPlatform, [core.List, core.List]),
    endAt: dart.fnType(platform_interface_query.QueryPlatform, [core.List]),
    endBeforeDocument: dart.fnType(platform_interface_query.QueryPlatform, [core.List, core.List]),
    endBefore: dart.fnType(platform_interface_query.QueryPlatform, [core.List]),
    get: dart.fnType(async.Future$(platform_interface_query_snapshot.QuerySnapshotPlatform), [], [get_options.GetOptions]),
    limit: dart.fnType(platform_interface_query.QueryPlatform, [core.int]),
    limitToLast: dart.fnType(platform_interface_query.QueryPlatform, [core.int]),
    snapshots: dart.fnType(async.Stream$(platform_interface_query_snapshot.QuerySnapshotPlatform), [], {includeMetadataChanges: core.bool}, {}),
    orderBy: dart.fnType(platform_interface_query.QueryPlatform, [core.List$(core.List)]),
    startAfterDocument: dart.fnType(platform_interface_query.QueryPlatform, [core.List, core.List]),
    startAfter: dart.fnType(platform_interface_query.QueryPlatform, [core.List]),
    startAtDocument: dart.fnType(platform_interface_query.QueryPlatform, [core.List, core.List]),
    startAt: dart.fnType(platform_interface_query.QueryPlatform, [core.List]),
    where: dart.fnType(platform_interface_query.QueryPlatform, [core.List$(core.List)])
  }));
  dart.setStaticMethodSignature(platform_interface_query.QueryPlatform, () => ['verifyExtends']);
  dart.setGetterSignature(platform_interface_query.QueryPlatform, () => ({
    __proto__: dart.getGetters(platform_interface_query.QueryPlatform.__proto__),
    isCollectionGroupQuery: core.bool
  }));
  dart.setLibraryUri(platform_interface_query.QueryPlatform, I[23]);
  dart.setFieldSignature(platform_interface_query.QueryPlatform, () => ({
    __proto__: dart.getFields(platform_interface_query.QueryPlatform.__proto__),
    firestore: dart.finalFieldType(platform_interface_firestore.FirebaseFirestorePlatform),
    parameters: dart.finalFieldType(core.Map$(core.String, dart.dynamic))
  }));
  dart.setStaticFieldSignature(platform_interface_query.QueryPlatform, () => ['_token']);
  dart.defineLazy(platform_interface_query.QueryPlatform, {
    /*platform_interface_query.QueryPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  query_web.QueryWeb = class QueryWeb extends platform_interface_query.QueryPlatform {
    get isCollectionGroupQuery() {
      return this[S$.isCollectionGroupQuery];
    }
    set isCollectionGroupQuery(value) {
      super.isCollectionGroupQuery = value;
    }
    static ['_#new#tearOff'](firestore, _path, _webQuery, opts) {
      let parameters = opts && 'parameters' in opts ? opts.parameters : null;
      let isCollectionGroupQuery = opts && 'isCollectionGroupQuery' in opts ? opts.isCollectionGroupQuery : false;
      return new query_web.QueryWeb.new(firestore, _path, _webQuery, {parameters: parameters, isCollectionGroupQuery: isCollectionGroupQuery});
    }
    _equals(other) {
      if (other == null) return false;
      return this[S$.$runtimeType]._equals(other[S$.$runtimeType]) && query_web.QueryWeb.is(other) && other.firestore._equals(this.firestore) && other[S$._path] === this[S$._path] && other.isCollectionGroupQuery === this.isCollectionGroupQuery && (C[36] || CT.C36).equals(other.parameters, this.parameters);
    }
    get hashCode() {
      return core.Object.hash(this[S$.$runtimeType], this.firestore, this[S$._path], this.isCollectionGroupQuery, (C[36] || CT.C36).hash(this.parameters));
    }
    [S$._copyWithParameters](parameters) {
      let t35;
      return new query_web.QueryWeb.new(this.firestore, this[S$._path], this[S$._webQuery], {isCollectionGroupQuery: this.isCollectionGroupQuery, parameters: T$.MapOfString$dynamic().unmodifiable((t35 = T$.LinkedHashMapOfString$dynamic().from(this.parameters), (() => {
          t35[S$.$addAll](parameters);
          return t35;
        })()))});
    }
    [S$._buildWebQueryWithParameters]() {
      let query = this[S$._webQuery];
      for (let t35 of core.Iterable.as(this.parameters[S$.$_get]("orderBy"))) {
        let order = core.List.as(t35);
        query = query.orderBy(encode_utility.EncodeUtility.valueEncode(order[S$.$_get](0)), dart.dtest(order[S$.$_get](1)) ? "desc" : "asc");
      }
      if (this.parameters[S$.$_get]("startAt") != null) {
        query = query.startAt({fieldValues: T$.ListN().as(encode_utility.EncodeUtility.valueEncode(this.parameters[S$.$_get]("startAt")))});
      }
      if (this.parameters[S$.$_get]("startAfter") != null) {
        query = query.startAfter({fieldValues: T$.ListN().as(encode_utility.EncodeUtility.valueEncode(this.parameters[S$.$_get]("startAfter")))});
      }
      if (this.parameters[S$.$_get]("endAt") != null) {
        query = query.endAt({fieldValues: T$.ListN().as(encode_utility.EncodeUtility.valueEncode(this.parameters[S$.$_get]("endAt")))});
      }
      if (this.parameters[S$.$_get]("endBefore") != null) {
        query = query.endBefore({fieldValues: T$.ListN().as(encode_utility.EncodeUtility.valueEncode(this.parameters[S$.$_get]("endBefore")))});
      }
      if (this.parameters[S$.$_get]("limit") != null) {
        query = query.limit(core.num.as(this.parameters[S$.$_get]("limit")));
      }
      if (this.parameters[S$.$_get]("limitToLast") != null) {
        query = query.limitToLast(core.num.as(this.parameters[S$.$_get]("limitToLast")));
      }
      for (let t36 of core.Iterable.as(this.parameters[S$.$_get]("where"))) {
        let condition = core.List.as(t36);
        let fieldPath = encode_utility.EncodeUtility.valueEncode(condition[S$.$_get](0));
        let opStr = core.String.as(condition[S$.$_get](1));
        let value = encode_utility.EncodeUtility.valueEncode(condition[S$.$_get](2));
        query = query.where(fieldPath, opStr, value);
      }
      return query;
    }
    endAtDocument(orders, values) {
      return this[S$._copyWithParameters](new (T$.IdentityMapOfString$dynamic()).from(["orderBy", orders, "endAt", values, "endBefore", null]));
    }
    endAt(fields) {
      return this[S$._copyWithParameters](new (T$.IdentityMapOfString$dynamic()).from(["endAt", fields, "endBefore", null]));
    }
    endBeforeDocument(orders, values) {
      return this[S$._copyWithParameters](new (T$.IdentityMapOfString$dynamic()).from(["orderBy", orders, "endAt", null, "endBefore", values]));
    }
    endBefore(fields) {
      return this[S$._copyWithParameters](new (T$.IdentityMapOfString$dynamic()).from(["endAt", null, "endBefore", fields]));
    }
    get(options = C[21] || CT.C21) {
      return internals.convertWebExceptions(T$.FutureOfQuerySnapshotPlatform(), dart.fn(() => async.async(platform_interface_query_snapshot.QuerySnapshotPlatform, (function*() {
        return web_utils.convertWebQuerySnapshot(this.firestore, yield this[S$._buildWebQueryWithParameters]().get(web_utils.convertGetOptions(options)));
      }).bind(this)), T$.VoidToFutureOfQuerySnapshotPlatform()));
    }
    limit(limit) {
      return this[S$._copyWithParameters](new (T$.IdentityMapOfString$dynamic()).from(["limit", limit, "limitToLast", null]));
    }
    limitToLast(limit) {
      return this[S$._copyWithParameters](new (T$.IdentityMapOfString$dynamic()).from(["limit", null, "limitToLast", limit]));
    }
    snapshots(opts) {
      let includeMetadataChanges = opts && 'includeMetadataChanges' in opts ? opts.includeMetadataChanges : false;
      let querySnapshots = null;
      if (includeMetadataChanges) {
        querySnapshots = this[S$._buildWebQueryWithParameters]().onSnapshotMetadata;
      } else {
        querySnapshots = this[S$._buildWebQueryWithParameters]().onSnapshot;
      }
      return internals.convertWebExceptions(T$.StreamOfQuerySnapshotPlatform(), dart.fn(() => querySnapshots.map(platform_interface_query_snapshot.QuerySnapshotPlatform, dart.fn(webQuerySnapshot => web_utils.convertWebQuerySnapshot(this.firestore, webQuerySnapshot), T$.QuerySnapshotToQuerySnapshotPlatform())), T$.VoidToStreamOfQuerySnapshotPlatform()));
    }
    orderBy(orders) {
      return this[S$._copyWithParameters](new (T$.IdentityMapOfString$dynamic()).from(["orderBy", orders]));
    }
    startAfterDocument(orders, values) {
      return this[S$._copyWithParameters](new (T$.IdentityMapOfString$dynamic()).from(["orderBy", orders, "startAt", null, "startAfter", values]));
    }
    startAfter(fields) {
      return this[S$._copyWithParameters](new (T$.IdentityMapOfString$dynamic()).from(["startAt", null, "startAfter", fields]));
    }
    startAtDocument(orders, values) {
      return this[S$._copyWithParameters](new (T$.IdentityMapOfString$dynamic()).from(["orderBy", orders, "startAt", values, "startAfter", null]));
    }
    startAt(fields) {
      return this[S$._copyWithParameters](new (T$.IdentityMapOfString$dynamic()).from(["startAt", fields, "startAfter", null]));
    }
    where(conditions) {
      return this[S$._copyWithParameters](new (T$.IdentityMapOfString$dynamic()).from(["where", conditions]));
    }
  };
  (query_web.QueryWeb.new = function(firestore, _path, _webQuery, opts) {
    let parameters = opts && 'parameters' in opts ? opts.parameters : null;
    let isCollectionGroupQuery = opts && 'isCollectionGroupQuery' in opts ? opts.isCollectionGroupQuery : false;
    this[S$._path] = _path;
    this[S$._webQuery] = _webQuery;
    this[S$.isCollectionGroupQuery] = isCollectionGroupQuery;
    query_web.QueryWeb.__proto__.new.call(this, firestore, parameters);
    ;
  }).prototype = query_web.QueryWeb.prototype;
  dart.addTypeTests(query_web.QueryWeb);
  dart.addTypeCaches(query_web.QueryWeb);
  dart.setMethodSignature(query_web.QueryWeb, () => ({
    __proto__: dart.getMethods(query_web.QueryWeb.__proto__),
    [S$._copyWithParameters]: dart.fnType(query_web.QueryWeb, [core.Map$(core.String, dart.dynamic)]),
    [S$._buildWebQueryWithParameters]: dart.fnType(firestore.Query$(dart.packageJSType("firebase_firestore.Query", false)), [])
  }));
  dart.setLibraryUri(query_web.QueryWeb, I[24]);
  dart.setFieldSignature(query_web.QueryWeb, () => ({
    __proto__: dart.getFields(query_web.QueryWeb.__proto__),
    [S$._webQuery]: dart.finalFieldType(firestore.Query$(dart.packageJSType("firebase_firestore.Query", false))),
    [S$._path]: dart.finalFieldType(core.String),
    isCollectionGroupQuery: dart.finalFieldType(core.bool)
  }));
  dart.defineExtensionMethods(query_web.QueryWeb, ['_equals']);
  dart.defineExtensionAccessors(query_web.QueryWeb, ['hashCode']);
  collection_reference_web.CollectionReferenceWeb = class CollectionReferenceWeb extends query_web.QueryWeb {
    static ['_#new#tearOff'](_firestorePlatform, _webFirestore, path) {
      return new collection_reference_web.CollectionReferenceWeb.new(_firestorePlatform, _webFirestore, path);
    }
    get path() {
      return this[S$._delegate$5].path;
    }
    doc(path = null) {
      let documentReference = this[S$._delegate$5].doc(path);
      return new document_reference_web.DocumentReferenceWeb.new(this[S$._firestorePlatform], this[S$._webFirestore$1], documentReference.path);
    }
    get id() {
      return this[S$._delegate$5].id;
    }
    get parent() {
      let documentReference = this[S$._delegate$5].parent;
      if (documentReference == null) {
        return null;
      }
      return new document_reference_web.DocumentReferenceWeb.new(this[S$._firestorePlatform], this[S$._webFirestore$1], documentReference.path);
    }
    get [S$._pointer$1]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[35] || CT.C35)));
    }
  };
  (collection_reference_web.CollectionReferenceWeb.new = function(_firestorePlatform, _webFirestore, path) {
    this[S$._firestorePlatform] = _firestorePlatform;
    this[S$._webFirestore$1] = _webFirestore;
    this[S$._delegate$5] = _webFirestore.collection(path);
    collection_reference_web.CollectionReferenceWeb.__proto__.new.call(this, _firestorePlatform, path, _webFirestore.collection(path));
    ;
  }).prototype = collection_reference_web.CollectionReferenceWeb.prototype;
  dart.addTypeTests(collection_reference_web.CollectionReferenceWeb);
  dart.addTypeCaches(collection_reference_web.CollectionReferenceWeb);
  collection_reference_web.CollectionReferenceWeb[dart.implements] = () => [platform_interface_collection_reference.CollectionReferencePlatform];
  dart.setMethodSignature(collection_reference_web.CollectionReferenceWeb, () => ({
    __proto__: dart.getMethods(collection_reference_web.CollectionReferenceWeb.__proto__),
    doc: dart.fnType(platform_interface_document_reference.DocumentReferencePlatform, [], [dart.nullable(core.String)])
  }));
  dart.setGetterSignature(collection_reference_web.CollectionReferenceWeb, () => ({
    __proto__: dart.getGetters(collection_reference_web.CollectionReferenceWeb.__proto__),
    path: core.String,
    id: core.String,
    parent: dart.nullable(platform_interface_document_reference.DocumentReferencePlatform),
    [S$._pointer$1]: pointer.Pointer
  }));
  dart.setLibraryUri(collection_reference_web.CollectionReferenceWeb, I[25]);
  dart.setFieldSignature(collection_reference_web.CollectionReferenceWeb, () => ({
    __proto__: dart.getFields(collection_reference_web.CollectionReferenceWeb.__proto__),
    [S$._webFirestore$1]: dart.finalFieldType(firestore.Firestore),
    [S$._firestorePlatform]: dart.finalFieldType(platform_interface_firestore.FirebaseFirestorePlatform),
    [S$._delegate$5]: dart.finalFieldType(firestore.CollectionReference$(dart.packageJSType("firebase_firestore.CollectionReference", false)))
  }));
  platform_interface_document_reference.DocumentReferencePlatform = class DocumentReferencePlatform extends plugin_platform_interface.PlatformInterface {
    get firestore() {
      return this[S$.firestore$1];
    }
    set firestore(value) {
      super.firestore = value;
    }
    static verifyExtends(instance) {
      plugin_platform_interface.PlatformInterface.verifyToken(instance, platform_interface_document_reference.DocumentReferencePlatform._token);
    }
    get path() {
      return this[S$._pointer$2].path;
    }
    get id() {
      return this[S$._pointer$2].id;
    }
    get parent() {
      return this.firestore.collection(dart.nullCheck(this[S$._pointer$2].parentPath()));
    }
    collection(collectionPath) {
      return this.firestore.collection(this[S$._pointer$2].collectionPath(collectionPath));
    }
    delete() {
      dart.throw(new core.UnimplementedError.new("delete() is not implemented"));
    }
    get(options = C[21] || CT.C21) {
      return async.async(platform_interface_document_snapshot.DocumentSnapshotPlatform, function* get() {
        dart.throw(new core.UnimplementedError.new("get() is not implemented"));
      });
    }
    snapshots(opts) {
      let includeMetadataChanges = opts && 'includeMetadataChanges' in opts ? opts.includeMetadataChanges : false;
      dart.throw(new core.UnimplementedError.new("snapshots() is not implemented"));
    }
    set(data, options = null) {
      dart.throw(new core.UnimplementedError.new("set() is not implemented"));
    }
    update(data) {
      dart.throw(new core.UnimplementedError.new("update() is not implemented"));
    }
    _equals(other) {
      if (other == null) return false;
      return platform_interface_document_reference.DocumentReferencePlatform.is(other) && other.firestore._equals(this.firestore) && other.path === this.path;
    }
    get hashCode() {
      return this.path[S$.$hashCode];
    }
    toString() {
      return dart.str(dart.wrapType(platform_interface_document_reference.DocumentReferencePlatform)) + "(" + this.path + ")";
    }
  };
  (platform_interface_document_reference.DocumentReferencePlatform.new = function(firestore, path) {
    this[S$.firestore$1] = firestore;
    this[S$._pointer$2] = new pointer.Pointer.new(path);
    platform_interface_document_reference.DocumentReferencePlatform.__proto__.new.call(this, {token: platform_interface_document_reference.DocumentReferencePlatform._token});
    ;
  }).prototype = platform_interface_document_reference.DocumentReferencePlatform.prototype;
  dart.addTypeTests(platform_interface_document_reference.DocumentReferencePlatform);
  dart.addTypeCaches(platform_interface_document_reference.DocumentReferencePlatform);
  dart.setMethodSignature(platform_interface_document_reference.DocumentReferencePlatform, () => ({
    __proto__: dart.getMethods(platform_interface_document_reference.DocumentReferencePlatform.__proto__),
    collection: dart.fnType(platform_interface_collection_reference.CollectionReferencePlatform, [core.String]),
    delete: dart.fnType(async.Future$(dart.void), []),
    get: dart.fnType(async.Future$(platform_interface_document_snapshot.DocumentSnapshotPlatform), [], [get_options.GetOptions]),
    snapshots: dart.fnType(async.Stream$(platform_interface_document_snapshot.DocumentSnapshotPlatform), [], {includeMetadataChanges: core.bool}, {}),
    set: dart.fnType(async.Future$(dart.void), [core.Map$(core.String, dart.dynamic)], [dart.nullable(set_options.SetOptions)]),
    update: dart.fnType(async.Future$(dart.void), [core.Map$(core.String, dart.dynamic)])
  }));
  dart.setStaticMethodSignature(platform_interface_document_reference.DocumentReferencePlatform, () => ['verifyExtends']);
  dart.setGetterSignature(platform_interface_document_reference.DocumentReferencePlatform, () => ({
    __proto__: dart.getGetters(platform_interface_document_reference.DocumentReferencePlatform.__proto__),
    path: core.String,
    id: core.String,
    parent: platform_interface_collection_reference.CollectionReferencePlatform
  }));
  dart.setLibraryUri(platform_interface_document_reference.DocumentReferencePlatform, I[26]);
  dart.setFieldSignature(platform_interface_document_reference.DocumentReferencePlatform, () => ({
    __proto__: dart.getFields(platform_interface_document_reference.DocumentReferencePlatform.__proto__),
    firestore: dart.finalFieldType(platform_interface_firestore.FirebaseFirestorePlatform),
    [S$._pointer$2]: dart.finalFieldType(pointer.Pointer)
  }));
  dart.setStaticFieldSignature(platform_interface_document_reference.DocumentReferencePlatform, () => ['_token']);
  dart.defineExtensionMethods(platform_interface_document_reference.DocumentReferencePlatform, ['_equals', 'toString']);
  dart.defineExtensionAccessors(platform_interface_document_reference.DocumentReferencePlatform, ['hashCode']);
  dart.defineLazy(platform_interface_document_reference.DocumentReferencePlatform, {
    /*platform_interface_document_reference.DocumentReferencePlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  document_reference_web.DocumentReferenceWeb = class DocumentReferenceWeb extends platform_interface_document_reference.DocumentReferencePlatform {
    get firestoreWeb() {
      return this[S$.firestoreWeb];
    }
    set firestoreWeb(value) {
      super.firestoreWeb = value;
    }
    static ['_#new#tearOff'](firestore, firestoreWeb, path) {
      return new document_reference_web.DocumentReferenceWeb.new(firestore, firestoreWeb, path);
    }
    set(data, options = null) {
      return internals.convertWebExceptions(T$.FutureOfvoid(), dart.fn(() => this[S$._delegate$6].set(dart.nullCheck(encode_utility.EncodeUtility.encodeMapData(data)), web_utils.convertSetOptions(options)), T$.VoidToFutureOfvoid()));
    }
    update(data) {
      return internals.convertWebExceptions(T$.FutureOfvoid(), dart.fn(() => this[S$._delegate$6].update(dart.nullCheck(encode_utility.EncodeUtility.encodeMapData(data))), T$.VoidToFutureOfvoid()));
    }
    get(options = C[21] || CT.C21) {
      return async.async(platform_interface_document_snapshot.DocumentSnapshotPlatform, (function* get() {
        let documentSnapshot = (yield internals.convertWebExceptions(T$.FutureOrOfDocumentSnapshot(), dart.fn(() => this[S$._delegate$6].get(web_utils.convertGetOptions(options)), T$.VoidToFutureOfDocumentSnapshot())));
        return web_utils.convertWebDocumentSnapshot(this.firestore, documentSnapshot);
      }).bind(this));
    }
    delete() {
      return internals.convertWebExceptions(T$.FutureOfvoid(), dart.bind(this[S$._delegate$6], 'delete'));
    }
    snapshots(opts) {
      let includeMetadataChanges = opts && 'includeMetadataChanges' in opts ? opts.includeMetadataChanges : false;
      let querySnapshots = this[S$._delegate$6].onSnapshot;
      if (includeMetadataChanges) {
        querySnapshots = this[S$._delegate$6].onMetadataChangesSnapshot;
      }
      return internals.convertWebExceptions(T$.StreamOfDocumentSnapshotPlatform(), dart.fn(() => querySnapshots.map(platform_interface_document_snapshot.DocumentSnapshotPlatform, dart.fn(webSnapshot => web_utils.convertWebDocumentSnapshot(this.firestore, webSnapshot), T$.DocumentSnapshotToDocumentSnapshotPlatform())), T$.VoidToStreamOfDocumentSnapshotPlatform()));
    }
  };
  (document_reference_web.DocumentReferenceWeb.new = function(firestore, firestoreWeb, path) {
    this[S$.firestoreWeb] = firestoreWeb;
    this[S$._delegate$6] = firestoreWeb.doc(path);
    document_reference_web.DocumentReferenceWeb.__proto__.new.call(this, firestore, path);
    ;
  }).prototype = document_reference_web.DocumentReferenceWeb.prototype;
  dart.addTypeTests(document_reference_web.DocumentReferenceWeb);
  dart.addTypeCaches(document_reference_web.DocumentReferenceWeb);
  dart.setLibraryUri(document_reference_web.DocumentReferenceWeb, I[27]);
  dart.setFieldSignature(document_reference_web.DocumentReferenceWeb, () => ({
    __proto__: dart.getFields(document_reference_web.DocumentReferenceWeb.__proto__),
    firestoreWeb: dart.finalFieldType(firestore.Firestore),
    [S$._delegate$6]: dart.finalFieldType(firestore.DocumentReference)
  }));
  platform_interface_field_value_factory.FieldValueFactoryPlatform = class FieldValueFactoryPlatform extends plugin_platform_interface.PlatformInterface {
    static get instance() {
      return platform_interface_field_value_factory.FieldValueFactoryPlatform._instance;
    }
    static set instance(instance) {
      plugin_platform_interface.PlatformInterface.verifyToken(instance, platform_interface_field_value_factory.FieldValueFactoryPlatform._token);
      platform_interface_field_value_factory.FieldValueFactoryPlatform._instance = instance;
    }
    static verifyExtends(instance) {
      plugin_platform_interface.PlatformInterface.verifyToken(instance, platform_interface_field_value_factory.FieldValueFactoryPlatform._token);
    }
    arrayUnion(elements) {
      dart.throw(new core.UnimplementedError.new("arrayUnion() is not implemented"));
    }
    arrayRemove(elements) {
      dart.throw(new core.UnimplementedError.new("arrayRemove() is not implemented"));
    }
    delete() {
      dart.throw(new core.UnimplementedError.new("delete() is not implemented"));
    }
    serverTimestamp() {
      dart.throw(new core.UnimplementedError.new("serverTimestamp() is not implemented"));
    }
    increment(value) {
      dart.throw(new core.UnimplementedError.new("increment() is not implemented"));
    }
  };
  (platform_interface_field_value_factory.FieldValueFactoryPlatform.new = function() {
    platform_interface_field_value_factory.FieldValueFactoryPlatform.__proto__.new.call(this, {token: platform_interface_field_value_factory.FieldValueFactoryPlatform._token});
    ;
  }).prototype = platform_interface_field_value_factory.FieldValueFactoryPlatform.prototype;
  dart.addTypeTests(platform_interface_field_value_factory.FieldValueFactoryPlatform);
  dart.addTypeCaches(platform_interface_field_value_factory.FieldValueFactoryPlatform);
  dart.setMethodSignature(platform_interface_field_value_factory.FieldValueFactoryPlatform, () => ({
    __proto__: dart.getMethods(platform_interface_field_value_factory.FieldValueFactoryPlatform.__proto__),
    arrayUnion: dart.fnType(dart.dynamic, [core.List]),
    arrayRemove: dart.fnType(dart.dynamic, [core.List]),
    delete: dart.fnType(dart.dynamic, []),
    serverTimestamp: dart.fnType(dart.dynamic, []),
    increment: dart.fnType(dart.dynamic, [core.num])
  }));
  dart.setStaticMethodSignature(platform_interface_field_value_factory.FieldValueFactoryPlatform, () => ['verifyExtends']);
  dart.setStaticGetterSignature(platform_interface_field_value_factory.FieldValueFactoryPlatform, () => ['instance']);
  dart.setStaticSetterSignature(platform_interface_field_value_factory.FieldValueFactoryPlatform, () => ['instance']);
  dart.setLibraryUri(platform_interface_field_value_factory.FieldValueFactoryPlatform, I[28]);
  dart.setStaticFieldSignature(platform_interface_field_value_factory.FieldValueFactoryPlatform, () => ['_instance', '_token']);
  dart.defineLazy(platform_interface_field_value_factory.FieldValueFactoryPlatform, {
    /*platform_interface_field_value_factory.FieldValueFactoryPlatform._instance*/get _instance() {
      return new method_channel_field_value_factory.MethodChannelFieldValueFactory.new();
    },
    set _instance(value) {},
    /*platform_interface_field_value_factory.FieldValueFactoryPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  field_value_factory_web.FieldValueFactoryWeb = class FieldValueFactoryWeb extends platform_interface_field_value_factory.FieldValueFactoryPlatform {
    arrayRemove(elements) {
      return new field_value_web.FieldValueWeb.new(firestore.FieldValue.arrayRemove(T$.ListN().as(encode_utility.EncodeUtility.valueEncode(elements))));
    }
    arrayUnion(elements) {
      return new field_value_web.FieldValueWeb.new(firestore.FieldValue.arrayUnion(T$.ListN().as(encode_utility.EncodeUtility.valueEncode(elements))));
    }
    delete() {
      return new field_value_web.FieldValueWeb.new(firestore.FieldValue.delete());
    }
    increment(value) {
      return new field_value_web.FieldValueWeb.new(firestore.FieldValue.increment(value));
    }
    serverTimestamp() {
      return new field_value_web.FieldValueWeb.new(firestore.FieldValue.serverTimestamp());
    }
    static ['_#new#tearOff']() {
      return new field_value_factory_web.FieldValueFactoryWeb.new();
    }
  };
  (field_value_factory_web.FieldValueFactoryWeb.new = function() {
    field_value_factory_web.FieldValueFactoryWeb.__proto__.new.call(this);
    ;
  }).prototype = field_value_factory_web.FieldValueFactoryWeb.prototype;
  dart.addTypeTests(field_value_factory_web.FieldValueFactoryWeb);
  dart.addTypeCaches(field_value_factory_web.FieldValueFactoryWeb);
  dart.setMethodSignature(field_value_factory_web.FieldValueFactoryWeb, () => ({
    __proto__: dart.getMethods(field_value_factory_web.FieldValueFactoryWeb.__proto__),
    arrayRemove: dart.fnType(field_value_web.FieldValueWeb, [core.List]),
    arrayUnion: dart.fnType(field_value_web.FieldValueWeb, [core.List]),
    delete: dart.fnType(field_value_web.FieldValueWeb, []),
    increment: dart.fnType(field_value_web.FieldValueWeb, [core.num]),
    serverTimestamp: dart.fnType(field_value_web.FieldValueWeb, [])
  }));
  dart.setLibraryUri(field_value_factory_web.FieldValueFactoryWeb, I[29]);
  const _is_JsObjectWrapper_default = Symbol('_is_JsObjectWrapper_default');
  js$.JsObjectWrapper$ = dart.generic(T => {
    class JsObjectWrapper extends core.Object {
      get jsObject() {
        return this[S$.jsObject];
      }
      set jsObject(value) {
        super.jsObject = value;
      }
    }
    (JsObjectWrapper.fromJsObject = function(jsObject) {
      this[S$.jsObject] = jsObject;
      ;
    }).prototype = JsObjectWrapper.prototype;
    dart.addTypeTests(JsObjectWrapper);
    JsObjectWrapper.prototype[_is_JsObjectWrapper_default] = true;
    dart.addTypeCaches(JsObjectWrapper);
    dart.setLibraryUri(JsObjectWrapper, I[30]);
    dart.setFieldSignature(JsObjectWrapper, () => ({
      __proto__: dart.getFields(JsObjectWrapper.__proto__),
      jsObject: dart.finalFieldType(T)
    }));
    return JsObjectWrapper;
  });
  js$.JsObjectWrapper = js$.JsObjectWrapper$();
  dart.addTypeTests(js$.JsObjectWrapper, _is_JsObjectWrapper_default);
  firestore.Firestore = class Firestore extends js$.JsObjectWrapper$(dart.packageJSType("firebase_firestore.Firestore", false)) {
    get app() {
      return app$.App.getInstance(this.jsObject.app);
    }
    static getInstance(jsObject) {
      let t40, t39, t38, t37;
      t37 = firestore.Firestore._expando;
      t38 = jsObject;
      t39 = t37._get(t38);
      return t39 == null ? (t40 = new firestore.Firestore._fromJsObject(jsObject), t37._set(t38, t40), t40) : t39;
    }
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new firestore.Firestore._fromJsObject(jsObject);
    }
    batch() {
      return firestore.WriteBatch.getInstance(dart.global.firebase_firestore.writeBatch(this.jsObject));
    }
    collection(collectionPath) {
      return firestore.CollectionReference.getInstance(dart.global.firebase_firestore.collection(this.jsObject, collectionPath));
    }
    collectionGroup(collectionId) {
      return new (T$.QueryOfQueryJsImpl()).fromJsObject(dart.global.firebase_firestore.collectionGroup(this.jsObject, collectionId));
    }
    doc(documentPath) {
      return firestore.DocumentReference.getInstance(dart.global.firebase_firestore.doc(this.jsObject, documentPath));
    }
    enablePersistence(settings = null) {
      return utils$.handleThenable(dart.void, dart.global.firebase_firestore.enableIndexedDbPersistence(this.jsObject, settings));
    }
    snapshotsInSync() {
      let controller = null;
      function controller$35get() {
        let t38;
        t38 = controller;
        return t38 == null ? dart.throw(new _internal.LateError.localNI("controller")) : t38;
      }
      function controller$35set(controller$35param) {
        return controller = controller$35param;
      }
      let onSnapshotsInSyncUnsubscribe = null;
      function onSnapshotsInSyncUnsubscribe$35get() {
        let t41;
        t41 = onSnapshotsInSyncUnsubscribe;
        return t41 == null ? dart.throw(new _internal.LateError.localNI("onSnapshotsInSyncUnsubscribe")) : t41;
      }
      function onSnapshotsInSyncUnsubscribe$35set(onSnapshotsInSyncUnsubscribe$35param) {
        return onSnapshotsInSyncUnsubscribe = onSnapshotsInSyncUnsubscribe$35param;
      }
      let nextWrapper = js.allowInterop(T$.ObjectNToNull(), dart.fn(noValue => {
        controller$35get().add(null);
      }, T$.ObjectNToNull()));
      const startListen = () => {
        onSnapshotsInSyncUnsubscribe$35set(dart.global.firebase_firestore.onSnapshotsInSync(this.jsObject, dart.assertInterop(nextWrapper)));
      };
      dart.fn(startListen, T$.VoidTovoid());
      function stopListen() {
        onSnapshotsInSyncUnsubscribe$35get()();
        controller$35get().close();
      }
      dart.fn(stopListen, T$.VoidTovoid());
      controller$35set(T$.StreamControllerOfvoid().broadcast({onListen: startListen, onCancel: stopListen}));
      return controller$35get().stream;
    }
    clearPersistence() {
      return utils$.handleThenable(dart.void, dart.global.firebase_firestore.clearIndexedDbPersistence(this.jsObject));
    }
    runTransaction(updateFunction, maxAttempts) {
      let updateFunctionWrap = js.allowInterop(T$.dynamicToPromiseJsImpl(), dart.fn(transaction => utils$.handleFutureWithMapper(T$.ObjectN(), dart.dynamic, T$.FutureOfObjectN().as(updateFunction(firestore.Transaction.getInstance(dart.packageJSType("firebase_firestore.Transaction", false).as(transaction)))), C[37] || CT.C37), T$.dynamicToPromiseJsImpl()));
      return utils$.handleThenable(dart.void, dart.global.firebase_firestore.runTransaction(this.jsObject, dart.assertInterop(updateFunctionWrap), {maxAttempts: maxAttempts})).then(dart.dynamic, dart.fn(value => utils$0.dartify(null), T$.voidTodynamic()));
    }
    useEmulator(host, port) {
      return dart.global.firebase_firestore.connectFirestoreEmulator(this.jsObject, host, port);
    }
    enableNetwork() {
      return utils$.handleThenable(dart.dynamic, dart.global.firebase_firestore.enableNetwork(this.jsObject));
    }
    disableNetwork() {
      return utils$.handleThenable(dart.dynamic, dart.global.firebase_firestore.disableNetwork(this.jsObject));
    }
    terminate() {
      return utils$.handleThenable(dart.void, dart.global.firebase_firestore.terminate(this.jsObject));
    }
    waitForPendingWrites() {
      return utils$.handleThenable(dart.void, dart.global.firebase_firestore.waitForPendingWrites(this.jsObject));
    }
    loadBundle(bundle) {
      return firestore.LoadBundleTask.getInstance(dart.global.firebase_firestore.loadBundle(this.jsObject, bundle));
    }
    namedQuery(name) {
      return async.async(T$.QueryOfQueryJsImpl(), (function* namedQuery() {
        let query = (yield utils$.handleThenable(dart.nullable(dart.packageJSType("firebase_firestore.Query", false)), dart.global.firebase_firestore.namedQuery(this.jsObject, name)));
        if (query == null) {
          dart.throw(new firebase_core_platform_interface.FirebaseException.new({plugin: "cloud_firestore", message: "Named query has not been found. Please check it has been loaded properly via loadBundle().", code: "non-existent-named-query"}));
        }
        return new (T$.QueryOfQueryJsImpl()).fromJsObject(query);
      }).bind(this));
    }
    refEqual(left, right) {
      return dart.global.firebase_firestore.refEqual(left, right);
    }
  };
  (firestore.Firestore._fromJsObject = function(jsObject) {
    firestore.Firestore.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = firestore.Firestore.prototype;
  dart.addTypeTests(firestore.Firestore);
  dart.addTypeCaches(firestore.Firestore);
  dart.setMethodSignature(firestore.Firestore, () => ({
    __proto__: dart.getMethods(firestore.Firestore.__proto__),
    batch: dart.fnType(dart.nullable(firestore.WriteBatch), []),
    collection: dart.fnType(firestore.CollectionReference$(dart.packageJSType("firebase_firestore.CollectionReference", false)), [core.String]),
    collectionGroup: dart.fnType(firestore.Query$(dart.packageJSType("firebase_firestore.Query", false)), [core.String]),
    doc: dart.fnType(firestore.DocumentReference, [core.String]),
    enablePersistence: dart.fnType(async.Future$(dart.void), [], [dart.nullable(dart.packageJSType("PersistenceSettings", false))]),
    snapshotsInSync: dart.fnType(async.Stream$(dart.void), []),
    clearPersistence: dart.fnType(async.Future$(dart.void), []),
    runTransaction: dart.fnType(async.Future, [dart.fnType(dart.dynamic, [dart.nullable(firestore.Transaction)]), core.int]),
    useEmulator: dart.fnType(dart.void, [core.String, core.int]),
    enableNetwork: dart.fnType(async.Future, []),
    disableNetwork: dart.fnType(async.Future, []),
    terminate: dart.fnType(async.Future$(dart.void), []),
    waitForPendingWrites: dart.fnType(async.Future$(dart.void), []),
    loadBundle: dart.fnType(firestore.LoadBundleTask, [typed_data.Uint8List]),
    namedQuery: dart.fnType(async.Future$(firestore.Query$(dart.packageJSType("firebase_firestore.Query", false))), [core.String]),
    refEqual: dart.fnType(core.bool, [dart.dynamic, dart.dynamic])
  }));
  dart.setStaticMethodSignature(firestore.Firestore, () => ['getInstance']);
  dart.setGetterSignature(firestore.Firestore, () => ({
    __proto__: dart.getGetters(firestore.Firestore.__proto__),
    app: app$.App
  }));
  dart.setLibraryUri(firestore.Firestore, I[31]);
  dart.setStaticFieldSignature(firestore.Firestore, () => ['_expando']);
  dart.defineLazy(firestore.Firestore, {
    /*firestore.Firestore._expando*/get _expando() {
      return new (T$.ExpandoOfFirestore()).new();
    }
  }, false);
  firestore.LoadBundleTask = class LoadBundleTask extends js$.JsObjectWrapper$(dart.packageJSType("firebase_firestore.LoadBundleTask", false)) {
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new firestore.LoadBundleTask._fromJsObject(jsObject);
    }
    static getInstance(jsObject) {
      let t46, t45, t44, t43;
      t43 = firestore.LoadBundleTask._expando;
      t44 = jsObject;
      t45 = t43._get(t44);
      return t45 == null ? (t46 = new firestore.LoadBundleTask._fromJsObject(jsObject), t43._set(t44, t46), t46) : t45;
    }
    get stream() {
      let controller = null;
      function controller$35get() {
        let t44;
        t44 = controller;
        return t44 == null ? dart.throw(new _internal.LateError.localNI("controller")) : t44;
      }
      function controller$35set(controller$35param) {
        return controller = controller$35param;
      }
      controller$35set(T$.StreamControllerOfLoadBundleTaskProgress().new({onListen: dart.fn(() => {
          this.jsObject.onProgress(js.allowInterop(T$.LoadBundleTaskProgressJsImplTovoid(), dart.fn(data => {
            let taskProgress = new firestore.LoadBundleTaskProgress._fromJsObject(data);
            if (load_bundle_task_state.LoadBundleTaskState.error !== taskProgress.taskState) {
              controller$35get().add(taskProgress);
            }
          }, T$.LoadBundleTaskProgressJsImplTovoid())));
          this.jsObject.then(js.allowInterop(T$.dynamicTodynamic(), dart.fn(value => {
            controller$35get().close();
          }, T$.dynamicToNull())), js.allowInterop(T$.FirestoreErrorTodynamic(), dart.fn(error => {
            controller$35get().addError(new firebase_core_platform_interface.FirebaseException.new({plugin: "cloud_firestore", message: error.message, code: "load-bundle-error", stackTrace: new core._StringStackTrace.new(error.stack)}));
            controller$35get().close();
          }, T$.FirestoreErrorToNull())));
        }, T$.VoidTovoid()), onCancel: dart.fn(() => {
          controller$35get().close();
        }, T$.VoidToNull())}));
      return controller$35get().stream;
    }
  };
  (firestore.LoadBundleTask._fromJsObject = function(jsObject) {
    firestore.LoadBundleTask.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = firestore.LoadBundleTask.prototype;
  dart.addTypeTests(firestore.LoadBundleTask);
  dart.addTypeCaches(firestore.LoadBundleTask);
  dart.setStaticMethodSignature(firestore.LoadBundleTask, () => ['getInstance']);
  dart.setGetterSignature(firestore.LoadBundleTask, () => ({
    __proto__: dart.getGetters(firestore.LoadBundleTask.__proto__),
    stream: async.Stream$(firestore.LoadBundleTaskProgress)
  }));
  dart.setLibraryUri(firestore.LoadBundleTask, I[31]);
  dart.setStaticFieldSignature(firestore.LoadBundleTask, () => ['_expando']);
  dart.defineLazy(firestore.LoadBundleTask, {
    /*firestore.LoadBundleTask._expando*/get _expando() {
      return new (T$.ExpandoOfLoadBundleTask()).new();
    }
  }, false);
  firestore.LoadBundleTaskProgress = class LoadBundleTaskProgress extends js$.JsObjectWrapper$(dart.packageJSType("LoadBundleTaskProgressJsImpl", false)) {
    get taskState() {
      return this[S$.taskState];
    }
    set taskState(value) {
      super.taskState = value;
    }
    get bytesLoaded() {
      return this[S$.bytesLoaded];
    }
    set bytesLoaded(value) {
      super.bytesLoaded = value;
    }
    get documentsLoaded() {
      return this[S$.documentsLoaded];
    }
    set documentsLoaded(value) {
      super.documentsLoaded = value;
    }
    get totalBytes() {
      return this[S$.totalBytes];
    }
    set totalBytes(value) {
      super.totalBytes = value;
    }
    get totalDocuments() {
      return this[S$.totalDocuments];
    }
    set totalDocuments(value) {
      super.totalDocuments = value;
    }
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new firestore.LoadBundleTaskProgress._fromJsObject(jsObject);
    }
    static getInstance(jsObject) {
      let t49, t48, t47, t46;
      t46 = firestore.LoadBundleTaskProgress._expando;
      t47 = jsObject;
      t48 = t46._get(t47);
      return t48 == null ? (t49 = new firestore.LoadBundleTaskProgress._fromJsObject(jsObject), t46._set(t47, t49), t49) : t48;
    }
  };
  (firestore.LoadBundleTaskProgress._fromJsObject = function(jsObject) {
    this[S$.taskState] = load_bundle_task_state$.convertToTaskState(jsObject.taskState[S$.$toLowerCase]());
    this[S$.bytesLoaded] = core.int.parse(jsObject.bytesLoaded);
    this[S$.documentsLoaded] = jsObject.documentsLoaded;
    this[S$.totalBytes] = core.int.parse(jsObject.totalBytes);
    this[S$.totalDocuments] = jsObject.totalDocuments;
    firestore.LoadBundleTaskProgress.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = firestore.LoadBundleTaskProgress.prototype;
  dart.addTypeTests(firestore.LoadBundleTaskProgress);
  dart.addTypeCaches(firestore.LoadBundleTaskProgress);
  dart.setStaticMethodSignature(firestore.LoadBundleTaskProgress, () => ['getInstance']);
  dart.setLibraryUri(firestore.LoadBundleTaskProgress, I[31]);
  dart.setFieldSignature(firestore.LoadBundleTaskProgress, () => ({
    __proto__: dart.getFields(firestore.LoadBundleTaskProgress.__proto__),
    taskState: dart.finalFieldType(load_bundle_task_state.LoadBundleTaskState),
    bytesLoaded: dart.finalFieldType(core.int),
    documentsLoaded: dart.finalFieldType(core.int),
    totalBytes: dart.finalFieldType(core.int),
    totalDocuments: dart.finalFieldType(core.int)
  }));
  dart.setStaticFieldSignature(firestore.LoadBundleTaskProgress, () => ['_expando']);
  dart.defineLazy(firestore.LoadBundleTaskProgress, {
    /*firestore.LoadBundleTaskProgress._expando*/get _expando() {
      return new (T$.ExpandoOfLoadBundleTaskProgress()).new();
    }
  }, false);
  firestore._Updatable = class _Updatable extends core.Object {
    [S$._wrapUpdateFunctionCall](T, jsObject, data, documentRef = null) {
      let args = [utils$0.jsify(data)];
      if (documentRef != null) {
        args[S$.$insert](0, documentRef.jsObject);
      }
      return dart.nullable(T).as(utils$.callMethod(core.Object.as(jsObject), "update", args));
    }
  };
  (firestore._Updatable.new = function() {
    ;
  }).prototype = firestore._Updatable.prototype;
  dart.addTypeTests(firestore._Updatable);
  dart.addTypeCaches(firestore._Updatable);
  dart.setMethodSignature(firestore._Updatable, () => ({
    __proto__: dart.getMethods(firestore._Updatable.__proto__),
    [S$._wrapUpdateFunctionCall]: dart.gFnType(T => [dart.nullable(T), [dart.dynamic, core.Map$(core.String, dart.dynamic)], [dart.nullable(firestore.DocumentReference)]], T => [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(firestore._Updatable, I[31]);
  const JsObjectWrapper__Updatable$36 = class JsObjectWrapper__Updatable extends js$.JsObjectWrapper$(dart.packageJSType("firebase_firestore.WriteBatch", false)) {};
  (JsObjectWrapper__Updatable$36.fromJsObject = function(jsObject) {
    JsObjectWrapper__Updatable$36.__proto__.fromJsObject.call(this, jsObject);
  }).prototype = JsObjectWrapper__Updatable$36.prototype;
  dart.applyMixin(JsObjectWrapper__Updatable$36, firestore._Updatable);
  firestore.WriteBatch = class WriteBatch extends JsObjectWrapper__Updatable$36 {
    static getInstance(jsObject) {
      let t49, t48, t47, t46;
      t46 = firestore.WriteBatch._expando;
      t47 = jsObject;
      t48 = t46._get(t47);
      return t48 == null ? (t49 = new firestore.WriteBatch._fromJsObject(jsObject), t46._set(t47, t49), t49) : t48;
    }
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new firestore.WriteBatch._fromJsObject(jsObject);
    }
    commit() {
      return utils$.handleThenable(dart.void, this.jsObject.commit());
    }
    delete(documentRef) {
      return firestore.WriteBatch.getInstance(this.jsObject.delete(documentRef.jsObject));
    }
    set(documentRef, data, options = null) {
      let jsObjectSet = options != null ? this.jsObject.set(documentRef.jsObject, utils$0.jsify(data), options) : this.jsObject.set(documentRef.jsObject, utils$0.jsify(data));
      return firestore.WriteBatch.getInstance(jsObjectSet);
    }
    update(documentRef, data) {
      return firestore.WriteBatch.getInstance(dart.packageJSType("firebase_firestore.WriteBatch", false).as(this[S$._wrapUpdateFunctionCall](dart.dynamic, this.jsObject, data, documentRef)));
    }
  };
  (firestore.WriteBatch._fromJsObject = function(jsObject) {
    firestore.WriteBatch.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = firestore.WriteBatch.prototype;
  dart.addTypeTests(firestore.WriteBatch);
  dart.addTypeCaches(firestore.WriteBatch);
  dart.setMethodSignature(firestore.WriteBatch, () => ({
    __proto__: dart.getMethods(firestore.WriteBatch.__proto__),
    commit: dart.fnType(async.Future$(dart.void), []),
    delete: dart.fnType(firestore.WriteBatch, [firestore.DocumentReference]),
    set: dart.fnType(firestore.WriteBatch, [firestore.DocumentReference, core.Map$(core.String, dart.dynamic)], [dart.nullable(dart.packageJSType("SetOptions", false))]),
    update: dart.fnType(firestore.WriteBatch, [firestore.DocumentReference, core.Map$(core.String, dart.dynamic)])
  }));
  dart.setStaticMethodSignature(firestore.WriteBatch, () => ['getInstance']);
  dart.setLibraryUri(firestore.WriteBatch, I[31]);
  dart.setStaticFieldSignature(firestore.WriteBatch, () => ['_expando']);
  dart.defineLazy(firestore.WriteBatch, {
    /*firestore.WriteBatch._expando*/get _expando() {
      return new (T$.ExpandoOfWriteBatch()).new();
    }
  }, false);
  const JsObjectWrapper__Updatable$36$ = class JsObjectWrapper__Updatable extends js$.JsObjectWrapper$(dart.packageJSType("firebase_firestore.DocumentReference", false)) {};
  (JsObjectWrapper__Updatable$36$.fromJsObject = function(jsObject) {
    JsObjectWrapper__Updatable$36$.__proto__.fromJsObject.call(this, jsObject);
  }).prototype = JsObjectWrapper__Updatable$36$.prototype;
  dart.applyMixin(JsObjectWrapper__Updatable$36$, firestore._Updatable);
  firestore.DocumentReference = class DocumentReference extends JsObjectWrapper__Updatable$36$ {
    get firestore() {
      return firestore.Firestore.getInstance(this.jsObject.firestore);
    }
    get id() {
      return this.jsObject.id;
    }
    get parent() {
      return firestore.CollectionReference.getInstance(this.jsObject.parent);
    }
    get path() {
      return this.jsObject.path;
    }
    static getInstance(jsObject) {
      let t49, t48, t47, t46;
      t46 = firestore.DocumentReference._expando;
      t47 = jsObject;
      t48 = t46._get(t47);
      return t48 == null ? (t49 = new firestore.DocumentReference._fromJsObject(jsObject), t46._set(t47, t49), t49) : t48;
    }
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new firestore.DocumentReference._fromJsObject(jsObject);
    }
    collection(collectionPath) {
      return firestore.CollectionReference.getInstance(dart.global.firebase_firestore.collection(this.firestore.jsObject, this.path + "/" + collectionPath));
    }
    delete() {
      return utils$.handleThenable(dart.void, dart.global.firebase_firestore.deleteDoc(this.jsObject));
    }
    get(options = null) {
      if (options == null || options.source === "default") {
        return utils$.handleThenable(dart.packageJSType("firebase_firestore.DocumentSnapshot", false), dart.global.firebase_firestore.getDoc(this.jsObject)).then(firestore.DocumentSnapshot, C[38] || CT.C38);
      } else if (options.source === "server") {
        return utils$.handleThenable(dart.packageJSType("firebase_firestore.DocumentSnapshot", false), dart.global.firebase_firestore.getDocFromServer(this.jsObject)).then(firestore.DocumentSnapshot, C[38] || CT.C38);
      } else {
        return utils$.handleThenable(dart.packageJSType("firebase_firestore.DocumentSnapshot", false), dart.global.firebase_firestore.getDocFromCache(this.jsObject)).then(firestore.DocumentSnapshot, C[38] || CT.C38);
      }
    }
    get onSnapshot() {
      return this[S$._createSnapshotStream]().stream;
    }
    get onMetadataChangesSnapshot() {
      return this[S$._createSnapshotStream]({includeMetadataChanges: true}).stream;
    }
    [S$._createSnapshotStream](options = null) {
      let onSnapshotUnsubscribe = null;
      function onSnapshotUnsubscribe$35get() {
        let t47;
        t47 = onSnapshotUnsubscribe;
        return t47 == null ? dart.throw(new _internal.LateError.localNI("onSnapshotUnsubscribe")) : t47;
      }
      function onSnapshotUnsubscribe$35set(onSnapshotUnsubscribe$35param) {
        return onSnapshotUnsubscribe = onSnapshotUnsubscribe$35param;
      }
      let controller = null;
      function controller$35get() {
        let t50;
        t50 = controller;
        return t50 == null ? dart.throw(new _internal.LateError.localNI("controller")) : t50;
      }
      function controller$35set(controller$35param) {
        return controller = controller$35param;
      }
      let nextWrapper = js.allowInterop(T$.DocumentSnapshotJsImplToNull(), dart.fn(snapshot => {
        controller$35get().add(firestore.DocumentSnapshot.getInstance(snapshot));
      }, T$.DocumentSnapshotJsImplToNull()));
      let errorWrapper = js.allowInterop(T$.dynamicTovoid(), dart.fn(e => controller$35get().addError(core.Object.as(e)), T$.dynamicTovoid()));
      const startListen = () => {
        onSnapshotUnsubscribe$35set(options != null ? dart.global.firebase_firestore.onSnapshot(this.jsObject, options, dart.assertInterop(nextWrapper), dart.assertInterop(errorWrapper)) : dart.global.firebase_firestore.onSnapshot(this.jsObject, dart.assertInterop(nextWrapper), dart.assertInterop(errorWrapper)));
      };
      dart.fn(startListen, T$.VoidTovoid());
      function stopListen() {
        onSnapshotUnsubscribe$35get()();
      }
      dart.fn(stopListen, T$.VoidTovoid());
      return controller$35set(T$.StreamControllerOfDocumentSnapshot().broadcast({onListen: startListen, onCancel: stopListen, sync: true}));
    }
    set(data, options = null) {
      let jsObjectSet = options != null ? dart.global.firebase_firestore.setDoc(this.jsObject, utils$0.jsify(data), options) : dart.global.firebase_firestore.setDoc(this.jsObject, utils$0.jsify(data));
      return utils$.handleThenable(dart.void, jsObjectSet);
    }
    update(data) {
      return utils$.handleThenable(dart.void, dart.global.firebase_firestore.updateDoc(this.jsObject, utils$0.jsify(data)));
    }
  };
  (firestore.DocumentReference._fromJsObject = function(jsObject) {
    firestore.DocumentReference.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = firestore.DocumentReference.prototype;
  dart.addTypeTests(firestore.DocumentReference);
  dart.addTypeCaches(firestore.DocumentReference);
  dart.setMethodSignature(firestore.DocumentReference, () => ({
    __proto__: dart.getMethods(firestore.DocumentReference.__proto__),
    collection: dart.fnType(dart.nullable(firestore.CollectionReference$(dart.packageJSType("firebase_firestore.CollectionReference", false))), [core.String]),
    delete: dart.fnType(async.Future$(dart.void), []),
    get: dart.fnType(async.Future$(firestore.DocumentSnapshot), [], [dart.nullable(dart.packageJSType("GetOptions", false))]),
    [S$._createSnapshotStream]: dart.fnType(async.StreamController$(firestore.DocumentSnapshot), [], [dart.nullable(dart.packageJSType("DocumentListenOptions", false))]),
    set: dart.fnType(async.Future$(dart.void), [core.Map$(core.String, dart.dynamic)], [dart.nullable(dart.packageJSType("SetOptions", false))]),
    update: dart.fnType(async.Future$(dart.void), [core.Map$(core.String, dart.dynamic)])
  }));
  dart.setStaticMethodSignature(firestore.DocumentReference, () => ['getInstance']);
  dart.setGetterSignature(firestore.DocumentReference, () => ({
    __proto__: dart.getGetters(firestore.DocumentReference.__proto__),
    firestore: firestore.Firestore,
    id: core.String,
    parent: dart.nullable(firestore.CollectionReference$(dart.packageJSType("firebase_firestore.CollectionReference", false))),
    path: core.String,
    onSnapshot: async.Stream$(firestore.DocumentSnapshot),
    onMetadataChangesSnapshot: async.Stream$(firestore.DocumentSnapshot)
  }));
  dart.setLibraryUri(firestore.DocumentReference, I[31]);
  dart.setStaticFieldSignature(firestore.DocumentReference, () => ['_expando']);
  dart.defineLazy(firestore.DocumentReference, {
    /*firestore.DocumentReference._expando*/get _expando() {
      return new (T$.ExpandoOfDocumentReference()).new();
    }
  }, false);
  const _is_Query_default$ = Symbol('_is_Query_default');
  firestore.Query$ = dart.generic(T => {
    class Query extends js$.JsObjectWrapper$(T) {
      get firestore() {
        return firestore.Firestore.getInstance(this.jsObject.firestore);
      }
      static ['_#fromJsObject#tearOff'](T, jsObject) {
        return new (firestore.Query$(T)).fromJsObject(jsObject);
      }
      endAt(opts) {
        let snapshot = opts && 'snapshot' in opts ? opts.snapshot : null;
        let fieldValues = opts && 'fieldValues' in opts ? opts.fieldValues : null;
        return new (T$.QueryOfQueryJsImpl()).fromJsObject(dart.global.firebase_firestore.query(this.jsObject, dart.packageJSType("firebase_firestore.QueryConstraint", false).as(this[S$._createQueryConstraint](dart.dynamic, dart.global.firebase_firestore.endAt, snapshot, fieldValues))));
      }
      endBefore(opts) {
        let snapshot = opts && 'snapshot' in opts ? opts.snapshot : null;
        let fieldValues = opts && 'fieldValues' in opts ? opts.fieldValues : null;
        return new (T$.QueryOfQueryJsImpl()).fromJsObject(dart.global.firebase_firestore.query(this.jsObject, dart.packageJSType("firebase_firestore.QueryConstraint", false).as(this[S$._createQueryConstraint](dart.dynamic, dart.global.firebase_firestore.endBefore, snapshot, fieldValues))));
      }
      get(options = null) {
        if (options == null || options.source === "default") {
          return utils$.handleThenable(dart.packageJSType("firebase_firestore.QuerySnapshot", false), dart.global.firebase_firestore.getDocs(this.jsObject)).then(firestore.QuerySnapshot, C[39] || CT.C39);
        } else if (options.source === "server") {
          return utils$.handleThenable(dart.packageJSType("firebase_firestore.QuerySnapshot", false), dart.global.firebase_firestore.getDocsFromServer(this.jsObject)).then(firestore.QuerySnapshot, C[39] || CT.C39);
        } else {
          return utils$.handleThenable(dart.packageJSType("firebase_firestore.QuerySnapshot", false), dart.global.firebase_firestore.getDocsFromCache(this.jsObject)).then(firestore.QuerySnapshot, C[39] || CT.C39);
        }
      }
      limit(limit) {
        return new (T$.QueryOfQueryJsImpl()).fromJsObject(dart.global.firebase_firestore.query(this.jsObject, dart.global.firebase_firestore.limit(limit)));
      }
      limitToLast(limit) {
        return new (T$.QueryOfQueryJsImpl()).fromJsObject(dart.global.firebase_firestore.query(this.jsObject, dart.global.firebase_firestore.limitToLast(limit)));
      }
      get onSnapshot() {
        let t53, t52;
        t52 = this[S$.__Query_onSnapshot];
        return t52 == null ? (t53 = this[S$._createSnapshotStream](false).stream, this[S$.__Query_onSnapshot] == null ? this[S$.__Query_onSnapshot] = t53 : dart.throw(new _internal.LateError.fieldADI("onSnapshot"))) : t52;
      }
      get onSnapshotMetadata() {
        let t53, t52;
        t52 = this[S$.__Query_onSnapshotMetadata];
        return t52 == null ? (t53 = this[S$._createSnapshotStream](true).stream, this[S$.__Query_onSnapshotMetadata] == null ? this[S$.__Query_onSnapshotMetadata] = t53 : dart.throw(new _internal.LateError.fieldADI("onSnapshotMetadata"))) : t52;
      }
      [S$._createSnapshotStream](includeMetadataChanges) {
        let onSnapshotUnsubscribe = null;
        function onSnapshotUnsubscribe$35get() {
          let t53;
          t53 = onSnapshotUnsubscribe;
          return t53 == null ? dart.throw(new _internal.LateError.localNI("onSnapshotUnsubscribe")) : t53;
        }
        function onSnapshotUnsubscribe$35set(onSnapshotUnsubscribe$35param) {
          return onSnapshotUnsubscribe = onSnapshotUnsubscribe$35param;
        }
        let controller = null;
        function controller$35get() {
          let t56;
          t56 = controller;
          return t56 == null ? dart.throw(new _internal.LateError.localNI("controller")) : t56;
        }
        function controller$35set(controller$35param) {
          return controller = controller$35param;
        }
        let nextWrapper = js.allowInterop(T$.QuerySnapshotJsImplToNull(), dart.fn(snapshot => {
          controller$35get().add(new firestore.QuerySnapshot._fromJsObject(snapshot));
        }, T$.QuerySnapshotJsImplToNull()));
        let errorWrapper = js.allowInterop(T$.dynamicTovoid(), dart.fn(e => controller$35get().addError(core.Object.as(e)), T$.dynamicTovoid()));
        let options = {includeMetadataChanges: includeMetadataChanges};
        const startListen = () => {
          onSnapshotUnsubscribe$35set(dart.global.firebase_firestore.onSnapshot(this.jsObject, options, dart.assertInterop(nextWrapper), dart.assertInterop(errorWrapper)));
        };
        dart.fn(startListen, T$.VoidTovoid());
        function stopListen() {
          onSnapshotUnsubscribe$35get()();
        }
        dart.fn(stopListen, T$.VoidTovoid());
        return controller$35set(T$.StreamControllerOfQuerySnapshot().broadcast({onListen: startListen, onCancel: stopListen, sync: true}));
      }
      orderBy(fieldPath, directionStr = null) {
        let jsObjectOrderBy = directionStr != null ? dart.global.firebase_firestore.orderBy(fieldPath, directionStr) : dart.global.firebase_firestore.orderBy(fieldPath);
        return new (T$.QueryOfQueryJsImpl()).fromJsObject(dart.global.firebase_firestore.query(this.jsObject, jsObjectOrderBy));
      }
      startAfter(opts) {
        let snapshot = opts && 'snapshot' in opts ? opts.snapshot : null;
        let fieldValues = opts && 'fieldValues' in opts ? opts.fieldValues : null;
        return new (T$.QueryOfQueryJsImpl()).fromJsObject(dart.global.firebase_firestore.query(this.jsObject, dart.packageJSType("firebase_firestore.QueryConstraint", false).as(this[S$._createQueryConstraint](dart.dynamic, dart.global.firebase_firestore.startAfter, snapshot, fieldValues))));
      }
      startAt(opts) {
        let snapshot = opts && 'snapshot' in opts ? opts.snapshot : null;
        let fieldValues = opts && 'fieldValues' in opts ? opts.fieldValues : null;
        return new (T$.QueryOfQueryJsImpl()).fromJsObject(dart.global.firebase_firestore.query(this.jsObject, dart.packageJSType("firebase_firestore.QueryConstraint", false).as(this[S$._createQueryConstraint](dart.dynamic, dart.global.firebase_firestore.startAt, snapshot, fieldValues))));
      }
      where(fieldPath, opStr, value) {
        return new (T$.QueryOfQueryJsImpl()).fromJsObject(dart.global.firebase_firestore.query(this.jsObject, dart.global.firebase_firestore.where(fieldPath, opStr, utils$0.jsify(value))));
      }
      [S$._createQueryConstraint](S, method, snapshot, fieldValues) {
        if (snapshot == null && fieldValues == null) {
          dart.throw(new core.ArgumentError.new("Please provide either snapshot or fieldValues parameter."));
        }
        let args = snapshot != null ? T$.JSArrayOfDocumentSnapshotJsImpl().of([snapshot.jsObject]) : dart.nullCheck(fieldValues)[S$.$map](dart.dynamic, C[37] || CT.C37)[S$.$toList]();
        return dart.nullable(S).as(utils$.callMethod(method, "apply", [null, utils$0.jsify(args)]));
      }
    }
    (Query.fromJsObject = function(jsObject) {
      this[S$.__Query_onSnapshot] = null;
      this[S$.__Query_onSnapshotMetadata] = null;
      Query.__proto__.fromJsObject.call(this, jsObject);
      ;
    }).prototype = Query.prototype;
    dart.addTypeTests(Query);
    Query.prototype[_is_Query_default$] = true;
    dart.addTypeCaches(Query);
    dart.setMethodSignature(Query, () => ({
      __proto__: dart.getMethods(Query.__proto__),
      endAt: dart.fnType(firestore.Query$(dart.packageJSType("firebase_firestore.Query", false)), [], {fieldValues: dart.nullable(core.List), snapshot: dart.nullable(firestore.DocumentSnapshot)}, {}),
      endBefore: dart.fnType(firestore.Query$(dart.packageJSType("firebase_firestore.Query", false)), [], {fieldValues: dart.nullable(core.List), snapshot: dart.nullable(firestore.DocumentSnapshot)}, {}),
      get: dart.fnType(async.Future$(firestore.QuerySnapshot), [], [dart.nullable(dart.packageJSType("GetOptions", false))]),
      limit: dart.fnType(firestore.Query$(dart.packageJSType("firebase_firestore.Query", false)), [core.num]),
      limitToLast: dart.fnType(firestore.Query$(dart.packageJSType("firebase_firestore.Query", false)), [core.num]),
      [S$._createSnapshotStream]: dart.fnType(async.StreamController$(firestore.QuerySnapshot), [core.bool]),
      orderBy: dart.fnType(firestore.Query$(dart.packageJSType("firebase_firestore.Query", false)), [dart.dynamic], [dart.nullable(core.String)]),
      startAfter: dart.fnType(firestore.Query$(dart.packageJSType("firebase_firestore.Query", false)), [], {fieldValues: dart.nullable(core.List), snapshot: dart.nullable(firestore.DocumentSnapshot)}, {}),
      startAt: dart.fnType(firestore.Query$(dart.packageJSType("firebase_firestore.Query", false)), [], {fieldValues: dart.nullable(core.List), snapshot: dart.nullable(firestore.DocumentSnapshot)}, {}),
      where: dart.fnType(firestore.Query$(dart.packageJSType("firebase_firestore.Query", false)), [dart.dynamic, core.String, dart.dynamic]),
      [S$._createQueryConstraint]: dart.gFnType(S => [dart.nullable(S), [core.Object, dart.nullable(firestore.DocumentSnapshot), dart.nullable(core.List)]], S => [dart.nullable(core.Object)])
    }));
    dart.setGetterSignature(Query, () => ({
      __proto__: dart.getGetters(Query.__proto__),
      firestore: firestore.Firestore,
      onSnapshot: async.Stream$(firestore.QuerySnapshot),
      onSnapshotMetadata: async.Stream$(firestore.QuerySnapshot)
    }));
    dart.setLibraryUri(Query, I[31]);
    dart.setFieldSignature(Query, () => ({
      __proto__: dart.getFields(Query.__proto__),
      [S$.__Query_onSnapshot]: dart.fieldType(dart.nullable(async.Stream$(firestore.QuerySnapshot))),
      [S$.__Query_onSnapshotMetadata]: dart.fieldType(dart.nullable(async.Stream$(firestore.QuerySnapshot)))
    }));
    return Query;
  });
  firestore.Query = firestore.Query$();
  dart.addTypeTests(firestore.Query, _is_Query_default$);
  const _is_CollectionReference_default$ = Symbol('_is_CollectionReference_default');
  firestore.CollectionReference$ = dart.generic(T => {
    class CollectionReference extends firestore.Query$(T) {
      get id() {
        return this.jsObject.id;
      }
      get parent() {
        return firestore.DocumentReference.getInstance(this.jsObject.parent);
      }
      get path() {
        return this.jsObject.path;
      }
      static getInstance(jsObject) {
        let t61, t60, t59, t58;
        t58 = firestore.CollectionReference._expando;
        t59 = jsObject;
        t60 = t58._get(t59);
        return t60 == null ? (t61 = new (T$.CollectionReferenceOfCollectionReferenceJsImpl())._fromJsObject(jsObject), t58._set(t59, t61), t61) : t60;
      }
      static new() {
        return new (firestore.CollectionReference$(T))._fromJsObject(new dart.global.firebase_firestore.CollectionReference());
      }
      static ['_#new#tearOff'](T) {
        return firestore.CollectionReference$(T).new();
      }
      static ['_#_fromJsObject#tearOff'](T, jsObject) {
        return new (firestore.CollectionReference$(T))._fromJsObject(jsObject);
      }
      add(data) {
        return utils$.handleThenable(dart.packageJSType("firebase_firestore.DocumentReference", false), dart.global.firebase_firestore.addDoc(this.jsObject, utils$0.jsify(data))).then(firestore.DocumentReference, C[40] || CT.C40);
      }
      doc(documentPath = null) {
        let ref = documentPath != null ? dart.global.firebase_firestore.doc(this.jsObject, documentPath) : dart.global.firebase_firestore.doc(this.jsObject);
        return firestore.DocumentReference.getInstance(ref);
      }
      isEqual(other) {
        return dart.global.firebase_firestore.queryEqual(this.jsObject, other.jsObject);
      }
    }
    (CollectionReference._fromJsObject = function(jsObject) {
      CollectionReference.__proto__.fromJsObject.call(this, T.as(jsObject));
      ;
    }).prototype = CollectionReference.prototype;
    dart.addTypeTests(CollectionReference);
    CollectionReference.prototype[_is_CollectionReference_default$] = true;
    dart.addTypeCaches(CollectionReference);
    dart.setMethodSignature(CollectionReference, () => ({
      __proto__: dart.getMethods(CollectionReference.__proto__),
      add: dart.fnType(async.Future$(firestore.DocumentReference), [core.Map$(core.String, dart.dynamic)]),
      doc: dart.fnType(firestore.DocumentReference, [], [dart.nullable(core.String)]),
      isEqual: dart.fnType(core.bool, [firestore.CollectionReference$(dart.packageJSType("firebase_firestore.CollectionReference", false))])
    }));
    dart.setStaticMethodSignature(CollectionReference, () => ['getInstance', 'new']);
    dart.setGetterSignature(CollectionReference, () => ({
      __proto__: dart.getGetters(CollectionReference.__proto__),
      id: core.String,
      parent: dart.nullable(firestore.DocumentReference),
      path: core.String
    }));
    dart.setLibraryUri(CollectionReference, I[31]);
    dart.setStaticFieldSignature(CollectionReference, () => ['_expando']);
    return CollectionReference;
  });
  firestore.CollectionReference = firestore.CollectionReference$();
  dart.defineLazy(firestore.CollectionReference, {
    /*firestore.CollectionReference._expando*/get _expando() {
      return new (T$.ExpandoOfCollectionReferenceOfCollectionReferenceJsImpl()).new();
    }
  }, false);
  dart.addTypeTests(firestore.CollectionReference, _is_CollectionReference_default$);
  firestore.DocumentChange = class DocumentChange extends js$.JsObjectWrapper$(dart.packageJSType("DocumentChangeJsImpl", false)) {
    get type() {
      return this.jsObject.type;
    }
    get doc() {
      return firestore.DocumentSnapshot.getInstance(this.jsObject.doc);
    }
    get oldIndex() {
      return this.jsObject.oldIndex;
    }
    get newIndex() {
      return this.jsObject.newIndex;
    }
    static getInstance(jsObject) {
      let t61, t60, t59, t58;
      t58 = firestore.DocumentChange._expando;
      t59 = jsObject;
      t60 = t58._get(t59);
      return t60 == null ? (t61 = new firestore.DocumentChange._fromJsObject(jsObject), t58._set(t59, t61), t61) : t60;
    }
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new firestore.DocumentChange._fromJsObject(jsObject);
    }
  };
  (firestore.DocumentChange._fromJsObject = function(jsObject) {
    firestore.DocumentChange.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = firestore.DocumentChange.prototype;
  dart.addTypeTests(firestore.DocumentChange);
  dart.addTypeCaches(firestore.DocumentChange);
  dart.setStaticMethodSignature(firestore.DocumentChange, () => ['getInstance']);
  dart.setGetterSignature(firestore.DocumentChange, () => ({
    __proto__: dart.getGetters(firestore.DocumentChange.__proto__),
    type: core.String,
    doc: dart.nullable(firestore.DocumentSnapshot),
    oldIndex: core.num,
    newIndex: core.num
  }));
  dart.setLibraryUri(firestore.DocumentChange, I[31]);
  dart.setStaticFieldSignature(firestore.DocumentChange, () => ['_expando']);
  dart.defineLazy(firestore.DocumentChange, {
    /*firestore.DocumentChange._expando*/get _expando() {
      return new (T$.ExpandoOfDocumentChange()).new();
    }
  }, false);
  firestore.DocumentSnapshot = class DocumentSnapshot extends js$.JsObjectWrapper$(dart.packageJSType("firebase_firestore.DocumentSnapshot", false)) {
    get exists() {
      return this.jsObject.exists();
    }
    get id() {
      return this.jsObject.id;
    }
    get metadata() {
      return this.jsObject.metadata;
    }
    get ref() {
      return firestore.DocumentReference.getInstance(this.jsObject.ref);
    }
    static getInstance(jsObject) {
      let t61, t60, t59, t58;
      t58 = firestore.DocumentSnapshot._expando;
      t59 = jsObject;
      t60 = t58._get(t59);
      return t60 == null ? (t61 = new firestore.DocumentSnapshot._fromJsObject(jsObject), t58._set(t59, t61), t61) : t60;
    }
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new firestore.DocumentSnapshot._fromJsObject(jsObject);
    }
    data() {
      return T$.MapNOfString$dynamic().as(utils$0.dartify(this.jsObject.data()));
    }
    get(fieldPath) {
      return utils$0.dartify(this.jsObject.get(fieldPath));
    }
    isEqual(other) {
      return dart.global.firebase_firestore.snapshotEqual(this.jsObject, other.jsObject);
    }
  };
  (firestore.DocumentSnapshot._fromJsObject = function(jsObject) {
    firestore.DocumentSnapshot.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = firestore.DocumentSnapshot.prototype;
  dart.addTypeTests(firestore.DocumentSnapshot);
  dart.addTypeCaches(firestore.DocumentSnapshot);
  dart.setMethodSignature(firestore.DocumentSnapshot, () => ({
    __proto__: dart.getMethods(firestore.DocumentSnapshot.__proto__),
    data: dart.fnType(dart.nullable(core.Map$(core.String, dart.dynamic)), []),
    get: dart.fnType(dart.dynamic, [dart.dynamic]),
    isEqual: dart.fnType(core.bool, [firestore.DocumentSnapshot])
  }));
  dart.setStaticMethodSignature(firestore.DocumentSnapshot, () => ['getInstance']);
  dart.setGetterSignature(firestore.DocumentSnapshot, () => ({
    __proto__: dart.getGetters(firestore.DocumentSnapshot.__proto__),
    exists: core.bool,
    id: core.String,
    metadata: dart.packageJSType("firebase_firestore.SnapshotMetadata", false),
    ref: dart.nullable(firestore.DocumentReference)
  }));
  dart.setLibraryUri(firestore.DocumentSnapshot, I[31]);
  dart.setStaticFieldSignature(firestore.DocumentSnapshot, () => ['_expando']);
  dart.defineLazy(firestore.DocumentSnapshot, {
    /*firestore.DocumentSnapshot._expando*/get _expando() {
      return new (T$.ExpandoOfDocumentSnapshot()).new();
    }
  }, false);
  firestore.QuerySnapshot = class QuerySnapshot extends js$.JsObjectWrapper$(dart.packageJSType("firebase_firestore.QuerySnapshot", false)) {
    docChanges(options = null) {
      let changes = options != null ? this.jsObject.docChanges(dart.nullable(dart.packageJSType("SnapshotListenOptions", false)).as(utils$0.jsify(options))) : this.jsObject.docChanges();
      return changes[S$.$map](firestore.DocumentChange, dart.fn(e => firestore.DocumentChange.getInstance(dart.packageJSType("DocumentChangeJsImpl", false).as(e)), T$.dynamicToDocumentChange()))[S$.$toList]();
    }
    get docs() {
      return this.jsObject.docs[S$.$map](firestore.DocumentSnapshot, dart.fn(e => firestore.DocumentSnapshot.getInstance(dart.packageJSType("firebase_firestore.DocumentSnapshot", false).as(e)), T$.dynamicToDocumentSnapshot()))[S$.$toList]();
    }
    get empty() {
      return this.jsObject.empty;
    }
    get metadata() {
      return this.jsObject.metadata;
    }
    get query() {
      return new (T$.QueryOfQueryJsImpl()).fromJsObject(this.jsObject.query);
    }
    get size() {
      return this.jsObject.size;
    }
    static getInstance(jsObject) {
      let t61, t60, t59, t58;
      t58 = firestore.QuerySnapshot._expando;
      t59 = jsObject;
      t60 = t58._get(t59);
      return t60 == null ? (t61 = new firestore.QuerySnapshot._fromJsObject(jsObject), t58._set(t59, t61), t61) : t60;
    }
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new firestore.QuerySnapshot._fromJsObject(jsObject);
    }
    forEach(callback) {
      let callbackWrap = js.allowInterop(T$.dynamicTodynamic(), dart.fn(s => callback(firestore.DocumentSnapshot.getInstance(dart.packageJSType("firebase_firestore.DocumentSnapshot", false).as(s))), T$.dynamicTodynamic()));
      return this.jsObject.forEach(dart.assertInterop(callbackWrap));
    }
    isEqual(other) {
      return dart.global.firebase_firestore.snapshotEqual(this.jsObject, other.jsObject);
    }
  };
  (firestore.QuerySnapshot._fromJsObject = function(jsObject) {
    firestore.QuerySnapshot.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = firestore.QuerySnapshot.prototype;
  dart.addTypeTests(firestore.QuerySnapshot);
  dart.addTypeCaches(firestore.QuerySnapshot);
  dart.setMethodSignature(firestore.QuerySnapshot, () => ({
    __proto__: dart.getMethods(firestore.QuerySnapshot.__proto__),
    docChanges: dart.fnType(core.List$(firestore.DocumentChange), [], [dart.nullable(dart.packageJSType("SnapshotListenOptions", false))]),
    forEach: dart.fnType(dart.void, [dart.fnType(dart.dynamic, [dart.nullable(firestore.DocumentSnapshot)])]),
    isEqual: dart.fnType(core.bool, [firestore.QuerySnapshot])
  }));
  dart.setStaticMethodSignature(firestore.QuerySnapshot, () => ['getInstance']);
  dart.setGetterSignature(firestore.QuerySnapshot, () => ({
    __proto__: dart.getGetters(firestore.QuerySnapshot.__proto__),
    docs: core.List$(dart.nullable(firestore.DocumentSnapshot)),
    empty: core.bool,
    metadata: dart.packageJSType("firebase_firestore.SnapshotMetadata", false),
    query: firestore.Query$(dart.packageJSType("firebase_firestore.Query", false)),
    size: core.num
  }));
  dart.setLibraryUri(firestore.QuerySnapshot, I[31]);
  dart.setStaticFieldSignature(firestore.QuerySnapshot, () => ['_expando']);
  dart.defineLazy(firestore.QuerySnapshot, {
    /*firestore.QuerySnapshot._expando*/get _expando() {
      return new (T$.ExpandoOfQuerySnapshot()).new();
    }
  }, false);
  const JsObjectWrapper__Updatable$36$0 = class JsObjectWrapper__Updatable extends js$.JsObjectWrapper$(dart.packageJSType("firebase_firestore.Transaction", false)) {};
  (JsObjectWrapper__Updatable$36$0.fromJsObject = function(jsObject) {
    JsObjectWrapper__Updatable$36$0.__proto__.fromJsObject.call(this, jsObject);
  }).prototype = JsObjectWrapper__Updatable$36$0.prototype;
  dart.applyMixin(JsObjectWrapper__Updatable$36$0, firestore._Updatable);
  firestore.Transaction = class Transaction extends JsObjectWrapper__Updatable$36$0 {
    static getInstance(jsObject) {
      let t61, t60, t59, t58;
      t58 = firestore.Transaction._expando;
      t59 = jsObject;
      t60 = t58._get(t59);
      return t60 == null ? (t61 = new firestore.Transaction._fromJsObject(jsObject), t58._set(t59, t61), t61) : t60;
    }
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new firestore.Transaction._fromJsObject(jsObject);
    }
    delete(documentRef) {
      return firestore.Transaction.getInstance(this.jsObject.delete(documentRef.jsObject));
    }
    get(documentRef) {
      return utils$.handleThenable(dart.packageJSType("firebase_firestore.DocumentSnapshot", false), this.jsObject.get(documentRef.jsObject)).then(firestore.DocumentSnapshot, C[38] || CT.C38);
    }
    set(documentRef, data, options = null) {
      let jsObjectSet = options != null ? this.jsObject.set(documentRef.jsObject, utils$0.jsify(data), options) : this.jsObject.set(documentRef.jsObject, utils$0.jsify(data));
      return firestore.Transaction.getInstance(jsObjectSet);
    }
    update(documentRef, data) {
      return firestore.Transaction.getInstance(dart.packageJSType("firebase_firestore.Transaction", false).as(this[S$._wrapUpdateFunctionCall](dart.dynamic, this.jsObject, data, documentRef)));
    }
  };
  (firestore.Transaction._fromJsObject = function(jsObject) {
    firestore.Transaction.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = firestore.Transaction.prototype;
  dart.addTypeTests(firestore.Transaction);
  dart.addTypeCaches(firestore.Transaction);
  dart.setMethodSignature(firestore.Transaction, () => ({
    __proto__: dart.getMethods(firestore.Transaction.__proto__),
    delete: dart.fnType(firestore.Transaction, [firestore.DocumentReference]),
    get: dart.fnType(async.Future$(firestore.DocumentSnapshot), [firestore.DocumentReference]),
    set: dart.fnType(firestore.Transaction, [firestore.DocumentReference, core.Map$(core.String, dart.dynamic)], [dart.nullable(dart.packageJSType("SetOptions", false))]),
    update: dart.fnType(firestore.Transaction, [firestore.DocumentReference, core.Map$(core.String, dart.dynamic)])
  }));
  dart.setStaticMethodSignature(firestore.Transaction, () => ['getInstance']);
  dart.setLibraryUri(firestore.Transaction, I[31]);
  dart.setStaticFieldSignature(firestore.Transaction, () => ['_expando']);
  dart.defineLazy(firestore.Transaction, {
    /*firestore.Transaction._expando*/get _expando() {
      return new (T$.ExpandoOfTransaction()).new();
    }
  }, false);
  firestore._FieldValueDelete = class _FieldValueDelete extends core.Object {
    [S$._jsify]() {
      return dart.global.firebase_firestore.deleteField();
    }
    toString() {
      return "FieldValue.delete()";
    }
    static ['_#new#tearOff']() {
      return new firestore._FieldValueDelete.new();
    }
  };
  (firestore._FieldValueDelete.new = function() {
    ;
  }).prototype = firestore._FieldValueDelete.prototype;
  dart.addTypeTests(firestore._FieldValueDelete);
  dart.addTypeCaches(firestore._FieldValueDelete);
  firestore._FieldValueDelete[dart.implements] = () => [firestore.FieldValue];
  dart.setMethodSignature(firestore._FieldValueDelete, () => ({
    __proto__: dart.getMethods(firestore._FieldValueDelete.__proto__),
    [S$._jsify]: dart.fnType(dart.packageJSType("FieldValue", false), [])
  }));
  dart.setLibraryUri(firestore._FieldValueDelete, I[31]);
  dart.defineExtensionMethods(firestore._FieldValueDelete, ['toString']);
  firestore._FieldValueServerTimestamp = class _FieldValueServerTimestamp extends core.Object {
    [S$._jsify]() {
      return dart.global.firebase_firestore.serverTimestamp();
    }
    toString() {
      return "FieldValue.serverTimestamp()";
    }
    static ['_#new#tearOff']() {
      return new firestore._FieldValueServerTimestamp.new();
    }
  };
  (firestore._FieldValueServerTimestamp.new = function() {
    ;
  }).prototype = firestore._FieldValueServerTimestamp.prototype;
  dart.addTypeTests(firestore._FieldValueServerTimestamp);
  dart.addTypeCaches(firestore._FieldValueServerTimestamp);
  firestore._FieldValueServerTimestamp[dart.implements] = () => [firestore.FieldValue];
  dart.setMethodSignature(firestore._FieldValueServerTimestamp, () => ({
    __proto__: dart.getMethods(firestore._FieldValueServerTimestamp.__proto__),
    [S$._jsify]: dart.fnType(dart.packageJSType("FieldValue", false), [])
  }));
  dart.setLibraryUri(firestore._FieldValueServerTimestamp, I[31]);
  dart.defineExtensionMethods(firestore._FieldValueServerTimestamp, ['toString']);
  firestore._FieldValueArray = class _FieldValueArray extends core.Object {};
  (firestore._FieldValueArray.new = function(elements) {
    this.elements = elements;
    ;
  }).prototype = firestore._FieldValueArray.prototype;
  dart.addTypeTests(firestore._FieldValueArray);
  dart.addTypeCaches(firestore._FieldValueArray);
  firestore._FieldValueArray[dart.implements] = () => [firestore.FieldValue];
  dart.setLibraryUri(firestore._FieldValueArray, I[31]);
  dart.setFieldSignature(firestore._FieldValueArray, () => ({
    __proto__: dart.getFields(firestore._FieldValueArray.__proto__),
    elements: dart.finalFieldType(dart.nullable(core.List))
  }));
  firestore._FieldValueArrayUnion = class _FieldValueArrayUnion extends firestore._FieldValueArray {
    static ['_#new#tearOff'](elements) {
      return new firestore._FieldValueArrayUnion.new(elements);
    }
    [S$._jsify]() {
      return dart.nullable(dart.packageJSType("FieldValue", false)).as(utils$.callMethod(dart.global.firebase_firestore.arrayUnion, "apply", [null, utils$0.jsify(this.elements)]));
    }
    toString() {
      return "FieldValue.arrayUnion(" + dart.str(this.elements) + ")";
    }
  };
  (firestore._FieldValueArrayUnion.new = function(elements) {
    firestore._FieldValueArrayUnion.__proto__.new.call(this, elements);
    ;
  }).prototype = firestore._FieldValueArrayUnion.prototype;
  dart.addTypeTests(firestore._FieldValueArrayUnion);
  dart.addTypeCaches(firestore._FieldValueArrayUnion);
  dart.setMethodSignature(firestore._FieldValueArrayUnion, () => ({
    __proto__: dart.getMethods(firestore._FieldValueArrayUnion.__proto__),
    [S$._jsify]: dart.fnType(dart.nullable(dart.packageJSType("FieldValue", false)), [])
  }));
  dart.setLibraryUri(firestore._FieldValueArrayUnion, I[31]);
  dart.defineExtensionMethods(firestore._FieldValueArrayUnion, ['toString']);
  firestore._FieldValueArrayRemove = class _FieldValueArrayRemove extends firestore._FieldValueArray {
    static ['_#new#tearOff'](elements) {
      return new firestore._FieldValueArrayRemove.new(elements);
    }
    [S$._jsify]() {
      return dart.nullable(dart.packageJSType("FieldValue", false)).as(utils$.callMethod(dart.global.firebase_firestore.arrayRemove, "apply", [null, utils$0.jsify(this.elements)]));
    }
    toString() {
      return "FieldValue.arrayRemove(" + dart.str(this.elements) + ")";
    }
  };
  (firestore._FieldValueArrayRemove.new = function(elements) {
    firestore._FieldValueArrayRemove.__proto__.new.call(this, elements);
    ;
  }).prototype = firestore._FieldValueArrayRemove.prototype;
  dart.addTypeTests(firestore._FieldValueArrayRemove);
  dart.addTypeCaches(firestore._FieldValueArrayRemove);
  dart.setMethodSignature(firestore._FieldValueArrayRemove, () => ({
    __proto__: dart.getMethods(firestore._FieldValueArrayRemove.__proto__),
    [S$._jsify]: dart.fnType(dart.nullable(dart.packageJSType("FieldValue", false)), [])
  }));
  dart.setLibraryUri(firestore._FieldValueArrayRemove, I[31]);
  dart.defineExtensionMethods(firestore._FieldValueArrayRemove, ['toString']);
  firestore._FieldValueIncrement = class _FieldValueIncrement extends core.Object {
    static ['_#new#tearOff'](n) {
      return new firestore._FieldValueIncrement.new(n);
    }
    [S$._jsify]() {
      return dart.global.firebase_firestore.increment(this.n);
    }
    toString() {
      return "FieldValue.increment(" + dart.str(this.n) + ")";
    }
  };
  (firestore._FieldValueIncrement.new = function(n) {
    this.n = n;
    ;
  }).prototype = firestore._FieldValueIncrement.prototype;
  dart.addTypeTests(firestore._FieldValueIncrement);
  dart.addTypeCaches(firestore._FieldValueIncrement);
  firestore._FieldValueIncrement[dart.implements] = () => [firestore.FieldValue];
  dart.setMethodSignature(firestore._FieldValueIncrement, () => ({
    __proto__: dart.getMethods(firestore._FieldValueIncrement.__proto__),
    [S$._jsify]: dart.fnType(dart.packageJSType("FieldValue", false), [])
  }));
  dart.setLibraryUri(firestore._FieldValueIncrement, I[31]);
  dart.setFieldSignature(firestore._FieldValueIncrement, () => ({
    __proto__: dart.getFields(firestore._FieldValueIncrement.__proto__),
    n: dart.finalFieldType(core.num)
  }));
  dart.defineExtensionMethods(firestore._FieldValueIncrement, ['toString']);
  firestore.FieldValue = class FieldValue extends core.Object {
    [S$._jsify]() {
      dart.throw(new core.UnimplementedError.new("_jsify() has not been implemented"));
    }
    static serverTimestamp() {
      return firestore.FieldValue._serverTimestamp;
    }
    static delete() {
      return firestore.FieldValue._delete;
    }
    static arrayUnion(elements) {
      return new firestore._FieldValueArrayUnion.new(elements);
    }
    static arrayRemove(elements) {
      return new firestore._FieldValueArrayRemove.new(elements);
    }
    static increment(n) {
      return new firestore._FieldValueIncrement.new(n);
    }
  };
  (firestore.FieldValue.__ = function() {
    ;
  }).prototype = firestore.FieldValue.prototype;
  dart.addTypeTests(firestore.FieldValue);
  dart.addTypeCaches(firestore.FieldValue);
  dart.setMethodSignature(firestore.FieldValue, () => ({
    __proto__: dart.getMethods(firestore.FieldValue.__proto__),
    [S$._jsify]: dart.fnType(dart.nullable(dart.packageJSType("FieldValue", false)), [])
  }));
  dart.setStaticMethodSignature(firestore.FieldValue, () => ['serverTimestamp', 'delete', 'arrayUnion', 'arrayRemove', 'increment']);
  dart.setLibraryUri(firestore.FieldValue, I[31]);
  dart.setStaticFieldSignature(firestore.FieldValue, () => ['_serverTimestamp', '_delete']);
  dart.defineLazy(firestore.FieldValue, {
    /*firestore.FieldValue._serverTimestamp*/get _serverTimestamp() {
      return new firestore._FieldValueServerTimestamp.new();
    },
    /*firestore.FieldValue._delete*/get _delete() {
      return new firestore._FieldValueDelete.new();
    }
  }, false);
  firestore.getFirestoreInstance = function getFirestoreInstance(app = null, settings = null) {
    if (app != null && settings != null) {
      return firestore.Firestore.getInstance(dart.global.firebase_firestore.initializeFirestore(app.jsObject, settings));
    }
    return firestore.Firestore.getInstance(app != null ? dart.global.firebase_firestore.getFirestore(app.jsObject) : dart.global.firebase_firestore.getFirestore());
  };
  firestore.jsifyFieldValue = function jsifyFieldValue(fieldValue) {
    return fieldValue[S$._jsify]();
  };
  platform_interface_transaction.TransactionPlatform = class TransactionPlatform extends plugin_platform_interface.PlatformInterface {
    static verifyExtends(instance) {
      plugin_platform_interface.PlatformInterface.verifyToken(instance, platform_interface_transaction.TransactionPlatform._token);
    }
    get commands() {
      dart.throw(new core.UnimplementedError.new("commands is not implemented"));
    }
    get(documentPath) {
      dart.throw(new core.UnimplementedError.new("get() is not implemented"));
    }
    delete(documentPath) {
      dart.throw(new core.UnimplementedError.new("delete() is not implemented"));
    }
    update(documentPath, data) {
      dart.throw(new core.UnimplementedError.new("update() is not implemented"));
    }
    set(documentPath, data, options = null) {
      dart.throw(new core.UnimplementedError.new("set() is not implemented"));
    }
  };
  (platform_interface_transaction.TransactionPlatform.new = function() {
    platform_interface_transaction.TransactionPlatform.__proto__.new.call(this, {token: platform_interface_transaction.TransactionPlatform._token});
    ;
  }).prototype = platform_interface_transaction.TransactionPlatform.prototype;
  dart.addTypeTests(platform_interface_transaction.TransactionPlatform);
  dart.addTypeCaches(platform_interface_transaction.TransactionPlatform);
  dart.setMethodSignature(platform_interface_transaction.TransactionPlatform, () => ({
    __proto__: dart.getMethods(platform_interface_transaction.TransactionPlatform.__proto__),
    get: dart.fnType(async.Future$(platform_interface_document_snapshot.DocumentSnapshotPlatform), [core.String]),
    delete: dart.fnType(platform_interface_transaction.TransactionPlatform, [core.String]),
    update: dart.fnType(platform_interface_transaction.TransactionPlatform, [core.String, core.Map$(core.String, dart.dynamic)]),
    set: dart.fnType(platform_interface_transaction.TransactionPlatform, [core.String, core.Map$(core.String, dart.dynamic)], [dart.nullable(set_options.SetOptions)])
  }));
  dart.setStaticMethodSignature(platform_interface_transaction.TransactionPlatform, () => ['verifyExtends']);
  dart.setGetterSignature(platform_interface_transaction.TransactionPlatform, () => ({
    __proto__: dart.getGetters(platform_interface_transaction.TransactionPlatform.__proto__),
    commands: core.List$(core.Map$(core.String, dart.dynamic))
  }));
  dart.setLibraryUri(platform_interface_transaction.TransactionPlatform, I[32]);
  dart.setStaticFieldSignature(platform_interface_transaction.TransactionPlatform, () => ['_token']);
  dart.defineLazy(platform_interface_transaction.TransactionPlatform, {
    /*platform_interface_transaction.TransactionPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  transaction_web.TransactionWeb = class TransactionWeb extends platform_interface_transaction.TransactionPlatform {
    static ['_#new#tearOff'](_firestore, _webFirestoreDelegate, _webTransactionDelegate) {
      return new transaction_web.TransactionWeb.new(_firestore, _webFirestoreDelegate, _webTransactionDelegate);
    }
    delete(documentPath) {
      this[S$._webTransactionDelegate].delete(this[S$._webFirestoreDelegate].doc(documentPath));
      return this;
    }
    get(documentPath) {
      return internals.convertWebExceptions(T$.FutureOfDocumentSnapshotPlatform(), dart.fn(() => async.async(platform_interface_document_snapshot.DocumentSnapshotPlatform, (function*() {
        let webDocumentSnapshot = (yield this[S$._webTransactionDelegate].get(this[S$._webFirestoreDelegate].doc(documentPath)));
        return web_utils.convertWebDocumentSnapshot(this[S$._firestore$1], webDocumentSnapshot);
      }).bind(this)), T$.VoidToFutureOfDocumentSnapshotPlatform()));
    }
    set(documentPath, data, options = null) {
      this[S$._webTransactionDelegate].set(this[S$._webFirestoreDelegate].doc(documentPath), dart.nullCheck(encode_utility.EncodeUtility.encodeMapData(data)), web_utils.convertSetOptions(options));
      return this;
    }
    update(documentPath, data) {
      this[S$._webTransactionDelegate].update(this[S$._webFirestoreDelegate].doc(documentPath), dart.nullCheck(encode_utility.EncodeUtility.encodeMapData(data)));
      return this;
    }
  };
  (transaction_web.TransactionWeb.new = function(_firestore, _webFirestoreDelegate, _webTransactionDelegate) {
    this[S$._firestore$1] = _firestore;
    this[S$._webFirestoreDelegate] = _webFirestoreDelegate;
    this[S$._webTransactionDelegate] = _webTransactionDelegate;
    transaction_web.TransactionWeb.__proto__.new.call(this);
    ;
  }).prototype = transaction_web.TransactionWeb.prototype;
  dart.addTypeTests(transaction_web.TransactionWeb);
  dart.addTypeCaches(transaction_web.TransactionWeb);
  dart.setMethodSignature(transaction_web.TransactionWeb, () => ({
    __proto__: dart.getMethods(transaction_web.TransactionWeb.__proto__),
    delete: dart.fnType(transaction_web.TransactionWeb, [core.String]),
    set: dart.fnType(transaction_web.TransactionWeb, [core.String, core.Map$(core.String, dart.dynamic)], [dart.nullable(set_options.SetOptions)]),
    update: dart.fnType(transaction_web.TransactionWeb, [core.String, core.Map$(core.String, dart.dynamic)])
  }));
  dart.setLibraryUri(transaction_web.TransactionWeb, I[33]);
  dart.setFieldSignature(transaction_web.TransactionWeb, () => ({
    __proto__: dart.getFields(transaction_web.TransactionWeb.__proto__),
    [S$._webFirestoreDelegate]: dart.finalFieldType(firestore.Firestore),
    [S$._webTransactionDelegate]: dart.finalFieldType(firestore.Transaction),
    [S$._firestore$1]: dart.fieldType(platform_interface_firestore.FirebaseFirestorePlatform)
  }));
  platform_interface_write_batch.WriteBatchPlatform = class WriteBatchPlatform extends plugin_platform_interface.PlatformInterface {
    static verifyExtends(instance) {
      plugin_platform_interface.PlatformInterface.verifyToken(instance, platform_interface_write_batch.WriteBatchPlatform._token);
    }
    commit() {
      return async.async(dart.void, function* commit() {
        dart.throw(new core.UnimplementedError.new("commit() is not implemented"));
      });
    }
    delete(documentPath) {
      dart.throw(new core.UnimplementedError.new("delete() is not implemented"));
    }
    set(documentPath, data, options = null) {
      dart.throw(new core.UnimplementedError.new("set() is not implemented"));
    }
    update(documentPath, data) {
      dart.throw(new core.UnimplementedError.new("update() is not implemented"));
    }
  };
  (platform_interface_write_batch.WriteBatchPlatform.new = function() {
    platform_interface_write_batch.WriteBatchPlatform.__proto__.new.call(this, {token: platform_interface_write_batch.WriteBatchPlatform._token});
    ;
  }).prototype = platform_interface_write_batch.WriteBatchPlatform.prototype;
  dart.addTypeTests(platform_interface_write_batch.WriteBatchPlatform);
  dart.addTypeCaches(platform_interface_write_batch.WriteBatchPlatform);
  dart.setMethodSignature(platform_interface_write_batch.WriteBatchPlatform, () => ({
    __proto__: dart.getMethods(platform_interface_write_batch.WriteBatchPlatform.__proto__),
    commit: dart.fnType(async.Future$(dart.void), []),
    delete: dart.fnType(dart.void, [core.String]),
    set: dart.fnType(dart.void, [core.String, core.Map$(core.String, dart.dynamic)], [dart.nullable(set_options.SetOptions)]),
    update: dart.fnType(dart.void, [core.String, core.Map$(core.String, dart.dynamic)])
  }));
  dart.setStaticMethodSignature(platform_interface_write_batch.WriteBatchPlatform, () => ['verifyExtends']);
  dart.setLibraryUri(platform_interface_write_batch.WriteBatchPlatform, I[34]);
  dart.setStaticFieldSignature(platform_interface_write_batch.WriteBatchPlatform, () => ['_token']);
  dart.defineLazy(platform_interface_write_batch.WriteBatchPlatform, {
    /*platform_interface_write_batch.WriteBatchPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  write_batch_web.WriteBatchWeb = class WriteBatchWeb extends platform_interface_write_batch.WriteBatchPlatform {
    static ['_#new#tearOff'](_webFirestoreDelegate) {
      return new write_batch_web.WriteBatchWeb.new(_webFirestoreDelegate);
    }
    commit() {
      return internals.convertWebExceptions(T$.FutureOfvoid(), dart.bind(this[S$._webWriteBatchDelegate], 'commit'));
    }
    delete(documentPath) {
      this[S$._webWriteBatchDelegate].delete(this[S$._webFirestoreDelegate$1].doc(documentPath));
    }
    set(documentPath, data, options = null) {
      this[S$._webWriteBatchDelegate].set(this[S$._webFirestoreDelegate$1].doc(documentPath), dart.nullCheck(encode_utility.EncodeUtility.encodeMapData(data)), web_utils.convertSetOptions(options));
    }
    update(documentPath, data) {
      this[S$._webWriteBatchDelegate].update(this[S$._webFirestoreDelegate$1].doc(documentPath), dart.nullCheck(encode_utility.EncodeUtility.encodeMapData(data)));
    }
  };
  (write_batch_web.WriteBatchWeb.new = function(_webFirestoreDelegate) {
    this[S$._webFirestoreDelegate$1] = _webFirestoreDelegate;
    this[S$._webWriteBatchDelegate] = dart.nullCheck(_webFirestoreDelegate.batch());
    write_batch_web.WriteBatchWeb.__proto__.new.call(this);
    ;
  }).prototype = write_batch_web.WriteBatchWeb.prototype;
  dart.addTypeTests(write_batch_web.WriteBatchWeb);
  dart.addTypeCaches(write_batch_web.WriteBatchWeb);
  dart.setLibraryUri(write_batch_web.WriteBatchWeb, I[35]);
  dart.setFieldSignature(write_batch_web.WriteBatchWeb, () => ({
    __proto__: dart.getFields(write_batch_web.WriteBatchWeb.__proto__),
    [S$._webFirestoreDelegate$1]: dart.finalFieldType(firestore.Firestore),
    [S$._webWriteBatchDelegate]: dart.fieldType(firestore.WriteBatch)
  }));
  platform_interface_multi_factor.MultiFactorPlatform = class MultiFactorPlatform extends plugin_platform_interface.PlatformInterface {
    get auth() {
      return this[S$.auth];
    }
    set auth(value) {
      super.auth = value;
    }
    enroll(assertion, opts) {
      let displayName = opts && 'displayName' in opts ? opts.displayName : null;
      dart.throw(new core.UnimplementedError.new("enroll() is not implemented"));
    }
    getSession() {
      dart.throw(new core.UnimplementedError.new("getSession() is not implemented"));
    }
    unenroll(opts) {
      let factorUid = opts && 'factorUid' in opts ? opts.factorUid : null;
      let multiFactorInfo = opts && 'multiFactorInfo' in opts ? opts.multiFactorInfo : null;
      dart.throw(new core.UnimplementedError.new("unenroll() is not implemented"));
    }
    getEnrolledFactors() {
      dart.throw(new core.UnimplementedError.new("getEnrolledFactors() is not implemented"));
    }
  };
  (platform_interface_multi_factor.MultiFactorPlatform.new = function(auth) {
    this[S$.auth] = auth;
    platform_interface_multi_factor.MultiFactorPlatform.__proto__.new.call(this, {token: platform_interface_multi_factor.MultiFactorPlatform._token});
    ;
  }).prototype = platform_interface_multi_factor.MultiFactorPlatform.prototype;
  dart.addTypeTests(platform_interface_multi_factor.MultiFactorPlatform);
  dart.addTypeCaches(platform_interface_multi_factor.MultiFactorPlatform);
  dart.setMethodSignature(platform_interface_multi_factor.MultiFactorPlatform, () => ({
    __proto__: dart.getMethods(platform_interface_multi_factor.MultiFactorPlatform.__proto__),
    enroll: dart.fnType(async.Future$(dart.void), [platform_interface_multi_factor.MultiFactorAssertionPlatform], {displayName: dart.nullable(core.String)}, {}),
    getSession: dart.fnType(async.Future$(platform_interface_multi_factor.MultiFactorSession), []),
    unenroll: dart.fnType(async.Future$(dart.void), [], {factorUid: dart.nullable(core.String), multiFactorInfo: dart.nullable(platform_interface_multi_factor.MultiFactorInfo)}, {}),
    getEnrolledFactors: dart.fnType(async.Future$(core.List$(platform_interface_multi_factor.MultiFactorInfo)), [])
  }));
  dart.setLibraryUri(platform_interface_multi_factor.MultiFactorPlatform, I[36]);
  dart.setFieldSignature(platform_interface_multi_factor.MultiFactorPlatform, () => ({
    __proto__: dart.getFields(platform_interface_multi_factor.MultiFactorPlatform.__proto__),
    auth: dart.finalFieldType(platform_interface_firebase_auth.FirebaseAuthPlatform)
  }));
  dart.setStaticFieldSignature(platform_interface_multi_factor.MultiFactorPlatform, () => ['_token']);
  dart.defineLazy(platform_interface_multi_factor.MultiFactorPlatform, {
    /*platform_interface_multi_factor.MultiFactorPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  firebase_auth_web_multi_factor.MultiFactorWeb = class MultiFactorWeb extends platform_interface_multi_factor.MultiFactorPlatform {
    static ['_#new#tearOff'](auth, _webMultiFactorUser) {
      return new firebase_auth_web_multi_factor.MultiFactorWeb.new(auth, _webMultiFactorUser);
    }
    getSession() {
      return async.async(platform_interface_multi_factor.MultiFactorSession, (function* getSession() {
        try {
          return web_utils$.convertMultiFactorSession(yield this[S$._webMultiFactorUser].session);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    enroll(assertion, opts) {
      let displayName = opts && 'displayName' in opts ? opts.displayName : null;
      return async.async(dart.void, (function* enroll() {
        try {
          let webAssertion = firebase_auth_web_multi_factor.MultiFactorAssertionWeb.as(assertion);
          return yield this[S$._webMultiFactorUser].enroll(webAssertion.assertion, displayName);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    unenroll(opts) {
      let t61, t60;
      let factorUid = opts && 'factorUid' in opts ? opts.factorUid : null;
      let multiFactorInfo = opts && 'multiFactorInfo' in opts ? opts.multiFactorInfo : null;
      let uidToUnenroll = (t60 = factorUid, t60 == null ? (t61 = multiFactorInfo, t61 == null ? null : t61.uid) : t60);
      if (uidToUnenroll == null) {
        dart.throw(new core.ArgumentError.new("Either factorUid or multiFactorInfo must not be null"));
      }
      return this[S$._webMultiFactorUser].unenroll(uidToUnenroll);
    }
    getEnrolledFactors() {
      return async.async(T$.ListOfMultiFactorInfo(), (function* getEnrolledFactors() {
        let data = this[S$._webMultiFactorUser].enrolledFactors;
        return data[S$.$map](platform_interface_multi_factor.MultiFactorInfo, dart.fn(e => new platform_interface_multi_factor.MultiFactorInfo.new({factorId: e.factorId, enrollmentTimestamp: _http.HttpDate.parse(e.enrollmentTime).millisecondsSinceEpoch / 1000, displayName: e.displayName, uid: e.uid}), T$.MultiFactorInfoOfMultiFactorInfoJsImplToMultiFactorInfo()))[S$.$toList]();
      }).bind(this));
    }
  };
  (firebase_auth_web_multi_factor.MultiFactorWeb.new = function(auth, _webMultiFactorUser) {
    this[S$._webMultiFactorUser] = _webMultiFactorUser;
    firebase_auth_web_multi_factor.MultiFactorWeb.__proto__.new.call(this, auth);
    ;
  }).prototype = firebase_auth_web_multi_factor.MultiFactorWeb.prototype;
  dart.addTypeTests(firebase_auth_web_multi_factor.MultiFactorWeb);
  dart.addTypeCaches(firebase_auth_web_multi_factor.MultiFactorWeb);
  dart.setLibraryUri(firebase_auth_web_multi_factor.MultiFactorWeb, I[37]);
  dart.setFieldSignature(firebase_auth_web_multi_factor.MultiFactorWeb, () => ({
    __proto__: dart.getFields(firebase_auth_web_multi_factor.MultiFactorWeb.__proto__),
    [S$._webMultiFactorUser]: dart.finalFieldType(multi_factor.MultiFactorUser)
  }));
  platform_interface_multi_factor.MultiFactorAssertionPlatform = class MultiFactorAssertionPlatform extends plugin_platform_interface.PlatformInterface {
    static ['_#new#tearOff']() {
      return new platform_interface_multi_factor.MultiFactorAssertionPlatform.new();
    }
    static verifyExtends(instance) {
      plugin_platform_interface.PlatformInterface.verifyToken(instance, platform_interface_multi_factor.MultiFactorAssertionPlatform._token);
    }
  };
  (platform_interface_multi_factor.MultiFactorAssertionPlatform.new = function() {
    platform_interface_multi_factor.MultiFactorAssertionPlatform.__proto__.new.call(this, {token: platform_interface_multi_factor.MultiFactorAssertionPlatform._token});
    ;
  }).prototype = platform_interface_multi_factor.MultiFactorAssertionPlatform.prototype;
  dart.addTypeTests(platform_interface_multi_factor.MultiFactorAssertionPlatform);
  dart.addTypeCaches(platform_interface_multi_factor.MultiFactorAssertionPlatform);
  dart.setStaticMethodSignature(platform_interface_multi_factor.MultiFactorAssertionPlatform, () => ['verifyExtends']);
  dart.setLibraryUri(platform_interface_multi_factor.MultiFactorAssertionPlatform, I[36]);
  dart.setStaticFieldSignature(platform_interface_multi_factor.MultiFactorAssertionPlatform, () => ['_token']);
  dart.defineLazy(platform_interface_multi_factor.MultiFactorAssertionPlatform, {
    /*platform_interface_multi_factor.MultiFactorAssertionPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  firebase_auth_web_multi_factor.MultiFactorAssertionWeb = class MultiFactorAssertionWeb extends platform_interface_multi_factor.MultiFactorAssertionPlatform {
    get assertion() {
      return this[S$.assertion];
    }
    set assertion(value) {
      super.assertion = value;
    }
    static ['_#new#tearOff'](assertion) {
      return new firebase_auth_web_multi_factor.MultiFactorAssertionWeb.new(assertion);
    }
  };
  (firebase_auth_web_multi_factor.MultiFactorAssertionWeb.new = function(assertion) {
    this[S$.assertion] = assertion;
    firebase_auth_web_multi_factor.MultiFactorAssertionWeb.__proto__.new.call(this);
    ;
  }).prototype = firebase_auth_web_multi_factor.MultiFactorAssertionWeb.prototype;
  dart.addTypeTests(firebase_auth_web_multi_factor.MultiFactorAssertionWeb);
  dart.addTypeCaches(firebase_auth_web_multi_factor.MultiFactorAssertionWeb);
  dart.setLibraryUri(firebase_auth_web_multi_factor.MultiFactorAssertionWeb, I[37]);
  dart.setFieldSignature(firebase_auth_web_multi_factor.MultiFactorAssertionWeb, () => ({
    __proto__: dart.getFields(firebase_auth_web_multi_factor.MultiFactorAssertionWeb.__proto__),
    assertion: dart.finalFieldType(multi_factor.MultiFactorAssertion$(dart.packageJSType("MultiFactorAssertionJsImpl", false)))
  }));
  platform_interface_multi_factor.MultiFactorResolverPlatform = class MultiFactorResolverPlatform extends plugin_platform_interface.PlatformInterface {
    get hints() {
      return this[S$.hints];
    }
    set hints(value) {
      super.hints = value;
    }
    get session() {
      return this[S$.session];
    }
    set session(value) {
      super.session = value;
    }
    static ['_#new#tearOff'](hints, session) {
      return new platform_interface_multi_factor.MultiFactorResolverPlatform.new(hints, session);
    }
    static verifyExtends(instance) {
      plugin_platform_interface.PlatformInterface.verifyToken(instance, platform_interface_multi_factor.MultiFactorResolverPlatform._token);
    }
    resolveSignIn(assertion) {
      dart.throw(new core.UnimplementedError.new("resolveSignIn() is not implemented"));
    }
  };
  (platform_interface_multi_factor.MultiFactorResolverPlatform.new = function(hints, session) {
    this[S$.hints] = hints;
    this[S$.session] = session;
    platform_interface_multi_factor.MultiFactorResolverPlatform.__proto__.new.call(this, {token: platform_interface_multi_factor.MultiFactorResolverPlatform._token});
    ;
  }).prototype = platform_interface_multi_factor.MultiFactorResolverPlatform.prototype;
  dart.addTypeTests(platform_interface_multi_factor.MultiFactorResolverPlatform);
  dart.addTypeCaches(platform_interface_multi_factor.MultiFactorResolverPlatform);
  dart.setMethodSignature(platform_interface_multi_factor.MultiFactorResolverPlatform, () => ({
    __proto__: dart.getMethods(platform_interface_multi_factor.MultiFactorResolverPlatform.__proto__),
    resolveSignIn: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), [platform_interface_multi_factor.MultiFactorAssertionPlatform])
  }));
  dart.setStaticMethodSignature(platform_interface_multi_factor.MultiFactorResolverPlatform, () => ['verifyExtends']);
  dart.setLibraryUri(platform_interface_multi_factor.MultiFactorResolverPlatform, I[36]);
  dart.setFieldSignature(platform_interface_multi_factor.MultiFactorResolverPlatform, () => ({
    __proto__: dart.getFields(platform_interface_multi_factor.MultiFactorResolverPlatform.__proto__),
    hints: dart.finalFieldType(core.List$(platform_interface_multi_factor.MultiFactorInfo)),
    session: dart.finalFieldType(platform_interface_multi_factor.MultiFactorSession)
  }));
  dart.setStaticFieldSignature(platform_interface_multi_factor.MultiFactorResolverPlatform, () => ['_token']);
  dart.defineLazy(platform_interface_multi_factor.MultiFactorResolverPlatform, {
    /*platform_interface_multi_factor.MultiFactorResolverPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  firebase_auth_web_multi_factor.MultiFactorResolverWeb = class MultiFactorResolverWeb extends platform_interface_multi_factor.MultiFactorResolverPlatform {
    static ['_#new#tearOff'](hints, session, _auth, _webMultiFactorResolver) {
      return new firebase_auth_web_multi_factor.MultiFactorResolverWeb.new(hints, session, _auth, _webMultiFactorResolver);
    }
    resolveSignIn(assertion) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* resolveSignIn() {
        let webAssertion = firebase_auth_web_multi_factor.MultiFactorAssertionWeb.as(assertion);
        return new firebase_auth_web_user_credential.UserCredentialWeb.new(this[S$._auth], yield this[S$._webMultiFactorResolver].resolveSignIn(webAssertion.assertion));
      }).bind(this));
    }
  };
  (firebase_auth_web_multi_factor.MultiFactorResolverWeb.new = function(hints, session, _auth, _webMultiFactorResolver) {
    this[S$._auth] = _auth;
    this[S$._webMultiFactorResolver] = _webMultiFactorResolver;
    firebase_auth_web_multi_factor.MultiFactorResolverWeb.__proto__.new.call(this, hints, session);
    ;
  }).prototype = firebase_auth_web_multi_factor.MultiFactorResolverWeb.prototype;
  dart.addTypeTests(firebase_auth_web_multi_factor.MultiFactorResolverWeb);
  dart.addTypeCaches(firebase_auth_web_multi_factor.MultiFactorResolverWeb);
  dart.setLibraryUri(firebase_auth_web_multi_factor.MultiFactorResolverWeb, I[37]);
  dart.setFieldSignature(firebase_auth_web_multi_factor.MultiFactorResolverWeb, () => ({
    __proto__: dart.getFields(firebase_auth_web_multi_factor.MultiFactorResolverWeb.__proto__),
    [S$._webMultiFactorResolver]: dart.finalFieldType(multi_factor.MultiFactorResolver),
    [S$._auth]: dart.finalFieldType(firebase_auth_web.FirebaseAuthWeb)
  }));
  platform_interface_multi_factor.MultiFactorSession = class MultiFactorSession extends core.Object {
    get id() {
      return this[S$.id];
    }
    set id(value) {
      super.id = value;
    }
    static ['_#new#tearOff'](id) {
      return new platform_interface_multi_factor.MultiFactorSession.new(id);
    }
  };
  (platform_interface_multi_factor.MultiFactorSession.new = function(id) {
    this[S$.id] = id;
    ;
  }).prototype = platform_interface_multi_factor.MultiFactorSession.prototype;
  dart.addTypeTests(platform_interface_multi_factor.MultiFactorSession);
  dart.addTypeCaches(platform_interface_multi_factor.MultiFactorSession);
  dart.setLibraryUri(platform_interface_multi_factor.MultiFactorSession, I[36]);
  dart.setFieldSignature(platform_interface_multi_factor.MultiFactorSession, () => ({
    __proto__: dart.getFields(platform_interface_multi_factor.MultiFactorSession.__proto__),
    id: dart.finalFieldType(core.String)
  }));
  firebase_auth_web_multi_factor.MultiFactorSessionWeb = class MultiFactorSessionWeb extends platform_interface_multi_factor.MultiFactorSession {
    get webSession() {
      return this[S$.webSession];
    }
    set webSession(value) {
      super.webSession = value;
    }
    static ['_#new#tearOff'](id, webSession) {
      return new firebase_auth_web_multi_factor.MultiFactorSessionWeb.new(id, webSession);
    }
  };
  (firebase_auth_web_multi_factor.MultiFactorSessionWeb.new = function(id, webSession) {
    this[S$.webSession] = webSession;
    firebase_auth_web_multi_factor.MultiFactorSessionWeb.__proto__.new.call(this, id);
    ;
  }).prototype = firebase_auth_web_multi_factor.MultiFactorSessionWeb.prototype;
  dart.addTypeTests(firebase_auth_web_multi_factor.MultiFactorSessionWeb);
  dart.addTypeCaches(firebase_auth_web_multi_factor.MultiFactorSessionWeb);
  dart.setLibraryUri(firebase_auth_web_multi_factor.MultiFactorSessionWeb, I[37]);
  dart.setFieldSignature(firebase_auth_web_multi_factor.MultiFactorSessionWeb, () => ({
    __proto__: dart.getFields(firebase_auth_web_multi_factor.MultiFactorSessionWeb.__proto__),
    webSession: dart.finalFieldType(multi_factor.MultiFactorSession)
  }));
  platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform = class PhoneMultiFactorGeneratorPlatform extends plugin_platform_interface.PlatformInterface {
    static ['_#new#tearOff']() {
      return new platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform.new();
    }
    static get instance() {
      platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform._instance == null ? platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform._instance = new method_channel_multi_factor.MethodChannelPhoneMultiFactorGenerator.new() : null;
      return dart.nullCheck(platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform._instance);
    }
    static set instance(instance) {
      plugin_platform_interface.PlatformInterface.verifyToken(instance, platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform._token);
      platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform._instance = instance;
    }
    getAssertion(credential) {
      dart.throw(new core.UnimplementedError.new("getAssertion() is not implemented"));
    }
  };
  (platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform.new = function() {
    platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform.__proto__.new.call(this, {token: platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform._token});
    ;
  }).prototype = platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform.prototype;
  dart.addTypeTests(platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform);
  dart.addTypeCaches(platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform);
  dart.setMethodSignature(platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform, () => ({
    __proto__: dart.getMethods(platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform.__proto__),
    getAssertion: dart.fnType(platform_interface_multi_factor.MultiFactorAssertionPlatform, [phone_auth.PhoneAuthCredential])
  }));
  dart.setStaticGetterSignature(platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform, () => ['instance']);
  dart.setStaticSetterSignature(platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform, () => ['instance']);
  dart.setLibraryUri(platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform, I[36]);
  dart.setStaticFieldSignature(platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform, () => ['_instance', '_token']);
  dart.defineLazy(platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform, {
    /*platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform._instance*/get _instance() {
      return null;
    },
    set _instance(value) {},
    /*platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  firebase_auth_web_multi_factor.PhoneMultiFactorGeneratorWeb = class PhoneMultiFactorGeneratorWeb extends platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform {
    getAssertion(credential) {
      let verificationId = credential.verificationId;
      let verificationCode = credential.smsCode;
      if (verificationCode == null) {
        dart.throw(new core.ArgumentError.new("verificationCode must not be null"));
      }
      if (verificationId == null) {
        dart.throw(new core.ArgumentError.new("verificationId must not be null"));
      }
      let cred = auth$.PhoneAuthProvider.credential(verificationId, verificationCode);
      return new firebase_auth_web_multi_factor.MultiFactorAssertionWeb.new(multi_factor.PhoneMultiFactorGenerator.assertion(cred));
    }
    static ['_#new#tearOff']() {
      return new firebase_auth_web_multi_factor.PhoneMultiFactorGeneratorWeb.new();
    }
  };
  (firebase_auth_web_multi_factor.PhoneMultiFactorGeneratorWeb.new = function() {
    firebase_auth_web_multi_factor.PhoneMultiFactorGeneratorWeb.__proto__.new.call(this);
    ;
  }).prototype = firebase_auth_web_multi_factor.PhoneMultiFactorGeneratorWeb.prototype;
  dart.addTypeTests(firebase_auth_web_multi_factor.PhoneMultiFactorGeneratorWeb);
  dart.addTypeCaches(firebase_auth_web_multi_factor.PhoneMultiFactorGeneratorWeb);
  dart.setLibraryUri(firebase_auth_web_multi_factor.PhoneMultiFactorGeneratorWeb, I[37]);
  utils.dartify = function dartify(jsObject) {
    return utils$.dartify(jsObject);
  };
  utils.jsify = function jsify(dartObject, customJsify = null) {
    return utils$.jsify(dartObject, customJsify);
  };
  web_utils$.getFirebaseAuthException = function getFirebaseAuthException(exception, auth = null) {
    if (!dart.packageJSType("FirebaseError", false).is(exception)) {
      return new firebase_auth_exception.FirebaseAuthException.new({code: "unknown", message: "An unknown error occurred: " + dart.str(exception)});
    }
    let firebaseError = dart.packageJSType("firebase_auth.Error", false).as(exception);
    let code = firebaseError.code[S$.$replaceFirst]("auth/", "");
    let message = firebaseError.message[S$.$replaceFirst](" (" + firebaseError.code + ").", "")[S$.$replaceFirst]("Firebase: ", "");
    if (code === "multi-factor-auth-required") {
      let _auth = auth;
      if (_auth == null) {
        dart.throw(new core.ArgumentError.new("Multi-factor authentication is required, but the auth instance is null. " + "Please ensure that the auth instance is not null before calling " + "`getFirebaseAuthException()`."));
      }
      let resolverWeb = multi_factor.getMultiFactorResolver(_auth, dart.packageJSType("MultiFactorError", false).as(firebaseError));
      return new firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform.new({code: code, message: message, email: firebaseError.email, phoneNumber: firebaseError.phoneNumber, tenantId: firebaseError.tenantId, resolver: new firebase_auth_web_multi_factor.MultiFactorResolverWeb.new(resolverWeb.hints[S$.$map](platform_interface_multi_factor.MultiFactorInfo, dart.fn(e => {
          if (multi_factor.PhoneMultiFactorInfo.is(e)) {
            return new platform_interface_multi_factor.PhoneMultiFactorInfo.new({displayName: e.displayName, factorId: e.factorId, enrollmentTimestamp: _http.HttpDate.parse(e.enrollmentTime).millisecondsSinceEpoch / 1000, uid: e.uid, phoneNumber: e.phoneNumber});
          }
          return new platform_interface_multi_factor.MultiFactorInfo.new({displayName: e.displayName, factorId: e.factorId, enrollmentTimestamp: _http.HttpDate.parse(e.enrollmentTime).millisecondsSinceEpoch / 1000, uid: e.uid});
        }, T$.MultiFactorInfoOfMultiFactorInfoJsImplToMultiFactorInfo()))[S$.$toList](), new firebase_auth_web_multi_factor.MultiFactorSessionWeb.new("web", resolverWeb.session), firebase_auth_web.FirebaseAuthWeb.instance, resolverWeb)});
    }
    return new firebase_auth_exception.FirebaseAuthException.new({code: code, message: message, email: firebaseError.email, phoneNumber: firebaseError.phoneNumber, tenantId: firebaseError.tenantId});
  };
  web_utils$.convertWebActionCodeInfo = function convertWebActionCodeInfo(webActionCodeInfo) {
    if (webActionCodeInfo == null) {
      return null;
    }
    return new action_code_info.ActionCodeInfo.new({operation: 0, data: new (T$.IdentityMapOfString$dynamic()).from(["email", webActionCodeInfo.data.email, "previousEmail", webActionCodeInfo.data.previousEmail])});
  };
  web_utils$.convertWebAdditionalUserInfo = function convertWebAdditionalUserInfo(webAdditionalUserInfo) {
    if (webAdditionalUserInfo == null) {
      return null;
    }
    return new additional_user_info.AdditionalUserInfo.new({isNewUser: webAdditionalUserInfo.isNewUser, profile: webAdditionalUserInfo.profile, providerId: webAdditionalUserInfo.providerId, username: webAdditionalUserInfo.username});
  };
  web_utils$.convertWebIdTokenResult = function convertWebIdTokenResult(webIdTokenResult) {
    return new id_token_result.IdTokenResult.new(new (T$.IdentityMapOfString$dynamic()).from(["claims", webIdTokenResult.claims, "expirationTimestamp", webIdTokenResult.expirationTime.millisecondsSinceEpoch, "issuedAtTimestamp", webIdTokenResult.issuedAtTime.millisecondsSinceEpoch, "authTimestamp", webIdTokenResult.authTime.millisecondsSinceEpoch, "signInProvider", webIdTokenResult.signInProvider, "signInSecondFactor", null, "token", webIdTokenResult.token]));
  };
  web_utils$.convertPlatformActionCodeSettings = function convertPlatformActionCodeSettings(actionCodeSettings) {
    if (actionCodeSettings == null) {
      return null;
    }
    let actionCodeSettingsMap = actionCodeSettings.asMap();
    let webActionCodeSettings = null;
    if (actionCodeSettings.dynamicLinkDomain != null) {
      webActionCodeSettings = {url: actionCodeSettings.url, handleCodeInApp: actionCodeSettings.handleCodeInApp, dynamicLinkDomain: actionCodeSettings.dynamicLinkDomain};
    } else {
      webActionCodeSettings = {url: actionCodeSettings.url, handleCodeInApp: actionCodeSettings.handleCodeInApp};
    }
    if (actionCodeSettingsMap[S$.$_get]("android") != null) {
      webActionCodeSettings.android = {packageName: T$.StringN().as(dart.dsend(actionCodeSettingsMap[S$.$_get]("android"), '_get', ["packageName"])), minimumVersion: T$.StringN().as(dart.dsend(actionCodeSettingsMap[S$.$_get]("android"), '_get', ["minimumVersion"])), installApp: T$.boolN().as(dart.dsend(actionCodeSettingsMap[S$.$_get]("android"), '_get', ["installApp"]))};
    }
    if (actionCodeSettingsMap[S$.$_get]("iOS") != null) {
      webActionCodeSettings.iOS = {bundleId: T$.StringN().as(dart.dsend(actionCodeSettingsMap[S$.$_get]("iOS"), '_get', ["bundleId"]))};
    }
    return webActionCodeSettings;
  };
  web_utils$.convertPlatformAuthProvider = function convertPlatformAuthProvider(authProvider) {
    if (email_auth.EmailAuthProvider.is(authProvider)) {
      return auth$.EmailAuthProvider.new();
    }
    if (facebook_auth.FacebookAuthProvider.is(authProvider)) {
      let facebookAuthProvider = auth$.FacebookAuthProvider.new();
      authProvider.scopes[S$.$forEach](dart.bind(facebookAuthProvider, 'addScope'));
      facebookAuthProvider.setCustomParameters(authProvider.parameters);
      return facebookAuthProvider;
    }
    if (apple_auth.AppleAuthProvider.is(authProvider)) {
      let oAuthProvider = auth$.OAuthProvider.new(authProvider.providerId);
      authProvider.scopes[S$.$forEach](dart.bind(oAuthProvider, 'addScope'));
      oAuthProvider.setCustomParameters(authProvider.parameters);
      return oAuthProvider;
    }
    if (github_auth.GithubAuthProvider.is(authProvider)) {
      let githubAuthProvider = auth$.GithubAuthProvider.new();
      authProvider.scopes[S$.$forEach](dart.bind(githubAuthProvider, 'addScope'));
      githubAuthProvider.setCustomParameters(authProvider.parameters);
      return githubAuthProvider;
    }
    if (google_auth.GoogleAuthProvider.is(authProvider)) {
      let googleAuthProvider = auth$.GoogleAuthProvider.new();
      authProvider.scopes[S$.$forEach](dart.bind(googleAuthProvider, 'addScope'));
      googleAuthProvider.setCustomParameters(authProvider.parameters);
      return googleAuthProvider;
    }
    if (microsoft_auth.MicrosoftAuthProvider.is(authProvider)) {
      let oAuthProvider = auth$.OAuthProvider.new(authProvider.providerId);
      authProvider.scopes[S$.$forEach](dart.bind(oAuthProvider, 'addScope'));
      oAuthProvider.setCustomParameters(authProvider.parameters);
      return oAuthProvider;
    }
    if (yahoo_auth.YahooAuthProvider.is(authProvider)) {
      let oAuthProvider = auth$.OAuthProvider.new(authProvider.providerId);
      authProvider.scopes[S$.$forEach](dart.bind(oAuthProvider, 'addScope'));
      oAuthProvider.setCustomParameters(authProvider.parameters);
      return oAuthProvider;
    }
    if (twitter_auth.TwitterAuthProvider.is(authProvider)) {
      let twitterAuthProvider = auth$.TwitterAuthProvider.new();
      twitterAuthProvider.setCustomParameters(authProvider.parameters);
      return twitterAuthProvider;
    }
    if (phone_auth.PhoneAuthProvider.is(authProvider)) {
      return auth$.PhoneAuthProvider.new();
    }
    if (oauth.OAuthProvider.is(authProvider)) {
      let oAuthProvider = auth$.OAuthProvider.new(authProvider.providerId);
      authProvider.scopes[S$.$forEach](dart.bind(oAuthProvider, 'addScope'));
      oAuthProvider.setCustomParameters(authProvider.parameters);
      return oAuthProvider;
    }
    dart.throw(new core.FallThroughError.new());
  };
  web_utils$.convertWebAuthCredential = function convertWebAuthCredential(authCredential) {
    if (authCredential == null) {
      return null;
    }
    return new auth_credential.AuthCredential.new({providerId: authCredential.providerId, signInMethod: authCredential.signInMethod});
  };
  web_utils$.convertWebOAuthCredential = function convertWebOAuthCredential(userCredential) {
    if (userCredential == null) {
      return null;
    }
    let authCredential = auth$.OAuthProvider.credentialFromResult(userCredential.jsObject);
    if (authCredential == null) {
      return null;
    }
    return new oauth.OAuthProvider.new(authCredential.providerId).credential({signInMethod: authCredential.signInMethod, accessToken: authCredential.accessToken, secret: authCredential.secret, idToken: authCredential.idToken});
  };
  web_utils$.convertPlatformCredential = function convertPlatformCredential(credential) {
    if (email_auth.EmailAuthCredential.is(credential)) {
      if (credential.emailLink != null) {
        return auth$.EmailAuthProvider.credentialWithLink(credential.email, dart.nullCheck(credential.emailLink));
      }
      return auth$.EmailAuthProvider.credential(credential.email, dart.nullCheck(credential.password));
    }
    if (facebook_auth.FacebookAuthCredential.is(credential)) {
      return auth$.FacebookAuthProvider.credential(dart.nullCheck(credential.accessToken));
    }
    if (github_auth.GithubAuthCredential.is(credential)) {
      return auth$.GithubAuthProvider.credential(dart.nullCheck(credential.accessToken));
    }
    if (google_auth.GoogleAuthCredential.is(credential)) {
      return auth$.GoogleAuthProvider.credential(credential.idToken, credential.accessToken);
    }
    if (twitter_auth.TwitterAuthCredential.is(credential)) {
      return auth$.TwitterAuthProvider.credential(dart.nullCheck(credential.accessToken), dart.nullCheck(credential.secret));
    }
    if (phone_auth.PhoneAuthCredential.is(credential)) {
      return dart.packageJSType("OAuthCredential", false).as(auth$.PhoneAuthProvider.credential(dart.nullCheck(credential.verificationId), dart.nullCheck(credential.smsCode)));
    }
    if (oauth.OAuthCredential.is(credential)) {
      let credentialOptions = {accessToken: credential.accessToken, rawNonce: credential.rawNonce, idToken: credential.idToken};
      return auth$.OAuthProvider.new(credential.providerId).credential(credentialOptions);
    }
    return null;
  };
  web_utils$.convertRecaptchaVerifierSize = function convertRecaptchaVerifierSize(size) {
    switch (size) {
      case C[41] || CT.C41:
        {
          return "compact";
        }
      case C[42] || CT.C42:
      default:
        {
          return "normal";
        }
    }
  };
  web_utils$.convertRecaptchaVerifierTheme = function convertRecaptchaVerifierTheme(theme) {
    switch (theme) {
      case C[43] || CT.C43:
        {
          return "dark";
        }
      case C[44] || CT.C44:
      default:
        {
          return "light";
        }
    }
  };
  web_utils$.convertMultiFactorSession = function convertMultiFactorSession(multiFactorSession) {
    return new firebase_auth_web_multi_factor.MultiFactorSessionWeb.new("web", multiFactorSession);
  };
  platform_interface_confirmation_result.ConfirmationResultPlatform = class ConfirmationResultPlatform extends plugin_platform_interface.PlatformInterface {
    get verificationId() {
      return this[S$.verificationId];
    }
    set verificationId(value) {
      super.verificationId = value;
    }
    static verifyExtends(instance) {
      plugin_platform_interface.PlatformInterface.verifyToken(instance, platform_interface_confirmation_result.ConfirmationResultPlatform._token);
    }
    confirm(verificationCode) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, function* confirm() {
        dart.throw(new core.UnimplementedError.new("confirm() is not implemented"));
      });
    }
  };
  (platform_interface_confirmation_result.ConfirmationResultPlatform.new = function(verificationId) {
    this[S$.verificationId] = verificationId;
    platform_interface_confirmation_result.ConfirmationResultPlatform.__proto__.new.call(this, {token: platform_interface_confirmation_result.ConfirmationResultPlatform._token});
    ;
  }).prototype = platform_interface_confirmation_result.ConfirmationResultPlatform.prototype;
  dart.addTypeTests(platform_interface_confirmation_result.ConfirmationResultPlatform);
  dart.addTypeCaches(platform_interface_confirmation_result.ConfirmationResultPlatform);
  dart.setMethodSignature(platform_interface_confirmation_result.ConfirmationResultPlatform, () => ({
    __proto__: dart.getMethods(platform_interface_confirmation_result.ConfirmationResultPlatform.__proto__),
    confirm: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), [core.String])
  }));
  dart.setStaticMethodSignature(platform_interface_confirmation_result.ConfirmationResultPlatform, () => ['verifyExtends']);
  dart.setLibraryUri(platform_interface_confirmation_result.ConfirmationResultPlatform, I[38]);
  dart.setFieldSignature(platform_interface_confirmation_result.ConfirmationResultPlatform, () => ({
    __proto__: dart.getFields(platform_interface_confirmation_result.ConfirmationResultPlatform.__proto__),
    verificationId: dart.finalFieldType(core.String)
  }));
  dart.setStaticFieldSignature(platform_interface_confirmation_result.ConfirmationResultPlatform, () => ['_token']);
  dart.defineLazy(platform_interface_confirmation_result.ConfirmationResultPlatform, {
    /*platform_interface_confirmation_result.ConfirmationResultPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  firebase_auth_web_confirmation_result.ConfirmationResultWeb = class ConfirmationResultWeb extends platform_interface_confirmation_result.ConfirmationResultPlatform {
    static ['_#new#tearOff'](_auth, _webConfirmationResult) {
      return new firebase_auth_web_confirmation_result.ConfirmationResultWeb.new(_auth, _webConfirmationResult);
    }
    confirm(verificationCode) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* confirm() {
        try {
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this[S$._auth$1], yield this[S$._webConfirmationResult].confirm(verificationCode));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
  };
  (firebase_auth_web_confirmation_result.ConfirmationResultWeb.new = function(_auth, _webConfirmationResult) {
    this[S$._auth$1] = _auth;
    this[S$._webConfirmationResult] = _webConfirmationResult;
    firebase_auth_web_confirmation_result.ConfirmationResultWeb.__proto__.new.call(this, _webConfirmationResult.verificationId);
    ;
  }).prototype = firebase_auth_web_confirmation_result.ConfirmationResultWeb.prototype;
  dart.addTypeTests(firebase_auth_web_confirmation_result.ConfirmationResultWeb);
  dart.addTypeCaches(firebase_auth_web_confirmation_result.ConfirmationResultWeb);
  dart.setLibraryUri(firebase_auth_web_confirmation_result.ConfirmationResultWeb, I[39]);
  dart.setFieldSignature(firebase_auth_web_confirmation_result.ConfirmationResultWeb, () => ({
    __proto__: dart.getFields(firebase_auth_web_confirmation_result.ConfirmationResultWeb.__proto__),
    [S$._auth$1]: dart.finalFieldType(platform_interface_firebase_auth.FirebaseAuthPlatform),
    [S$._webConfirmationResult]: dart.finalFieldType(auth$.ConfirmationResult)
  }));
  platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform = class RecaptchaVerifierFactoryPlatform extends plugin_platform_interface.PlatformInterface {
    static get instance() {
      if (platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform._instance == null) {
        dart.throw(new core.UnimplementedError.new("RecaptchaVerifier is not implemented"));
      }
      return dart.nullCheck(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform._instance);
    }
    static set instance(instance) {
      plugin_platform_interface.PlatformInterface.verifyToken(instance, platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform._token);
      platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform._instance = instance;
    }
    static verifyExtends(instance) {
      plugin_platform_interface.PlatformInterface.verifyToken(instance, platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform._token);
    }
    get delegate() {
      dart.throw(new core.UnimplementedError.new("delegate is not implemented"));
    }
    delegateFor(opts) {
      let auth = opts && 'auth' in opts ? opts.auth : null;
      let container = opts && 'container' in opts ? opts.container : null;
      let size = opts && 'size' in opts ? opts.size : C[42] || CT.C42;
      let theme = opts && 'theme' in opts ? opts.theme : C[44] || CT.C44;
      let onSuccess = opts && 'onSuccess' in opts ? opts.onSuccess : null;
      let onError = opts && 'onError' in opts ? opts.onError : null;
      let onExpired = opts && 'onExpired' in opts ? opts.onExpired : null;
      dart.throw(new core.UnimplementedError.new("delegateFor() is not implemented"));
    }
    get type() {
      dart.throw(new core.UnimplementedError.new("type is not implemented"));
    }
    clear() {
      dart.throw(new core.UnimplementedError.new("clear() is not implemented"));
    }
    render() {
      return async.async(core.int, function* render() {
        dart.throw(new core.UnimplementedError.new("render() is not implemented"));
      });
    }
    verify() {
      return async.async(core.String, function* verify() {
        dart.throw(new core.UnimplementedError.new("verify() is not implemented"));
      });
    }
  };
  (platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform.new = function() {
    platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform.__proto__.new.call(this, {token: platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform._token});
    ;
  }).prototype = platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform.prototype;
  dart.addTypeTests(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform);
  dart.addTypeCaches(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform);
  dart.setMethodSignature(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform, () => ({
    __proto__: dart.getMethods(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform.__proto__),
    delegateFor: dart.fnType(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform, [], {container: dart.nullable(core.String), onError: dart.nullable(dart.fnType(dart.void, [firebase_auth_exception.FirebaseAuthException])), onExpired: dart.nullable(dart.fnType(dart.void, [])), onSuccess: dart.nullable(dart.fnType(dart.void, [])), size: platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize, theme: platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme}, {auth: platform_interface_firebase_auth.FirebaseAuthPlatform}),
    clear: dart.fnType(dart.void, []),
    render: dart.fnType(async.Future$(core.int), []),
    verify: dart.fnType(async.Future$(core.String), [])
  }));
  dart.setStaticMethodSignature(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform, () => ['verifyExtends']);
  dart.setGetterSignature(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform, () => ({
    __proto__: dart.getGetters(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform.__proto__),
    delegate: dart.dynamic,
    type: core.String
  }));
  dart.setStaticGetterSignature(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform, () => ['instance']);
  dart.setStaticSetterSignature(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform, () => ['instance']);
  dart.setLibraryUri(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform, I[41]);
  dart.setStaticFieldSignature(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform, () => ['_instance', '_token']);
  dart.defineLazy(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform, {
    /*platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform._instance*/get _instance() {
      return null;
    },
    set _instance(value) {},
    /*platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb = class RecaptchaVerifierFactoryWeb extends platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform {
    get [S$._delegate$7]() {
      let t61;
      t61 = this[S$.__RecaptchaVerifierFactoryWeb__delegate];
      return t61 == null ? dart.throw(new _internal.LateError.fieldNI("_delegate")) : t61;
    }
    set [S$._delegate$7](_delegate$35param) {
      this[S$.__RecaptchaVerifierFactoryWeb__delegate] = _delegate$35param;
    }
    static get instance() {
      return new firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb.__();
    }
    static ['_#_#tearOff']() {
      return new firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb.__();
    }
    static ['_#new#tearOff'](opts) {
      let auth = opts && 'auth' in opts ? opts.auth : null;
      let container = opts && 'container' in opts ? opts.container : null;
      let size = opts && 'size' in opts ? opts.size : C[42] || CT.C42;
      let theme = opts && 'theme' in opts ? opts.theme : C[44] || CT.C44;
      let onSuccess = opts && 'onSuccess' in opts ? opts.onSuccess : null;
      let onError = opts && 'onError' in opts ? opts.onError : null;
      let onExpired = opts && 'onExpired' in opts ? opts.onExpired : null;
      return new firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb.new({auth: auth, container: container, size: size, theme: theme, onSuccess: onSuccess, onError: onError, onExpired: onExpired});
    }
    delegateFor(opts) {
      let auth = opts && 'auth' in opts ? opts.auth : null;
      let container = opts && 'container' in opts ? opts.container : null;
      let size = opts && 'size' in opts ? opts.size : C[42] || CT.C42;
      let theme = opts && 'theme' in opts ? opts.theme : C[44] || CT.C44;
      let onSuccess = opts && 'onSuccess' in opts ? opts.onSuccess : null;
      let onError = opts && 'onError' in opts ? opts.onError : null;
      let onExpired = opts && 'onExpired' in opts ? opts.onExpired : null;
      let _webAuth = firebase_auth_web.FirebaseAuthWeb.as(auth);
      return new firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb.new({auth: _webAuth, container: container, size: size, theme: theme, onSuccess: onSuccess, onError: onError, onExpired: onExpired});
    }
    get delegate() {
      return this[S$._delegate$7];
    }
    get type() {
      return this[S$._delegate$7].type;
    }
    clear() {
      let t61;
      this[S$._delegate$7].clear();
      t61 = html.window[S$.$document].getElementById("__ff-recaptcha-container");
      t61 == null ? null : t61[S$.$remove]();
    }
    verify() {
      try {
        return this[S$._delegate$7].verify();
      } catch (e$) {
        let e = dart.getThrown(e$);
        if (core.Object.is(e)) {
          dart.throw(web_utils$.getFirebaseAuthException(e));
        } else
          throw e$;
      }
    }
    render() {
      return async.async(core.int, (function* render() {
        try {
          return dart.asInt(yield this[S$._delegate$7].render());
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
  };
  (firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb.__ = function() {
    this[S$.__RecaptchaVerifierFactoryWeb__delegate] = null;
    firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb.__proto__.new.call(this);
    ;
  }).prototype = firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb.prototype;
  (firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb.new = function(opts) {
    let t61;
    let auth = opts && 'auth' in opts ? opts.auth : null;
    let container = opts && 'container' in opts ? opts.container : null;
    let size = opts && 'size' in opts ? opts.size : C[42] || CT.C42;
    let theme = opts && 'theme' in opts ? opts.theme : C[44] || CT.C44;
    let onSuccess = opts && 'onSuccess' in opts ? opts.onSuccess : null;
    let onError = opts && 'onError' in opts ? opts.onError : null;
    let onExpired = opts && 'onExpired' in opts ? opts.onExpired : null;
    this[S$.__RecaptchaVerifierFactoryWeb__delegate] = null;
    firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb.__proto__.new.call(this);
    let element = null;
    let parameters = new (T$.IdentityMapOfString$dynamic()).new();
    if (onSuccess != null) {
      parameters[S$.$_set]("callback", dart.fn(resp => {
        onSuccess();
      }, T$.dynamicToNull()));
    }
    if (onExpired != null) {
      parameters[S$.$_set]("expired-callback", dart.fn(() => {
        onExpired();
      }, T$.VoidToNull()));
    }
    if (onError != null) {
      parameters[S$.$_set]("error-callback", dart.fn(error => {
        onError(web_utils$.getFirebaseAuthException(error));
      }, T$.ObjectToNull()));
    }
    if (container == null || container[S$.$isEmpty]) {
      parameters[S$.$_set]("size", "invisible");
      let el = html.window[S$.$document].getElementById("__ff-recaptcha-container");
      if (el != null) {
        el[S$.$remove]();
      }
      dart.nullCheck(html.window[S$.$document].documentElement)[S$.$children][S$.$add]((t61 = html.DivElement.new(), (() => {
        t61[S$.$id] = "__ff-recaptcha-container";
        return t61;
      })()));
      element = "__ff-recaptcha-container";
    } else {
      parameters[S$.$_set]("size", web_utils$.convertRecaptchaVerifierSize(size));
      parameters[S$.$_set]("theme", web_utils$.convertRecaptchaVerifierTheme(theme));
      if (!(html.window[S$.$document].getElementById(container) != null)) dart.assertFailed("An exception was thrown whilst creating a RecaptchaVerifier instance. No DOM element with an ID of " + dart.str(container) + " could be found.", I[40], 84, 9, "window.document.getElementById(container) != null");
      element = container;
    }
    this[S$._delegate$7] = auth$.RecaptchaVerifier.new(element, parameters, auth.delegate);
  }).prototype = firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb.prototype;
  dart.addTypeTests(firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb);
  dart.addTypeCaches(firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb);
  dart.setGetterSignature(firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb, () => ({
    __proto__: dart.getGetters(firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb.__proto__),
    [S$._delegate$7]: auth$.RecaptchaVerifier,
    delegate: auth$.ApplicationVerifier$(dart.packageJSType("firebase_auth.ApplicationVerifier", false))
  }));
  dart.setSetterSignature(firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb, () => ({
    __proto__: dart.getSetters(firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb.__proto__),
    [S$._delegate$7]: auth$.RecaptchaVerifier
  }));
  dart.setStaticGetterSignature(firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb, () => ['instance']);
  dart.setLibraryUri(firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb, I[42]);
  dart.setFieldSignature(firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb, () => ({
    __proto__: dart.getFields(firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb.__proto__),
    [S$.__RecaptchaVerifierFactoryWeb__delegate]: dart.fieldType(dart.nullable(auth$.RecaptchaVerifier))
  }));
  dart.defineLazy(firebase_auth_web_recaptcha_verifier_factory, {
    /*firebase_auth_web_recaptcha_verifier_factory._kInvisibleElementId*/get _kInvisibleElementId() {
      return "__ff-recaptcha-container";
    }
  }, false);
  platform_interface_user.UserPlatform = class UserPlatform extends plugin_platform_interface.PlatformInterface {
    get auth() {
      return this[S$.auth$1];
    }
    set auth(value) {
      super.auth = value;
    }
    get multiFactor() {
      return this[S$.multiFactor];
    }
    set multiFactor(value) {
      super.multiFactor = value;
    }
    static verifyExtends(instance) {
      plugin_platform_interface.PlatformInterface.verifyToken(instance, platform_interface_user.UserPlatform._token);
    }
    get displayName() {
      return T$.StringN().as(this[S$._user][S$.$_get]("displayName"));
    }
    get email() {
      return T$.StringN().as(this[S$._user][S$.$_get]("email"));
    }
    get emailVerified() {
      return core.bool.as(this[S$._user][S$.$_get]("emailVerified"));
    }
    get isAnonymous() {
      return core.bool.as(this[S$._user][S$.$_get]("isAnonymous"));
    }
    get metadata() {
      return new user_metadata.UserMetadata.new(T$.intN().as(dart.dsend(this[S$._user][S$.$_get]("metadata"), '_get', ["creationTime"])), T$.intN().as(dart.dsend(this[S$._user][S$.$_get]("metadata"), '_get', ["lastSignInTime"])));
    }
    get phoneNumber() {
      return T$.StringN().as(this[S$._user][S$.$_get]("phoneNumber"));
    }
    get photoURL() {
      return T$.StringN().as(this[S$._user][S$.$_get]("photoURL"));
    }
    get providerData() {
      return core.List.from(core.Iterable.as(this[S$._user][S$.$_get]("providerData")))[S$.$map](user_info.UserInfo, dart.fn(data => new user_info.UserInfo.new(T$.LinkedHashMapOfString$StringN().from(core.Map.as(data))), T$.dynamicToUserInfo()))[S$.$toList]();
    }
    get refreshToken() {
      return T$.StringN().as(this[S$._user][S$.$_get]("refreshToken"));
    }
    get tenantId() {
      return T$.StringN().as(this[S$._user][S$.$_get]("tenantId"));
    }
    get uid() {
      return core.String.as(this[S$._user][S$.$_get]("uid"));
    }
    delete() {
      return async.async(dart.void, function* $delete() {
        dart.throw(new core.UnimplementedError.new("delete() is not implemented"));
      });
    }
    getIdToken(forceRefresh) {
      dart.throw(new core.UnimplementedError.new("getIdToken() is not implemented"));
    }
    getIdTokenResult(forceRefresh) {
      dart.throw(new core.UnimplementedError.new("getIdTokenResult() is not implemented"));
    }
    linkWithCredential(credential) {
      dart.throw(new core.UnimplementedError.new("linkWithCredential() is not implemented"));
    }
    linkWithProvider(provider) {
      dart.throw(new core.UnimplementedError.new("linkWithProvider() is not implemented"));
    }
    reauthenticateWithProvider(provider) {
      dart.throw(new core.UnimplementedError.new("reauthenticateWithProvider() is not implemented"));
    }
    reauthenticateWithPopup(provider) {
      dart.throw(new core.UnimplementedError.new("reauthenticateWithPopup() is not implemented"));
    }
    linkWithPopup(provider) {
      dart.throw(new core.UnimplementedError.new("linkWithPopup() is not implemented"));
    }
    linkWithRedirect(provider) {
      dart.throw(new core.UnimplementedError.new("linkWithRedirect() is not implemented"));
    }
    linkWithPhoneNumber(phoneNumber, applicationVerifier) {
      dart.throw(new core.UnimplementedError.new("linkWithPhoneNumber() is not implemented"));
    }
    reauthenticateWithCredential(credential) {
      dart.throw(new core.UnimplementedError.new("reauthenticateWithCredential() is not implemented"));
    }
    reload() {
      return async.async(dart.void, function* reload() {
        dart.throw(new core.UnimplementedError.new("reload() is not implemented"));
      });
    }
    sendEmailVerification(actionCodeSettings) {
      return async.async(dart.void, function* sendEmailVerification() {
        dart.throw(new core.UnimplementedError.new("sendEmailVerification() is not implemented"));
      });
    }
    unlink(providerId) {
      return async.async(platform_interface_user.UserPlatform, function* unlink() {
        dart.throw(new core.UnimplementedError.new("unlink() is not implemented"));
      });
    }
    updateEmail(newEmail) {
      return async.async(dart.void, function* updateEmail() {
        dart.throw(new core.UnimplementedError.new("updateEmail() is not implemented"));
      });
    }
    updatePassword(newPassword) {
      return async.async(dart.void, function* updatePassword() {
        dart.throw(new core.UnimplementedError.new("updatePassword() is not implemented"));
      });
    }
    updatePhoneNumber(phoneCredential) {
      return async.async(dart.void, function* updatePhoneNumber() {
        dart.throw(new core.UnimplementedError.new("updatePhoneNumber() is not implemented"));
      });
    }
    updateProfile(profile) {
      return async.async(dart.void, function* updateProfile() {
        dart.throw(new core.UnimplementedError.new("updateProfile() is not implemented"));
      });
    }
    verifyBeforeUpdateEmail(newEmail, actionCodeSettings = null) {
      return async.async(dart.void, function* verifyBeforeUpdateEmail() {
        dart.throw(new core.UnimplementedError.new("verifyBeforeUpdateEmail() is not implemented"));
      });
    }
  };
  (platform_interface_user.UserPlatform.new = function(auth, multiFactor, user) {
    this[S$.auth$1] = auth;
    this[S$.multiFactor] = multiFactor;
    this[S$._user] = user;
    platform_interface_user.UserPlatform.__proto__.new.call(this, {token: platform_interface_user.UserPlatform._token});
    ;
  }).prototype = platform_interface_user.UserPlatform.prototype;
  dart.addTypeTests(platform_interface_user.UserPlatform);
  dart.addTypeCaches(platform_interface_user.UserPlatform);
  dart.setMethodSignature(platform_interface_user.UserPlatform, () => ({
    __proto__: dart.getMethods(platform_interface_user.UserPlatform.__proto__),
    delete: dart.fnType(async.Future$(dart.void), []),
    getIdToken: dart.fnType(async.Future$(core.String), [core.bool]),
    getIdTokenResult: dart.fnType(async.Future$(id_token_result.IdTokenResult), [core.bool]),
    linkWithCredential: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), [auth_credential.AuthCredential]),
    linkWithProvider: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), [auth_provider.AuthProvider]),
    reauthenticateWithProvider: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), [auth_provider.AuthProvider]),
    reauthenticateWithPopup: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), [auth_provider.AuthProvider]),
    linkWithPopup: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), [auth_provider.AuthProvider]),
    linkWithRedirect: dart.fnType(async.Future$(dart.void), [auth_provider.AuthProvider]),
    linkWithPhoneNumber: dart.fnType(async.Future$(platform_interface_confirmation_result.ConfirmationResultPlatform), [core.String, platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform]),
    reauthenticateWithCredential: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), [auth_credential.AuthCredential]),
    reload: dart.fnType(async.Future$(dart.void), []),
    sendEmailVerification: dart.fnType(async.Future$(dart.void), [dart.nullable(action_code_settings.ActionCodeSettings)]),
    unlink: dart.fnType(async.Future$(platform_interface_user.UserPlatform), [core.String]),
    updateEmail: dart.fnType(async.Future$(dart.void), [core.String]),
    updatePassword: dart.fnType(async.Future$(dart.void), [core.String]),
    updatePhoneNumber: dart.fnType(async.Future$(dart.void), [phone_auth.PhoneAuthCredential]),
    updateProfile: dart.fnType(async.Future$(dart.void), [core.Map$(core.String, dart.nullable(core.String))]),
    verifyBeforeUpdateEmail: dart.fnType(async.Future$(dart.void), [core.String], [dart.nullable(action_code_settings.ActionCodeSettings)])
  }));
  dart.setStaticMethodSignature(platform_interface_user.UserPlatform, () => ['verifyExtends']);
  dart.setGetterSignature(platform_interface_user.UserPlatform, () => ({
    __proto__: dart.getGetters(platform_interface_user.UserPlatform.__proto__),
    displayName: dart.nullable(core.String),
    email: dart.nullable(core.String),
    emailVerified: core.bool,
    isAnonymous: core.bool,
    metadata: user_metadata.UserMetadata,
    phoneNumber: dart.nullable(core.String),
    photoURL: dart.nullable(core.String),
    providerData: core.List$(user_info.UserInfo),
    refreshToken: dart.nullable(core.String),
    tenantId: dart.nullable(core.String),
    uid: core.String
  }));
  dart.setLibraryUri(platform_interface_user.UserPlatform, I[43]);
  dart.setFieldSignature(platform_interface_user.UserPlatform, () => ({
    __proto__: dart.getFields(platform_interface_user.UserPlatform.__proto__),
    auth: dart.finalFieldType(platform_interface_firebase_auth.FirebaseAuthPlatform),
    multiFactor: dart.finalFieldType(platform_interface_multi_factor.MultiFactorPlatform),
    [S$._user]: dart.finalFieldType(core.Map$(core.String, dart.dynamic))
  }));
  dart.setStaticFieldSignature(platform_interface_user.UserPlatform, () => ['_token']);
  dart.defineLazy(platform_interface_user.UserPlatform, {
    /*platform_interface_user.UserPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  firebase_auth_web_user.UserWeb = class UserWeb extends platform_interface_user.UserPlatform {
    static ['_#new#tearOff'](auth, multiFactor, _webUser) {
      return new firebase_auth_web_user.UserWeb.new(auth, multiFactor, _webUser);
    }
    delete() {
      return async.async(dart.void, (function* $delete() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        try {
          yield this[S$._webUser].delete();
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    getIdToken(forceRefresh) {
      return async.async(core.String, (function* getIdToken() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        try {
          return yield this[S$._webUser].getIdToken(forceRefresh);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    getIdTokenResult(forceRefresh) {
      return async.async(id_token_result.IdTokenResult, (function* getIdTokenResult() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        return web_utils$.convertWebIdTokenResult(yield this[S$._webUser].getIdTokenResult(forceRefresh));
      }).bind(this));
    }
    linkWithCredential(credential) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* linkWithCredential() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        try {
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this.auth, yield this[S$._webUser].linkWithCredential(web_utils$.convertPlatformCredential(credential)));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    linkWithPopup(provider) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* linkWithPopup() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        try {
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this.auth, yield this[S$._webUser].linkWithPopup(web_utils$.convertPlatformAuthProvider(provider)));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    linkWithRedirect(provider) {
      return async.async(dart.void, (function* linkWithRedirect() {
        try {
          return this[S$._webUser].linkWithRedirect(web_utils$.convertPlatformAuthProvider(provider));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    linkWithPhoneNumber(phoneNumber, applicationVerifier) {
      return async.async(platform_interface_confirmation_result.ConfirmationResultPlatform, (function* linkWithPhoneNumber() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        try {
          let verifier = auth$.RecaptchaVerifier.as(applicationVerifier.delegate);
          return new firebase_auth_web_confirmation_result.ConfirmationResultWeb.new(this.auth, yield this[S$._webUser].linkWithPhoneNumber(phoneNumber, verifier));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    reauthenticateWithCredential(credential) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* reauthenticateWithCredential() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        try {
          let userCredential = (yield this[S$._webUser].reauthenticateWithCredential(dart.nullCheck(web_utils$.convertPlatformCredential(credential))));
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this.auth, userCredential);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    reauthenticateWithPopup(provider) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* reauthenticateWithPopup() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        try {
          let userCredential = (yield this[S$._webUser].reauthenticateWithPopup(web_utils$.convertPlatformAuthProvider(provider)));
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this.auth, userCredential);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    reload() {
      return async.async(dart.void, (function* reload() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        try {
          yield this[S$._webUser].reload();
          this.auth.sendAuthChangesEvent(this.auth.app.name, this.auth.currentUser);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    sendEmailVerification(actionCodeSettings) {
      firebase_auth_web_user._assertIsSignedOut(this.auth);
      try {
        return this[S$._webUser].sendEmailVerification(web_utils$.convertPlatformActionCodeSettings(actionCodeSettings));
      } catch (e$) {
        let e = dart.getThrown(e$);
        if (core.Object.is(e)) {
          dart.throw(web_utils$.getFirebaseAuthException(e));
        } else
          throw e$;
      }
    }
    unlink(providerId) {
      return async.async(platform_interface_user.UserPlatform, (function* unlink() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        try {
          return new firebase_auth_web_user.UserWeb.new(this.auth, this.multiFactor, yield this[S$._webUser].unlink(providerId));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    updateEmail(newEmail) {
      return async.async(dart.void, (function* updateEmail() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        try {
          yield this[S$._webUser].updateEmail(newEmail);
          yield this[S$._webUser].reload();
          this.auth.sendAuthChangesEvent(this.auth.app.name, this.auth.currentUser);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    updatePassword(newPassword) {
      return async.async(dart.void, (function* updatePassword() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        try {
          yield this[S$._webUser].updatePassword(newPassword);
          yield this[S$._webUser].reload();
          this.auth.sendAuthChangesEvent(this.auth.app.name, this.auth.currentUser);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    updatePhoneNumber(phoneCredential) {
      return async.async(dart.void, (function* updatePhoneNumber() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        try {
          yield this[S$._webUser].updatePhoneNumber(web_utils$.convertPlatformCredential(phoneCredential));
          yield this[S$._webUser].reload();
          this.auth.sendAuthChangesEvent(this.auth.app.name, this.auth.currentUser);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    updateProfile(profile) {
      return async.async(dart.void, (function* updateProfile() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        try {
          let newProfile = null;
          if (profile[S$.$containsKey]("displayName") && profile[S$.$containsKey]("photoURL")) {
            newProfile = {displayName: profile[S$.$_get]("displayName"), photoURL: profile[S$.$_get]("photoURL")};
          } else if (profile[S$.$containsKey]("displayName")) {
            newProfile = {displayName: profile[S$.$_get]("displayName")};
          } else {
            newProfile = {photoURL: profile[S$.$_get]("photoURL")};
          }
          yield this[S$._webUser].updateProfile(newProfile);
          yield this[S$._webUser].reload();
          this.auth.sendAuthChangesEvent(this.auth.app.name, this.auth.currentUser);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    verifyBeforeUpdateEmail(newEmail, actionCodeSettings = null) {
      return async.async(dart.void, (function* verifyBeforeUpdateEmail() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        try {
          yield this[S$._webUser].verifyBeforeUpdateEmail(newEmail, web_utils$.convertPlatformActionCodeSettings(actionCodeSettings));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
  };
  (firebase_auth_web_user.UserWeb.new = function(auth, multiFactor, _webUser) {
    this[S$._webUser] = _webUser;
    firebase_auth_web_user.UserWeb.__proto__.new.call(this, auth, multiFactor, new (T$.IdentityMapOfString$dynamic()).from(["displayName", _webUser.displayName, "email", _webUser.email, "emailVerified", _webUser.emailVerified, "isAnonymous", _webUser.isAnonymous, "metadata", new (T$.IdentityMapOfString$intN()).from(["creationTime", _webUser.metadata.creationTime != null ? firebase_auth_web_user._dateFormat.parse(dart.nullCheck(_webUser.metadata.creationTime)).millisecondsSinceEpoch : null, "lastSignInTime", _webUser.metadata.lastSignInTime != null ? firebase_auth_web_user._dateFormat.parse(dart.nullCheck(_webUser.metadata.lastSignInTime)).millisecondsSinceEpoch : null]), "phoneNumber", _webUser.phoneNumber, "photoURL", _webUser.photoURL, "providerData", _webUser.providerData[S$.$map](T$.MapOfString$dynamic(), dart.fn(webUserInfo => new (T$.IdentityMapOfString$dynamic()).from(["displayName", webUserInfo.displayName, "email", webUserInfo.email, "phoneNumber", webUserInfo.phoneNumber, "providerId", webUserInfo.providerId, "photoURL", webUserInfo.photoURL, "uid", webUserInfo.uid]), T$.UserInfoOfUserInfoJsImplToMapOfString$dynamic()))[S$.$toList](), "refreshToken", _webUser.refreshToken, "tenantId", _webUser.tenantId, "uid", _webUser.uid]));
    ;
  }).prototype = firebase_auth_web_user.UserWeb.prototype;
  dart.addTypeTests(firebase_auth_web_user.UserWeb);
  dart.addTypeCaches(firebase_auth_web_user.UserWeb);
  dart.setLibraryUri(firebase_auth_web_user.UserWeb, I[44]);
  dart.setFieldSignature(firebase_auth_web_user.UserWeb, () => ({
    __proto__: dart.getFields(firebase_auth_web_user.UserWeb.__proto__),
    [S$._webUser]: dart.finalFieldType(auth$.User)
  }));
  firebase_auth_web_user._assertIsSignedOut = function _assertIsSignedOut(instance) {
    if (instance.currentUser == null) {
      dart.throw(new firebase_auth_exception.FirebaseAuthException.new({code: "no-current-user", message: "No user currently signed in."}));
    }
  };
  dart.defineLazy(firebase_auth_web_user, {
    /*firebase_auth_web_user._dateFormat*/get _dateFormat() {
      return new date_format.DateFormat.new("EEE, d MMM yyyy HH:mm:ss", "en_US");
    }
  }, false);
  platform_interface_user_credential.UserCredentialPlatform = class UserCredentialPlatform extends plugin_platform_interface.PlatformInterface {
    get auth() {
      return this[S$.auth$2];
    }
    set auth(value) {
      super.auth = value;
    }
    get additionalUserInfo() {
      return this[S$.additionalUserInfo];
    }
    set additionalUserInfo(value) {
      super.additionalUserInfo = value;
    }
    get credential() {
      return this[S$.credential];
    }
    set credential(value) {
      super.credential = value;
    }
    get user() {
      return this[S$.user];
    }
    set user(value) {
      super.user = value;
    }
    static verifyExtends(instance) {
      plugin_platform_interface.PlatformInterface.verifyToken(instance, platform_interface_user_credential.UserCredentialPlatform._token);
    }
  };
  (platform_interface_user_credential.UserCredentialPlatform.new = function(opts) {
    let auth = opts && 'auth' in opts ? opts.auth : null;
    let additionalUserInfo = opts && 'additionalUserInfo' in opts ? opts.additionalUserInfo : null;
    let credential = opts && 'credential' in opts ? opts.credential : null;
    let user = opts && 'user' in opts ? opts.user : null;
    this[S$.auth$2] = auth;
    this[S$.additionalUserInfo] = additionalUserInfo;
    this[S$.credential] = credential;
    this[S$.user] = user;
    platform_interface_user_credential.UserCredentialPlatform.__proto__.new.call(this, {token: platform_interface_user_credential.UserCredentialPlatform._token});
    ;
  }).prototype = platform_interface_user_credential.UserCredentialPlatform.prototype;
  dart.addTypeTests(platform_interface_user_credential.UserCredentialPlatform);
  dart.addTypeCaches(platform_interface_user_credential.UserCredentialPlatform);
  dart.setStaticMethodSignature(platform_interface_user_credential.UserCredentialPlatform, () => ['verifyExtends']);
  dart.setLibraryUri(platform_interface_user_credential.UserCredentialPlatform, I[45]);
  dart.setFieldSignature(platform_interface_user_credential.UserCredentialPlatform, () => ({
    __proto__: dart.getFields(platform_interface_user_credential.UserCredentialPlatform.__proto__),
    auth: dart.finalFieldType(platform_interface_firebase_auth.FirebaseAuthPlatform),
    additionalUserInfo: dart.finalFieldType(dart.nullable(additional_user_info.AdditionalUserInfo)),
    credential: dart.finalFieldType(dart.nullable(auth_credential.AuthCredential)),
    user: dart.finalFieldType(dart.nullable(platform_interface_user.UserPlatform))
  }));
  dart.setStaticFieldSignature(platform_interface_user_credential.UserCredentialPlatform, () => ['_token']);
  dart.defineLazy(platform_interface_user_credential.UserCredentialPlatform, {
    /*platform_interface_user_credential.UserCredentialPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  firebase_auth_web_user_credential.UserCredentialWeb = class UserCredentialWeb extends platform_interface_user_credential.UserCredentialPlatform {
    static ['_#new#tearOff'](auth, webUserCredential) {
      return new firebase_auth_web_user_credential.UserCredentialWeb.new(auth, webUserCredential);
    }
  };
  (firebase_auth_web_user_credential.UserCredentialWeb.new = function(auth, webUserCredential) {
    firebase_auth_web_user_credential.UserCredentialWeb.__proto__.new.call(this, {auth: auth, additionalUserInfo: web_utils$.convertWebAdditionalUserInfo(webUserCredential.additionalUserInfo), credential: web_utils$.convertWebOAuthCredential(webUserCredential), user: new firebase_auth_web_user.UserWeb.new(auth, new firebase_auth_web_multi_factor.MultiFactorWeb.new(auth, multi_factor.multiFactor(dart.nullCheck(webUserCredential.user))), dart.nullCheck(webUserCredential.user))});
    ;
  }).prototype = firebase_auth_web_user_credential.UserCredentialWeb.prototype;
  dart.addTypeTests(firebase_auth_web_user_credential.UserCredentialWeb);
  dart.addTypeCaches(firebase_auth_web_user_credential.UserCredentialWeb);
  dart.setLibraryUri(firebase_auth_web_user_credential.UserCredentialWeb, I[46]);
  const _is_UserInfo_default = Symbol('_is_UserInfo_default');
  auth$.UserInfo$ = dart.generic(T => {
    class UserInfo extends js$.JsObjectWrapper$(T) {
      get displayName() {
        return this.jsObject.displayName;
      }
      get email() {
        return this.jsObject.email;
      }
      get phoneNumber() {
        return this.jsObject.phoneNumber;
      }
      get photoURL() {
        return this.jsObject.photoURL;
      }
      get providerId() {
        return this.jsObject.providerId;
      }
      get uid() {
        return this.jsObject.uid;
      }
      static ['_#_fromJsObject#tearOff'](T, jsObject) {
        return new (auth$.UserInfo$(T))._fromJsObject(jsObject);
      }
    }
    (UserInfo._fromJsObject = function(jsObject) {
      UserInfo.__proto__.fromJsObject.call(this, T.as(jsObject));
      ;
    }).prototype = UserInfo.prototype;
    dart.addTypeTests(UserInfo);
    UserInfo.prototype[_is_UserInfo_default] = true;
    dart.addTypeCaches(UserInfo);
    dart.setGetterSignature(UserInfo, () => ({
      __proto__: dart.getGetters(UserInfo.__proto__),
      displayName: dart.nullable(core.String),
      email: dart.nullable(core.String),
      phoneNumber: dart.nullable(core.String),
      photoURL: dart.nullable(core.String),
      providerId: core.String,
      uid: core.String
    }));
    dart.setLibraryUri(UserInfo, I[47]);
    return UserInfo;
  });
  auth$.UserInfo = auth$.UserInfo$();
  dart.addTypeTests(auth$.UserInfo, _is_UserInfo_default);
  auth$.User = class User extends auth$.UserInfo$(dart.packageJSType("UserJsImpl", false)) {
    get uid() {
      return this.jsObject.uid;
    }
    get emailVerified() {
      return this.jsObject.emailVerified;
    }
    get isAnonymous() {
      return this.jsObject.isAnonymous;
    }
    get tenantId() {
      return this.jsObject.tenantId;
    }
    get metadata() {
      return this.jsObject.metadata;
    }
    get providerData() {
      return this.jsObject.providerData[S$.$map](T$.UserInfoOfUserInfoJsImpl(), dart.fn(data => new (T$.UserInfoOfUserInfoJsImpl())._fromJsObject(dart.packageJSType("UserInfoJsImpl", false).as(data)), T$.dynamicToUserInfoOfUserInfoJsImpl()))[S$.$toList]();
    }
    get refreshToken() {
      return this.jsObject.refreshToken;
    }
    static getInstance(jsObject) {
      let t82, t81, t80, t79;
      if (jsObject == null) {
        return null;
      }
      t79 = auth$.User._expando;
      t80 = jsObject;
      t81 = t79._get(t80);
      return t81 == null ? (t82 = new auth$.User._fromJsObject(jsObject), t79._set(t80, t82), t82) : t81;
    }
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new auth$.User._fromJsObject(jsObject);
    }
    delete() {
      return utils$.handleThenable(dart.void, this.jsObject.delete());
    }
    getIdToken(forceRefresh = false) {
      return utils$.handleThenable(core.String, this.jsObject.getIdToken(forceRefresh));
    }
    linkWithCredential(credential) {
      return utils$.handleThenable(dart.packageJSType("UserCredentialJsImpl", false), dart.global.firebase_auth.linkWithCredential(this.jsObject, credential)).then(auth$.UserCredential, C[45] || CT.C45);
    }
    linkWithPhoneNumber(phoneNumber, applicationVerifier) {
      return utils$.handleThenable(dart.packageJSType("firebase_auth.ConfirmationResult", false), dart.global.firebase_auth.linkWithPhoneNumber(this.jsObject, phoneNumber, applicationVerifier.jsObject)).then(auth$.ConfirmationResult, C[46] || CT.C46);
    }
    linkWithPopup(provider) {
      return utils$.handleThenable(dart.packageJSType("UserCredentialJsImpl", false), dart.global.firebase_auth.linkWithPopup(this.jsObject, provider.jsObject)).then(auth$.UserCredential, C[45] || CT.C45);
    }
    linkWithRedirect(provider) {
      return utils$.handleThenable(dart.void, dart.global.firebase_auth.linkWithRedirect(this.jsObject, provider.jsObject));
    }
    reauthenticateWithCredential(credential) {
      return utils$.handleThenable(dart.packageJSType("UserCredentialJsImpl", false), dart.global.firebase_auth.reauthenticateWithCredential(this.jsObject, credential)).then(auth$.UserCredential, C[45] || CT.C45);
    }
    reauthenticateWithPhoneNumber(phoneNumber, applicationVerifier) {
      return utils$.handleThenable(dart.packageJSType("firebase_auth.ConfirmationResult", false), dart.global.firebase_auth.reauthenticateWithPhoneNumber(this.jsObject, phoneNumber, applicationVerifier.jsObject)).then(auth$.ConfirmationResult, C[46] || CT.C46);
    }
    reauthenticateWithPopup(provider) {
      return utils$.handleThenable(dart.packageJSType("UserCredentialJsImpl", false), dart.global.firebase_auth.reauthenticateWithPopup(this.jsObject, provider.jsObject)).then(auth$.UserCredential, C[45] || CT.C45);
    }
    reauthenticateWithRedirect(provider) {
      return utils$.handleThenable(dart.void, dart.global.firebase_auth.reauthenticateWithRedirect(this.jsObject, provider.jsObject));
    }
    reload() {
      return utils$.handleThenable(dart.void, this.jsObject.reload());
    }
    sendEmailVerification(actionCodeSettings = null) {
      return utils$.handleThenable(dart.void, dart.global.firebase_auth.sendEmailVerification(this.jsObject, actionCodeSettings));
    }
    verifyBeforeUpdateEmail(newEmail, actionCodeSettings = null) {
      return utils$.handleThenable(dart.void, dart.global.firebase_auth.verifyBeforeUpdateEmail(this.jsObject, newEmail, actionCodeSettings));
    }
    unlink(providerId) {
      return utils$.handleThenable(dart.packageJSType("UserJsImpl", false), dart.global.firebase_auth.unlink(this.jsObject, providerId)).then(auth$.User, dart.fn(user => dart.nullCheck(auth$.User.getInstance(user)), T$.UserJsImplToUser()));
    }
    updateEmail(newEmail) {
      return utils$.handleThenable(dart.void, dart.global.firebase_auth.updateEmail(this.jsObject, newEmail));
    }
    updatePassword(newPassword) {
      return utils$.handleThenable(dart.void, dart.global.firebase_auth.updatePassword(this.jsObject, newPassword));
    }
    updatePhoneNumber(phoneCredential) {
      return utils$.handleThenable(dart.void, dart.global.firebase_auth.updatePhoneNumber(this.jsObject, phoneCredential));
    }
    updateProfile(profile) {
      return utils$.handleThenable(dart.void, dart.global.firebase_auth.updateProfile(this.jsObject, profile));
    }
    getIdTokenResult(forceRefresh = null) {
      let promise = forceRefresh == null ? this.jsObject.getIdTokenResult() : this.jsObject.getIdTokenResult(forceRefresh);
      return utils$.handleThenable(dart.packageJSType("IdTokenResultImpl", false), promise).then(auth$.IdTokenResult, C[47] || CT.C47);
    }
    toJson() {
      return T$.MapOfString$dynamic().as(utils.dartify(this.jsObject.toJSON()));
    }
    toString() {
      return "User: " + this.uid;
    }
  };
  (auth$.User._fromJsObject = function(jsObject) {
    auth$.User.__proto__._fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.User.prototype;
  dart.addTypeTests(auth$.User);
  dart.addTypeCaches(auth$.User);
  dart.setMethodSignature(auth$.User, () => ({
    __proto__: dart.getMethods(auth$.User.__proto__),
    delete: dart.fnType(async.Future$(dart.void), []),
    getIdToken: dart.fnType(async.Future$(core.String), [], [core.bool]),
    linkWithCredential: dart.fnType(async.Future$(auth$.UserCredential), [dart.nullable(dart.packageJSType("OAuthCredential", false))]),
    linkWithPhoneNumber: dart.fnType(async.Future$(auth$.ConfirmationResult), [core.String, auth$.ApplicationVerifier$(dart.packageJSType("firebase_auth.ApplicationVerifier", false))]),
    linkWithPopup: dart.fnType(async.Future$(auth$.UserCredential), [auth$.AuthProvider$(dart.packageJSType("AuthProviderJsImpl", false))]),
    linkWithRedirect: dart.fnType(async.Future$(dart.void), [auth$.AuthProvider$(dart.packageJSType("AuthProviderJsImpl", false))]),
    reauthenticateWithCredential: dart.fnType(async.Future$(auth$.UserCredential), [dart.packageJSType("OAuthCredential", false)]),
    reauthenticateWithPhoneNumber: dart.fnType(async.Future$(auth$.ConfirmationResult), [core.String, auth$.ApplicationVerifier$(dart.packageJSType("firebase_auth.ApplicationVerifier", false))]),
    reauthenticateWithPopup: dart.fnType(async.Future$(auth$.UserCredential), [auth$.AuthProvider$(dart.packageJSType("AuthProviderJsImpl", false))]),
    reauthenticateWithRedirect: dart.fnType(async.Future$(dart.void), [auth$.AuthProvider$(dart.packageJSType("AuthProviderJsImpl", false))]),
    reload: dart.fnType(async.Future$(dart.void), []),
    sendEmailVerification: dart.fnType(async.Future$(dart.void), [], [dart.nullable(dart.packageJSType("ActionCodeSettings", false))]),
    verifyBeforeUpdateEmail: dart.fnType(async.Future$(dart.void), [core.String], [dart.nullable(dart.packageJSType("ActionCodeSettings", false))]),
    unlink: dart.fnType(async.Future$(auth$.User), [core.String]),
    updateEmail: dart.fnType(async.Future$(dart.void), [core.String]),
    updatePassword: dart.fnType(async.Future$(dart.void), [core.String]),
    updatePhoneNumber: dart.fnType(async.Future$(dart.void), [dart.nullable(dart.packageJSType("OAuthCredential", false))]),
    updateProfile: dart.fnType(async.Future$(dart.void), [dart.packageJSType("UserProfile", false)]),
    getIdTokenResult: dart.fnType(async.Future$(auth$.IdTokenResult), [], [dart.nullable(core.bool)]),
    toJson: dart.fnType(core.Map$(core.String, dart.dynamic), [])
  }));
  dart.setStaticMethodSignature(auth$.User, () => ['getInstance']);
  dart.setGetterSignature(auth$.User, () => ({
    __proto__: dart.getGetters(auth$.User.__proto__),
    emailVerified: core.bool,
    isAnonymous: core.bool,
    tenantId: dart.nullable(core.String),
    metadata: dart.packageJSType("firebase_auth.UserMetadata", false),
    providerData: core.List$(auth$.UserInfo$(dart.packageJSType("UserInfoJsImpl", false))),
    refreshToken: core.String
  }));
  dart.setLibraryUri(auth$.User, I[47]);
  dart.setStaticFieldSignature(auth$.User, () => ['_expando']);
  dart.defineExtensionMethods(auth$.User, ['toString']);
  dart.defineLazy(auth$.User, {
    /*auth$.User._expando*/get _expando() {
      return new (T$.ExpandoOfUser()).new();
    }
  }, false);
  auth$.IdTokenResult = class IdTokenResult extends js$.JsObjectWrapper$(dart.packageJSType("IdTokenResultImpl", false)) {
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new auth$.IdTokenResult._fromJsObject(jsObject);
    }
    get authTime() {
      return http_date.parseHttpDate(this.jsObject.authTime);
    }
    get claims() {
      return T$.MapNOfString$dynamic().as(utils.dartify(this.jsObject.claims));
    }
    get expirationTime() {
      return http_date.parseHttpDate(this.jsObject.expirationTime);
    }
    get issuedAtTime() {
      return http_date.parseHttpDate(this.jsObject.issuedAtTime);
    }
    get signInProvider() {
      return this.jsObject.signInProvider;
    }
    get token() {
      return this.jsObject.token;
    }
  };
  (auth$.IdTokenResult._fromJsObject = function(jsObject) {
    auth$.IdTokenResult.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.IdTokenResult.prototype;
  dart.addTypeTests(auth$.IdTokenResult);
  dart.addTypeCaches(auth$.IdTokenResult);
  dart.setGetterSignature(auth$.IdTokenResult, () => ({
    __proto__: dart.getGetters(auth$.IdTokenResult.__proto__),
    authTime: core.DateTime,
    claims: dart.nullable(core.Map$(core.String, dart.dynamic)),
    expirationTime: core.DateTime,
    issuedAtTime: core.DateTime,
    signInProvider: core.String,
    token: core.String
  }));
  dart.setLibraryUri(auth$.IdTokenResult, I[47]);
  auth$.Auth = class Auth extends js$.JsObjectWrapper$(dart.packageJSType("firebase_auth.Auth", false)) {
    get app() {
      return app$.App.getInstance(this.jsObject.app);
    }
    get currentUser() {
      return auth$.User.getInstance(this.jsObject.currentUser);
    }
    get tenantId() {
      return this.jsObject.tenantId;
    }
    set tenantId(tenantId) {
      this.jsObject.tenantId = tenantId;
    }
    get languageCode() {
      return this.jsObject.languageCode;
    }
    set languageCode(s) {
      this.jsObject.languageCode = s;
    }
    get settings() {
      return this.jsObject.settings;
    }
    get onAuthStateChanged() {
      if (this[S$._changeController] == null) {
        let nextWrapper = js.allowInterop(T$.UserJsImplNToNull(), dart.fn(user => {
          dart.nullCheck(this[S$._changeController]).add(auth$.User.getInstance(user));
        }, T$.UserJsImplNToNull()));
        let errorWrapper = js.allowInterop(T$.dynamicTovoid(), dart.fn(e => dart.nullCheck(this[S$._changeController]).addError(core.Object.as(e)), T$.dynamicTovoid()));
        const startListen = () => {
          if (!(this[S$._onAuthUnsubscribe] == null)) dart.assertFailed(null, I[48], 385, 16, "_onAuthUnsubscribe == null");
          this[S$._onAuthUnsubscribe] = this.jsObject.onAuthStateChanged(dart.assertInterop(nextWrapper), dart.assertInterop(errorWrapper));
        };
        dart.fn(startListen, T$.VoidTovoid());
        const stopListen = () => {
          dart.nullCheck(this[S$._onAuthUnsubscribe])();
          this[S$._onAuthUnsubscribe] = null;
        };
        dart.fn(stopListen, T$.VoidTovoid());
        this[S$._changeController] = T$.StreamControllerOfUserN().broadcast({onListen: startListen, onCancel: stopListen, sync: true});
      }
      return dart.nullCheck(this[S$._changeController]).stream;
    }
    get onIdTokenChanged() {
      if (this[S$._idTokenChangedController] == null) {
        let nextWrapper = js.allowInterop(T$.UserJsImplNToNull(), dart.fn(user => {
          dart.nullCheck(this[S$._idTokenChangedController]).add(auth$.User.getInstance(user));
        }, T$.UserJsImplNToNull()));
        let errorWrapper = js.allowInterop(T$.dynamicTovoid(), dart.fn(e => dart.nullCheck(this[S$._idTokenChangedController]).addError(core.Object.as(e)), T$.dynamicTovoid()));
        const startListen = () => {
          if (!(this[S$._onIdTokenChangedUnsubscribe] == null)) dart.assertFailed(null, I[48], 425, 16, "_onIdTokenChangedUnsubscribe == null");
          this[S$._onIdTokenChangedUnsubscribe] = this.jsObject.onIdTokenChanged(dart.assertInterop(nextWrapper), dart.assertInterop(errorWrapper));
        };
        dart.fn(startListen, T$.VoidTovoid());
        const stopListen = () => {
          dart.nullCheck(this[S$._onIdTokenChangedUnsubscribe])();
          this[S$._onIdTokenChangedUnsubscribe] = null;
        };
        dart.fn(stopListen, T$.VoidTovoid());
        this[S$._idTokenChangedController] = T$.StreamControllerOfUserN().broadcast({onListen: startListen, onCancel: stopListen, sync: true});
      }
      return dart.nullCheck(this[S$._idTokenChangedController]).stream;
    }
    static getInstance(jsObject) {
      let t82, t81, t80, t79;
      t79 = auth$.Auth._expando;
      t80 = jsObject;
      t81 = t79._get(t80);
      return t81 == null ? (t82 = new auth$.Auth._fromJsObject(jsObject), t79._set(t80, t82), t82) : t81;
    }
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new auth$.Auth._fromJsObject(jsObject);
    }
    applyActionCode(oobCode) {
      return utils$.handleThenable(dart.dynamic, dart.global.firebase_auth.applyActionCode(this.jsObject, oobCode));
    }
    checkActionCode(code) {
      return utils$.handleThenable(dart.packageJSType("firebase_auth.ActionCodeInfo", false), dart.global.firebase_auth.checkActionCode(this.jsObject, code));
    }
    confirmPasswordReset(code, newPassword) {
      return utils$.handleThenable(dart.dynamic, dart.global.firebase_auth.confirmPasswordReset(this.jsObject, code, newPassword));
    }
    createUserWithEmailAndPassword(email, password) {
      return async.async(auth$.UserCredential, (function* createUserWithEmailAndPassword() {
        let u = (yield utils$.handleThenable(dart.packageJSType("UserCredentialJsImpl", false), dart.global.firebase_auth.createUserWithEmailAndPassword(this.jsObject, email, password)));
        return new auth$.UserCredential.fromJsObject(u);
      }).bind(this));
    }
    fetchSignInMethodsForEmail(email) {
      return utils$.handleThenable(core.List, dart.global.firebase_auth.fetchSignInMethodsForEmail(this.jsObject, email)).then(T$.ListOfString(), C[48] || CT.C48);
    }
    isSignInWithEmailLink(emailLink) {
      return dart.global.firebase_auth.isSignInWithEmailLink(emailLink);
    }
    getRedirectResult() {
      return utils$.handleThenable(dart.packageJSType("UserCredentialJsImpl", false), dart.global.firebase_auth.getRedirectResult(this.jsObject)).then(auth$.UserCredential, C[45] || CT.C45);
    }
    sendSignInLinkToEmail(email, actionCodeSettings = null) {
      return utils$.handleThenable(dart.dynamic, dart.global.firebase_auth.sendSignInLinkToEmail(this.jsObject, email, actionCodeSettings));
    }
    setPersistence(persistence) {
      let instance = null;
      switch (persistence) {
        case C[50] || CT.C50:
          {
            instance = dart.global.firebase_auth.browserLocalPersistence;
            break;
          }
        case C[51] || CT.C51:
          {
            instance = dart.global.firebase_auth.indexedDBLocalPersistence;
            break;
          }
        case C[52] || CT.C52:
          {
            instance = dart.global.firebase_auth.browserSessionPersistence;
            break;
          }
        case C[53] || CT.C53:
          {
            instance = dart.global.firebase_auth.inMemoryPersistence;
            break;
          }
      }
      return utils$.handleThenable(dart.dynamic, dart.global.firebase_auth.setPersistence(this.jsObject, instance));
    }
    sendPasswordResetEmail(email, actionCodeSettings = null) {
      return utils$.handleThenable(dart.dynamic, dart.global.firebase_auth.sendPasswordResetEmail(this.jsObject, email, actionCodeSettings));
    }
    signInWithCredential(credential) {
      return utils$.handleThenable(dart.packageJSType("UserCredentialJsImpl", false), dart.global.firebase_auth.signInWithCredential(this.jsObject, credential)).then(auth$.UserCredential, C[45] || CT.C45);
    }
    signInAnonymously() {
      return utils$.handleThenable(dart.packageJSType("UserCredentialJsImpl", false), dart.global.firebase_auth.signInAnonymously(this.jsObject)).then(auth$.UserCredential, C[45] || CT.C45);
    }
    signInWithCustomToken(token) {
      return utils$.handleThenable(dart.packageJSType("UserCredentialJsImpl", false), dart.global.firebase_auth.signInWithCustomToken(this.jsObject, token)).then(auth$.UserCredential, C[45] || CT.C45);
    }
    signInAndRetrieveDataWithCustomToken(token) {
      return this.signInWithCustomToken(token);
    }
    signInWithEmailAndPassword(email, password) {
      return utils$.handleThenable(dart.packageJSType("UserCredentialJsImpl", false), dart.global.firebase_auth.signInWithEmailAndPassword(this.jsObject, email, password)).then(auth$.UserCredential, C[45] || CT.C45);
    }
    signInWithEmailLink(email, emailLink) {
      return utils$.handleThenable(dart.packageJSType("UserCredentialJsImpl", false), dart.global.firebase_auth.signInWithEmailLink(this.jsObject, email, emailLink)).then(auth$.UserCredential, C[45] || CT.C45);
    }
    signInWithPhoneNumber(phoneNumber, applicationVerifier) {
      return utils$.handleThenable(dart.packageJSType("firebase_auth.ConfirmationResult", false), dart.global.firebase_auth.signInWithPhoneNumber(this.jsObject, phoneNumber, applicationVerifier.jsObject)).then(auth$.ConfirmationResult, C[46] || CT.C46);
    }
    signInWithPopup(provider) {
      return utils$.handleThenable(dart.packageJSType("UserCredentialJsImpl", false), dart.global.firebase_auth.signInWithPopup(this.jsObject, provider.jsObject)).then(auth$.UserCredential, C[45] || CT.C45);
    }
    signInWithRedirect(provider) {
      return utils$.handleThenable(dart.dynamic, dart.global.firebase_auth.signInWithRedirect(this.jsObject, provider.jsObject));
    }
    signOut() {
      return utils$.handleThenable(dart.dynamic, this.jsObject.signOut());
    }
    useAuthEmulator(origin) {
      return dart.global.firebase_auth.connectAuthEmulator(this.jsObject, origin);
    }
    useDeviceLanguage() {
      return this.jsObject.useDeviceLanguage();
    }
    verifyPasswordResetCode(code) {
      return utils$.handleThenable(core.String, dart.global.firebase_auth.verifyPasswordResetCode(this.jsObject, code));
    }
  };
  (auth$.Auth._fromJsObject = function(jsObject) {
    this[S$._onAuthUnsubscribe] = null;
    this[S$._changeController] = null;
    this[S$._onIdTokenChangedUnsubscribe] = null;
    this[S$._idTokenChangedController] = null;
    auth$.Auth.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.Auth.prototype;
  dart.addTypeTests(auth$.Auth);
  dart.addTypeCaches(auth$.Auth);
  dart.setMethodSignature(auth$.Auth, () => ({
    __proto__: dart.getMethods(auth$.Auth.__proto__),
    applyActionCode: dart.fnType(async.Future, [core.String]),
    checkActionCode: dart.fnType(async.Future$(dart.packageJSType("firebase_auth.ActionCodeInfo", false)), [core.String]),
    confirmPasswordReset: dart.fnType(async.Future, [core.String, core.String]),
    createUserWithEmailAndPassword: dart.fnType(async.Future$(auth$.UserCredential), [core.String, core.String]),
    fetchSignInMethodsForEmail: dart.fnType(async.Future$(core.List$(core.String)), [core.String]),
    isSignInWithEmailLink: dart.fnType(core.bool, [core.String]),
    getRedirectResult: dart.fnType(async.Future$(auth$.UserCredential), []),
    sendSignInLinkToEmail: dart.fnType(async.Future, [core.String], [dart.nullable(dart.packageJSType("ActionCodeSettings", false))]),
    setPersistence: dart.fnType(async.Future, [types.Persistence]),
    sendPasswordResetEmail: dart.fnType(async.Future, [core.String], [dart.nullable(dart.packageJSType("ActionCodeSettings", false))]),
    signInWithCredential: dart.fnType(async.Future$(auth$.UserCredential), [dart.packageJSType("OAuthCredential", false)]),
    signInAnonymously: dart.fnType(async.Future$(auth$.UserCredential), []),
    signInWithCustomToken: dart.fnType(async.Future$(auth$.UserCredential), [core.String]),
    signInAndRetrieveDataWithCustomToken: dart.fnType(async.Future$(auth$.UserCredential), [core.String]),
    signInWithEmailAndPassword: dart.fnType(async.Future$(auth$.UserCredential), [core.String, core.String]),
    signInWithEmailLink: dart.fnType(async.Future$(auth$.UserCredential), [core.String, core.String]),
    signInWithPhoneNumber: dart.fnType(async.Future$(auth$.ConfirmationResult), [core.String, auth$.ApplicationVerifier$(dart.packageJSType("firebase_auth.ApplicationVerifier", false))]),
    signInWithPopup: dart.fnType(async.Future$(auth$.UserCredential), [auth$.AuthProvider$(dart.packageJSType("AuthProviderJsImpl", false))]),
    signInWithRedirect: dart.fnType(async.Future, [auth$.AuthProvider$(dart.packageJSType("AuthProviderJsImpl", false))]),
    signOut: dart.fnType(async.Future, []),
    useAuthEmulator: dart.fnType(dart.void, [core.String]),
    useDeviceLanguage: dart.fnType(dart.void, []),
    verifyPasswordResetCode: dart.fnType(async.Future$(core.String), [core.String])
  }));
  dart.setStaticMethodSignature(auth$.Auth, () => ['getInstance']);
  dart.setGetterSignature(auth$.Auth, () => ({
    __proto__: dart.getGetters(auth$.Auth.__proto__),
    app: app$.App,
    currentUser: dart.nullable(auth$.User),
    tenantId: dart.nullable(core.String),
    languageCode: core.String,
    settings: dart.packageJSType("AuthSettings", false),
    onAuthStateChanged: async.Stream$(dart.nullable(auth$.User)),
    onIdTokenChanged: async.Stream$(dart.nullable(auth$.User))
  }));
  dart.setSetterSignature(auth$.Auth, () => ({
    __proto__: dart.getSetters(auth$.Auth.__proto__),
    tenantId: dart.nullable(core.String),
    languageCode: dart.nullable(core.String)
  }));
  dart.setLibraryUri(auth$.Auth, I[47]);
  dart.setFieldSignature(auth$.Auth, () => ({
    __proto__: dart.getFields(auth$.Auth.__proto__),
    [S$._onAuthUnsubscribe]: dart.fieldType(dart.nullable(dart.fnType(dart.dynamic, []))),
    [S$._changeController]: dart.fieldType(dart.nullable(async.StreamController$(dart.nullable(auth$.User)))),
    [S$._onIdTokenChangedUnsubscribe]: dart.fieldType(dart.nullable(dart.fnType(dart.dynamic, []))),
    [S$._idTokenChangedController]: dart.fieldType(dart.nullable(async.StreamController$(dart.nullable(auth$.User))))
  }));
  dart.setStaticFieldSignature(auth$.Auth, () => ['_expando']);
  dart.defineLazy(auth$.Auth, {
    /*auth$.Auth._expando*/get _expando() {
      return new (T$.ExpandoOfAuth()).new();
    }
  }, false);
  const _is_AuthProvider_default = Symbol('_is_AuthProvider_default');
  auth$.AuthProvider$ = dart.generic(T => {
    class AuthProvider extends js$.JsObjectWrapper$(T) {
      get providerId() {
        return this.jsObject.providerId;
      }
    }
    (AuthProvider.fromJsObject = function(jsObject) {
      AuthProvider.__proto__.fromJsObject.call(this, jsObject);
      ;
    }).prototype = AuthProvider.prototype;
    dart.addTypeTests(AuthProvider);
    AuthProvider.prototype[_is_AuthProvider_default] = true;
    dart.addTypeCaches(AuthProvider);
    dart.setGetterSignature(AuthProvider, () => ({
      __proto__: dart.getGetters(AuthProvider.__proto__),
      providerId: core.String
    }));
    dart.setLibraryUri(AuthProvider, I[47]);
    return AuthProvider;
  });
  auth$.AuthProvider = auth$.AuthProvider$();
  dart.addTypeTests(auth$.AuthProvider, _is_AuthProvider_default);
  auth$.EmailAuthProvider = class EmailAuthProvider extends auth$.AuthProvider$(dart.packageJSType("firebase_auth.EmailAuthProvider", false)) {
    static new() {
      return new auth$.EmailAuthProvider.fromJsObject(new dart.global.firebase_auth.EmailAuthProvider());
    }
    static ['_#new#tearOff']() {
      return auth$.EmailAuthProvider.new();
    }
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new auth$.EmailAuthProvider.fromJsObject(jsObject);
    }
    static credential(email, password) {
      return dart.packageJSType("OAuthCredential", false).as(dart.global.firebase_auth.EmailAuthProvider.credential(email, password));
    }
    static credentialWithLink(email, emailLink) {
      return dart.packageJSType("OAuthCredential", false).as(dart.global.firebase_auth.EmailAuthProvider.credentialWithLink(email, emailLink));
    }
  };
  (auth$.EmailAuthProvider.fromJsObject = function(jsObject) {
    auth$.EmailAuthProvider.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.EmailAuthProvider.prototype;
  dart.addTypeTests(auth$.EmailAuthProvider);
  dart.addTypeCaches(auth$.EmailAuthProvider);
  dart.setStaticMethodSignature(auth$.EmailAuthProvider, () => ['new', 'credential', 'credentialWithLink']);
  dart.setLibraryUri(auth$.EmailAuthProvider, I[47]);
  dart.setStaticFieldSignature(auth$.EmailAuthProvider, () => ['PROVIDER_ID']);
  dart.defineLazy(auth$.EmailAuthProvider, {
    /*auth$.EmailAuthProvider.PROVIDER_ID*/get PROVIDER_ID() {
      return dart.global.firebase_auth.EmailAuthProvider.PROVIDER_ID;
    },
    set PROVIDER_ID(value) {}
  }, false);
  auth$.FacebookAuthProvider = class FacebookAuthProvider extends auth$.AuthProvider$(dart.packageJSType("firebase_auth.FacebookAuthProvider", false)) {
    static new() {
      return new auth$.FacebookAuthProvider.fromJsObject(new dart.global.firebase_auth.FacebookAuthProvider());
    }
    static ['_#new#tearOff']() {
      return auth$.FacebookAuthProvider.new();
    }
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new auth$.FacebookAuthProvider.fromJsObject(jsObject);
    }
    addScope(scope) {
      return new auth$.FacebookAuthProvider.fromJsObject(this.jsObject.addScope(scope));
    }
    setCustomParameters(customOAuthParameters) {
      return new auth$.FacebookAuthProvider.fromJsObject(this.jsObject.setCustomParameters(utils.jsify(customOAuthParameters)));
    }
    static credential(token) {
      return dart.global.firebase_auth.FacebookAuthProvider.credential(token);
    }
  };
  (auth$.FacebookAuthProvider.fromJsObject = function(jsObject) {
    auth$.FacebookAuthProvider.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.FacebookAuthProvider.prototype;
  dart.addTypeTests(auth$.FacebookAuthProvider);
  dart.addTypeCaches(auth$.FacebookAuthProvider);
  dart.setMethodSignature(auth$.FacebookAuthProvider, () => ({
    __proto__: dart.getMethods(auth$.FacebookAuthProvider.__proto__),
    addScope: dart.fnType(auth$.FacebookAuthProvider, [core.String]),
    setCustomParameters: dart.fnType(auth$.FacebookAuthProvider, [core.Map$(dart.nullable(core.Object), dart.nullable(core.Object))])
  }));
  dart.setStaticMethodSignature(auth$.FacebookAuthProvider, () => ['new', 'credential']);
  dart.setLibraryUri(auth$.FacebookAuthProvider, I[47]);
  dart.setStaticFieldSignature(auth$.FacebookAuthProvider, () => ['PROVIDER_ID']);
  dart.defineLazy(auth$.FacebookAuthProvider, {
    /*auth$.FacebookAuthProvider.PROVIDER_ID*/get PROVIDER_ID() {
      return dart.global.firebase_auth.FacebookAuthProvider.PROVIDER_ID;
    },
    set PROVIDER_ID(value) {}
  }, false);
  auth$.GithubAuthProvider = class GithubAuthProvider extends auth$.AuthProvider$(dart.packageJSType("firebase_auth.GithubAuthProvider", false)) {
    static new() {
      return new auth$.GithubAuthProvider.fromJsObject(new dart.global.firebase_auth.GithubAuthProvider());
    }
    static ['_#new#tearOff']() {
      return auth$.GithubAuthProvider.new();
    }
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new auth$.GithubAuthProvider.fromJsObject(jsObject);
    }
    addScope(scope) {
      return new auth$.GithubAuthProvider.fromJsObject(this.jsObject.addScope(scope));
    }
    setCustomParameters(customOAuthParameters) {
      return new auth$.GithubAuthProvider.fromJsObject(this.jsObject.setCustomParameters(utils.jsify(customOAuthParameters)));
    }
    static credential(token) {
      return dart.global.firebase_auth.GithubAuthProvider.credential(token);
    }
  };
  (auth$.GithubAuthProvider.fromJsObject = function(jsObject) {
    auth$.GithubAuthProvider.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.GithubAuthProvider.prototype;
  dart.addTypeTests(auth$.GithubAuthProvider);
  dart.addTypeCaches(auth$.GithubAuthProvider);
  dart.setMethodSignature(auth$.GithubAuthProvider, () => ({
    __proto__: dart.getMethods(auth$.GithubAuthProvider.__proto__),
    addScope: dart.fnType(auth$.GithubAuthProvider, [core.String]),
    setCustomParameters: dart.fnType(auth$.GithubAuthProvider, [core.Map$(dart.nullable(core.Object), dart.nullable(core.Object))])
  }));
  dart.setStaticMethodSignature(auth$.GithubAuthProvider, () => ['new', 'credential']);
  dart.setLibraryUri(auth$.GithubAuthProvider, I[47]);
  dart.setStaticFieldSignature(auth$.GithubAuthProvider, () => ['PROVIDER_ID']);
  dart.defineLazy(auth$.GithubAuthProvider, {
    /*auth$.GithubAuthProvider.PROVIDER_ID*/get PROVIDER_ID() {
      return dart.global.firebase_auth.GithubAuthProvider.PROVIDER_ID;
    },
    set PROVIDER_ID(value) {}
  }, false);
  auth$.GoogleAuthProvider = class GoogleAuthProvider extends auth$.AuthProvider$(dart.packageJSType("firebase_auth.GoogleAuthProvider", false)) {
    static new() {
      return new auth$.GoogleAuthProvider.fromJsObject(new dart.global.firebase_auth.GoogleAuthProvider());
    }
    static ['_#new#tearOff']() {
      return auth$.GoogleAuthProvider.new();
    }
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new auth$.GoogleAuthProvider.fromJsObject(jsObject);
    }
    addScope(scope) {
      return new auth$.GoogleAuthProvider.fromJsObject(this.jsObject.addScope(scope));
    }
    setCustomParameters(customOAuthParameters) {
      return new auth$.GoogleAuthProvider.fromJsObject(this.jsObject.setCustomParameters(utils.jsify(customOAuthParameters)));
    }
    static credential(idToken = null, accessToken = null) {
      return dart.global.firebase_auth.GoogleAuthProvider.credential(idToken, accessToken);
    }
  };
  (auth$.GoogleAuthProvider.fromJsObject = function(jsObject) {
    auth$.GoogleAuthProvider.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.GoogleAuthProvider.prototype;
  dart.addTypeTests(auth$.GoogleAuthProvider);
  dart.addTypeCaches(auth$.GoogleAuthProvider);
  dart.setMethodSignature(auth$.GoogleAuthProvider, () => ({
    __proto__: dart.getMethods(auth$.GoogleAuthProvider.__proto__),
    addScope: dart.fnType(auth$.GoogleAuthProvider, [core.String]),
    setCustomParameters: dart.fnType(auth$.GoogleAuthProvider, [core.Map$(dart.nullable(core.Object), dart.nullable(core.Object))])
  }));
  dart.setStaticMethodSignature(auth$.GoogleAuthProvider, () => ['new', 'credential']);
  dart.setLibraryUri(auth$.GoogleAuthProvider, I[47]);
  dart.setStaticFieldSignature(auth$.GoogleAuthProvider, () => ['PROVIDER_ID']);
  dart.defineLazy(auth$.GoogleAuthProvider, {
    /*auth$.GoogleAuthProvider.PROVIDER_ID*/get PROVIDER_ID() {
      return dart.global.firebase_auth.GoogleAuthProvider.PROVIDER_ID;
    },
    set PROVIDER_ID(value) {}
  }, false);
  auth$.OAuthProvider = class OAuthProvider extends auth$.AuthProvider$(dart.packageJSType("firebase_auth.OAuthProvider", false)) {
    static new(providerId) {
      return new auth$.OAuthProvider.fromJsObject(new dart.global.firebase_auth.OAuthProvider(providerId));
    }
    static ['_#new#tearOff'](providerId) {
      return auth$.OAuthProvider.new(providerId);
    }
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new auth$.OAuthProvider.fromJsObject(jsObject);
    }
    addScope(scope) {
      return new auth$.OAuthProvider.fromJsObject(this.jsObject.addScope(scope));
    }
    setCustomParameters(customOAuthParameters) {
      return new auth$.OAuthProvider.fromJsObject(this.jsObject.setCustomParameters(utils.jsify(customOAuthParameters)));
    }
    credential(credentialOptions) {
      return this.jsObject.credential(credentialOptions);
    }
    static credentialFromResult(userCredential) {
      return dart.global.firebase_auth.OAuthProvider.credentialFromResult(userCredential);
    }
  };
  (auth$.OAuthProvider.fromJsObject = function(jsObject) {
    auth$.OAuthProvider.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.OAuthProvider.prototype;
  dart.addTypeTests(auth$.OAuthProvider);
  dart.addTypeCaches(auth$.OAuthProvider);
  dart.setMethodSignature(auth$.OAuthProvider, () => ({
    __proto__: dart.getMethods(auth$.OAuthProvider.__proto__),
    addScope: dart.fnType(auth$.OAuthProvider, [core.String]),
    setCustomParameters: dart.fnType(auth$.OAuthProvider, [core.Map$(dart.nullable(core.Object), dart.nullable(core.Object))]),
    credential: dart.fnType(dart.packageJSType("OAuthCredential", false), [dart.packageJSType("OAuthCredentialOptions", false)])
  }));
  dart.setStaticMethodSignature(auth$.OAuthProvider, () => ['new', 'credentialFromResult']);
  dart.setLibraryUri(auth$.OAuthProvider, I[47]);
  auth$.TwitterAuthProvider = class TwitterAuthProvider extends auth$.AuthProvider$(dart.packageJSType("firebase_auth.TwitterAuthProvider", false)) {
    static new() {
      return new auth$.TwitterAuthProvider.fromJsObject(new dart.global.firebase_auth.TwitterAuthProvider());
    }
    static ['_#new#tearOff']() {
      return auth$.TwitterAuthProvider.new();
    }
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new auth$.TwitterAuthProvider.fromJsObject(jsObject);
    }
    setCustomParameters(customOAuthParameters) {
      return new auth$.TwitterAuthProvider.fromJsObject(this.jsObject.setCustomParameters(utils.jsify(customOAuthParameters)));
    }
    static credential(token, secret) {
      return dart.global.firebase_auth.TwitterAuthProvider.credential(token, secret);
    }
  };
  (auth$.TwitterAuthProvider.fromJsObject = function(jsObject) {
    auth$.TwitterAuthProvider.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.TwitterAuthProvider.prototype;
  dart.addTypeTests(auth$.TwitterAuthProvider);
  dart.addTypeCaches(auth$.TwitterAuthProvider);
  dart.setMethodSignature(auth$.TwitterAuthProvider, () => ({
    __proto__: dart.getMethods(auth$.TwitterAuthProvider.__proto__),
    setCustomParameters: dart.fnType(auth$.TwitterAuthProvider, [core.Map$(dart.nullable(core.Object), dart.nullable(core.Object))])
  }));
  dart.setStaticMethodSignature(auth$.TwitterAuthProvider, () => ['new', 'credential']);
  dart.setLibraryUri(auth$.TwitterAuthProvider, I[47]);
  dart.setStaticFieldSignature(auth$.TwitterAuthProvider, () => ['PROVIDER_ID']);
  dart.defineLazy(auth$.TwitterAuthProvider, {
    /*auth$.TwitterAuthProvider.PROVIDER_ID*/get PROVIDER_ID() {
      return dart.global.firebase_auth.TwitterAuthProvider.PROVIDER_ID;
    },
    set PROVIDER_ID(value) {}
  }, false);
  auth$.PhoneAuthProvider = class PhoneAuthProvider extends auth$.AuthProvider$(dart.packageJSType("firebase_auth.PhoneAuthProvider", false)) {
    static get PROVIDER_ID() {
      return dart.global.firebase_auth.PhoneAuthProvider.PROVIDER_ID;
    }
    static new(auth = null) {
      return new auth$.PhoneAuthProvider.fromJsObject(auth != null ? new dart.global.firebase_auth.PhoneAuthProvider(auth.jsObject) : new dart.global.firebase_auth.PhoneAuthProvider());
    }
    static ['_#new#tearOff'](auth = null) {
      return auth$.PhoneAuthProvider.new(auth);
    }
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new auth$.PhoneAuthProvider.fromJsObject(jsObject);
    }
    verifyPhoneNumber(phoneOptions, applicationVerifier) {
      return utils$.handleThenable(core.String, this.jsObject.verifyPhoneNumber(phoneOptions, applicationVerifier.jsObject));
    }
    static credential(verificationId, verificationCode) {
      return dart.global.firebase_auth.PhoneAuthProvider.credential(verificationId, verificationCode);
    }
  };
  (auth$.PhoneAuthProvider.fromJsObject = function(jsObject) {
    auth$.PhoneAuthProvider.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.PhoneAuthProvider.prototype;
  dart.addTypeTests(auth$.PhoneAuthProvider);
  dart.addTypeCaches(auth$.PhoneAuthProvider);
  dart.setMethodSignature(auth$.PhoneAuthProvider, () => ({
    __proto__: dart.getMethods(auth$.PhoneAuthProvider.__proto__),
    verifyPhoneNumber: dart.fnType(async.Future$(core.String), [dart.dynamic, auth$.ApplicationVerifier$(dart.packageJSType("firebase_auth.ApplicationVerifier", false))])
  }));
  dart.setStaticMethodSignature(auth$.PhoneAuthProvider, () => ['new', 'credential']);
  dart.setStaticGetterSignature(auth$.PhoneAuthProvider, () => ['PROVIDER_ID']);
  dart.setLibraryUri(auth$.PhoneAuthProvider, I[47]);
  const _is_ApplicationVerifier_default = Symbol('_is_ApplicationVerifier_default');
  auth$.ApplicationVerifier$ = dart.generic(T => {
    class ApplicationVerifier extends js$.JsObjectWrapper$(T) {
      get type() {
        return this.jsObject.type;
      }
      verify() {
        return utils$.handleThenable(core.String, this.jsObject.verify());
      }
    }
    (ApplicationVerifier.fromJsObject = function(jsObject) {
      ApplicationVerifier.__proto__.fromJsObject.call(this, jsObject);
      ;
    }).prototype = ApplicationVerifier.prototype;
    dart.addTypeTests(ApplicationVerifier);
    ApplicationVerifier.prototype[_is_ApplicationVerifier_default] = true;
    dart.addTypeCaches(ApplicationVerifier);
    dart.setMethodSignature(ApplicationVerifier, () => ({
      __proto__: dart.getMethods(ApplicationVerifier.__proto__),
      verify: dart.fnType(async.Future$(core.String), [])
    }));
    dart.setGetterSignature(ApplicationVerifier, () => ({
      __proto__: dart.getGetters(ApplicationVerifier.__proto__),
      type: core.String
    }));
    dart.setLibraryUri(ApplicationVerifier, I[47]);
    return ApplicationVerifier;
  });
  auth$.ApplicationVerifier = auth$.ApplicationVerifier$();
  dart.addTypeTests(auth$.ApplicationVerifier, _is_ApplicationVerifier_default);
  auth$.RecaptchaVerifier = class RecaptchaVerifier extends auth$.ApplicationVerifier$(dart.packageJSType("firebase_auth.RecaptchaVerifier", false)) {
    static new(container, parameters, auth) {
      return new auth$.RecaptchaVerifier.fromJsObject(new dart.global.firebase_auth.RecaptchaVerifier(container, core.Object.as(utils.jsify(parameters)), auth.jsObject));
    }
    static ['_#new#tearOff'](container, parameters, auth) {
      return auth$.RecaptchaVerifier.new(container, parameters, auth);
    }
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new auth$.RecaptchaVerifier.fromJsObject(jsObject);
    }
    clear() {
      return this.jsObject.clear();
    }
    render() {
      return utils$.handleThenable(core.num, this.jsObject.render());
    }
  };
  (auth$.RecaptchaVerifier.fromJsObject = function(jsObject) {
    auth$.RecaptchaVerifier.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.RecaptchaVerifier.prototype;
  dart.addTypeTests(auth$.RecaptchaVerifier);
  dart.addTypeCaches(auth$.RecaptchaVerifier);
  dart.setMethodSignature(auth$.RecaptchaVerifier, () => ({
    __proto__: dart.getMethods(auth$.RecaptchaVerifier.__proto__),
    clear: dart.fnType(dart.void, []),
    render: dart.fnType(async.Future$(core.num), [])
  }));
  dart.setStaticMethodSignature(auth$.RecaptchaVerifier, () => ['new']);
  dart.setLibraryUri(auth$.RecaptchaVerifier, I[47]);
  auth$.ConfirmationResult = class ConfirmationResult extends js$.JsObjectWrapper$(dart.packageJSType("firebase_auth.ConfirmationResult", false)) {
    get verificationId() {
      return this.jsObject.verificationId;
    }
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new auth$.ConfirmationResult.fromJsObject(jsObject);
    }
    confirm(verificationCode) {
      return utils$.handleThenable(dart.packageJSType("UserCredentialJsImpl", false), this.jsObject.confirm(verificationCode)).then(auth$.UserCredential, C[45] || CT.C45);
    }
  };
  (auth$.ConfirmationResult.fromJsObject = function(jsObject) {
    auth$.ConfirmationResult.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.ConfirmationResult.prototype;
  dart.addTypeTests(auth$.ConfirmationResult);
  dart.addTypeCaches(auth$.ConfirmationResult);
  dart.setMethodSignature(auth$.ConfirmationResult, () => ({
    __proto__: dart.getMethods(auth$.ConfirmationResult.__proto__),
    confirm: dart.fnType(async.Future$(auth$.UserCredential), [core.String])
  }));
  dart.setGetterSignature(auth$.ConfirmationResult, () => ({
    __proto__: dart.getGetters(auth$.ConfirmationResult.__proto__),
    verificationId: core.String
  }));
  dart.setLibraryUri(auth$.ConfirmationResult, I[47]);
  auth$.UserCredential = class UserCredential extends js$.JsObjectWrapper$(dart.packageJSType("UserCredentialJsImpl", false)) {
    get user() {
      return auth$.User.getInstance(this.jsObject.user);
    }
    get operationType() {
      return this.jsObject.operationType;
    }
    get additionalUserInfo() {
      return new auth$.AdditionalUserInfo.fromJsObject(dart.global.firebase_auth.getAdditionalUserInfo(this.jsObject));
    }
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new auth$.UserCredential.fromJsObject(jsObject);
    }
  };
  (auth$.UserCredential.fromJsObject = function(jsObject) {
    auth$.UserCredential.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.UserCredential.prototype;
  dart.addTypeTests(auth$.UserCredential);
  dart.addTypeCaches(auth$.UserCredential);
  dart.setGetterSignature(auth$.UserCredential, () => ({
    __proto__: dart.getGetters(auth$.UserCredential.__proto__),
    user: dart.nullable(auth$.User),
    operationType: core.String,
    additionalUserInfo: dart.nullable(auth$.AdditionalUserInfo)
  }));
  dart.setLibraryUri(auth$.UserCredential, I[47]);
  auth$.AdditionalUserInfo = class AdditionalUserInfo extends js$.JsObjectWrapper$(dart.packageJSType("AdditionalUserInfoJsImpl", false)) {
    get providerId() {
      return this.jsObject.providerId;
    }
    get profile() {
      return T$.MapNOfString$dynamic().as(utils.dartify(this.jsObject.profile));
    }
    get username() {
      return this.jsObject.username;
    }
    get isNewUser() {
      return this.jsObject.isNewUser;
    }
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new auth$.AdditionalUserInfo.fromJsObject(jsObject);
    }
  };
  (auth$.AdditionalUserInfo.fromJsObject = function(jsObject) {
    auth$.AdditionalUserInfo.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.AdditionalUserInfo.prototype;
  dart.addTypeTests(auth$.AdditionalUserInfo);
  dart.addTypeCaches(auth$.AdditionalUserInfo);
  dart.setGetterSignature(auth$.AdditionalUserInfo, () => ({
    __proto__: dart.getGetters(auth$.AdditionalUserInfo.__proto__),
    providerId: core.String,
    profile: dart.nullable(core.Map$(core.String, dart.dynamic)),
    username: core.String,
    isNewUser: core.bool
  }));
  dart.setLibraryUri(auth$.AdditionalUserInfo, I[47]);
  auth$.getAuthInstance = function getAuthInstance(app, opts) {
    let persistence = opts && 'persistence' in opts ? opts.persistence : null;
    if (persistence != null) {
      let setPersistence = null;
      switch (persistence) {
        case C[50] || CT.C50:
          {
            setPersistence = dart.global.firebase_auth.browserLocalPersistence;
            break;
          }
        case C[51] || CT.C51:
          {
            setPersistence = dart.global.firebase_auth.indexedDBLocalPersistence;
            break;
          }
        case C[52] || CT.C52:
          {
            setPersistence = dart.global.firebase_auth.browserSessionPersistence;
            break;
          }
        case C[53] || CT.C53:
          {
            setPersistence = dart.global.firebase_auth.inMemoryPersistence;
            break;
          }
      }
      return auth$.Auth.getInstance(dart.global.firebase_auth.initializeAuth(app.jsObject, utils.jsify(new (T$.IdentityMapOfString$dynamic()).from(["errorMap", dart.global.firebase_auth.debugErrorMap, "persistence", setPersistence, "popupRedirectResolver", dart.global.firebase_auth.browserPopupRedirectResolver]))));
    }
    return auth$.Auth.getInstance(dart.global.firebase_auth.initializeAuth(app.jsObject, utils.jsify(new (T$.IdentityMapOfString$dynamic()).from(["errorMap", dart.global.firebase_auth.debugErrorMap, "persistence", T$.JSArrayOfPersistence().of([dart.global.firebase_auth.indexedDBLocalPersistence, dart.global.firebase_auth.browserLocalPersistence, dart.global.firebase_auth.browserSessionPersistence]), "popupRedirectResolver", dart.global.firebase_auth.browserPopupRedirectResolver]))));
  };
  multi_factor.MultiFactorUser = class MultiFactorUser extends js$.JsObjectWrapper$(dart.packageJSType("MultiFactorUserJsImpl", false)) {
    static getInstance(jsObject) {
      let t82, t81, t80, t79;
      t79 = multi_factor.MultiFactorUser._expando;
      t80 = jsObject;
      t81 = t79._get(t80);
      return t81 == null ? (t82 = new multi_factor.MultiFactorUser._fromJsObject(jsObject), t79._set(t80, t82), t82) : t81;
    }
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new multi_factor.MultiFactorUser._fromJsObject(jsObject);
    }
    get enrolledFactors() {
      return this.jsObject.enrolledFactors[S$.$map](T$.MultiFactorInfoOfMultiFactorInfoJsImpl(), C[54] || CT.C54)[S$.$toList]();
    }
    get session() {
      return utils$.handleThenable(dart.packageJSType("MultiFactorSessionJsImpl", false), this.jsObject.getSession()).then(multi_factor.MultiFactorSession, C[56] || CT.C56);
    }
    enroll(assertion, displayName) {
      return utils$.handleThenable(dart.void, this.jsObject.enroll(assertion.jsObject, displayName));
    }
    unenroll(multiFactorInfoId) {
      return utils$.handleThenable(dart.void, this.jsObject.unenroll(multiFactorInfoId));
    }
  };
  (multi_factor.MultiFactorUser._fromJsObject = function(jsObject) {
    multi_factor.MultiFactorUser.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = multi_factor.MultiFactorUser.prototype;
  dart.addTypeTests(multi_factor.MultiFactorUser);
  dart.addTypeCaches(multi_factor.MultiFactorUser);
  dart.setMethodSignature(multi_factor.MultiFactorUser, () => ({
    __proto__: dart.getMethods(multi_factor.MultiFactorUser.__proto__),
    enroll: dart.fnType(async.Future$(dart.void), [multi_factor.MultiFactorAssertion$(dart.packageJSType("MultiFactorAssertionJsImpl", false)), dart.nullable(core.String)]),
    unenroll: dart.fnType(async.Future$(dart.void), [core.String])
  }));
  dart.setStaticMethodSignature(multi_factor.MultiFactorUser, () => ['getInstance']);
  dart.setGetterSignature(multi_factor.MultiFactorUser, () => ({
    __proto__: dart.getGetters(multi_factor.MultiFactorUser.__proto__),
    enrolledFactors: core.List$(multi_factor.MultiFactorInfo$(dart.packageJSType("MultiFactorInfoJsImpl", false))),
    session: async.Future$(multi_factor.MultiFactorSession)
  }));
  dart.setLibraryUri(multi_factor.MultiFactorUser, I[49]);
  dart.setStaticFieldSignature(multi_factor.MultiFactorUser, () => ['_expando']);
  dart.defineLazy(multi_factor.MultiFactorUser, {
    /*multi_factor.MultiFactorUser._expando*/get _expando() {
      return new (T$.ExpandoOfMultiFactorUser()).new();
    }
  }, false);
  const _is_MultiFactorInfo_default = Symbol('_is_MultiFactorInfo_default');
  multi_factor.MultiFactorInfo$ = dart.generic(T => {
    class MultiFactorInfo extends js$.JsObjectWrapper$(T) {
      static ['_#fromJsObject#tearOff'](T, jsObject) {
        return new (multi_factor.MultiFactorInfo$(T)).fromJsObject(jsObject);
      }
      get displayName() {
        return this.jsObject.displayName;
      }
      get enrollmentTime() {
        return this.jsObject.enrollmentTime;
      }
      get factorId() {
        return this.jsObject.factorId;
      }
      get uid() {
        return this.jsObject.uid;
      }
    }
    (MultiFactorInfo.fromJsObject = function(jsObject) {
      MultiFactorInfo.__proto__.fromJsObject.call(this, jsObject);
      ;
    }).prototype = MultiFactorInfo.prototype;
    dart.addTypeTests(MultiFactorInfo);
    MultiFactorInfo.prototype[_is_MultiFactorInfo_default] = true;
    dart.addTypeCaches(MultiFactorInfo);
    dart.setGetterSignature(MultiFactorInfo, () => ({
      __proto__: dart.getGetters(MultiFactorInfo.__proto__),
      displayName: dart.nullable(core.String),
      enrollmentTime: core.String,
      factorId: core.String,
      uid: core.String
    }));
    dart.setLibraryUri(MultiFactorInfo, I[49]);
    return MultiFactorInfo;
  });
  multi_factor.MultiFactorInfo = multi_factor.MultiFactorInfo$();
  dart.addTypeTests(multi_factor.MultiFactorInfo, _is_MultiFactorInfo_default);
  multi_factor.PhoneMultiFactorInfo = class PhoneMultiFactorInfo extends multi_factor.MultiFactorInfo$(dart.packageJSType("PhoneMultiFactorInfoJsImpl", false)) {
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new multi_factor.PhoneMultiFactorInfo.fromJsObject(jsObject);
    }
    get phoneNumber() {
      return this.jsObject.phoneNumber;
    }
  };
  (multi_factor.PhoneMultiFactorInfo.fromJsObject = function(jsObject) {
    multi_factor.PhoneMultiFactorInfo.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = multi_factor.PhoneMultiFactorInfo.prototype;
  dart.addTypeTests(multi_factor.PhoneMultiFactorInfo);
  dart.addTypeCaches(multi_factor.PhoneMultiFactorInfo);
  dart.setGetterSignature(multi_factor.PhoneMultiFactorInfo, () => ({
    __proto__: dart.getGetters(multi_factor.PhoneMultiFactorInfo.__proto__),
    phoneNumber: core.String
  }));
  dart.setLibraryUri(multi_factor.PhoneMultiFactorInfo, I[49]);
  multi_factor.MultiFactorSession = class MultiFactorSession extends js$.JsObjectWrapper$(dart.packageJSType("MultiFactorSessionJsImpl", false)) {
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new multi_factor.MultiFactorSession.fromJsObject(jsObject);
    }
  };
  (multi_factor.MultiFactorSession.fromJsObject = function(jsObject) {
    multi_factor.MultiFactorSession.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = multi_factor.MultiFactorSession.prototype;
  dart.addTypeTests(multi_factor.MultiFactorSession);
  dart.addTypeCaches(multi_factor.MultiFactorSession);
  dart.setLibraryUri(multi_factor.MultiFactorSession, I[49]);
  const _is_MultiFactorAssertion_default = Symbol('_is_MultiFactorAssertion_default');
  multi_factor.MultiFactorAssertion$ = dart.generic(T => {
    class MultiFactorAssertion extends js$.JsObjectWrapper$(T) {
      static ['_#fromJsObject#tearOff'](T, jsObject) {
        return new (multi_factor.MultiFactorAssertion$(T)).fromJsObject(jsObject);
      }
      get factorId() {
        return this.jsObject.factorId;
      }
    }
    (MultiFactorAssertion.fromJsObject = function(jsObject) {
      MultiFactorAssertion.__proto__.fromJsObject.call(this, jsObject);
      ;
    }).prototype = MultiFactorAssertion.prototype;
    dart.addTypeTests(MultiFactorAssertion);
    MultiFactorAssertion.prototype[_is_MultiFactorAssertion_default] = true;
    dart.addTypeCaches(MultiFactorAssertion);
    dart.setGetterSignature(MultiFactorAssertion, () => ({
      __proto__: dart.getGetters(MultiFactorAssertion.__proto__),
      factorId: core.String
    }));
    dart.setLibraryUri(MultiFactorAssertion, I[49]);
    return MultiFactorAssertion;
  });
  multi_factor.MultiFactorAssertion = multi_factor.MultiFactorAssertion$();
  dart.addTypeTests(multi_factor.MultiFactorAssertion, _is_MultiFactorAssertion_default);
  multi_factor.PhoneMultiFactorAssertion = class PhoneMultiFactorAssertion extends multi_factor.MultiFactorAssertion$(dart.packageJSType("PhoneMultiFactorAssertionJsImpl", false)) {
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new multi_factor.PhoneMultiFactorAssertion.fromJsObject(jsObject);
    }
  };
  (multi_factor.PhoneMultiFactorAssertion.fromJsObject = function(jsObject) {
    multi_factor.PhoneMultiFactorAssertion.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = multi_factor.PhoneMultiFactorAssertion.prototype;
  dart.addTypeTests(multi_factor.PhoneMultiFactorAssertion);
  dart.addTypeCaches(multi_factor.PhoneMultiFactorAssertion);
  dart.setLibraryUri(multi_factor.PhoneMultiFactorAssertion, I[49]);
  multi_factor.MultiFactorResolver = class MultiFactorResolver extends js$.JsObjectWrapper$(dart.packageJSType("MultiFactorResolverJsImpl", false)) {
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new multi_factor.MultiFactorResolver.fromJsObject(jsObject);
    }
    get hints() {
      return this.jsObject.hints[S$.$map](T$.MultiFactorInfoOfMultiFactorInfoJsImpl(), dart.fn(e => {
        if (dart.packageJSType("PhoneMultiFactorInfoJsImpl", false).is(e)) {
          return new multi_factor.PhoneMultiFactorInfo.fromJsObject(e);
        } else {
          return new (T$.MultiFactorInfoOfMultiFactorInfoJsImpl()).fromJsObject(e);
        }
      }, T$.MultiFactorInfoJsImplToMultiFactorInfoOfMultiFactorInfoJsImpl()))[S$.$toList]();
    }
    get session() {
      return new multi_factor.MultiFactorSession.fromJsObject(this.jsObject.session);
    }
    resolveSignIn(assertion) {
      return utils$.handleThenable(dart.packageJSType("UserCredentialJsImpl", false), this.jsObject.resolveSignIn(assertion.jsObject)).then(auth$.UserCredential, C[45] || CT.C45);
    }
  };
  (multi_factor.MultiFactorResolver.fromJsObject = function(jsObject) {
    multi_factor.MultiFactorResolver.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = multi_factor.MultiFactorResolver.prototype;
  dart.addTypeTests(multi_factor.MultiFactorResolver);
  dart.addTypeCaches(multi_factor.MultiFactorResolver);
  dart.setMethodSignature(multi_factor.MultiFactorResolver, () => ({
    __proto__: dart.getMethods(multi_factor.MultiFactorResolver.__proto__),
    resolveSignIn: dart.fnType(async.Future$(auth$.UserCredential), [multi_factor.MultiFactorAssertion$(dart.packageJSType("MultiFactorAssertionJsImpl", false))])
  }));
  dart.setGetterSignature(multi_factor.MultiFactorResolver, () => ({
    __proto__: dart.getGetters(multi_factor.MultiFactorResolver.__proto__),
    hints: core.List$(multi_factor.MultiFactorInfo$(dart.packageJSType("MultiFactorInfoJsImpl", false))),
    session: multi_factor.MultiFactorSession
  }));
  dart.setLibraryUri(multi_factor.MultiFactorResolver, I[49]);
  multi_factor.PhoneMultiFactorGenerator = class PhoneMultiFactorGenerator extends js$.JsObjectWrapper$(dart.packageJSType("firebase_auth.PhoneMultiFactorGenerator", false)) {
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new multi_factor.PhoneMultiFactorGenerator.fromJsObject(jsObject);
    }
    static assertion(credential) {
      return new multi_factor.PhoneMultiFactorAssertion.fromJsObject(dart.nullCheck(dart.global.firebase_auth.PhoneMultiFactorGenerator.assertion(credential)));
    }
  };
  (multi_factor.PhoneMultiFactorGenerator.fromJsObject = function(jsObject) {
    multi_factor.PhoneMultiFactorGenerator.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = multi_factor.PhoneMultiFactorGenerator.prototype;
  dart.addTypeTests(multi_factor.PhoneMultiFactorGenerator);
  dart.addTypeCaches(multi_factor.PhoneMultiFactorGenerator);
  dart.setStaticMethodSignature(multi_factor.PhoneMultiFactorGenerator, () => ['assertion']);
  dart.setLibraryUri(multi_factor.PhoneMultiFactorGenerator, I[49]);
  multi_factor.multiFactor = function multiFactor(user) {
    return multi_factor.MultiFactorUser.getInstance(dart.global.firebase_auth.multiFactor(user.jsObject));
  };
  multi_factor.getMultiFactorResolver = function getMultiFactorResolver(auth, error) {
    return new multi_factor.MultiFactorResolver.fromJsObject(dart.global.firebase_auth.getMultiFactorResolver(auth.jsObject, error));
  };
  core$.initializeApp = function initializeApp(opts) {
    let apiKey = opts && 'apiKey' in opts ? opts.apiKey : null;
    let authDomain = opts && 'authDomain' in opts ? opts.authDomain : null;
    let databaseURL = opts && 'databaseURL' in opts ? opts.databaseURL : null;
    let projectId = opts && 'projectId' in opts ? opts.projectId : null;
    let storageBucket = opts && 'storageBucket' in opts ? opts.storageBucket : null;
    let messagingSenderId = opts && 'messagingSenderId' in opts ? opts.messagingSenderId : null;
    let name = opts && 'name' in opts ? opts.name : null;
    let measurementId = opts && 'measurementId' in opts ? opts.measurementId : null;
    let appId = opts && 'appId' in opts ? opts.appId : null;
    name == null ? name = "[DEFAULT]" : null;
    return app$.App.getInstance(dart.global.firebase_core.initializeApp({apiKey: apiKey, authDomain: authDomain, databaseURL: databaseURL, projectId: projectId, storageBucket: storageBucket, messagingSenderId: messagingSenderId, measurementId: measurementId, appId: appId}, name));
  };
  core$.app = function app$0(name = null) {
    return app$.App.getInstance(name != null ? dart.global.firebase_core.getApp(name) : dart.global.firebase_core.getApp());
  };
  dart.copyProperties(core$, {
    get apps() {
      return dart.global.firebase_core.getApps()[S$.$map](app$.App, dart.fn(e => app$.App.getInstance(dart.packageJSType("firebase_core.FirebaseApp", false).as(e)), T$.dynamicToApp()))[S$.$toList]();
    }
  });
  platform_interface_firebase_storage.FirebaseStoragePlatform = class FirebaseStoragePlatform extends plugin_platform_interface.PlatformInterface {
    get appInstance() {
      return this[S$.appInstance$2];
    }
    set appInstance(value) {
      super.appInstance = value;
    }
    get bucket() {
      return this[S$.bucket];
    }
    set bucket(value) {
      super.bucket = value;
    }
    get emulatorHost() {
      return this[S$.emulatorHost];
    }
    set emulatorHost(value) {
      this[S$.emulatorHost] = value;
    }
    get emulatorPort() {
      return this[S$.emulatorPort];
    }
    set emulatorPort(value) {
      this[S$.emulatorPort] = value;
    }
    static instanceFor(opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      let bucket = opts && 'bucket' in opts ? opts.bucket : null;
      return platform_interface_firebase_storage.FirebaseStoragePlatform.instance.delegateFor({app: app, bucket: bucket});
    }
    static ['_#instanceFor#tearOff'](opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      let bucket = opts && 'bucket' in opts ? opts.bucket : null;
      return platform_interface_firebase_storage.FirebaseStoragePlatform.instanceFor({app: app, bucket: bucket});
    }
    get app() {
      if (this.appInstance == null) {
        return firebase_core.Firebase.app();
      }
      return dart.nullCheck(this.appInstance);
    }
    static get instance() {
      let t79;
      t79 = platform_interface_firebase_storage.FirebaseStoragePlatform._instance;
      return t79 == null ? platform_interface_firebase_storage.FirebaseStoragePlatform._instance = method_channel_firebase_storage.MethodChannelFirebaseStorage.instance : t79;
    }
    static set instance(instance) {
      plugin_platform_interface.PlatformInterface.verifyToken(instance, platform_interface_firebase_storage.FirebaseStoragePlatform._token);
      platform_interface_firebase_storage.FirebaseStoragePlatform._instance = instance;
    }
    get maxOperationRetryTime() {
      dart.throw(new core.UnimplementedError.new("get.maxOperationRetryTime is not implemented"));
    }
    get maxUploadRetryTime() {
      dart.throw(new core.UnimplementedError.new("get.maxUploadRetryTime is not implemented"));
    }
    get maxDownloadRetryTime() {
      dart.throw(new core.UnimplementedError.new("get.maxDownloadRetryTime is not implemented"));
    }
    delegateFor(opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      let bucket = opts && 'bucket' in opts ? opts.bucket : null;
      dart.throw(new core.UnimplementedError.new("delegateFor() is not implemented"));
    }
    ref(path) {
      dart.throw(new core.UnimplementedError.new("ref() is not implemented"));
    }
    useStorageEmulator(host, port) {
      dart.throw(new core.UnimplementedError.new("useStorageEmulator() is not implemented"));
    }
    setMaxOperationRetryTime(time) {
      dart.throw(new core.UnimplementedError.new("setMaxOperationRetryTime() is not implemented"));
    }
    setMaxUploadRetryTime(time) {
      dart.throw(new core.UnimplementedError.new("setMaxUploadRetryTime() is not implemented"));
    }
    setMaxDownloadRetryTime(time) {
      dart.throw(new core.UnimplementedError.new("setMaxDownloadRetryTime() is not implemented"));
    }
  };
  (platform_interface_firebase_storage.FirebaseStoragePlatform.new = function(opts) {
    let appInstance = opts && 'appInstance' in opts ? opts.appInstance : null;
    let bucket = opts && 'bucket' in opts ? opts.bucket : null;
    this[S$.emulatorHost] = null;
    this[S$.emulatorPort] = null;
    this[S$.appInstance$2] = appInstance;
    this[S$.bucket] = bucket;
    platform_interface_firebase_storage.FirebaseStoragePlatform.__proto__.new.call(this, {token: platform_interface_firebase_storage.FirebaseStoragePlatform._token});
    ;
  }).prototype = platform_interface_firebase_storage.FirebaseStoragePlatform.prototype;
  dart.addTypeTests(platform_interface_firebase_storage.FirebaseStoragePlatform);
  dart.addTypeCaches(platform_interface_firebase_storage.FirebaseStoragePlatform);
  dart.setMethodSignature(platform_interface_firebase_storage.FirebaseStoragePlatform, () => ({
    __proto__: dart.getMethods(platform_interface_firebase_storage.FirebaseStoragePlatform.__proto__),
    delegateFor: dart.fnType(platform_interface_firebase_storage.FirebaseStoragePlatform, [], {}, {app: firebase_core.FirebaseApp, bucket: core.String}),
    ref: dart.fnType(platform_interface_reference.ReferencePlatform, [core.String]),
    useStorageEmulator: dart.fnType(async.Future$(dart.void), [core.String, core.int]),
    setMaxOperationRetryTime: dart.fnType(dart.void, [core.int]),
    setMaxUploadRetryTime: dart.fnType(dart.void, [core.int]),
    setMaxDownloadRetryTime: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(platform_interface_firebase_storage.FirebaseStoragePlatform, () => ['instanceFor']);
  dart.setGetterSignature(platform_interface_firebase_storage.FirebaseStoragePlatform, () => ({
    __proto__: dart.getGetters(platform_interface_firebase_storage.FirebaseStoragePlatform.__proto__),
    app: firebase_core.FirebaseApp,
    maxOperationRetryTime: core.int,
    maxUploadRetryTime: core.int,
    maxDownloadRetryTime: core.int
  }));
  dart.setStaticGetterSignature(platform_interface_firebase_storage.FirebaseStoragePlatform, () => ['instance']);
  dart.setStaticSetterSignature(platform_interface_firebase_storage.FirebaseStoragePlatform, () => ['instance']);
  dart.setLibraryUri(platform_interface_firebase_storage.FirebaseStoragePlatform, I[50]);
  dart.setFieldSignature(platform_interface_firebase_storage.FirebaseStoragePlatform, () => ({
    __proto__: dart.getFields(platform_interface_firebase_storage.FirebaseStoragePlatform.__proto__),
    appInstance: dart.finalFieldType(dart.nullable(firebase_core.FirebaseApp)),
    bucket: dart.finalFieldType(core.String),
    emulatorHost: dart.fieldType(dart.nullable(core.String)),
    emulatorPort: dart.fieldType(dart.nullable(core.int))
  }));
  dart.setStaticFieldSignature(platform_interface_firebase_storage.FirebaseStoragePlatform, () => ['_token', '_instance']);
  dart.defineLazy(platform_interface_firebase_storage.FirebaseStoragePlatform, {
    /*platform_interface_firebase_storage.FirebaseStoragePlatform._token*/get _token() {
      return new core.Object.new();
    },
    /*platform_interface_firebase_storage.FirebaseStoragePlatform._instance*/get _instance() {
      return null;
    },
    set _instance(value) {}
  }, false);
  firebase_storage_web$.FirebaseStorageWeb = class FirebaseStorageWeb extends platform_interface_firebase_storage.FirebaseStoragePlatform {
    static ['_#new#tearOff'](opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      let bucket = opts && 'bucket' in opts ? opts.bucket : null;
      return new firebase_storage_web$.FirebaseStorageWeb.new({app: app, bucket: bucket});
    }
    static ['_#_nullInstance#tearOff']() {
      return new firebase_storage_web$.FirebaseStorageWeb._nullInstance();
    }
    static ['_#forMock#tearOff'](_webStorage, opts) {
      let bucket = opts && 'bucket' in opts ? opts.bucket : null;
      let app = opts && 'app' in opts ? opts.app : null;
      return new firebase_storage_web$.FirebaseStorageWeb.forMock(_webStorage, {bucket: bucket, app: app});
    }
    get delegate() {
      let t79;
      t79 = this[S$._webStorage];
      return t79 == null ? this[S$._webStorage] = storage.getStorageInstance(core$.app(this.app.name), this[S$._bucket]) : t79;
    }
    static registerWith(registrar) {
      firebase_core_web.FirebaseCoreWeb.registerService("storage");
      platform_interface_firebase_storage.FirebaseStoragePlatform.instance = new firebase_storage_web$.FirebaseStorageWeb._nullInstance();
    }
    delegateFor(opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      let bucket = opts && 'bucket' in opts ? opts.bucket : null;
      return new firebase_storage_web$.FirebaseStorageWeb.new({app: app, bucket: bucket});
    }
    get maxOperationRetryTime() {
      return this[S$._maxOperationRetryTime];
    }
    get maxUploadRetryTime() {
      return this.delegate.maxUploadRetryTime;
    }
    get maxDownloadRetryTime() {
      return this[S$._maxDownloadRetryTime];
    }
    ref(path, opts) {
      let refBuilder = opts && 'refBuilder' in opts ? opts.refBuilder : null;
      return errors.guard(platform_interface_reference.ReferencePlatform, dart.fn(() => {
        let t79;
        let refBuilderFunction = (t79 = refBuilder, t79 == null ? dart.bind(this, S$._createReference) : t79);
        let ref = refBuilderFunction(this, path);
        return ref;
      }, T$.VoidToReferencePlatform()));
    }
    [S$._createReference](storage, path) {
      return new reference_web.ReferenceWeb.new(storage, path);
    }
    setMaxOperationRetryTime(time) {
      this[S$._maxOperationRetryTime] = time;
      this.delegate.maxOperationRetryTime = time;
    }
    setMaxUploadRetryTime(time) {
      this.delegate.maxUploadRetryTime = time;
    }
    setMaxDownloadRetryTime(time) {
      this[S$._maxDownloadRetryTime] = time;
    }
    useStorageEmulator(host, port) {
      return async.async(dart.void, (function* useStorageEmulator() {
        errors.guard(dart.void, dart.fn(() => this.delegate.useStorageEmulator(host, port), T$.VoidTovoid()));
      }).bind(this));
    }
  };
  (firebase_storage_web$.FirebaseStorageWeb.new = function(opts) {
    let app = opts && 'app' in opts ? opts.app : null;
    let bucket = opts && 'bucket' in opts ? opts.bucket : null;
    this[S$._maxDownloadRetryTime] = (C[57] || CT.C57).inMilliseconds;
    this[S$._maxOperationRetryTime] = (C[58] || CT.C58).inMilliseconds;
    this[S$._webStorage] = null;
    this[S$._bucket] = bucket;
    firebase_storage_web$.FirebaseStorageWeb.__proto__.new.call(this, {appInstance: app, bucket: bucket});
    ;
  }).prototype = firebase_storage_web$.FirebaseStorageWeb.prototype;
  (firebase_storage_web$.FirebaseStorageWeb._nullInstance = function() {
    this[S$._maxDownloadRetryTime] = (C[57] || CT.C57).inMilliseconds;
    this[S$._maxOperationRetryTime] = (C[58] || CT.C58).inMilliseconds;
    this[S$._bucket] = null;
    this[S$._webStorage] = null;
    firebase_storage_web$.FirebaseStorageWeb.__proto__.new.call(this, {bucket: ""});
    ;
  }).prototype = firebase_storage_web$.FirebaseStorageWeb.prototype;
  (firebase_storage_web$.FirebaseStorageWeb.forMock = function(_webStorage, opts) {
    let bucket = opts && 'bucket' in opts ? opts.bucket : null;
    let app = opts && 'app' in opts ? opts.app : null;
    this[S$._maxDownloadRetryTime] = (C[57] || CT.C57).inMilliseconds;
    this[S$._maxOperationRetryTime] = (C[58] || CT.C58).inMilliseconds;
    this[S$._bucket] = null;
    this[S$._webStorage] = _webStorage;
    firebase_storage_web$.FirebaseStorageWeb.__proto__.new.call(this, {appInstance: app, bucket: bucket});
    ;
  }).prototype = firebase_storage_web$.FirebaseStorageWeb.prototype;
  dart.addTypeTests(firebase_storage_web$.FirebaseStorageWeb);
  dart.addTypeCaches(firebase_storage_web$.FirebaseStorageWeb);
  dart.setMethodSignature(firebase_storage_web$.FirebaseStorageWeb, () => ({
    __proto__: dart.getMethods(firebase_storage_web$.FirebaseStorageWeb.__proto__),
    delegateFor: dart.fnType(platform_interface_firebase_storage.FirebaseStoragePlatform, [], {app: dart.nullable(firebase_core.FirebaseApp)}, {bucket: core.String}),
    ref: dart.fnType(platform_interface_reference.ReferencePlatform, [core.String], {refBuilder: dart.nullable(dart.fnType(platform_interface_reference.ReferencePlatform, [firebase_storage_web$.FirebaseStorageWeb, core.String]))}, {}),
    [S$._createReference]: dart.fnType(platform_interface_reference.ReferencePlatform, [firebase_storage_web$.FirebaseStorageWeb, core.String])
  }));
  dart.setStaticMethodSignature(firebase_storage_web$.FirebaseStorageWeb, () => ['registerWith']);
  dart.setGetterSignature(firebase_storage_web$.FirebaseStorageWeb, () => ({
    __proto__: dart.getGetters(firebase_storage_web$.FirebaseStorageWeb.__proto__),
    delegate: storage.Storage
  }));
  dart.setLibraryUri(firebase_storage_web$.FirebaseStorageWeb, I[51]);
  dart.setFieldSignature(firebase_storage_web$.FirebaseStorageWeb, () => ({
    __proto__: dart.getFields(firebase_storage_web$.FirebaseStorageWeb.__proto__),
    [S$._webStorage]: dart.fieldType(dart.nullable(storage.Storage)),
    [S$._bucket]: dart.fieldType(dart.nullable(core.String)),
    [S$._maxDownloadRetryTime]: dart.fieldType(core.int),
    [S$._maxOperationRetryTime]: dart.fieldType(core.int)
  }));
  pointer.Pointer = class Pointer extends core.Object {
    get components() {
      return this[S$.components];
    }
    set components(value) {
      super.components = value;
    }
    static ['_#new#tearOff'](path) {
      return new pointer.Pointer.new(path);
    }
    get path() {
      return this.components[S$.$join]("/");
    }
    get id() {
      return this.components[S$.$last];
    }
    isCollection() {
      return this.components[S$.$length][S$.$isOdd];
    }
    isDocument() {
      return this.components[S$.$length][S$.$isEven];
    }
    collectionPath(collectionPath) {
      if (!this.isDocument()) dart.assertFailed(null, I[52], 56, 12, "isDocument()");
      return this.path + "/" + collectionPath;
    }
    documentPath(documentPath) {
      if (!this.isCollection()) dart.assertFailed(null, I[52], 62, 12, "isCollection()");
      return this.path + "/" + documentPath;
    }
    parentPath() {
      let t79;
      if (this.components[S$.$length] < 2) {
        return null;
      }
      let parentComponents = (t79 = T$.ListOfString().from(this.components), (() => {
        t79[S$.$removeLast]();
        return t79;
      })());
      return parentComponents[S$.$join]("/");
    }
    _equals(other) {
      if (other == null) return false;
      return pointer.Pointer.is(other) && other.path === this.path;
    }
    get hashCode() {
      return this.path[S$.$hashCode];
    }
  };
  (pointer.Pointer.new = function(path) {
    this[S$.components] = path[S$.$split]("/")[S$.$where](dart.fn(element => element[S$.$isNotEmpty], T$.StringTobool()))[S$.$toList]();
    ;
  }).prototype = pointer.Pointer.prototype;
  dart.addTypeTests(pointer.Pointer);
  dart.addTypeCaches(pointer.Pointer);
  dart.setMethodSignature(pointer.Pointer, () => ({
    __proto__: dart.getMethods(pointer.Pointer.__proto__),
    isCollection: dart.fnType(core.bool, []),
    isDocument: dart.fnType(core.bool, []),
    collectionPath: dart.fnType(core.String, [core.String]),
    documentPath: dart.fnType(core.String, [core.String]),
    parentPath: dart.fnType(dart.nullable(core.String), [])
  }));
  dart.setGetterSignature(pointer.Pointer, () => ({
    __proto__: dart.getGetters(pointer.Pointer.__proto__),
    path: core.String,
    id: core.String
  }));
  dart.setLibraryUri(pointer.Pointer, I[53]);
  dart.setFieldSignature(pointer.Pointer, () => ({
    __proto__: dart.getFields(pointer.Pointer.__proto__),
    components: dart.finalFieldType(core.List$(core.String))
  }));
  dart.defineExtensionMethods(pointer.Pointer, ['_equals']);
  dart.defineExtensionAccessors(pointer.Pointer, ['hashCode']);
  blob.Blob = class Blob extends core.Object {
    get bytes() {
      return this[S$.bytes];
    }
    set bytes(value) {
      super.bytes = value;
    }
    static ['_#new#tearOff'](bytes) {
      return new blob.Blob.new(bytes);
    }
    _equals(other) {
      if (other == null) return false;
      return blob.Blob.is(other) && (C[36] || CT.C36).equals(other.bytes, this.bytes);
    }
    get hashCode() {
      return core.Object.hashAll(this.bytes);
    }
  };
  (blob.Blob.new = function(bytes) {
    this[S$.bytes] = bytes;
    ;
  }).prototype = blob.Blob.prototype;
  dart.addTypeTests(blob.Blob);
  dart.addTypeCaches(blob.Blob);
  dart.setLibraryUri(blob.Blob, I[54]);
  dart.setFieldSignature(blob.Blob, () => ({
    __proto__: dart.getFields(blob.Blob.__proto__),
    bytes: dart.finalFieldType(typed_data.Uint8List)
  }));
  dart.defineExtensionMethods(blob.Blob, ['_equals']);
  dart.defineExtensionAccessors(blob.Blob, ['hashCode']);
  field_path.FieldPath = class FieldPath extends core.Object {
    get components() {
      return this[S$.components$1];
    }
    set components(value) {
      super.components = value;
    }
    static ['_#new#tearOff'](components) {
      return new field_path.FieldPath.new(components);
    }
    static get documentId() {
      return field_path_type.FieldPathType.documentId;
    }
    static ['_#fromString#tearOff'](path) {
      return new field_path.FieldPath.fromString(path);
    }
    _equals(other) {
      if (other == null) return false;
      return field_path.FieldPath.is(other) && (C[23] || CT.C23).equals(other.components, this.components);
    }
    get hashCode() {
      return core.Object.hashAll(this.components);
    }
    toString() {
      return "FieldPath(" + dart.str(this.components) + ")";
    }
  };
  (field_path.FieldPath.new = function(components) {
    this[S$.components$1] = components;
    if (!components[S$.$isNotEmpty]) dart.assertFailed(null, I[55], 24, 16, "components.isNotEmpty");
    if (!components[S$.$where](dart.fn(component => component[S$.$isEmpty], T$.StringTobool()))[S$.$isEmpty]) dart.assertFailed("Expected all FieldPath components to be non-null or non-empty strings.", I[55], 25, 16, "components.where((component) => component.isEmpty).isEmpty");
    ;
  }).prototype = field_path.FieldPath.prototype;
  (field_path.FieldPath.fromString = function(path) {
    this[S$.components$1] = path[S$.$split](".");
    if (!path[S$.$isNotEmpty]) dart.assertFailed(null, I[55], 43, 16, "path.isNotEmpty");
    if (!!path[S$.$startsWith](".")) dart.assertFailed(null, I[55], 44, 16, "!path.startsWith('.')");
    if (!!path[S$.$endsWith](".")) dart.assertFailed(null, I[55], 45, 16, "!path.endsWith('.')");
    if (!!path[S$.$contains]("..")) dart.assertFailed(null, I[55], 46, 16, "!path.contains('..')");
    if (!!path[S$.$contains]("~")) dart.assertFailed(field_path._reserved, I[55], 47, 16, "!path.contains('~')");
    if (!!path[S$.$contains]("*")) dart.assertFailed(field_path._reserved, I[55], 48, 16, "!path.contains('*')");
    if (!!path[S$.$contains]("/")) dart.assertFailed(field_path._reserved, I[55], 49, 16, "!path.contains('/')");
    if (!!path[S$.$contains]("[")) dart.assertFailed(field_path._reserved, I[55], 50, 16, "!path.contains('[')");
    if (!!path[S$.$contains]("]")) dart.assertFailed(field_path._reserved, I[55], 51, 16, "!path.contains(']')");
    ;
  }).prototype = field_path.FieldPath.prototype;
  dart.addTypeTests(field_path.FieldPath);
  dart.addTypeCaches(field_path.FieldPath);
  dart.setStaticGetterSignature(field_path.FieldPath, () => ['documentId']);
  dart.setLibraryUri(field_path.FieldPath, I[56]);
  dart.setFieldSignature(field_path.FieldPath, () => ({
    __proto__: dart.getFields(field_path.FieldPath.__proto__),
    components: dart.finalFieldType(core.List$(core.String))
  }));
  dart.defineExtensionMethods(field_path.FieldPath, ['_equals', 'toString']);
  dart.defineExtensionAccessors(field_path.FieldPath, ['hashCode']);
  dart.defineLazy(field_path, {
    /*field_path._reserved*/get _reserved() {
      return "Paths must not contain '~', '*', '/', '[', or ']'.";
    },
    set _reserved(value) {}
  }, false);
  geo_point.GeoPoint = class GeoPoint extends core.Object {
    get latitude() {
      return this[S$.latitude];
    }
    set latitude(value) {
      super.latitude = value;
    }
    get longitude() {
      return this[S$.longitude];
    }
    set longitude(value) {
      super.longitude = value;
    }
    static ['_#new#tearOff'](latitude, longitude) {
      return new geo_point.GeoPoint.new(latitude, longitude);
    }
    _equals(other) {
      if (other == null) return false;
      return geo_point.GeoPoint.is(other) && other.latitude === this.latitude && other.longitude === this.longitude;
    }
    get hashCode() {
      return core.Object.hash(this.latitude, this.longitude);
    }
  };
  (geo_point.GeoPoint.new = function(latitude, longitude) {
    this[S$.latitude] = latitude;
    this[S$.longitude] = longitude;
    if (!(latitude >= -90 && latitude <= 90)) dart.assertFailed(null, I[57], 13, 16, "latitude >= -90 && latitude <= 90");
    if (!(longitude >= -180 && longitude <= 180)) dart.assertFailed(null, I[57], 14, 16, "longitude >= -180 && longitude <= 180");
    ;
  }).prototype = geo_point.GeoPoint.prototype;
  dart.addTypeTests(geo_point.GeoPoint);
  dart.addTypeCaches(geo_point.GeoPoint);
  dart.setLibraryUri(geo_point.GeoPoint, I[58]);
  dart.setFieldSignature(geo_point.GeoPoint, () => ({
    __proto__: dart.getFields(geo_point.GeoPoint.__proto__),
    latitude: dart.finalFieldType(core.double),
    longitude: dart.finalFieldType(core.double)
  }));
  dart.defineExtensionMethods(geo_point.GeoPoint, ['_equals']);
  dart.defineExtensionAccessors(geo_point.GeoPoint, ['hashCode']);
  platform_interface_collection_reference.CollectionReferencePlatform = class CollectionReferencePlatform extends platform_interface_query.QueryPlatform {
    get id() {
      return this[S$._pointer$1].id;
    }
    get parent() {
      let parentPath = this[S$._pointer$1].parentPath();
      if (parentPath == null) {
        return null;
      }
      return this.firestore.doc(parentPath);
    }
    get path() {
      return this[S$._pointer$1].path;
    }
    doc(path = null) {
      dart.throw(new core.UnimplementedError.new("doc() is not implemented"));
    }
    _equals(other) {
      if (other == null) return false;
      return platform_interface_collection_reference.CollectionReferencePlatform.is(other) && other.firestore._equals(this.firestore) && other.path === this.path;
    }
    get hashCode() {
      return this.path[S$.$hashCode];
    }
    toString() {
      return dart.str(dart.wrapType(platform_interface_collection_reference.CollectionReferencePlatform)) + "(" + this.path + ")";
    }
  };
  (platform_interface_collection_reference.CollectionReferencePlatform.new = function(firestore, path) {
    this[S$._pointer$1] = new pointer.Pointer.new(path);
    platform_interface_collection_reference.CollectionReferencePlatform.__proto__.new.call(this, firestore, new (T$.IdentityMapOfString$dynamic()).new());
    ;
  }).prototype = platform_interface_collection_reference.CollectionReferencePlatform.prototype;
  dart.addTypeTests(platform_interface_collection_reference.CollectionReferencePlatform);
  dart.addTypeCaches(platform_interface_collection_reference.CollectionReferencePlatform);
  dart.setMethodSignature(platform_interface_collection_reference.CollectionReferencePlatform, () => ({
    __proto__: dart.getMethods(platform_interface_collection_reference.CollectionReferencePlatform.__proto__),
    doc: dart.fnType(platform_interface_document_reference.DocumentReferencePlatform, [], [dart.nullable(core.String)])
  }));
  dart.setGetterSignature(platform_interface_collection_reference.CollectionReferencePlatform, () => ({
    __proto__: dart.getGetters(platform_interface_collection_reference.CollectionReferencePlatform.__proto__),
    id: core.String,
    parent: dart.nullable(platform_interface_document_reference.DocumentReferencePlatform),
    path: core.String
  }));
  dart.setLibraryUri(platform_interface_collection_reference.CollectionReferencePlatform, I[59]);
  dart.setFieldSignature(platform_interface_collection_reference.CollectionReferencePlatform, () => ({
    __proto__: dart.getFields(platform_interface_collection_reference.CollectionReferencePlatform.__proto__),
    [S$._pointer$1]: dart.finalFieldType(pointer.Pointer)
  }));
  dart.defineExtensionMethods(platform_interface_collection_reference.CollectionReferencePlatform, ['_equals', 'toString']);
  dart.defineExtensionAccessors(platform_interface_collection_reference.CollectionReferencePlatform, ['hashCode']);
  platform_interface_document_change.DocumentChangeType = class DocumentChangeType extends core._Enum {
    [S$._enumToString]() {
      return "DocumentChangeType." + this[S$._name];
    }
  };
  (platform_interface_document_change.DocumentChangeType.new = function(index, name) {
    platform_interface_document_change.DocumentChangeType.__proto__.new.call(this, index, name);
    ;
  }).prototype = platform_interface_document_change.DocumentChangeType.prototype;
  dart.addTypeTests(platform_interface_document_change.DocumentChangeType);
  dart.addTypeCaches(platform_interface_document_change.DocumentChangeType);
  dart.setMethodSignature(platform_interface_document_change.DocumentChangeType, () => ({
    __proto__: dart.getMethods(platform_interface_document_change.DocumentChangeType.__proto__),
    [S$._enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(platform_interface_document_change.DocumentChangeType, I[60]);
  dart.setStaticFieldSignature(platform_interface_document_change.DocumentChangeType, () => ['values', 'added', 'modified', 'removed']);
  dart.defineLazy(platform_interface_document_change.DocumentChangeType, {
    /*platform_interface_document_change.DocumentChangeType.values*/get values() {
      return C[59] || CT.C59;
    },
    /*platform_interface_document_change.DocumentChangeType.added*/get added() {
      return C[60] || CT.C60;
    },
    /*platform_interface_document_change.DocumentChangeType.modified*/get modified() {
      return C[61] || CT.C61;
    },
    /*platform_interface_document_change.DocumentChangeType.removed*/get removed() {
      return C[62] || CT.C62;
    }
  }, false);
  platform_interface_document_change.DocumentChangePlatform = class DocumentChangePlatform extends plugin_platform_interface.PlatformInterface {
    get type() {
      return this[S$.type];
    }
    set type(value) {
      super.type = value;
    }
    get oldIndex() {
      return this[S$.oldIndex];
    }
    set oldIndex(value) {
      super.oldIndex = value;
    }
    get newIndex() {
      return this[S$.newIndex];
    }
    set newIndex(value) {
      super.newIndex = value;
    }
    get document() {
      return this[S$.document];
    }
    set document(value) {
      super.document = value;
    }
    static ['_#new#tearOff'](type, oldIndex, newIndex, document) {
      return new platform_interface_document_change.DocumentChangePlatform.new(type, oldIndex, newIndex, document);
    }
    static verifyExtends(instance) {
      plugin_platform_interface.PlatformInterface.verifyToken(instance, platform_interface_document_change.DocumentChangePlatform._token);
    }
  };
  (platform_interface_document_change.DocumentChangePlatform.new = function(type, oldIndex, newIndex, document) {
    this[S$.type] = type;
    this[S$.oldIndex] = oldIndex;
    this[S$.newIndex] = newIndex;
    this[S$.document] = document;
    platform_interface_document_change.DocumentChangePlatform.__proto__.new.call(this, {token: platform_interface_document_change.DocumentChangePlatform._token});
    ;
  }).prototype = platform_interface_document_change.DocumentChangePlatform.prototype;
  dart.addTypeTests(platform_interface_document_change.DocumentChangePlatform);
  dart.addTypeCaches(platform_interface_document_change.DocumentChangePlatform);
  dart.setStaticMethodSignature(platform_interface_document_change.DocumentChangePlatform, () => ['verifyExtends']);
  dart.setLibraryUri(platform_interface_document_change.DocumentChangePlatform, I[60]);
  dart.setFieldSignature(platform_interface_document_change.DocumentChangePlatform, () => ({
    __proto__: dart.getFields(platform_interface_document_change.DocumentChangePlatform.__proto__),
    type: dart.finalFieldType(platform_interface_document_change.DocumentChangeType),
    oldIndex: dart.finalFieldType(core.int),
    newIndex: dart.finalFieldType(core.int),
    document: dart.finalFieldType(platform_interface_document_snapshot.DocumentSnapshotPlatform)
  }));
  dart.setStaticFieldSignature(platform_interface_document_change.DocumentChangePlatform, () => ['_token']);
  dart.defineLazy(platform_interface_document_change.DocumentChangePlatform, {
    /*platform_interface_document_change.DocumentChangePlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  platform_interface_document_snapshot.DocumentSnapshotPlatform = class DocumentSnapshotPlatform extends plugin_platform_interface.PlatformInterface {
    static ['_#new#tearOff'](_firestore, path, _data) {
      return new platform_interface_document_snapshot.DocumentSnapshotPlatform.new(_firestore, path, _data);
    }
    static verifyExtends(instance) {
      plugin_platform_interface.PlatformInterface.verifyToken(instance, platform_interface_document_snapshot.DocumentSnapshotPlatform._token);
    }
    get id() {
      return this[S$._pointer$3].id;
    }
    get metadata() {
      return new snapshot_metadata.SnapshotMetadataPlatform.new(core.bool.as(dart.dsend(this[S$._data][S$.$_get]("metadata"), '_get', ["hasPendingWrites"])), core.bool.as(dart.dsend(this[S$._data][S$.$_get]("metadata"), '_get', ["isFromCache"])));
    }
    get exists() {
      return this[S$._data][S$.$_get]("data") != null;
    }
    get reference() {
      return this[S$._firestore$2].doc(this[S$._pointer$3].path);
    }
    data() {
      return this.exists ? T$.LinkedHashMapOfString$dynamic().from(core.Map.as(this[S$._data][S$.$_get]("data"))) : null;
    }
    get(field) {
      if (!(typeof field == 'string' || field_path.FieldPath.is(field))) dart.assertFailed("Supported [field] types are [String] and [FieldPath]", I[61], 72, 7, "field is String || field is FieldPath");
      if (!this.exists) {
        dart.throw(new core.StateError.new("cannot get a field on a " + dart.str(dart.wrapType(platform_interface_document_snapshot.DocumentSnapshotPlatform)) + " which does not exist"));
      }
      function _findKeyValueInMap(key, map) {
        if (map[S$.$containsKey](key)) {
          return map[S$.$_get](key);
        }
        dart.throw(new core.StateError.new("field does not exist within the " + dart.str(dart.wrapType(platform_interface_document_snapshot.DocumentSnapshotPlatform))));
      }
      dart.fn(_findKeyValueInMap, T$.StringAndMapOfString$dynamicTodynamic());
      let fieldPath = null;
      if (typeof field == 'string') {
        fieldPath = new field_path.FieldPath.fromString(field);
      } else {
        fieldPath = field_path.FieldPath.as(field);
      }
      let components = fieldPath.components;
      let snapshotData = this.data();
      function _findComponent(componentIndex, data) {
        let isLast = componentIndex + 1 === components[S$.$length];
        let value = _findKeyValueInMap(components[S$.$_get](componentIndex), dart.nullCheck(data));
        if (isLast) {
          return value;
        }
        if (core.Map.is(value)) {
          return _findComponent(componentIndex + 1, T$.LinkedHashMapOfString$dynamic().from(value));
        } else {
          dart.throw(new core.StateError.new("field does not exist within the " + dart.str(dart.wrapType(platform_interface_document_snapshot.DocumentSnapshotPlatform))));
        }
      }
      dart.fn(_findComponent, T$.intAndMapNOfString$dynamicTodynamic());
      return _findComponent(0, snapshotData);
    }
    _get(field) {
      return this.get(field);
    }
  };
  (platform_interface_document_snapshot.DocumentSnapshotPlatform.new = function(_firestore, path, _data) {
    this[S$._firestore$2] = _firestore;
    this[S$._data] = _data;
    this[S$._pointer$3] = new pointer.Pointer.new(path);
    platform_interface_document_snapshot.DocumentSnapshotPlatform.__proto__.new.call(this, {token: platform_interface_document_snapshot.DocumentSnapshotPlatform._token});
    ;
  }).prototype = platform_interface_document_snapshot.DocumentSnapshotPlatform.prototype;
  dart.addTypeTests(platform_interface_document_snapshot.DocumentSnapshotPlatform);
  dart.addTypeCaches(platform_interface_document_snapshot.DocumentSnapshotPlatform);
  dart.setMethodSignature(platform_interface_document_snapshot.DocumentSnapshotPlatform, () => ({
    __proto__: dart.getMethods(platform_interface_document_snapshot.DocumentSnapshotPlatform.__proto__),
    data: dart.fnType(dart.nullable(core.Map$(core.String, dart.dynamic)), []),
    get: dart.fnType(dart.dynamic, [core.Object]),
    _get: dart.fnType(dart.dynamic, [core.Object])
  }));
  dart.setStaticMethodSignature(platform_interface_document_snapshot.DocumentSnapshotPlatform, () => ['verifyExtends']);
  dart.setGetterSignature(platform_interface_document_snapshot.DocumentSnapshotPlatform, () => ({
    __proto__: dart.getGetters(platform_interface_document_snapshot.DocumentSnapshotPlatform.__proto__),
    id: core.String,
    metadata: snapshot_metadata.SnapshotMetadataPlatform,
    exists: core.bool,
    reference: platform_interface_document_reference.DocumentReferencePlatform
  }));
  dart.setLibraryUri(platform_interface_document_snapshot.DocumentSnapshotPlatform, I[62]);
  dart.setFieldSignature(platform_interface_document_snapshot.DocumentSnapshotPlatform, () => ({
    __proto__: dart.getFields(platform_interface_document_snapshot.DocumentSnapshotPlatform.__proto__),
    [S$._firestore$2]: dart.finalFieldType(platform_interface_firestore.FirebaseFirestorePlatform),
    [S$._pointer$3]: dart.finalFieldType(pointer.Pointer),
    [S$._data]: dart.finalFieldType(core.Map$(core.String, dart.dynamic))
  }));
  dart.setStaticFieldSignature(platform_interface_document_snapshot.DocumentSnapshotPlatform, () => ['_token']);
  dart.defineLazy(platform_interface_document_snapshot.DocumentSnapshotPlatform, {
    /*platform_interface_document_snapshot.DocumentSnapshotPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  dart.defineLazy(platform_interface_query, {
    /*platform_interface_query._initialParameters*/get _initialParameters() {
      return T$.MapOfString$dynamic().unmodifiable(new _js_helper.LinkedMap.from(["where", T$.ListOfList().unmodifiable([]), "orderBy", T$.ListOfList().unmodifiable([]), "startAt", null, "startAfter", null, "endAt", null, "endBefore", null, "limit", null, "limitToLast", null]));
    },
    set _initialParameters(value) {}
  }, false);
  platform_interface_query_snapshot.QuerySnapshotPlatform = class QuerySnapshotPlatform extends plugin_platform_interface.PlatformInterface {
    get docs() {
      return this[S$.docs];
    }
    set docs(value) {
      super.docs = value;
    }
    get docChanges() {
      return this[S$.docChanges];
    }
    set docChanges(value) {
      super.docChanges = value;
    }
    get metadata() {
      return this[S$.metadata];
    }
    set metadata(value) {
      super.metadata = value;
    }
    static ['_#new#tearOff'](docs, docChanges, metadata) {
      return new platform_interface_query_snapshot.QuerySnapshotPlatform.new(docs, docChanges, metadata);
    }
    static verifyExtends(instance) {
      plugin_platform_interface.PlatformInterface.verifyToken(instance, platform_interface_query_snapshot.QuerySnapshotPlatform._token);
    }
    get size() {
      return this.docs[S$.$length];
    }
  };
  (platform_interface_query_snapshot.QuerySnapshotPlatform.new = function(docs, docChanges, metadata) {
    this[S$.docs] = docs;
    this[S$.docChanges] = docChanges;
    this[S$.metadata] = metadata;
    platform_interface_query_snapshot.QuerySnapshotPlatform.__proto__.new.call(this, {token: platform_interface_query_snapshot.QuerySnapshotPlatform._token});
    ;
  }).prototype = platform_interface_query_snapshot.QuerySnapshotPlatform.prototype;
  dart.addTypeTests(platform_interface_query_snapshot.QuerySnapshotPlatform);
  dart.addTypeCaches(platform_interface_query_snapshot.QuerySnapshotPlatform);
  dart.setStaticMethodSignature(platform_interface_query_snapshot.QuerySnapshotPlatform, () => ['verifyExtends']);
  dart.setGetterSignature(platform_interface_query_snapshot.QuerySnapshotPlatform, () => ({
    __proto__: dart.getGetters(platform_interface_query_snapshot.QuerySnapshotPlatform.__proto__),
    size: core.int
  }));
  dart.setLibraryUri(platform_interface_query_snapshot.QuerySnapshotPlatform, I[63]);
  dart.setFieldSignature(platform_interface_query_snapshot.QuerySnapshotPlatform, () => ({
    __proto__: dart.getFields(platform_interface_query_snapshot.QuerySnapshotPlatform.__proto__),
    docs: dart.finalFieldType(core.List$(platform_interface_document_snapshot.DocumentSnapshotPlatform)),
    docChanges: dart.finalFieldType(core.List$(platform_interface_document_change.DocumentChangePlatform)),
    metadata: dart.finalFieldType(snapshot_metadata.SnapshotMetadataPlatform)
  }));
  dart.setStaticFieldSignature(platform_interface_query_snapshot.QuerySnapshotPlatform, () => ['_token']);
  dart.defineLazy(platform_interface_query_snapshot.QuerySnapshotPlatform, {
    /*platform_interface_query_snapshot.QuerySnapshotPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform = class LoadBundleTaskSnapshotPlatform extends plugin_platform_interface.PlatformInterface {
    get taskState() {
      return this[S$.taskState$1];
    }
    set taskState(value) {
      super.taskState = value;
    }
    get bytesLoaded() {
      return this[S$.bytesLoaded$1];
    }
    set bytesLoaded(value) {
      super.bytesLoaded = value;
    }
    get documentsLoaded() {
      return this[S$.documentsLoaded$1];
    }
    set documentsLoaded(value) {
      super.documentsLoaded = value;
    }
    get totalBytes() {
      return this[S$.totalBytes$1];
    }
    set totalBytes(value) {
      super.totalBytes = value;
    }
    get totalDocuments() {
      return this[S$.totalDocuments$1];
    }
    set totalDocuments(value) {
      super.totalDocuments = value;
    }
    static ['_#new#tearOff'](taskState, data) {
      return new platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform.new(taskState, data);
    }
    static verifyExtends(instance) {
      plugin_platform_interface.PlatformInterface.verifyToken(instance, platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform._token);
    }
  };
  (platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform.new = function(taskState, data) {
    this[S$.taskState$1] = taskState;
    this[S$.bytesLoaded$1] = core.int.as(dart.dsend(data, '_get', ["bytesLoaded"]));
    this[S$.documentsLoaded$1] = core.int.as(dart.dsend(data, '_get', ["documentsLoaded"]));
    this[S$.totalBytes$1] = core.int.as(dart.dsend(data, '_get', ["totalBytes"]));
    this[S$.totalDocuments$1] = core.int.as(dart.dsend(data, '_get', ["totalDocuments"]));
    platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform.__proto__.new.call(this, {token: platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform._token});
    ;
  }).prototype = platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform.prototype;
  dart.addTypeTests(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform);
  dart.addTypeCaches(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform);
  dart.setStaticMethodSignature(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform, () => ['verifyExtends']);
  dart.setLibraryUri(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform, I[64]);
  dart.setFieldSignature(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform, () => ({
    __proto__: dart.getFields(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform.__proto__),
    taskState: dart.finalFieldType(load_bundle_task_state.LoadBundleTaskState),
    bytesLoaded: dart.finalFieldType(core.int),
    documentsLoaded: dart.finalFieldType(core.int),
    totalBytes: dart.finalFieldType(core.int),
    totalDocuments: dart.finalFieldType(core.int)
  }));
  dart.setStaticFieldSignature(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform, () => ['_token']);
  dart.defineLazy(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform, {
    /*platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  snapshot_metadata.SnapshotMetadataPlatform = class SnapshotMetadataPlatform extends core.Object {
    get hasPendingWrites() {
      return this[S$.hasPendingWrites];
    }
    set hasPendingWrites(value) {
      super.hasPendingWrites = value;
    }
    get isFromCache() {
      return this[S$.isFromCache];
    }
    set isFromCache(value) {
      super.isFromCache = value;
    }
    static ['_#new#tearOff'](hasPendingWrites, isFromCache) {
      return new snapshot_metadata.SnapshotMetadataPlatform.new(hasPendingWrites, isFromCache);
    }
  };
  (snapshot_metadata.SnapshotMetadataPlatform.new = function(hasPendingWrites, isFromCache) {
    this[S$.hasPendingWrites] = hasPendingWrites;
    this[S$.isFromCache] = isFromCache;
    ;
  }).prototype = snapshot_metadata.SnapshotMetadataPlatform.prototype;
  dart.addTypeTests(snapshot_metadata.SnapshotMetadataPlatform);
  dart.addTypeCaches(snapshot_metadata.SnapshotMetadataPlatform);
  dart.setLibraryUri(snapshot_metadata.SnapshotMetadataPlatform, I[65]);
  dart.setFieldSignature(snapshot_metadata.SnapshotMetadataPlatform, () => ({
    __proto__: dart.getFields(snapshot_metadata.SnapshotMetadataPlatform.__proto__),
    hasPendingWrites: dart.finalFieldType(core.bool),
    isFromCache: dart.finalFieldType(core.bool)
  }));
  source.Source = class Source extends core._Enum {
    [S$._enumToString]() {
      return "Source." + this[S$._name];
    }
  };
  (source.Source.new = function(index, name) {
    source.Source.__proto__.new.call(this, index, name);
    ;
  }).prototype = source.Source.prototype;
  dart.addTypeTests(source.Source);
  dart.addTypeCaches(source.Source);
  dart.setMethodSignature(source.Source, () => ({
    __proto__: dart.getMethods(source.Source.__proto__),
    [S$._enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(source.Source, I[66]);
  dart.setStaticFieldSignature(source.Source, () => ['values', 'serverAndCache', 'server', 'cache']);
  dart.defineLazy(source.Source, {
    /*source.Source.values*/get values() {
      return C[63] || CT.C63;
    },
    /*source.Source.serverAndCache*/get serverAndCache() {
      return C[22] || CT.C22;
    },
    /*source.Source.server*/get server() {
      return C[34] || CT.C34;
    },
    /*source.Source.cache*/get cache() {
      return C[33] || CT.C33;
    }
  }, false);
  load_bundle_task_state.LoadBundleTaskState = class LoadBundleTaskState extends core._Enum {
    [S$._enumToString]() {
      return "LoadBundleTaskState." + this[S$._name];
    }
  };
  (load_bundle_task_state.LoadBundleTaskState.new = function(index, name) {
    load_bundle_task_state.LoadBundleTaskState.__proto__.new.call(this, index, name);
    ;
  }).prototype = load_bundle_task_state.LoadBundleTaskState.prototype;
  dart.addTypeTests(load_bundle_task_state.LoadBundleTaskState);
  dart.addTypeCaches(load_bundle_task_state.LoadBundleTaskState);
  dart.setMethodSignature(load_bundle_task_state.LoadBundleTaskState, () => ({
    __proto__: dart.getMethods(load_bundle_task_state.LoadBundleTaskState.__proto__),
    [S$._enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(load_bundle_task_state.LoadBundleTaskState, I[67]);
  dart.setStaticFieldSignature(load_bundle_task_state.LoadBundleTaskState, () => ['values', 'running', 'success', 'error']);
  dart.defineLazy(load_bundle_task_state.LoadBundleTaskState, {
    /*load_bundle_task_state.LoadBundleTaskState.values*/get values() {
      return C[64] || CT.C64;
    },
    /*load_bundle_task_state.LoadBundleTaskState.running*/get running() {
      return C[65] || CT.C65;
    },
    /*load_bundle_task_state.LoadBundleTaskState.success*/get success() {
      return C[66] || CT.C66;
    },
    /*load_bundle_task_state.LoadBundleTaskState.error*/get error() {
      return C[67] || CT.C67;
    }
  }, false);
  timestamp.Timestamp = class Timestamp extends core.Object {
    static ['_#new#tearOff'](_seconds, _nanoseconds) {
      return new timestamp.Timestamp.new(_seconds, _nanoseconds);
    }
    static fromMillisecondsSinceEpoch(milliseconds) {
      let seconds = (milliseconds / 1000)[S$.$floor]();
      let nanoseconds = (milliseconds - seconds * 1000) * 1000000;
      return new timestamp.Timestamp.new(seconds, nanoseconds);
    }
    static ['_#fromMillisecondsSinceEpoch#tearOff'](milliseconds) {
      return timestamp.Timestamp.fromMillisecondsSinceEpoch(milliseconds);
    }
    static fromMicrosecondsSinceEpoch(microseconds) {
      let seconds = (microseconds / 1000000)[S$.$truncate]();
      let nanoseconds = (microseconds - seconds * 1000000) * 1000;
      return new timestamp.Timestamp.new(seconds, nanoseconds);
    }
    static ['_#fromMicrosecondsSinceEpoch#tearOff'](microseconds) {
      return timestamp.Timestamp.fromMicrosecondsSinceEpoch(microseconds);
    }
    static fromDate(date) {
      return timestamp.Timestamp.fromMicrosecondsSinceEpoch(date.microsecondsSinceEpoch);
    }
    static ['_#fromDate#tearOff'](date) {
      return timestamp.Timestamp.fromDate(date);
    }
    static now() {
      return timestamp.Timestamp.fromMicrosecondsSinceEpoch(new core.DateTime.now().microsecondsSinceEpoch);
    }
    static ['_#now#tearOff']() {
      return timestamp.Timestamp.now();
    }
    get seconds() {
      return this[S$._seconds];
    }
    get nanoseconds() {
      return this[S$._nanoseconds];
    }
    get millisecondsSinceEpoch() {
      return this.seconds * 1000 + (this.nanoseconds / 1000000)[S$.$truncate]();
    }
    get microsecondsSinceEpoch() {
      return this.seconds * 1000000 + (this.nanoseconds / 1000)[S$.$truncate]();
    }
    toDate() {
      return new core.DateTime.fromMicrosecondsSinceEpoch(this.microsecondsSinceEpoch);
    }
    get hashCode() {
      return core.Object.hash(this.seconds, this.nanoseconds);
    }
    _equals(other) {
      if (other == null) return false;
      return timestamp.Timestamp.is(other) && other.seconds === this.seconds && other.nanoseconds === this.nanoseconds;
    }
    compareTo(other) {
      timestamp.Timestamp.as(other);
      if (this.seconds === other.seconds) {
        return this.nanoseconds[S$.$compareTo](other.nanoseconds);
      }
      return this.seconds[S$.$compareTo](other.seconds);
    }
    toString() {
      return "Timestamp(seconds=" + dart.str(this.seconds) + ", nanoseconds=" + dart.str(this.nanoseconds) + ")";
    }
    static _validateRange(seconds, nanoseconds) {
      timestamp._check(nanoseconds >= 0, "nanoseconds", nanoseconds);
      timestamp._check(nanoseconds < 1000000000, "nanoseconds", nanoseconds);
      timestamp._check(seconds >= -62135596800, "seconds", seconds);
      timestamp._check(seconds < 253402300800, "seconds", seconds);
    }
  };
  (timestamp.Timestamp.new = function(_seconds, _nanoseconds) {
    this[S$._seconds] = _seconds;
    this[S$._nanoseconds] = _nanoseconds;
    timestamp.Timestamp._validateRange(this[S$._seconds], this[S$._nanoseconds]);
  }).prototype = timestamp.Timestamp.prototype;
  dart.addTypeTests(timestamp.Timestamp);
  dart.addTypeCaches(timestamp.Timestamp);
  timestamp.Timestamp[dart.implements] = () => [core.Comparable$(timestamp.Timestamp)];
  dart.setMethodSignature(timestamp.Timestamp, () => ({
    __proto__: dart.getMethods(timestamp.Timestamp.__proto__),
    toDate: dart.fnType(core.DateTime, []),
    compareTo: dart.fnType(core.int, [dart.nullable(core.Object)]),
    [S$.$compareTo]: dart.fnType(core.int, [dart.nullable(core.Object)])
  }));
  dart.setStaticMethodSignature(timestamp.Timestamp, () => ['fromMillisecondsSinceEpoch', 'fromMicrosecondsSinceEpoch', 'fromDate', 'now', '_validateRange']);
  dart.setGetterSignature(timestamp.Timestamp, () => ({
    __proto__: dart.getGetters(timestamp.Timestamp.__proto__),
    seconds: core.int,
    nanoseconds: core.int,
    millisecondsSinceEpoch: core.int,
    microsecondsSinceEpoch: core.int
  }));
  dart.setLibraryUri(timestamp.Timestamp, I[68]);
  dart.setFieldSignature(timestamp.Timestamp, () => ({
    __proto__: dart.getFields(timestamp.Timestamp.__proto__),
    [S$._seconds]: dart.finalFieldType(core.int),
    [S$._nanoseconds]: dart.finalFieldType(core.int)
  }));
  dart.setStaticFieldSignature(timestamp.Timestamp, () => ['_kStartOfTime', '_kEndOfTime']);
  dart.defineExtensionMethods(timestamp.Timestamp, ['_equals', 'compareTo', 'toString']);
  dart.defineExtensionAccessors(timestamp.Timestamp, ['hashCode']);
  dart.defineLazy(timestamp.Timestamp, {
    /*timestamp.Timestamp._kStartOfTime*/get _kStartOfTime() {
      return -62135596800;
    },
    /*timestamp.Timestamp._kEndOfTime*/get _kEndOfTime() {
      return 253402300800;
    }
  }, false);
  timestamp._check = function _check(expr, name, value) {
    if (!expr) {
      dart.throw(new core.ArgumentError.new("Timestamp " + name + " out of range: " + dart.str(value)));
    }
  };
  dart.defineLazy(timestamp, {
    /*timestamp._kThousand*/get _kThousand() {
      return 1000;
    },
    /*timestamp._kMillion*/get _kMillion() {
      return 1000000;
    },
    /*timestamp._kBillion*/get _kBillion() {
      return 1000000000;
    }
  }, false);
  settings.Settings = class Settings extends core.Object {
    get persistenceEnabled() {
      return this[S$.persistenceEnabled];
    }
    set persistenceEnabled(value) {
      super.persistenceEnabled = value;
    }
    get host() {
      return this[S$.host];
    }
    set host(value) {
      super.host = value;
    }
    get sslEnabled() {
      return this[S$.sslEnabled];
    }
    set sslEnabled(value) {
      super.sslEnabled = value;
    }
    get cacheSizeBytes() {
      return this[S$.cacheSizeBytes];
    }
    set cacheSizeBytes(value) {
      super.cacheSizeBytes = value;
    }
    get ignoreUndefinedProperties() {
      return this[S$.ignoreUndefinedProperties];
    }
    set ignoreUndefinedProperties(value) {
      super.ignoreUndefinedProperties = value;
    }
    static ['_#new#tearOff'](opts) {
      let persistenceEnabled = opts && 'persistenceEnabled' in opts ? opts.persistenceEnabled : null;
      let host = opts && 'host' in opts ? opts.host : null;
      let sslEnabled = opts && 'sslEnabled' in opts ? opts.sslEnabled : null;
      let cacheSizeBytes = opts && 'cacheSizeBytes' in opts ? opts.cacheSizeBytes : null;
      let ignoreUndefinedProperties = opts && 'ignoreUndefinedProperties' in opts ? opts.ignoreUndefinedProperties : false;
      return new settings.Settings.new({persistenceEnabled: persistenceEnabled, host: host, sslEnabled: sslEnabled, cacheSizeBytes: cacheSizeBytes, ignoreUndefinedProperties: ignoreUndefinedProperties});
    }
    get asMap() {
      return (() => {
        let t85 = new (T$.IdentityMapOfString$dynamic()).new();
        t85[S$.$_set]("persistenceEnabled", this.persistenceEnabled);
        t85[S$.$_set]("host", this.host);
        t85[S$.$_set]("sslEnabled", this.sslEnabled);
        t85[S$.$_set]("cacheSizeBytes", this.cacheSizeBytes);
        t85[S$.$_set]("ignoreUndefinedProperties", this.ignoreUndefinedProperties);
        return t85;
      })();
    }
    copyWith(opts) {
      let t86, t86$, t86$0, t86$1, t86$2;
      let persistenceEnabled = opts && 'persistenceEnabled' in opts ? opts.persistenceEnabled : null;
      let host = opts && 'host' in opts ? opts.host : null;
      let sslEnabled = opts && 'sslEnabled' in opts ? opts.sslEnabled : null;
      let cacheSizeBytes = opts && 'cacheSizeBytes' in opts ? opts.cacheSizeBytes : null;
      let ignoreUndefinedProperties = opts && 'ignoreUndefinedProperties' in opts ? opts.ignoreUndefinedProperties : null;
      return new settings.Settings.new({persistenceEnabled: (t86 = persistenceEnabled, t86 == null ? this.persistenceEnabled : t86), host: (t86$ = host, t86$ == null ? this.host : t86$), sslEnabled: (t86$0 = sslEnabled, t86$0 == null ? this.sslEnabled : t86$0), cacheSizeBytes: (t86$1 = cacheSizeBytes, t86$1 == null ? this.cacheSizeBytes : t86$1), ignoreUndefinedProperties: (t86$2 = ignoreUndefinedProperties, t86$2 == null ? this.ignoreUndefinedProperties : t86$2)});
    }
    _equals(other) {
      if (other == null) return false;
      return settings.Settings.is(other) && other[S$.$runtimeType]._equals(this[S$.$runtimeType]) && other.persistenceEnabled == this.persistenceEnabled && other.host == this.host && other.sslEnabled == this.sslEnabled && other.cacheSizeBytes == this.cacheSizeBytes && other.ignoreUndefinedProperties === this.ignoreUndefinedProperties;
    }
    get hashCode() {
      return core.Object.hash(this[S$.$runtimeType], this.persistenceEnabled, this.host, this.sslEnabled, this.cacheSizeBytes, this.ignoreUndefinedProperties);
    }
    toString() {
      return "Settings(" + this.asMap[S$.$toString]() + ")";
    }
  };
  (settings.Settings.new = function(opts) {
    let persistenceEnabled = opts && 'persistenceEnabled' in opts ? opts.persistenceEnabled : null;
    let host = opts && 'host' in opts ? opts.host : null;
    let sslEnabled = opts && 'sslEnabled' in opts ? opts.sslEnabled : null;
    let cacheSizeBytes = opts && 'cacheSizeBytes' in opts ? opts.cacheSizeBytes : null;
    let ignoreUndefinedProperties = opts && 'ignoreUndefinedProperties' in opts ? opts.ignoreUndefinedProperties : false;
    this[S$.persistenceEnabled] = persistenceEnabled;
    this[S$.host] = host;
    this[S$.sslEnabled] = sslEnabled;
    this[S$.cacheSizeBytes] = cacheSizeBytes;
    this[S$.ignoreUndefinedProperties] = ignoreUndefinedProperties;
    ;
  }).prototype = settings.Settings.prototype;
  dart.addTypeTests(settings.Settings);
  dart.addTypeCaches(settings.Settings);
  dart.setMethodSignature(settings.Settings, () => ({
    __proto__: dart.getMethods(settings.Settings.__proto__),
    copyWith: dart.fnType(settings.Settings, [], {cacheSizeBytes: dart.nullable(core.int), host: dart.nullable(core.String), ignoreUndefinedProperties: dart.nullable(core.bool), persistenceEnabled: dart.nullable(core.bool), sslEnabled: dart.nullable(core.bool)}, {})
  }));
  dart.setGetterSignature(settings.Settings, () => ({
    __proto__: dart.getGetters(settings.Settings.__proto__),
    asMap: core.Map$(core.String, dart.dynamic)
  }));
  dart.setLibraryUri(settings.Settings, I[69]);
  dart.setFieldSignature(settings.Settings, () => ({
    __proto__: dart.getFields(settings.Settings.__proto__),
    persistenceEnabled: dart.finalFieldType(dart.nullable(core.bool)),
    host: dart.finalFieldType(dart.nullable(core.String)),
    sslEnabled: dart.finalFieldType(dart.nullable(core.bool)),
    cacheSizeBytes: dart.finalFieldType(dart.nullable(core.int)),
    ignoreUndefinedProperties: dart.finalFieldType(core.bool)
  }));
  dart.setStaticFieldSignature(settings.Settings, () => ['CACHE_SIZE_UNLIMITED']);
  dart.defineExtensionMethods(settings.Settings, ['_equals', 'toString']);
  dart.defineExtensionAccessors(settings.Settings, ['hashCode']);
  dart.defineLazy(settings.Settings, {
    /*settings.Settings.CACHE_SIZE_UNLIMITED*/get CACHE_SIZE_UNLIMITED() {
      return -1;
    }
  }, false);
  get_options.GetOptions = class GetOptions extends core.Object {
    get source() {
      return this[S$.source];
    }
    set source(value) {
      super.source = value;
    }
    static ['_#new#tearOff'](opts) {
      let source = opts && 'source' in opts ? opts.source : C[22] || CT.C22;
      return new get_options.GetOptions.new({source: source});
    }
  };
  (get_options.GetOptions.new = function(opts) {
    let source = opts && 'source' in opts ? opts.source : C[22] || CT.C22;
    this[S$.source] = source;
    ;
  }).prototype = get_options.GetOptions.prototype;
  dart.addTypeTests(get_options.GetOptions);
  dart.addTypeCaches(get_options.GetOptions);
  dart.setLibraryUri(get_options.GetOptions, I[70]);
  dart.setFieldSignature(get_options.GetOptions, () => ({
    __proto__: dart.getFields(get_options.GetOptions.__proto__),
    source: dart.finalFieldType(source.Source)
  }));
  set_options.SetOptions = class SetOptions extends core.Object {
    get merge() {
      return this[S$.merge];
    }
    set merge(value) {
      super.merge = value;
    }
    get mergeFields() {
      return this[S$.mergeFields];
    }
    set mergeFields(value) {
      super.mergeFields = value;
    }
    static ['_#new#tearOff'](opts) {
      let merge = opts && 'merge' in opts ? opts.merge : null;
      let mergeFields = opts && 'mergeFields' in opts ? opts.mergeFields : null;
      return new set_options.SetOptions.new({merge: merge, mergeFields: mergeFields});
    }
  };
  (set_options.SetOptions.new = function(opts) {
    let t86;
    let merge = opts && 'merge' in opts ? opts.merge : null;
    let mergeFields = opts && 'mergeFields' in opts ? opts.mergeFields : null;
    this[S$.merge] = merge;
    if (!(merge != null !== (mergeFields != null))) dart.assertFailed("options must provide either 'merge' or 'mergeFields'", I[71], 16, 11, "(merge != null) ^ (mergeFields != null)");
    this[S$.mergeFields] = (t86 = mergeFields, t86 == null ? null : t86[S$.$map](field_path.FieldPath, dart.fn(field => {
      if (!(typeof field == 'string' || field_path.FieldPath.is(field))) dart.assertFailed("[mergeFields] can only contain Strings or FieldPaths but got " + dart.str(field), I[71], 21, 13, "field is String || field is FieldPath");
      if (typeof field == 'string') return new field_path.FieldPath.fromString(field);
      return field_path.FieldPath.as(field);
    }, T$.ObjectToFieldPath()))[S$.$toList]({growable: false}));
    ;
  }).prototype = set_options.SetOptions.prototype;
  dart.addTypeTests(set_options.SetOptions);
  dart.addTypeCaches(set_options.SetOptions);
  dart.setLibraryUri(set_options.SetOptions, I[72]);
  dart.setFieldSignature(set_options.SetOptions, () => ({
    __proto__: dart.getFields(set_options.SetOptions.__proto__),
    merge: dart.finalFieldType(dart.nullable(core.bool)),
    mergeFields: dart.finalFieldType(dart.nullable(core.List$(field_path.FieldPath)))
  }));
  persistence_settings.PersistenceSettings = class PersistenceSettings extends core.Object {
    get synchronizeTabs() {
      return this[S$.synchronizeTabs];
    }
    set synchronizeTabs(value) {
      super.synchronizeTabs = value;
    }
    static ['_#new#tearOff'](opts) {
      let synchronizeTabs = opts && 'synchronizeTabs' in opts ? opts.synchronizeTabs : null;
      return new persistence_settings.PersistenceSettings.new({synchronizeTabs: synchronizeTabs});
    }
  };
  (persistence_settings.PersistenceSettings.new = function(opts) {
    let synchronizeTabs = opts && 'synchronizeTabs' in opts ? opts.synchronizeTabs : null;
    this[S$.synchronizeTabs] = synchronizeTabs;
    ;
  }).prototype = persistence_settings.PersistenceSettings.prototype;
  dart.addTypeTests(persistence_settings.PersistenceSettings);
  dart.addTypeCaches(persistence_settings.PersistenceSettings);
  dart.setLibraryUri(persistence_settings.PersistenceSettings, I[73]);
  dart.setFieldSignature(persistence_settings.PersistenceSettings, () => ({
    __proto__: dart.getFields(persistence_settings.PersistenceSettings.__proto__),
    synchronizeTabs: dart.finalFieldType(core.bool)
  }));
  load_bundle_task_state$.convertToTaskState = function convertToTaskState(state) {
    switch (state) {
      case "running":
        {
          return load_bundle_task_state.LoadBundleTaskState.running;
        }
      case "success":
        {
          return load_bundle_task_state.LoadBundleTaskState.success;
        }
      case "error":
        {
          return load_bundle_task_state.LoadBundleTaskState.error;
        }
      default:
        {
          dart.throw(new core.FallThroughError.new());
        }
    }
  };
  messages$46pigeon.PigeonFirebaseOptions = class PigeonFirebaseOptions extends core.Object {
    get apiKey() {
      return this[S$.apiKey$1];
    }
    set apiKey(value) {
      this[S$.apiKey$1] = value;
    }
    get appId() {
      return this[S$.appId$1];
    }
    set appId(value) {
      this[S$.appId$1] = value;
    }
    get messagingSenderId() {
      return this[S$.messagingSenderId$1];
    }
    set messagingSenderId(value) {
      this[S$.messagingSenderId$1] = value;
    }
    get projectId() {
      return this[S$.projectId$1];
    }
    set projectId(value) {
      this[S$.projectId$1] = value;
    }
    get authDomain() {
      return this[S$.authDomain$1];
    }
    set authDomain(value) {
      this[S$.authDomain$1] = value;
    }
    get databaseURL() {
      return this[S$.databaseURL$1];
    }
    set databaseURL(value) {
      this[S$.databaseURL$1] = value;
    }
    get storageBucket() {
      return this[S$.storageBucket$1];
    }
    set storageBucket(value) {
      this[S$.storageBucket$1] = value;
    }
    get measurementId() {
      return this[S$.measurementId$1];
    }
    set measurementId(value) {
      this[S$.measurementId$1] = value;
    }
    get trackingId() {
      return this[S$.trackingId$1];
    }
    set trackingId(value) {
      this[S$.trackingId$1] = value;
    }
    get deepLinkURLScheme() {
      return this[S$.deepLinkURLScheme$1];
    }
    set deepLinkURLScheme(value) {
      this[S$.deepLinkURLScheme$1] = value;
    }
    get androidClientId() {
      return this[S$.androidClientId$1];
    }
    set androidClientId(value) {
      this[S$.androidClientId$1] = value;
    }
    get iosClientId() {
      return this[S$.iosClientId$1];
    }
    set iosClientId(value) {
      this[S$.iosClientId$1] = value;
    }
    get iosBundleId() {
      return this[S$.iosBundleId$1];
    }
    set iosBundleId(value) {
      this[S$.iosBundleId$1] = value;
    }
    get appGroupId() {
      return this[S$.appGroupId$1];
    }
    set appGroupId(value) {
      this[S$.appGroupId$1] = value;
    }
    static ['_#new#tearOff'](opts) {
      let apiKey = opts && 'apiKey' in opts ? opts.apiKey : null;
      let appId = opts && 'appId' in opts ? opts.appId : null;
      let messagingSenderId = opts && 'messagingSenderId' in opts ? opts.messagingSenderId : null;
      let projectId = opts && 'projectId' in opts ? opts.projectId : null;
      let authDomain = opts && 'authDomain' in opts ? opts.authDomain : null;
      let databaseURL = opts && 'databaseURL' in opts ? opts.databaseURL : null;
      let storageBucket = opts && 'storageBucket' in opts ? opts.storageBucket : null;
      let measurementId = opts && 'measurementId' in opts ? opts.measurementId : null;
      let trackingId = opts && 'trackingId' in opts ? opts.trackingId : null;
      let deepLinkURLScheme = opts && 'deepLinkURLScheme' in opts ? opts.deepLinkURLScheme : null;
      let androidClientId = opts && 'androidClientId' in opts ? opts.androidClientId : null;
      let iosClientId = opts && 'iosClientId' in opts ? opts.iosClientId : null;
      let iosBundleId = opts && 'iosBundleId' in opts ? opts.iosBundleId : null;
      let appGroupId = opts && 'appGroupId' in opts ? opts.appGroupId : null;
      return new messages$46pigeon.PigeonFirebaseOptions.new({apiKey: apiKey, appId: appId, messagingSenderId: messagingSenderId, projectId: projectId, authDomain: authDomain, databaseURL: databaseURL, storageBucket: storageBucket, measurementId: measurementId, trackingId: trackingId, deepLinkURLScheme: deepLinkURLScheme, androidClientId: androidClientId, iosClientId: iosClientId, iosBundleId: iosBundleId, appGroupId: appGroupId});
    }
    encode() {
      let pigeonMap = new (T$.LinkedMapOfObjectN$ObjectN()).new();
      pigeonMap[S$.$_set]("apiKey", this.apiKey);
      pigeonMap[S$.$_set]("appId", this.appId);
      pigeonMap[S$.$_set]("messagingSenderId", this.messagingSenderId);
      pigeonMap[S$.$_set]("projectId", this.projectId);
      pigeonMap[S$.$_set]("authDomain", this.authDomain);
      pigeonMap[S$.$_set]("databaseURL", this.databaseURL);
      pigeonMap[S$.$_set]("storageBucket", this.storageBucket);
      pigeonMap[S$.$_set]("measurementId", this.measurementId);
      pigeonMap[S$.$_set]("trackingId", this.trackingId);
      pigeonMap[S$.$_set]("deepLinkURLScheme", this.deepLinkURLScheme);
      pigeonMap[S$.$_set]("androidClientId", this.androidClientId);
      pigeonMap[S$.$_set]("iosClientId", this.iosClientId);
      pigeonMap[S$.$_set]("iosBundleId", this.iosBundleId);
      pigeonMap[S$.$_set]("appGroupId", this.appGroupId);
      return pigeonMap;
    }
    static decode(message) {
      let pigeonMap = T$.MapOfObjectN$ObjectN().as(message);
      return new messages$46pigeon.PigeonFirebaseOptions.new({apiKey: core.String.as(dart.nullCheck(pigeonMap[S$.$_get]("apiKey"))), appId: core.String.as(dart.nullCheck(pigeonMap[S$.$_get]("appId"))), messagingSenderId: core.String.as(dart.nullCheck(pigeonMap[S$.$_get]("messagingSenderId"))), projectId: core.String.as(dart.nullCheck(pigeonMap[S$.$_get]("projectId"))), authDomain: T$.StringN().as(pigeonMap[S$.$_get]("authDomain")), databaseURL: T$.StringN().as(pigeonMap[S$.$_get]("databaseURL")), storageBucket: T$.StringN().as(pigeonMap[S$.$_get]("storageBucket")), measurementId: T$.StringN().as(pigeonMap[S$.$_get]("measurementId")), trackingId: T$.StringN().as(pigeonMap[S$.$_get]("trackingId")), deepLinkURLScheme: T$.StringN().as(pigeonMap[S$.$_get]("deepLinkURLScheme")), androidClientId: T$.StringN().as(pigeonMap[S$.$_get]("androidClientId")), iosClientId: T$.StringN().as(pigeonMap[S$.$_get]("iosClientId")), iosBundleId: T$.StringN().as(pigeonMap[S$.$_get]("iosBundleId")), appGroupId: T$.StringN().as(pigeonMap[S$.$_get]("appGroupId"))});
    }
  };
  (messages$46pigeon.PigeonFirebaseOptions.new = function(opts) {
    let apiKey = opts && 'apiKey' in opts ? opts.apiKey : null;
    let appId = opts && 'appId' in opts ? opts.appId : null;
    let messagingSenderId = opts && 'messagingSenderId' in opts ? opts.messagingSenderId : null;
    let projectId = opts && 'projectId' in opts ? opts.projectId : null;
    let authDomain = opts && 'authDomain' in opts ? opts.authDomain : null;
    let databaseURL = opts && 'databaseURL' in opts ? opts.databaseURL : null;
    let storageBucket = opts && 'storageBucket' in opts ? opts.storageBucket : null;
    let measurementId = opts && 'measurementId' in opts ? opts.measurementId : null;
    let trackingId = opts && 'trackingId' in opts ? opts.trackingId : null;
    let deepLinkURLScheme = opts && 'deepLinkURLScheme' in opts ? opts.deepLinkURLScheme : null;
    let androidClientId = opts && 'androidClientId' in opts ? opts.androidClientId : null;
    let iosClientId = opts && 'iosClientId' in opts ? opts.iosClientId : null;
    let iosBundleId = opts && 'iosBundleId' in opts ? opts.iosBundleId : null;
    let appGroupId = opts && 'appGroupId' in opts ? opts.appGroupId : null;
    this[S$.apiKey$1] = apiKey;
    this[S$.appId$1] = appId;
    this[S$.messagingSenderId$1] = messagingSenderId;
    this[S$.projectId$1] = projectId;
    this[S$.authDomain$1] = authDomain;
    this[S$.databaseURL$1] = databaseURL;
    this[S$.storageBucket$1] = storageBucket;
    this[S$.measurementId$1] = measurementId;
    this[S$.trackingId$1] = trackingId;
    this[S$.deepLinkURLScheme$1] = deepLinkURLScheme;
    this[S$.androidClientId$1] = androidClientId;
    this[S$.iosClientId$1] = iosClientId;
    this[S$.iosBundleId$1] = iosBundleId;
    this[S$.appGroupId$1] = appGroupId;
    ;
  }).prototype = messages$46pigeon.PigeonFirebaseOptions.prototype;
  dart.addTypeTests(messages$46pigeon.PigeonFirebaseOptions);
  dart.addTypeCaches(messages$46pigeon.PigeonFirebaseOptions);
  dart.setMethodSignature(messages$46pigeon.PigeonFirebaseOptions, () => ({
    __proto__: dart.getMethods(messages$46pigeon.PigeonFirebaseOptions.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon.PigeonFirebaseOptions, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon.PigeonFirebaseOptions, I[74]);
  dart.setFieldSignature(messages$46pigeon.PigeonFirebaseOptions, () => ({
    __proto__: dart.getFields(messages$46pigeon.PigeonFirebaseOptions.__proto__),
    apiKey: dart.fieldType(core.String),
    appId: dart.fieldType(core.String),
    messagingSenderId: dart.fieldType(core.String),
    projectId: dart.fieldType(core.String),
    authDomain: dart.fieldType(dart.nullable(core.String)),
    databaseURL: dart.fieldType(dart.nullable(core.String)),
    storageBucket: dart.fieldType(dart.nullable(core.String)),
    measurementId: dart.fieldType(dart.nullable(core.String)),
    trackingId: dart.fieldType(dart.nullable(core.String)),
    deepLinkURLScheme: dart.fieldType(dart.nullable(core.String)),
    androidClientId: dart.fieldType(dart.nullable(core.String)),
    iosClientId: dart.fieldType(dart.nullable(core.String)),
    iosBundleId: dart.fieldType(dart.nullable(core.String)),
    appGroupId: dart.fieldType(dart.nullable(core.String))
  }));
  messages$46pigeon.PigeonInitializeResponse = class PigeonInitializeResponse extends core.Object {
    get name() {
      return this[S$.name$2];
    }
    set name(value) {
      this[S$.name$2] = value;
    }
    get options() {
      return this[S$.options$1];
    }
    set options(value) {
      this[S$.options$1] = value;
    }
    get isAutomaticDataCollectionEnabled() {
      return this[S$.isAutomaticDataCollectionEnabled];
    }
    set isAutomaticDataCollectionEnabled(value) {
      this[S$.isAutomaticDataCollectionEnabled] = value;
    }
    get pluginConstants() {
      return this[S$.pluginConstants];
    }
    set pluginConstants(value) {
      this[S$.pluginConstants] = value;
    }
    static ['_#new#tearOff'](opts) {
      let name = opts && 'name' in opts ? opts.name : null;
      let options = opts && 'options' in opts ? opts.options : null;
      let isAutomaticDataCollectionEnabled = opts && 'isAutomaticDataCollectionEnabled' in opts ? opts.isAutomaticDataCollectionEnabled : null;
      let pluginConstants = opts && 'pluginConstants' in opts ? opts.pluginConstants : null;
      return new messages$46pigeon.PigeonInitializeResponse.new({name: name, options: options, isAutomaticDataCollectionEnabled: isAutomaticDataCollectionEnabled, pluginConstants: pluginConstants});
    }
    encode() {
      let pigeonMap = new (T$.LinkedMapOfObjectN$ObjectN()).new();
      pigeonMap[S$.$_set]("name", this.name);
      pigeonMap[S$.$_set]("options", this.options.encode());
      pigeonMap[S$.$_set]("isAutomaticDataCollectionEnabled", this.isAutomaticDataCollectionEnabled);
      pigeonMap[S$.$_set]("pluginConstants", this.pluginConstants);
      return pigeonMap;
    }
    static decode(message) {
      let pigeonMap = T$.MapOfObjectN$ObjectN().as(message);
      return new messages$46pigeon.PigeonInitializeResponse.new({name: core.String.as(dart.nullCheck(pigeonMap[S$.$_get]("name"))), options: messages$46pigeon.PigeonFirebaseOptions.decode(dart.nullCheck(pigeonMap[S$.$_get]("options"))), isAutomaticDataCollectionEnabled: T$.boolN().as(pigeonMap[S$.$_get]("isAutomaticDataCollectionEnabled")), pluginConstants: dart.nullCheck(T$.MapNOfObjectN$ObjectN().as(pigeonMap[S$.$_get]("pluginConstants")))[S$.$cast](T$.StringN(), T$.ObjectN())});
    }
  };
  (messages$46pigeon.PigeonInitializeResponse.new = function(opts) {
    let name = opts && 'name' in opts ? opts.name : null;
    let options = opts && 'options' in opts ? opts.options : null;
    let isAutomaticDataCollectionEnabled = opts && 'isAutomaticDataCollectionEnabled' in opts ? opts.isAutomaticDataCollectionEnabled : null;
    let pluginConstants = opts && 'pluginConstants' in opts ? opts.pluginConstants : null;
    this[S$.name$2] = name;
    this[S$.options$1] = options;
    this[S$.isAutomaticDataCollectionEnabled] = isAutomaticDataCollectionEnabled;
    this[S$.pluginConstants] = pluginConstants;
    ;
  }).prototype = messages$46pigeon.PigeonInitializeResponse.prototype;
  dart.addTypeTests(messages$46pigeon.PigeonInitializeResponse);
  dart.addTypeCaches(messages$46pigeon.PigeonInitializeResponse);
  dart.setMethodSignature(messages$46pigeon.PigeonInitializeResponse, () => ({
    __proto__: dart.getMethods(messages$46pigeon.PigeonInitializeResponse.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon.PigeonInitializeResponse, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon.PigeonInitializeResponse, I[74]);
  dart.setFieldSignature(messages$46pigeon.PigeonInitializeResponse, () => ({
    __proto__: dart.getFields(messages$46pigeon.PigeonInitializeResponse.__proto__),
    name: dart.fieldType(core.String),
    options: dart.fieldType(messages$46pigeon.PigeonFirebaseOptions),
    isAutomaticDataCollectionEnabled: dart.fieldType(dart.nullable(core.bool)),
    pluginConstants: dart.fieldType(core.Map$(dart.nullable(core.String), dart.nullable(core.Object)))
  }));
  messages$46pigeon._FirebaseCoreHostApiCodec = class _FirebaseCoreHostApiCodec extends message_codecs.StandardMessageCodec {
    static ['_#new#tearOff']() {
      return new messages$46pigeon._FirebaseCoreHostApiCodec.new();
    }
    writeValue(buffer, value) {
      if (messages$46pigeon.PigeonFirebaseOptions.is(value)) {
        buffer.putUint8(128);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonInitializeResponse.is(value)) {
        buffer.putUint8(129);
        this.writeValue(buffer, value.encode());
      } else {
        super.writeValue(buffer, value);
      }
    }
    readValueOfType(type, buffer) {
      switch (type) {
        case 128:
          {
            return messages$46pigeon.PigeonFirebaseOptions.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 129:
          {
            return messages$46pigeon.PigeonInitializeResponse.decode(dart.nullCheck(this.readValue(buffer)));
          }
        default:
          {
            return super.readValueOfType(type, buffer);
          }
      }
    }
  };
  (messages$46pigeon._FirebaseCoreHostApiCodec.new = function() {
    messages$46pigeon._FirebaseCoreHostApiCodec.__proto__.new.call(this);
    ;
  }).prototype = messages$46pigeon._FirebaseCoreHostApiCodec.prototype;
  dart.addTypeTests(messages$46pigeon._FirebaseCoreHostApiCodec);
  dart.addTypeCaches(messages$46pigeon._FirebaseCoreHostApiCodec);
  dart.setLibraryUri(messages$46pigeon._FirebaseCoreHostApiCodec, I[74]);
  messages$46pigeon.FirebaseCoreHostApi = class FirebaseCoreHostApi extends core.Object {
    static ['_#new#tearOff'](opts) {
      let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
      return new messages$46pigeon.FirebaseCoreHostApi.new({binaryMessenger: binaryMessenger});
    }
    initializeApp(arg_appName, arg_initializeAppRequest) {
      return async.async(messages$46pigeon.PigeonInitializeResponse, (function* initializeApp() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseCoreHostApi.initializeApp", messages$46pigeon.FirebaseCoreHostApi.codec, {binaryMessenger: this[S$._binaryMessenger]});
        let replyMap = T$.MapNOfObjectN$ObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_appName, arg_initializeAppRequest])));
        if (replyMap == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyMap[S$.$_get]("error") != null) {
          let error = dart.nullCheck(T$.MapNOfObjectN$ObjectN().as(replyMap[S$.$_get]("error")));
          dart.throw(new message_codec.PlatformException.new({code: dart.nullCheck(T$.StringN().as(error[S$.$_get]("code"))), message: T$.StringN().as(error[S$.$_get]("message")), details: error[S$.$_get]("details")}));
        } else if (replyMap[S$.$_get]("result") == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonInitializeResponseN().as(replyMap[S$.$_get]("result")));
        }
      }).bind(this));
    }
    initializeCore() {
      return async.async(T$.ListOfPigeonInitializeResponseN(), (function* initializeCore() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseCoreHostApi.initializeCore", messages$46pigeon.FirebaseCoreHostApi.codec, {binaryMessenger: this[S$._binaryMessenger]});
        let replyMap = T$.MapNOfObjectN$ObjectN().as(yield channel.send(null));
        if (replyMap == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyMap[S$.$_get]("error") != null) {
          let error = dart.nullCheck(T$.MapNOfObjectN$ObjectN().as(replyMap[S$.$_get]("error")));
          dart.throw(new message_codec.PlatformException.new({code: dart.nullCheck(T$.StringN().as(error[S$.$_get]("code"))), message: T$.StringN().as(error[S$.$_get]("message")), details: error[S$.$_get]("details")}));
        } else if (replyMap[S$.$_get]("result") == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.ListNOfObjectN().as(replyMap[S$.$_get]("result")))[S$.$cast](T$.PigeonInitializeResponseN());
        }
      }).bind(this));
    }
    optionsFromResource() {
      return async.async(messages$46pigeon.PigeonFirebaseOptions, (function* optionsFromResource() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseCoreHostApi.optionsFromResource", messages$46pigeon.FirebaseCoreHostApi.codec, {binaryMessenger: this[S$._binaryMessenger]});
        let replyMap = T$.MapNOfObjectN$ObjectN().as(yield channel.send(null));
        if (replyMap == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyMap[S$.$_get]("error") != null) {
          let error = dart.nullCheck(T$.MapNOfObjectN$ObjectN().as(replyMap[S$.$_get]("error")));
          dart.throw(new message_codec.PlatformException.new({code: dart.nullCheck(T$.StringN().as(error[S$.$_get]("code"))), message: T$.StringN().as(error[S$.$_get]("message")), details: error[S$.$_get]("details")}));
        } else if (replyMap[S$.$_get]("result") == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonFirebaseOptionsN().as(replyMap[S$.$_get]("result")));
        }
      }).bind(this));
    }
  };
  (messages$46pigeon.FirebaseCoreHostApi.new = function(opts) {
    let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
    this[S$._binaryMessenger] = binaryMessenger;
    ;
  }).prototype = messages$46pigeon.FirebaseCoreHostApi.prototype;
  dart.addTypeTests(messages$46pigeon.FirebaseCoreHostApi);
  dart.addTypeCaches(messages$46pigeon.FirebaseCoreHostApi);
  dart.setMethodSignature(messages$46pigeon.FirebaseCoreHostApi, () => ({
    __proto__: dart.getMethods(messages$46pigeon.FirebaseCoreHostApi.__proto__),
    initializeApp: dart.fnType(async.Future$(messages$46pigeon.PigeonInitializeResponse), [core.String, messages$46pigeon.PigeonFirebaseOptions]),
    initializeCore: dart.fnType(async.Future$(core.List$(dart.nullable(messages$46pigeon.PigeonInitializeResponse))), []),
    optionsFromResource: dart.fnType(async.Future$(messages$46pigeon.PigeonFirebaseOptions), [])
  }));
  dart.setLibraryUri(messages$46pigeon.FirebaseCoreHostApi, I[74]);
  dart.setFieldSignature(messages$46pigeon.FirebaseCoreHostApi, () => ({
    __proto__: dart.getFields(messages$46pigeon.FirebaseCoreHostApi.__proto__),
    [S$._binaryMessenger]: dart.finalFieldType(dart.nullable(binary_messenger.BinaryMessenger))
  }));
  dart.setStaticFieldSignature(messages$46pigeon.FirebaseCoreHostApi, () => ['codec']);
  dart.defineLazy(messages$46pigeon.FirebaseCoreHostApi, {
    /*messages$46pigeon.FirebaseCoreHostApi.codec*/get codec() {
      return C[68] || CT.C68;
    }
  }, false);
  messages$46pigeon._FirebaseAppHostApiCodec = class _FirebaseAppHostApiCodec extends message_codecs.StandardMessageCodec {
    static ['_#new#tearOff']() {
      return new messages$46pigeon._FirebaseAppHostApiCodec.new();
    }
  };
  (messages$46pigeon._FirebaseAppHostApiCodec.new = function() {
    messages$46pigeon._FirebaseAppHostApiCodec.__proto__.new.call(this);
    ;
  }).prototype = messages$46pigeon._FirebaseAppHostApiCodec.prototype;
  dart.addTypeTests(messages$46pigeon._FirebaseAppHostApiCodec);
  dart.addTypeCaches(messages$46pigeon._FirebaseAppHostApiCodec);
  dart.setLibraryUri(messages$46pigeon._FirebaseAppHostApiCodec, I[74]);
  messages$46pigeon.FirebaseAppHostApi = class FirebaseAppHostApi extends core.Object {
    static ['_#new#tearOff'](opts) {
      let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
      return new messages$46pigeon.FirebaseAppHostApi.new({binaryMessenger: binaryMessenger});
    }
    setAutomaticDataCollectionEnabled(arg_appName, arg_enabled) {
      return async.async(dart.void, (function* setAutomaticDataCollectionEnabled() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAppHostApi.setAutomaticDataCollectionEnabled", messages$46pigeon.FirebaseAppHostApi.codec, {binaryMessenger: this[S$._binaryMessenger]});
        let replyMap = T$.MapNOfObjectN$ObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_appName, arg_enabled])));
        if (replyMap == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyMap[S$.$_get]("error") != null) {
          let error = dart.nullCheck(T$.MapNOfObjectN$ObjectN().as(replyMap[S$.$_get]("error")));
          dart.throw(new message_codec.PlatformException.new({code: dart.nullCheck(T$.StringN().as(error[S$.$_get]("code"))), message: T$.StringN().as(error[S$.$_get]("message")), details: error[S$.$_get]("details")}));
        } else {
          return;
        }
      }).bind(this));
    }
    setAutomaticResourceManagementEnabled(arg_appName, arg_enabled) {
      return async.async(dart.void, (function* setAutomaticResourceManagementEnabled() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAppHostApi.setAutomaticResourceManagementEnabled", messages$46pigeon.FirebaseAppHostApi.codec, {binaryMessenger: this[S$._binaryMessenger]});
        let replyMap = T$.MapNOfObjectN$ObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_appName, arg_enabled])));
        if (replyMap == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyMap[S$.$_get]("error") != null) {
          let error = dart.nullCheck(T$.MapNOfObjectN$ObjectN().as(replyMap[S$.$_get]("error")));
          dart.throw(new message_codec.PlatformException.new({code: dart.nullCheck(T$.StringN().as(error[S$.$_get]("code"))), message: T$.StringN().as(error[S$.$_get]("message")), details: error[S$.$_get]("details")}));
        } else {
          return;
        }
      }).bind(this));
    }
    delete(arg_appName) {
      return async.async(dart.void, (function* $delete() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAppHostApi.delete", messages$46pigeon.FirebaseAppHostApi.codec, {binaryMessenger: this[S$._binaryMessenger]});
        let replyMap = T$.MapNOfObjectN$ObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_appName])));
        if (replyMap == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyMap[S$.$_get]("error") != null) {
          let error = dart.nullCheck(T$.MapNOfObjectN$ObjectN().as(replyMap[S$.$_get]("error")));
          dart.throw(new message_codec.PlatformException.new({code: dart.nullCheck(T$.StringN().as(error[S$.$_get]("code"))), message: T$.StringN().as(error[S$.$_get]("message")), details: error[S$.$_get]("details")}));
        } else {
          return;
        }
      }).bind(this));
    }
  };
  (messages$46pigeon.FirebaseAppHostApi.new = function(opts) {
    let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
    this[S$._binaryMessenger] = binaryMessenger;
    ;
  }).prototype = messages$46pigeon.FirebaseAppHostApi.prototype;
  dart.addTypeTests(messages$46pigeon.FirebaseAppHostApi);
  dart.addTypeCaches(messages$46pigeon.FirebaseAppHostApi);
  dart.setMethodSignature(messages$46pigeon.FirebaseAppHostApi, () => ({
    __proto__: dart.getMethods(messages$46pigeon.FirebaseAppHostApi.__proto__),
    setAutomaticDataCollectionEnabled: dart.fnType(async.Future$(dart.void), [core.String, core.bool]),
    setAutomaticResourceManagementEnabled: dart.fnType(async.Future$(dart.void), [core.String, core.bool]),
    delete: dart.fnType(async.Future$(dart.void), [core.String])
  }));
  dart.setLibraryUri(messages$46pigeon.FirebaseAppHostApi, I[74]);
  dart.setFieldSignature(messages$46pigeon.FirebaseAppHostApi, () => ({
    __proto__: dart.getFields(messages$46pigeon.FirebaseAppHostApi.__proto__),
    [S$._binaryMessenger]: dart.finalFieldType(dart.nullable(binary_messenger.BinaryMessenger))
  }));
  dart.setStaticFieldSignature(messages$46pigeon.FirebaseAppHostApi, () => ['codec']);
  dart.defineLazy(messages$46pigeon.FirebaseAppHostApi, {
    /*messages$46pigeon.FirebaseAppHostApi.codec*/get codec() {
      return C[69] || CT.C69;
    }
  }, false);
  plugin_platform_interface.MockPlatformInterfaceMixin = class MockPlatformInterfaceMixin extends core.Object {};
  (plugin_platform_interface.MockPlatformInterfaceMixin.new = function() {
    ;
  }).prototype = plugin_platform_interface.MockPlatformInterfaceMixin.prototype;
  dart.addTypeTests(plugin_platform_interface.MockPlatformInterfaceMixin);
  dart.addTypeCaches(plugin_platform_interface.MockPlatformInterfaceMixin);
  plugin_platform_interface.MockPlatformInterfaceMixin[dart.implements] = () => [plugin_platform_interface.PlatformInterface];
  dart.setLibraryUri(plugin_platform_interface.MockPlatformInterfaceMixin, I[8]);
  mocks.MockFirebaseApp = class MockFirebaseApp extends core.Object {
    initializeApp(appName, initializeAppRequest) {
      return async.async(messages$46pigeon.PigeonInitializeResponse, function* initializeApp() {
        return new messages$46pigeon.PigeonInitializeResponse.new({name: appName, options: new messages$46pigeon.PigeonFirebaseOptions.new({apiKey: "123", projectId: "123", appId: "123", messagingSenderId: "123"}), pluginConstants: new (T$.IdentityMapOfStringN$ObjectN()).new()});
      });
    }
    initializeCore() {
      return async.async(T$.ListOfPigeonInitializeResponseN(), function* initializeCore() {
        return T$.JSArrayOfPigeonInitializeResponseN().of([new messages$46pigeon.PigeonInitializeResponse.new({name: "[DEFAULT]", options: new messages$46pigeon.PigeonFirebaseOptions.new({apiKey: "123", projectId: "123", appId: "123", messagingSenderId: "123"}), pluginConstants: new (T$.IdentityMapOfStringN$ObjectN()).new()})]);
      });
    }
    optionsFromResource() {
      return async.async(messages$46pigeon.PigeonFirebaseOptions, function* optionsFromResource() {
        return new messages$46pigeon.PigeonFirebaseOptions.new({apiKey: "123", projectId: "123", appId: "123", messagingSenderId: "123"});
      });
    }
    static ['_#new#tearOff']() {
      return new mocks.MockFirebaseApp.new();
    }
  };
  (mocks.MockFirebaseApp.new = function() {
    ;
  }).prototype = mocks.MockFirebaseApp.prototype;
  dart.addTypeTests(mocks.MockFirebaseApp);
  dart.addTypeCaches(mocks.MockFirebaseApp);
  mocks.MockFirebaseApp[dart.implements] = () => [test_api.TestFirebaseCoreHostApi];
  dart.setMethodSignature(mocks.MockFirebaseApp, () => ({
    __proto__: dart.getMethods(mocks.MockFirebaseApp.__proto__),
    initializeApp: dart.fnType(async.Future$(messages$46pigeon.PigeonInitializeResponse), [core.String, messages$46pigeon.PigeonFirebaseOptions]),
    initializeCore: dart.fnType(async.Future$(core.List$(dart.nullable(messages$46pigeon.PigeonInitializeResponse))), []),
    optionsFromResource: dart.fnType(async.Future$(messages$46pigeon.PigeonFirebaseOptions), [])
  }));
  dart.setLibraryUri(mocks.MockFirebaseApp, I[75]);
  mocks.setupFirebaseCoreMocks = function setupFirebaseCoreMocks() {
    test_api.TestFirebaseCoreHostApi.setup(new mocks.MockFirebaseApp.new());
  };
  test_api._TestFirebaseCoreHostApiCodec = class _TestFirebaseCoreHostApiCodec extends message_codecs.StandardMessageCodec {
    static ['_#new#tearOff']() {
      return new test_api._TestFirebaseCoreHostApiCodec.new();
    }
    writeValue(buffer, value) {
      if (messages$46pigeon.PigeonFirebaseOptions.is(value)) {
        buffer.putUint8(128);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonInitializeResponse.is(value)) {
        buffer.putUint8(129);
        this.writeValue(buffer, value.encode());
      } else {
        super.writeValue(buffer, value);
      }
    }
    readValueOfType(type, buffer) {
      switch (type) {
        case 128:
          {
            return messages$46pigeon.PigeonFirebaseOptions.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 129:
          {
            return messages$46pigeon.PigeonInitializeResponse.decode(dart.nullCheck(this.readValue(buffer)));
          }
        default:
          {
            return super.readValueOfType(type, buffer);
          }
      }
    }
  };
  (test_api._TestFirebaseCoreHostApiCodec.new = function() {
    test_api._TestFirebaseCoreHostApiCodec.__proto__.new.call(this);
    ;
  }).prototype = test_api._TestFirebaseCoreHostApiCodec.prototype;
  dart.addTypeTests(test_api._TestFirebaseCoreHostApiCodec);
  dart.addTypeCaches(test_api._TestFirebaseCoreHostApiCodec);
  dart.setLibraryUri(test_api._TestFirebaseCoreHostApiCodec, I[76]);
  test_api.TestFirebaseCoreHostApi = class TestFirebaseCoreHostApi extends core.Object {
    static setup(api, opts) {
      let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
      {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseCoreHostApi.initializeApp", test_api.TestFirebaseCoreHostApi.codec, {binaryMessenger: binaryMessenger});
        if (api == null) {
          deprecated['TestBasicMessageChannelExtension|setMockMessageHandler'](T$.ObjectN(), channel, null);
        } else {
          deprecated['TestBasicMessageChannelExtension|setMockMessageHandler'](T$.ObjectN(), channel, dart.fn(message => async.async(T$.MapOfObjectN$ObjectN(), function*() {
            if (!(message != null)) dart.assertFailed("Argument for dev.flutter.pigeon.FirebaseCoreHostApi.initializeApp was null.", I[77], 61, 18, "message != null");
            let args = dart.nullCheck(T$.ListNOfObjectN().as(message));
            let arg_appName = T$.StringN().as(args[S$.$_get](0));
            if (!(arg_appName != null)) dart.assertFailed("Argument for dev.flutter.pigeon.FirebaseCoreHostApi.initializeApp was null, expected non-null String.", I[77], 65, 18, "arg_appName != null");
            let arg_initializeAppRequest = T$.PigeonFirebaseOptionsN().as(args[S$.$_get](1));
            if (!(arg_initializeAppRequest != null)) dart.assertFailed("Argument for dev.flutter.pigeon.FirebaseCoreHostApi.initializeApp was null, expected non-null PigeonFirebaseOptions.", I[77], 69, 18, "arg_initializeAppRequest != null");
            let output = (yield api.initializeApp(dart.nullCheck(arg_appName), dart.nullCheck(arg_initializeAppRequest)));
            return new (T$.LinkedMapOfObjectN$ObjectN()).from(["result", output]);
          }), T$.ObjectNToFutureOfMapOfObjectN$ObjectN()));
        }
      }
      {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseCoreHostApi.initializeCore", test_api.TestFirebaseCoreHostApi.codec, {binaryMessenger: binaryMessenger});
        if (api == null) {
          deprecated['TestBasicMessageChannelExtension|setMockMessageHandler'](T$.ObjectN(), channel, null);
        } else {
          deprecated['TestBasicMessageChannelExtension|setMockMessageHandler'](T$.ObjectN(), channel, dart.fn(message => async.async(T$.MapOfObjectN$ObjectN(), function*() {
            let output = (yield api.initializeCore());
            return new (T$.LinkedMapOfObjectN$ObjectN()).from(["result", output]);
          }), T$.ObjectNToFutureOfMapOfObjectN$ObjectN()));
        }
      }
      {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseCoreHostApi.optionsFromResource", test_api.TestFirebaseCoreHostApi.codec, {binaryMessenger: binaryMessenger});
        if (api == null) {
          deprecated['TestBasicMessageChannelExtension|setMockMessageHandler'](T$.ObjectN(), channel, null);
        } else {
          deprecated['TestBasicMessageChannelExtension|setMockMessageHandler'](T$.ObjectN(), channel, dart.fn(message => async.async(T$.MapOfObjectN$ObjectN(), function*() {
            let output = (yield api.optionsFromResource());
            return new (T$.LinkedMapOfObjectN$ObjectN()).from(["result", output]);
          }), T$.ObjectNToFutureOfMapOfObjectN$ObjectN()));
        }
      }
    }
  };
  (test_api.TestFirebaseCoreHostApi.new = function() {
    ;
  }).prototype = test_api.TestFirebaseCoreHostApi.prototype;
  dart.addTypeTests(test_api.TestFirebaseCoreHostApi);
  dart.addTypeCaches(test_api.TestFirebaseCoreHostApi);
  dart.setStaticMethodSignature(test_api.TestFirebaseCoreHostApi, () => ['setup']);
  dart.setLibraryUri(test_api.TestFirebaseCoreHostApi, I[76]);
  dart.setStaticFieldSignature(test_api.TestFirebaseCoreHostApi, () => ['codec']);
  dart.defineLazy(test_api.TestFirebaseCoreHostApi, {
    /*test_api.TestFirebaseCoreHostApi.codec*/get codec() {
      return C[70] || CT.C70;
    }
  }, false);
  test_api._TestFirebaseAppHostApiCodec = class _TestFirebaseAppHostApiCodec extends message_codecs.StandardMessageCodec {
    static ['_#new#tearOff']() {
      return new test_api._TestFirebaseAppHostApiCodec.new();
    }
  };
  (test_api._TestFirebaseAppHostApiCodec.new = function() {
    test_api._TestFirebaseAppHostApiCodec.__proto__.new.call(this);
    ;
  }).prototype = test_api._TestFirebaseAppHostApiCodec.prototype;
  dart.addTypeTests(test_api._TestFirebaseAppHostApiCodec);
  dart.addTypeCaches(test_api._TestFirebaseAppHostApiCodec);
  dart.setLibraryUri(test_api._TestFirebaseAppHostApiCodec, I[76]);
  test_api.TestFirebaseAppHostApi = class TestFirebaseAppHostApi extends core.Object {
    static setup(api, opts) {
      let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
      {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAppHostApi.setAutomaticDataCollectionEnabled", test_api.TestFirebaseAppHostApi.codec, {binaryMessenger: binaryMessenger});
        if (api == null) {
          deprecated['TestBasicMessageChannelExtension|setMockMessageHandler'](T$.ObjectN(), channel, null);
        } else {
          deprecated['TestBasicMessageChannelExtension|setMockMessageHandler'](T$.ObjectN(), channel, dart.fn(message => async.async(T$.MapOfObjectN$ObjectN(), function*() {
            if (!(message != null)) dart.assertFailed("Argument for dev.flutter.pigeon.FirebaseAppHostApi.setAutomaticDataCollectionEnabled was null.", I[77], 131, 18, "message != null");
            let args = dart.nullCheck(T$.ListNOfObjectN().as(message));
            let arg_appName = T$.StringN().as(args[S$.$_get](0));
            if (!(arg_appName != null)) dart.assertFailed("Argument for dev.flutter.pigeon.FirebaseAppHostApi.setAutomaticDataCollectionEnabled was null, expected non-null String.", I[77], 135, 18, "arg_appName != null");
            let arg_enabled = T$.boolN().as(args[S$.$_get](1));
            if (!(arg_enabled != null)) dart.assertFailed("Argument for dev.flutter.pigeon.FirebaseAppHostApi.setAutomaticDataCollectionEnabled was null, expected non-null bool.", I[77], 138, 18, "arg_enabled != null");
            yield api.setAutomaticDataCollectionEnabled(dart.nullCheck(arg_appName), dart.nullCheck(arg_enabled));
            return new (T$.LinkedMapOfObjectN$ObjectN()).new();
          }), T$.ObjectNToFutureOfMapOfObjectN$ObjectN()));
        }
      }
      {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAppHostApi.setAutomaticResourceManagementEnabled", test_api.TestFirebaseAppHostApi.codec, {binaryMessenger: binaryMessenger});
        if (api == null) {
          deprecated['TestBasicMessageChannelExtension|setMockMessageHandler'](T$.ObjectN(), channel, null);
        } else {
          deprecated['TestBasicMessageChannelExtension|setMockMessageHandler'](T$.ObjectN(), channel, dart.fn(message => async.async(T$.MapOfObjectN$ObjectN(), function*() {
            if (!(message != null)) dart.assertFailed("Argument for dev.flutter.pigeon.FirebaseAppHostApi.setAutomaticResourceManagementEnabled was null.", I[77], 155, 18, "message != null");
            let args = dart.nullCheck(T$.ListNOfObjectN().as(message));
            let arg_appName = T$.StringN().as(args[S$.$_get](0));
            if (!(arg_appName != null)) dart.assertFailed("Argument for dev.flutter.pigeon.FirebaseAppHostApi.setAutomaticResourceManagementEnabled was null, expected non-null String.", I[77], 159, 18, "arg_appName != null");
            let arg_enabled = T$.boolN().as(args[S$.$_get](1));
            if (!(arg_enabled != null)) dart.assertFailed("Argument for dev.flutter.pigeon.FirebaseAppHostApi.setAutomaticResourceManagementEnabled was null, expected non-null bool.", I[77], 162, 18, "arg_enabled != null");
            yield api.setAutomaticResourceManagementEnabled(dart.nullCheck(arg_appName), dart.nullCheck(arg_enabled));
            return new (T$.LinkedMapOfObjectN$ObjectN()).new();
          }), T$.ObjectNToFutureOfMapOfObjectN$ObjectN()));
        }
      }
      {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAppHostApi.delete", test_api.TestFirebaseAppHostApi.codec, {binaryMessenger: binaryMessenger});
        if (api == null) {
          deprecated['TestBasicMessageChannelExtension|setMockMessageHandler'](T$.ObjectN(), channel, null);
        } else {
          deprecated['TestBasicMessageChannelExtension|setMockMessageHandler'](T$.ObjectN(), channel, dart.fn(message => async.async(T$.MapOfObjectN$ObjectN(), function*() {
            if (!(message != null)) dart.assertFailed("Argument for dev.flutter.pigeon.FirebaseAppHostApi.delete was null.", I[77], 178, 18, "message != null");
            let args = dart.nullCheck(T$.ListNOfObjectN().as(message));
            let arg_appName = T$.StringN().as(args[S$.$_get](0));
            if (!(arg_appName != null)) dart.assertFailed("Argument for dev.flutter.pigeon.FirebaseAppHostApi.delete was null, expected non-null String.", I[77], 182, 18, "arg_appName != null");
            yield api.delete(dart.nullCheck(arg_appName));
            return new (T$.LinkedMapOfObjectN$ObjectN()).new();
          }), T$.ObjectNToFutureOfMapOfObjectN$ObjectN()));
        }
      }
    }
  };
  (test_api.TestFirebaseAppHostApi.new = function() {
    ;
  }).prototype = test_api.TestFirebaseAppHostApi.prototype;
  dart.addTypeTests(test_api.TestFirebaseAppHostApi);
  dart.addTypeCaches(test_api.TestFirebaseAppHostApi);
  dart.setStaticMethodSignature(test_api.TestFirebaseAppHostApi, () => ['setup']);
  dart.setLibraryUri(test_api.TestFirebaseAppHostApi, I[76]);
  dart.setStaticFieldSignature(test_api.TestFirebaseAppHostApi, () => ['codec']);
  dart.defineLazy(test_api.TestFirebaseAppHostApi, {
    /*test_api.TestFirebaseAppHostApi.codec*/get codec() {
      return C[71] || CT.C71;
    }
  }, false);
  _flutterfire_internals['ObjectX|guard'] = function ObjectX$124guard(T, R, $this, cb) {
    if (T.is($this)) return cb(T.as($this));
    return null;
  };
  _flutterfire_internals['ObjectX|get#guard'] = function ObjectX$124get$35guard(T, $this) {
    return dart.fn((R, cb) => _flutterfire_internals['ObjectX|guard'](T, R, $this, cb), dart.gFnType(R => {
      var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
      return [__t$RN(), [dart.fnType(R, [T])]];
    }, R => {
      var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
      return [T$.ObjectN()];
    }));
  };
  _flutterfire_internals['ObjectX|safeCast'] = function ObjectX$124safeCast(T, R, $this) {
    if (R.is($this)) return R.as($this);
    return null;
  };
  _flutterfire_internals['ObjectX|get#safeCast'] = function ObjectX$124get$35safeCast(T, $this) {
    return dart.fn(R => _flutterfire_internals['ObjectX|safeCast'](T, R, $this), T$.VoidToRN());
  };
  _flutterfire_internals._firebaseExceptionFromCoreFirebaseError = function _firebaseExceptionFromCoreFirebaseError(firebaseError, opts) {
    let plugin = opts && 'plugin' in opts ? opts.plugin : null;
    let codeParser = opts && 'codeParser' in opts ? opts.codeParser : null;
    let messageParser = opts && 'messageParser' in opts ? opts.messageParser : null;
    let code = codeParser(firebaseError.code);
    let message = messageParser != null ? messageParser(code, firebaseError.message) : firebaseError.message[S$.$replaceFirst]("(" + firebaseError.code + ")", "");
    return new firebase_core_platform_interface.FirebaseException.new({plugin: plugin, message: message, code: code});
  };
  _flutterfire_internals._testException = function _testException(exception) {
    return dart.packageJSType("FirebaseError", false).is(exception);
  };
  _flutterfire_internals._mapException = function _mapException(exception, opts) {
    let plugin = opts && 'plugin' in opts ? opts.plugin : null;
    let codeParser = opts && 'codeParser' in opts ? opts.codeParser : null;
    let messageParser = opts && 'messageParser' in opts ? opts.messageParser : null;
    if (!_flutterfire_internals._testException(exception)) dart.assertFailed(null, I[78], 85, 10, "_testException(exception)");
    if (dart.packageJSType("FirebaseError", false).is(exception)) {
      return _flutterfire_internals._firebaseExceptionFromCoreFirebaseError(exception, {plugin: plugin, codeParser: codeParser, messageParser: messageParser});
    }
    dart.throw(new core.StateError.new("unrecognized error " + dart.str(exception)));
  };
  _flutterfire_internals.guardWebExceptions = function guardWebExceptions(R, cb, opts) {
    let plugin = opts && 'plugin' in opts ? opts.plugin : null;
    let codeParser = opts && 'codeParser' in opts ? opts.codeParser : null;
    let messageParser = opts && 'messageParser' in opts ? opts.messageParser : null;
    try {
      let value = cb();
      if (async.Future.is(value)) {
        return R.as(value.catchError(dart.fn((err, stack) => core.Error.throwWithStackTrace(_flutterfire_internals._mapException(err, {plugin: plugin, codeParser: codeParser, messageParser: messageParser}), core.StackTrace.as(stack)), T$.dynamicAnddynamicToNever()), {test: C[72] || CT.C72}));
      } else if (async.Stream.is(value)) {
        return R.as(value.handleError(dart.fn((err, stack) => core.Error.throwWithStackTrace(_flutterfire_internals._mapException(err, {plugin: plugin, codeParser: codeParser, messageParser: messageParser}), core.StackTrace.as(stack)), T$.dynamicAnddynamicToNever()), {test: C[72] || CT.C72}));
      }
      return value;
    } catch (e) {
      let error = dart.getThrown(e);
      let stack = dart.stackTrace(e);
      if (core.Object.is(error)) {
        if (!_flutterfire_internals._testException(error)) {
          dart.rethrow(e);
        }
        core.Error.throwWithStackTrace(_flutterfire_internals._mapException(error, {plugin: plugin, codeParser: codeParser, messageParser: messageParser}), stack);
      } else
        throw e;
    }
  };
  decode_utility.DecodeUtility = class DecodeUtility extends core.Object {
    static decodeMapData(data) {
      let t91;
      if (data == null) {
        return null;
      }
      t91 = data;
      return (() => {
        t91[S$.$updateAll](dart.fn((key, value) => decode_utility.DecodeUtility.valueDecode(value), T$.StringAnddynamicTodynamic()));
        return t91;
      })();
    }
    static decodeArrayData(data) {
      if (data == null) {
        return null;
      }
      return data[S$.$map](dart.dynamic, C[73] || CT.C73)[S$.$toList]();
    }
    static valueDecode(value) {
      if (js_util.instanceof(value, dart.global.firebase_firestore.GeoPoint)) {
        return new geo_point.GeoPoint.new(core.double.as(dart.dload(value, 'latitude')), core.double.as(dart.dload(value, 'longitude')));
      } else if (core.DateTime.is(value)) {
        return timestamp.Timestamp.fromDate(value);
      } else if (js_util.instanceof(value, dart.global.firebase_firestore.Bytes)) {
        return new blob.Blob.new(typed_data.Uint8List.as(dart.dsend(value, 'toUint8Array', [])));
      } else if (firestore.DocumentReference.is(value)) {
        return cloud_firestore_web.FirebaseFirestoreWeb.as(platform_interface_firestore.FirebaseFirestorePlatform.instance).doc(value.path);
      } else if (T$.MapOfString$dynamic().is(value)) {
        return decode_utility.DecodeUtility.decodeMapData(value);
      } else if (core.List.is(value)) {
        return decode_utility.DecodeUtility.decodeArrayData(value);
      }
      return value;
    }
    static ['_#new#tearOff']() {
      return new decode_utility.DecodeUtility.new();
    }
  };
  (decode_utility.DecodeUtility.new = function() {
    ;
  }).prototype = decode_utility.DecodeUtility.prototype;
  dart.addTypeTests(decode_utility.DecodeUtility);
  dart.addTypeCaches(decode_utility.DecodeUtility);
  dart.setStaticMethodSignature(decode_utility.DecodeUtility, () => ['decodeMapData', 'decodeArrayData', 'valueDecode']);
  dart.setLibraryUri(decode_utility.DecodeUtility, I[79]);
  js_interop.dartifyDate = function dartifyDate(jsObject) {
    if (js_util.hasProperty(jsObject, "toDateString")) {
      try {
        let date = jsObject;
        return new core.DateTime.fromMillisecondsSinceEpoch(core.int.as(dart.dsend(date, 'getTime', [])));
      } catch (e) {
        let ex = dart.getThrown(e);
        if (core.NoSuchMethodError.is(ex)) {
          return null;
        } else
          throw e;
      }
    }
    return null;
  };
  utils$.dartify = function dartify$(jsObject, customDartify = null) {
    let t93;
    if (utils$._isBasicType(jsObject)) {
      return jsObject;
    }
    if (core.Iterable.is(jsObject)) {
      return jsObject[S$.$map](dart.dynamic, dart.fn(item => utils$.dartify(item, customDartify), T$.dynamicTodynamic()))[S$.$toList]();
    }
    let jsDate = js_interop.dartifyDate(dart.nullCheck(jsObject));
    if (jsDate != null) {
      return jsDate;
    }
    let value = (t93 = customDartify, t93 == null ? null : t93(jsObject));
    if (value == null) {
      let keys = dart.global.Object.keys(jsObject);
      let map = new (T$.IdentityMapOfString$dynamic()).new();
      for (let key of keys) {
        map[S$.$_set](key, utils$.dartify(js_util.getProperty(T$.ObjectN(), jsObject, key), customDartify));
      }
      return map;
    }
    return value;
  };
  utils$.jsifyList = function jsifyList(list, customJsify = null) {
    return dart.global.Array.from(list[S$.$map](dart.dynamic, dart.fn(item => utils$.jsify(item, customJsify), T$.dynamicTodynamic()))[S$.$toList]());
  };
  utils$.jsify = function jsify$(dartObject, customJsify = null) {
    let t93;
    if (utils$._isBasicType(dartObject)) {
      if (dartObject == null) {
        return null;
      }
      return dartObject;
    }
    if (core.Iterable.is(dartObject)) {
      return utils$.jsifyList(dartObject, customJsify);
    }
    if (core.Map.is(dartObject)) {
      let jsMap = js_util.newObject(dart.dynamic);
      dartObject[S$.$forEach](dart.fn((key, value) => {
        js_util.setProperty(core.Object, core.Object.as(jsMap), core.Object.as(key), utils$.jsify(value, customJsify));
      }, T$.dynamicAnddynamicTovoid()));
      return jsMap;
    }
    if (core.Function.is(dartObject)) {
      return js.allowInterop(core.Function, dartObject);
    }
    let value = (t93 = customJsify, t93 == null ? null : t93(dartObject));
    if (value == null) {
      dart.throw(new core.ArgumentError.value(dartObject, "dartObject", "Could not convert"));
    }
    return value;
  };
  utils$.callMethod = function callMethod(jsObject, method, args) {
    return js_util.callMethod(dart.dynamic, jsObject, method, args);
  };
  utils$._isBasicType = function _isBasicType(value) {
    if (value == null || typeof value == 'number' || typeof value == 'boolean' || typeof value == 'string') {
      return true;
    }
    return false;
  };
  utils$.handleThenable = function handleThenable(T, thenable) {
    return async.async(T, function* handleThenable() {
      return js_util.promiseToFuture(T, thenable);
    });
  };
  utils$.handleFutureWithMapper = function handleFutureWithMapper(T, S, future, mapper) {
    return new dart.global.Promise(js.allowInterop(core.Function, dart.fn((resolve, reject) => {
      future.then(core.Null, dart.fn(value => {
        let mappedValue = mapper(value);
        resolve(mappedValue);
      }, dart.fnType(core.Null, [T]))).catchError(dart.fn(error => reject(core.Object.as(error)), T$.dynamicTodynamic()));
    }, dart.fnType(core.Null, [dart.fnType(dart.dynamic, [S]), T$.ObjectTodynamic()]))));
  };
  encode_utility.EncodeUtility = class EncodeUtility extends core.Object {
    static encodeMapData(data) {
      if (data == null) {
        return null;
      }
      let output = T$.LinkedHashMapOfString$dynamic().from(data);
      output[S$.$updateAll](dart.fn((key, value) => encode_utility.EncodeUtility.valueEncode(value), T$.StringAnddynamicTodynamic()));
      return output;
    }
    static encodeArrayData(data) {
      if (data == null) {
        return null;
      }
      return core.List.from(data)[S$.$map](dart.dynamic, C[74] || CT.C74)[S$.$toList]();
    }
    static valueEncode(value) {
      if (platform_interface_field_value.FieldValuePlatform.is(value)) {
        let delegate = field_value_web.FieldValueWeb.as(platform_interface_field_value.FieldValuePlatform.getDelegate(value));
        return delegate.data;
      } else if (field_path.FieldPath.is(value)) {
        let components = value.components;
        let length = components[S$.$length];
        switch (length) {
          case 1:
            {
              return new dart.global.firebase_firestore.FieldPath(components[S$.$_get](0));
            }
          case 2:
            {
              return new dart.global.firebase_firestore.FieldPath(components[S$.$_get](0), components[S$.$_get](1));
            }
          case 3:
            {
              return new dart.global.firebase_firestore.FieldPath(components[S$.$_get](0), components[S$.$_get](1), components[S$.$_get](2));
            }
          case 4:
            {
              return new dart.global.firebase_firestore.FieldPath(components[S$.$_get](0), components[S$.$_get](1), components[S$.$_get](2), components[S$.$_get](3));
            }
          case 5:
            {
              return new dart.global.firebase_firestore.FieldPath(components[S$.$_get](0), components[S$.$_get](1), components[S$.$_get](2), components[S$.$_get](3), components[S$.$_get](4));
            }
          case 6:
            {
              return new dart.global.firebase_firestore.FieldPath(components[S$.$_get](0), components[S$.$_get](1), components[S$.$_get](2), components[S$.$_get](3), components[S$.$_get](4), components[S$.$_get](5));
            }
          case 7:
            {
              return new dart.global.firebase_firestore.FieldPath(components[S$.$_get](0), components[S$.$_get](1), components[S$.$_get](2), components[S$.$_get](3), components[S$.$_get](4), components[S$.$_get](5), components[S$.$_get](6));
            }
          case 8:
            {
              return new dart.global.firebase_firestore.FieldPath(components[S$.$_get](0), components[S$.$_get](1), components[S$.$_get](2), components[S$.$_get](3), components[S$.$_get](4), components[S$.$_get](5), components[S$.$_get](6), components[S$.$_get](7));
            }
          case 9:
            {
              return new dart.global.firebase_firestore.FieldPath(components[S$.$_get](0), components[S$.$_get](1), components[S$.$_get](2), components[S$.$_get](3), components[S$.$_get](4), components[S$.$_get](5), components[S$.$_get](6), components[S$.$_get](7), components[S$.$_get](8));
            }
          case 10:
            {
              return new dart.global.firebase_firestore.FieldPath(components[S$.$_get](0), components[S$.$_get](1), components[S$.$_get](2), components[S$.$_get](3), components[S$.$_get](4), components[S$.$_get](5), components[S$.$_get](6), components[S$.$_get](7), components[S$.$_get](8), components[S$.$_get](9));
            }
          default:
            {
              dart.throw(core.Exception.new("Firestore web FieldPath only supports 10 levels deep field paths"));
            }
        }
      } else if (dart.equals(value, field_path.FieldPath.documentId)) {
        return dart.global.firebase_firestore.documentId();
      } else if (timestamp.Timestamp.is(value)) {
        return value.toDate();
      } else if (geo_point.GeoPoint.is(value)) {
        return new dart.global.firebase_firestore.GeoPoint(value.latitude, value.longitude);
      } else if (blob.Blob.is(value)) {
        return dart.global.firebase_firestore.Bytes.fromUint8Array(value.bytes);
      } else if (document_reference_web.DocumentReferenceWeb.is(value)) {
        return value.firestoreWeb.doc(value.path);
      } else if (T$.MapOfString$dynamic().is(value)) {
        return encode_utility.EncodeUtility.encodeMapData(value);
      } else if (core.List.is(value)) {
        return encode_utility.EncodeUtility.encodeArrayData(value);
      }
      return value;
    }
    static ['_#new#tearOff']() {
      return new encode_utility.EncodeUtility.new();
    }
  };
  (encode_utility.EncodeUtility.new = function() {
    ;
  }).prototype = encode_utility.EncodeUtility.prototype;
  dart.addTypeTests(encode_utility.EncodeUtility);
  dart.addTypeCaches(encode_utility.EncodeUtility);
  dart.setStaticMethodSignature(encode_utility.EncodeUtility, () => ['encodeMapData', 'encodeArrayData', 'valueEncode']);
  dart.setLibraryUri(encode_utility.EncodeUtility, I[80]);
  field_value_web.FieldValueWeb = class FieldValueWeb extends core.Object {
    get data() {
      return this[S$.data];
    }
    set data(value) {
      this[S$.data] = value;
    }
    static ['_#new#tearOff'](data) {
      return new field_value_web.FieldValueWeb.new(data);
    }
    _equals(other) {
      if (other == null) return false;
      return field_value_web.FieldValueWeb.is(other) && other.data[S$.$_equals](this.data);
    }
    get hashCode() {
      return this.data[S$.$hashCode];
    }
  };
  (field_value_web.FieldValueWeb.new = function(data) {
    this[S$.data] = data;
    ;
  }).prototype = field_value_web.FieldValueWeb.prototype;
  dart.addTypeTests(field_value_web.FieldValueWeb);
  dart.addTypeCaches(field_value_web.FieldValueWeb);
  dart.setLibraryUri(field_value_web.FieldValueWeb, I[81]);
  dart.setFieldSignature(field_value_web.FieldValueWeb, () => ({
    __proto__: dart.getFields(field_value_web.FieldValueWeb.__proto__),
    data: dart.fieldType(firestore.FieldValue)
  }));
  dart.defineExtensionMethods(field_value_web.FieldValueWeb, ['_equals']);
  dart.defineExtensionAccessors(field_value_web.FieldValueWeb, ['hashCode']);
  utils$0.dartify = function dartify$0(jsObject) {
    return utils$.dartify(jsObject, dart.fn(object => {
      if (object == null) {
        return null;
      }
      if (js_util.instanceof(object, dart.global.firebase_firestore.DocumentReference)) {
        return firestore.DocumentReference.getInstance(dart.packageJSType("firebase_firestore.DocumentReference", false).as(object));
      }
      if (js_util.instanceof(object, dart.global.firebase_firestore.GeoPoint)) {
        return object;
      }
      if (js_util.instanceof(object, dart.global.firebase_firestore.Timestamp)) {
        return new timestamp.Timestamp.new(dart.packageJSType("firebase_firestore.Timestamp", false).as(object).seconds, object.nanoseconds);
      }
      if (js_util.instanceof(object, dart.global.firebase_firestore.Bytes)) {
        return dart.packageJSType("BytesJsImpl", false).as(object);
      }
      return null;
    }, T$.ObjectNToObjectN()));
  };
  utils$0.jsify = function jsify$0(dartObject) {
    if (dartObject == null) {
      return null;
    }
    return utils$.jsify(dartObject, dart.fn(object => {
      if (core.DateTime.is(object)) {
        return dart.global.firebase_firestore.Timestamp.fromMillis(object.millisecondsSinceEpoch);
      }
      if (timestamp.Timestamp.is(object)) {
        return dart.global.firebase_firestore.Timestamp.fromMillis(object.millisecondsSinceEpoch);
      }
      if (firestore.DocumentReference.is(object)) {
        return object.jsObject;
      }
      if (firestore.FieldValue.is(object)) {
        return firestore.jsifyFieldValue(object);
      }
      if (dart.packageJSType("BytesJsImpl", false).is(object)) {
        return object;
      }
      if (dart.packageJSType("firebase_firestore.GeoPoint", false).is(object)) {
        return dartObject;
      }
      if (core.Function.is(object)) {
        return js.allowInterop(core.Function, object);
      }
      return null;
    }, T$.ObjectNTodynamic()));
  };
  action_code_info.ActionCodeInfoOperation = class ActionCodeInfoOperation extends core._Enum {
    [S$._enumToString]() {
      return "ActionCodeInfoOperation." + this[S$._name];
    }
  };
  (action_code_info.ActionCodeInfoOperation.new = function(index, name) {
    action_code_info.ActionCodeInfoOperation.__proto__.new.call(this, index, name);
    ;
  }).prototype = action_code_info.ActionCodeInfoOperation.prototype;
  dart.addTypeTests(action_code_info.ActionCodeInfoOperation);
  dart.addTypeCaches(action_code_info.ActionCodeInfoOperation);
  dart.setMethodSignature(action_code_info.ActionCodeInfoOperation, () => ({
    __proto__: dart.getMethods(action_code_info.ActionCodeInfoOperation.__proto__),
    [S$._enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(action_code_info.ActionCodeInfoOperation, I[82]);
  dart.setStaticFieldSignature(action_code_info.ActionCodeInfoOperation, () => ['values', 'unknown', 'passwordReset', 'verifyEmail', 'recoverEmail', 'emailSignIn', 'verifyAndChangeEmail', 'revertSecondFactorAddition']);
  dart.defineLazy(action_code_info.ActionCodeInfoOperation, {
    /*action_code_info.ActionCodeInfoOperation.values*/get values() {
      return C[75] || CT.C75;
    },
    /*action_code_info.ActionCodeInfoOperation.unknown*/get unknown() {
      return C[76] || CT.C76;
    },
    /*action_code_info.ActionCodeInfoOperation.passwordReset*/get passwordReset() {
      return C[77] || CT.C77;
    },
    /*action_code_info.ActionCodeInfoOperation.verifyEmail*/get verifyEmail() {
      return C[78] || CT.C78;
    },
    /*action_code_info.ActionCodeInfoOperation.recoverEmail*/get recoverEmail() {
      return C[79] || CT.C79;
    },
    /*action_code_info.ActionCodeInfoOperation.emailSignIn*/get emailSignIn() {
      return C[80] || CT.C80;
    },
    /*action_code_info.ActionCodeInfoOperation.verifyAndChangeEmail*/get verifyAndChangeEmail() {
      return C[81] || CT.C81;
    },
    /*action_code_info.ActionCodeInfoOperation.revertSecondFactorAddition*/get revertSecondFactorAddition() {
      return C[82] || CT.C82;
    }
  }, false);
  action_code_info.ActionCodeInfo = class ActionCodeInfo extends core.Object {
    static ['_#new#tearOff'](opts) {
      let operation = opts && 'operation' in opts ? opts.operation : null;
      let data = opts && 'data' in opts ? opts.data : null;
      return new action_code_info.ActionCodeInfo.new({operation: operation, data: data});
    }
    get operation() {
      switch (this[S$._operation]) {
        case 0:
          {
            return action_code_info.ActionCodeInfoOperation.unknown;
          }
        case 1:
          {
            return action_code_info.ActionCodeInfoOperation.passwordReset;
          }
        case 2:
          {
            return action_code_info.ActionCodeInfoOperation.verifyEmail;
          }
        case 3:
          {
            return action_code_info.ActionCodeInfoOperation.recoverEmail;
          }
        case 4:
          {
            return action_code_info.ActionCodeInfoOperation.emailSignIn;
          }
        case 5:
          {
            return action_code_info.ActionCodeInfoOperation.verifyAndChangeEmail;
          }
        case 6:
          {
            return action_code_info.ActionCodeInfoOperation.revertSecondFactorAddition;
          }
        default:
          {
            dart.throw(new core.FallThroughError.new());
          }
      }
    }
    get data() {
      return new (T$.IdentityMapOfString$dynamic()).from(["email", this[S$._data$1][S$.$_get]("email"), "previousEmail", this[S$._data$1][S$.$_get]("previousEmail")]);
    }
  };
  (action_code_info.ActionCodeInfo.new = function(opts) {
    let operation = opts && 'operation' in opts ? opts.operation : null;
    let data = opts && 'data' in opts ? opts.data : null;
    this[S$._operation] = operation;
    this[S$._data$1] = data;
    ;
  }).prototype = action_code_info.ActionCodeInfo.prototype;
  dart.addTypeTests(action_code_info.ActionCodeInfo);
  dart.addTypeCaches(action_code_info.ActionCodeInfo);
  dart.setGetterSignature(action_code_info.ActionCodeInfo, () => ({
    __proto__: dart.getGetters(action_code_info.ActionCodeInfo.__proto__),
    operation: action_code_info.ActionCodeInfoOperation,
    data: core.Map$(core.String, dart.dynamic)
  }));
  dart.setLibraryUri(action_code_info.ActionCodeInfo, I[82]);
  dart.setFieldSignature(action_code_info.ActionCodeInfo, () => ({
    __proto__: dart.getFields(action_code_info.ActionCodeInfo.__proto__),
    [S$._operation]: dart.fieldType(core.int),
    [S$._data$1]: dart.fieldType(core.Map$(core.String, dart.dynamic))
  }));
  action_code_settings.ActionCodeSettings = class ActionCodeSettings extends core.Object {
    get androidPackageName() {
      return this[S$.androidPackageName];
    }
    set androidPackageName(value) {
      super.androidPackageName = value;
    }
    get androidMinimumVersion() {
      return this[S$.androidMinimumVersion];
    }
    set androidMinimumVersion(value) {
      super.androidMinimumVersion = value;
    }
    get androidInstallApp() {
      return this[S$.androidInstallApp];
    }
    set androidInstallApp(value) {
      super.androidInstallApp = value;
    }
    get iOSBundleId() {
      return this[S$.iOSBundleId];
    }
    set iOSBundleId(value) {
      super.iOSBundleId = value;
    }
    get dynamicLinkDomain() {
      return this[S$.dynamicLinkDomain];
    }
    set dynamicLinkDomain(value) {
      super.dynamicLinkDomain = value;
    }
    get handleCodeInApp() {
      return this[S$.handleCodeInApp];
    }
    set handleCodeInApp(value) {
      super.handleCodeInApp = value;
    }
    get url() {
      return this[S$.url];
    }
    set url(value) {
      super.url = value;
    }
    static ['_#new#tearOff'](opts) {
      let androidPackageName = opts && 'androidPackageName' in opts ? opts.androidPackageName : null;
      let androidMinimumVersion = opts && 'androidMinimumVersion' in opts ? opts.androidMinimumVersion : null;
      let androidInstallApp = opts && 'androidInstallApp' in opts ? opts.androidInstallApp : null;
      let dynamicLinkDomain = opts && 'dynamicLinkDomain' in opts ? opts.dynamicLinkDomain : null;
      let handleCodeInApp = opts && 'handleCodeInApp' in opts ? opts.handleCodeInApp : null;
      let iOSBundleId = opts && 'iOSBundleId' in opts ? opts.iOSBundleId : null;
      let url = opts && 'url' in opts ? opts.url : null;
      return new action_code_settings.ActionCodeSettings.new({androidPackageName: androidPackageName, androidMinimumVersion: androidMinimumVersion, androidInstallApp: androidInstallApp, dynamicLinkDomain: dynamicLinkDomain, handleCodeInApp: handleCodeInApp, iOSBundleId: iOSBundleId, url: url});
    }
    asMap() {
      return (() => {
        let t95 = new (T$.IdentityMapOfString$dynamic()).new();
        t95[S$.$_set]("url", this.url);
        t95[S$.$_set]("dynamicLinkDomain", this.dynamicLinkDomain);
        t95[S$.$_set]("handleCodeInApp", this.handleCodeInApp);
        if (this.iOSBundleId != null) t95[S$.$_set]("iOS", new (T$.IdentityMapOfString$StringN()).from(["bundleId", this.iOSBundleId]));
        if (this.androidPackageName != null) t95[S$.$_set]("android", new (T$.IdentityMapOfString$ObjectN()).from(["packageName", this.androidPackageName, "minimumVersion", this.androidMinimumVersion, "installApp", this.androidInstallApp]));
        return t95;
      })();
    }
    toString() {
      return dart.str(dart.wrapType(action_code_settings.ActionCodeSettings)) + "(" + dart.str(dart.bind(this, 'asMap')) + ")";
    }
  };
  (action_code_settings.ActionCodeSettings.new = function(opts) {
    let androidPackageName = opts && 'androidPackageName' in opts ? opts.androidPackageName : null;
    let androidMinimumVersion = opts && 'androidMinimumVersion' in opts ? opts.androidMinimumVersion : null;
    let androidInstallApp = opts && 'androidInstallApp' in opts ? opts.androidInstallApp : null;
    let dynamicLinkDomain = opts && 'dynamicLinkDomain' in opts ? opts.dynamicLinkDomain : null;
    let handleCodeInApp = opts && 'handleCodeInApp' in opts ? opts.handleCodeInApp : null;
    let iOSBundleId = opts && 'iOSBundleId' in opts ? opts.iOSBundleId : null;
    let url = opts && 'url' in opts ? opts.url : null;
    this[S$.androidPackageName] = androidPackageName;
    this[S$.androidMinimumVersion] = androidMinimumVersion;
    this[S$.androidInstallApp] = androidInstallApp;
    this[S$.dynamicLinkDomain] = dynamicLinkDomain;
    this[S$.handleCodeInApp] = handleCodeInApp;
    this[S$.iOSBundleId] = iOSBundleId;
    this[S$.url] = url;
    ;
  }).prototype = action_code_settings.ActionCodeSettings.prototype;
  dart.addTypeTests(action_code_settings.ActionCodeSettings);
  dart.addTypeCaches(action_code_settings.ActionCodeSettings);
  dart.setMethodSignature(action_code_settings.ActionCodeSettings, () => ({
    __proto__: dart.getMethods(action_code_settings.ActionCodeSettings.__proto__),
    asMap: dart.fnType(core.Map$(core.String, dart.dynamic), [])
  }));
  dart.setLibraryUri(action_code_settings.ActionCodeSettings, I[83]);
  dart.setFieldSignature(action_code_settings.ActionCodeSettings, () => ({
    __proto__: dart.getFields(action_code_settings.ActionCodeSettings.__proto__),
    androidPackageName: dart.finalFieldType(dart.nullable(core.String)),
    androidMinimumVersion: dart.finalFieldType(dart.nullable(core.String)),
    androidInstallApp: dart.finalFieldType(dart.nullable(core.bool)),
    iOSBundleId: dart.finalFieldType(dart.nullable(core.String)),
    dynamicLinkDomain: dart.finalFieldType(dart.nullable(core.String)),
    handleCodeInApp: dart.finalFieldType(dart.nullable(core.bool)),
    url: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(action_code_settings.ActionCodeSettings, ['toString']);
  additional_user_info.AdditionalUserInfo = class AdditionalUserInfo extends core.Object {
    get isNewUser() {
      return this[S$.isNewUser];
    }
    set isNewUser(value) {
      super.isNewUser = value;
    }
    get profile() {
      return this[S$.profile];
    }
    set profile(value) {
      super.profile = value;
    }
    get providerId() {
      return this[S$.providerId];
    }
    set providerId(value) {
      super.providerId = value;
    }
    get username() {
      return this[S$.username];
    }
    set username(value) {
      super.username = value;
    }
    static ['_#new#tearOff'](opts) {
      let isNewUser = opts && 'isNewUser' in opts ? opts.isNewUser : null;
      let profile = opts && 'profile' in opts ? opts.profile : null;
      let providerId = opts && 'providerId' in opts ? opts.providerId : null;
      let username = opts && 'username' in opts ? opts.username : null;
      return new additional_user_info.AdditionalUserInfo.new({isNewUser: isNewUser, profile: profile, providerId: providerId, username: username});
    }
    toString() {
      return dart.str(dart.wrapType(additional_user_info.AdditionalUserInfo)) + "(" + "isNewUser: " + dart.str(this.isNewUser) + ", " + "profile: " + dart.str(this.profile) + ", " + "providerId: " + dart.str(this.providerId) + ", " + "username: " + dart.str(this.username) + ")";
    }
  };
  (additional_user_info.AdditionalUserInfo.new = function(opts) {
    let isNewUser = opts && 'isNewUser' in opts ? opts.isNewUser : null;
    let profile = opts && 'profile' in opts ? opts.profile : null;
    let providerId = opts && 'providerId' in opts ? opts.providerId : null;
    let username = opts && 'username' in opts ? opts.username : null;
    this[S$.isNewUser] = isNewUser;
    this[S$.profile] = profile;
    this[S$.providerId] = providerId;
    this[S$.username] = username;
    ;
  }).prototype = additional_user_info.AdditionalUserInfo.prototype;
  dart.addTypeTests(additional_user_info.AdditionalUserInfo);
  dart.addTypeCaches(additional_user_info.AdditionalUserInfo);
  dart.setLibraryUri(additional_user_info.AdditionalUserInfo, I[84]);
  dart.setFieldSignature(additional_user_info.AdditionalUserInfo, () => ({
    __proto__: dart.getFields(additional_user_info.AdditionalUserInfo.__proto__),
    isNewUser: dart.finalFieldType(core.bool),
    profile: dart.finalFieldType(dart.nullable(core.Map$(core.String, dart.dynamic))),
    providerId: dart.finalFieldType(dart.nullable(core.String)),
    username: dart.finalFieldType(dart.nullable(core.String))
  }));
  dart.defineExtensionMethods(additional_user_info.AdditionalUserInfo, ['toString']);
  auth_credential.AuthCredential = class AuthCredential extends core.Object {
    get providerId() {
      return this[S$.providerId$1];
    }
    set providerId(value) {
      super.providerId = value;
    }
    get signInMethod() {
      return this[S$.signInMethod];
    }
    set signInMethod(value) {
      super.signInMethod = value;
    }
    get token() {
      return this[S$.token];
    }
    set token(value) {
      super.token = value;
    }
    get accessToken() {
      return this[S$.accessToken];
    }
    set accessToken(value) {
      super.accessToken = value;
    }
    static ['_#new#tearOff'](opts) {
      let providerId = opts && 'providerId' in opts ? opts.providerId : null;
      let signInMethod = opts && 'signInMethod' in opts ? opts.signInMethod : null;
      let token = opts && 'token' in opts ? opts.token : null;
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      return new auth_credential.AuthCredential.new({providerId: providerId, signInMethod: signInMethod, token: token, accessToken: accessToken});
    }
    asMap() {
      return new (T$.IdentityMapOfString$dynamic()).from(["providerId", this.providerId, "signInMethod", this.signInMethod, "token", this.token, "accessToken", this.accessToken]);
    }
    toString() {
      return "AuthCredential(providerId: " + this.providerId + ", signInMethod: " + this.signInMethod + ", token: " + dart.str(this.token) + ", accessToken: " + dart.str(this.accessToken) + ")";
    }
  };
  (auth_credential.AuthCredential.new = function(opts) {
    let providerId = opts && 'providerId' in opts ? opts.providerId : null;
    let signInMethod = opts && 'signInMethod' in opts ? opts.signInMethod : null;
    let token = opts && 'token' in opts ? opts.token : null;
    let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
    this[S$.providerId$1] = providerId;
    this[S$.signInMethod] = signInMethod;
    this[S$.token] = token;
    this[S$.accessToken] = accessToken;
    ;
  }).prototype = auth_credential.AuthCredential.prototype;
  dart.addTypeTests(auth_credential.AuthCredential);
  dart.addTypeCaches(auth_credential.AuthCredential);
  dart.setMethodSignature(auth_credential.AuthCredential, () => ({
    __proto__: dart.getMethods(auth_credential.AuthCredential.__proto__),
    asMap: dart.fnType(core.Map$(core.String, dart.dynamic), [])
  }));
  dart.setLibraryUri(auth_credential.AuthCredential, I[85]);
  dart.setFieldSignature(auth_credential.AuthCredential, () => ({
    __proto__: dart.getFields(auth_credential.AuthCredential.__proto__),
    providerId: dart.finalFieldType(core.String),
    signInMethod: dart.finalFieldType(core.String),
    token: dart.finalFieldType(dart.nullable(core.int)),
    accessToken: dart.finalFieldType(dart.nullable(core.String))
  }));
  dart.defineExtensionMethods(auth_credential.AuthCredential, ['toString']);
  auth_provider.AuthProvider = class AuthProvider extends core.Object {
    get providerId() {
      return this[S$.providerId$2];
    }
    set providerId(value) {
      super.providerId = value;
    }
    toString() {
      return "AuthProvider(providerId: " + this.providerId + ")";
    }
  };
  (auth_provider.AuthProvider.new = function(providerId) {
    this[S$.providerId$2] = providerId;
    ;
  }).prototype = auth_provider.AuthProvider.prototype;
  dart.addTypeTests(auth_provider.AuthProvider);
  dart.addTypeCaches(auth_provider.AuthProvider);
  dart.setLibraryUri(auth_provider.AuthProvider, I[86]);
  dart.setFieldSignature(auth_provider.AuthProvider, () => ({
    __proto__: dart.getFields(auth_provider.AuthProvider.__proto__),
    providerId: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(auth_provider.AuthProvider, ['toString']);
  firebase_auth_exception.FirebaseAuthException = class FirebaseAuthException extends firebase_core_platform_interface.FirebaseException {
    get email() {
      return this[S$.email];
    }
    set email(value) {
      super.email = value;
    }
    get credential() {
      return this[S$.credential$1];
    }
    set credential(value) {
      super.credential = value;
    }
    get phoneNumber() {
      return this[S$.phoneNumber];
    }
    set phoneNumber(value) {
      super.phoneNumber = value;
    }
    get tenantId() {
      return this[S$.tenantId$1];
    }
    set tenantId(value) {
      super.tenantId = value;
    }
    static ['_#new#tearOff'](opts) {
      let message = opts && 'message' in opts ? opts.message : null;
      let code = opts && 'code' in opts ? opts.code : null;
      let email = opts && 'email' in opts ? opts.email : null;
      let credential = opts && 'credential' in opts ? opts.credential : null;
      let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
      let tenantId = opts && 'tenantId' in opts ? opts.tenantId : null;
      return new firebase_auth_exception.FirebaseAuthException.new({message: message, code: code, email: email, credential: credential, phoneNumber: phoneNumber, tenantId: tenantId});
    }
  };
  (firebase_auth_exception.FirebaseAuthException.new = function(opts) {
    let message = opts && 'message' in opts ? opts.message : null;
    let code = opts && 'code' in opts ? opts.code : null;
    let email = opts && 'email' in opts ? opts.email : null;
    let credential = opts && 'credential' in opts ? opts.credential : null;
    let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
    let tenantId = opts && 'tenantId' in opts ? opts.tenantId : null;
    this[S$.email] = email;
    this[S$.credential$1] = credential;
    this[S$.phoneNumber] = phoneNumber;
    this[S$.tenantId$1] = tenantId;
    firebase_auth_exception.FirebaseAuthException.__proto__.new.call(this, {plugin: "firebase_auth", message: message, code: code});
    ;
  }).prototype = firebase_auth_exception.FirebaseAuthException.prototype;
  dart.addTypeTests(firebase_auth_exception.FirebaseAuthException);
  dart.addTypeCaches(firebase_auth_exception.FirebaseAuthException);
  firebase_auth_exception.FirebaseAuthException[dart.implements] = () => [core.Exception];
  dart.setLibraryUri(firebase_auth_exception.FirebaseAuthException, I[87]);
  dart.setFieldSignature(firebase_auth_exception.FirebaseAuthException, () => ({
    __proto__: dart.getFields(firebase_auth_exception.FirebaseAuthException.__proto__),
    email: dart.finalFieldType(dart.nullable(core.String)),
    credential: dart.finalFieldType(dart.nullable(auth_credential.AuthCredential)),
    phoneNumber: dart.finalFieldType(dart.nullable(core.String)),
    tenantId: dart.finalFieldType(dart.nullable(core.String))
  }));
  firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform = class FirebaseAuthMultiFactorExceptionPlatform extends firebase_auth_exception.FirebaseAuthException {
    get resolver() {
      return this[S$.resolver];
    }
    set resolver(value) {
      super.resolver = value;
    }
    static ['_#new#tearOff'](opts) {
      let message = opts && 'message' in opts ? opts.message : null;
      let code = opts && 'code' in opts ? opts.code : null;
      let email = opts && 'email' in opts ? opts.email : null;
      let credential = opts && 'credential' in opts ? opts.credential : null;
      let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
      let tenantId = opts && 'tenantId' in opts ? opts.tenantId : null;
      let resolver = opts && 'resolver' in opts ? opts.resolver : null;
      return new firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform.new({message: message, code: code, email: email, credential: credential, phoneNumber: phoneNumber, tenantId: tenantId, resolver: resolver});
    }
  };
  (firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform.new = function(opts) {
    let message = opts && 'message' in opts ? opts.message : null;
    let code = opts && 'code' in opts ? opts.code : null;
    let email = opts && 'email' in opts ? opts.email : null;
    let credential = opts && 'credential' in opts ? opts.credential : null;
    let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
    let tenantId = opts && 'tenantId' in opts ? opts.tenantId : null;
    let resolver = opts && 'resolver' in opts ? opts.resolver : null;
    this[S$.resolver] = resolver;
    firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform.__proto__.new.call(this, {message: message, code: code, email: email, credential: credential, phoneNumber: phoneNumber, tenantId: tenantId});
    ;
  }).prototype = firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform.prototype;
  dart.addTypeTests(firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform);
  dart.addTypeCaches(firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform);
  firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform[dart.implements] = () => [core.Exception];
  dart.setLibraryUri(firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform, I[88]);
  dart.setFieldSignature(firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform, () => ({
    __proto__: dart.getFields(firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform.__proto__),
    resolver: dart.finalFieldType(platform_interface_multi_factor.MultiFactorResolverPlatform)
  }));
  id_token_result.IdTokenResult = class IdTokenResult extends core.Object {
    static ['_#new#tearOff'](_data) {
      return new id_token_result.IdTokenResult.new(_data);
    }
    get authTime() {
      return this[S$._data$2][S$.$_get]("authTimestamp") == null ? null : new core.DateTime.fromMillisecondsSinceEpoch(core.int.as(this[S$._data$2][S$.$_get]("authTimestamp")));
    }
    get claims() {
      return this[S$._data$2][S$.$_get]("claims") == null ? null : T$.LinkedHashMapOfString$dynamic().from(core.Map.as(this[S$._data$2][S$.$_get]("claims")));
    }
    get expirationTime() {
      return this[S$._data$2][S$.$_get]("expirationTimestamp") == null ? null : new core.DateTime.fromMillisecondsSinceEpoch(core.int.as(this[S$._data$2][S$.$_get]("expirationTimestamp")));
    }
    get issuedAtTime() {
      return this[S$._data$2][S$.$_get]("issuedAtTimestamp") == null ? null : new core.DateTime.fromMillisecondsSinceEpoch(core.int.as(this[S$._data$2][S$.$_get]("issuedAtTimestamp")));
    }
    get signInProvider() {
      return T$.StringN().as(this[S$._data$2][S$.$_get]("signInProvider"));
    }
    get token() {
      return T$.StringN().as(this[S$._data$2][S$.$_get]("token"));
    }
    toString() {
      return dart.str(dart.wrapType(id_token_result.IdTokenResult)) + "(authTime: " + dart.str(this.authTime) + ", claims: " + dart.toString(this.claims) + ", expirationTime: " + dart.str(this.expirationTime) + ", issuedAtTime: " + dart.str(this.issuedAtTime) + ", signInProvider: " + dart.str(this.signInProvider) + ", token: " + dart.str(this.token) + ")";
    }
  };
  (id_token_result.IdTokenResult.new = function(_data) {
    this[S$._data$2] = _data;
    ;
  }).prototype = id_token_result.IdTokenResult.prototype;
  dart.addTypeTests(id_token_result.IdTokenResult);
  dart.addTypeCaches(id_token_result.IdTokenResult);
  dart.setGetterSignature(id_token_result.IdTokenResult, () => ({
    __proto__: dart.getGetters(id_token_result.IdTokenResult.__proto__),
    authTime: dart.nullable(core.DateTime),
    claims: dart.nullable(core.Map$(core.String, dart.dynamic)),
    expirationTime: dart.nullable(core.DateTime),
    issuedAtTime: dart.nullable(core.DateTime),
    signInProvider: dart.nullable(core.String),
    token: dart.nullable(core.String)
  }));
  dart.setLibraryUri(id_token_result.IdTokenResult, I[89]);
  dart.setFieldSignature(id_token_result.IdTokenResult, () => ({
    __proto__: dart.getFields(id_token_result.IdTokenResult.__proto__),
    [S$._data$2]: dart.finalFieldType(core.Map$(core.String, dart.dynamic))
  }));
  dart.defineExtensionMethods(id_token_result.IdTokenResult, ['toString']);
  platform_interface_multi_factor.MultiFactorInfo = class MultiFactorInfo extends core.Object {
    get displayName() {
      return this[S$.displayName];
    }
    set displayName(value) {
      super.displayName = value;
    }
    get enrollmentTimestamp() {
      return this[S$.enrollmentTimestamp];
    }
    set enrollmentTimestamp(value) {
      super.enrollmentTimestamp = value;
    }
    get factorId() {
      return this[S$.factorId];
    }
    set factorId(value) {
      super.factorId = value;
    }
    get uid() {
      return this[S$.uid];
    }
    set uid(value) {
      super.uid = value;
    }
    static ['_#new#tearOff'](opts) {
      let factorId = opts && 'factorId' in opts ? opts.factorId : null;
      let enrollmentTimestamp = opts && 'enrollmentTimestamp' in opts ? opts.enrollmentTimestamp : null;
      let displayName = opts && 'displayName' in opts ? opts.displayName : null;
      let uid = opts && 'uid' in opts ? opts.uid : null;
      return new platform_interface_multi_factor.MultiFactorInfo.new({factorId: factorId, enrollmentTimestamp: enrollmentTimestamp, displayName: displayName, uid: uid});
    }
    toString() {
      return "MultiFactorInfo{enrollmentTimestamp: " + dart.str(this.enrollmentTimestamp) + ", displayName: " + dart.str(this.displayName) + ", uid: " + this.uid + "}";
    }
  };
  (platform_interface_multi_factor.MultiFactorInfo.new = function(opts) {
    let factorId = opts && 'factorId' in opts ? opts.factorId : null;
    let enrollmentTimestamp = opts && 'enrollmentTimestamp' in opts ? opts.enrollmentTimestamp : null;
    let displayName = opts && 'displayName' in opts ? opts.displayName : null;
    let uid = opts && 'uid' in opts ? opts.uid : null;
    this[S$.factorId] = factorId;
    this[S$.enrollmentTimestamp] = enrollmentTimestamp;
    this[S$.displayName] = displayName;
    this[S$.uid] = uid;
    ;
  }).prototype = platform_interface_multi_factor.MultiFactorInfo.prototype;
  dart.addTypeTests(platform_interface_multi_factor.MultiFactorInfo);
  dart.addTypeCaches(platform_interface_multi_factor.MultiFactorInfo);
  dart.setLibraryUri(platform_interface_multi_factor.MultiFactorInfo, I[36]);
  dart.setFieldSignature(platform_interface_multi_factor.MultiFactorInfo, () => ({
    __proto__: dart.getFields(platform_interface_multi_factor.MultiFactorInfo.__proto__),
    displayName: dart.finalFieldType(dart.nullable(core.String)),
    enrollmentTimestamp: dart.finalFieldType(core.double),
    factorId: dart.finalFieldType(core.String),
    uid: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(platform_interface_multi_factor.MultiFactorInfo, ['toString']);
  platform_interface_multi_factor.PhoneMultiFactorInfo = class PhoneMultiFactorInfo extends platform_interface_multi_factor.MultiFactorInfo {
    get phoneNumber() {
      return this[S$.phoneNumber$1];
    }
    set phoneNumber(value) {
      super.phoneNumber = value;
    }
    static ['_#new#tearOff'](opts) {
      let displayName = opts && 'displayName' in opts ? opts.displayName : null;
      let enrollmentTimestamp = opts && 'enrollmentTimestamp' in opts ? opts.enrollmentTimestamp : null;
      let factorId = opts && 'factorId' in opts ? opts.factorId : null;
      let uid = opts && 'uid' in opts ? opts.uid : null;
      let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
      return new platform_interface_multi_factor.PhoneMultiFactorInfo.new({displayName: displayName, enrollmentTimestamp: enrollmentTimestamp, factorId: factorId, uid: uid, phoneNumber: phoneNumber});
    }
  };
  (platform_interface_multi_factor.PhoneMultiFactorInfo.new = function(opts) {
    let displayName = opts && 'displayName' in opts ? opts.displayName : null;
    let enrollmentTimestamp = opts && 'enrollmentTimestamp' in opts ? opts.enrollmentTimestamp : null;
    let factorId = opts && 'factorId' in opts ? opts.factorId : null;
    let uid = opts && 'uid' in opts ? opts.uid : null;
    let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
    this[S$.phoneNumber$1] = phoneNumber;
    platform_interface_multi_factor.PhoneMultiFactorInfo.__proto__.new.call(this, {displayName: displayName, enrollmentTimestamp: enrollmentTimestamp, factorId: factorId, uid: uid});
    ;
  }).prototype = platform_interface_multi_factor.PhoneMultiFactorInfo.prototype;
  dart.addTypeTests(platform_interface_multi_factor.PhoneMultiFactorInfo);
  dart.addTypeCaches(platform_interface_multi_factor.PhoneMultiFactorInfo);
  dart.setLibraryUri(platform_interface_multi_factor.PhoneMultiFactorInfo, I[36]);
  dart.setFieldSignature(platform_interface_multi_factor.PhoneMultiFactorInfo, () => ({
    __proto__: dart.getFields(platform_interface_multi_factor.PhoneMultiFactorInfo.__proto__),
    phoneNumber: dart.finalFieldType(core.String)
  }));
  platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize = class RecaptchaVerifierSize extends core._Enum {
    [S$._enumToString]() {
      return "RecaptchaVerifierSize." + this[S$._name];
    }
  };
  (platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize.new = function(index, name) {
    platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize.__proto__.new.call(this, index, name);
    ;
  }).prototype = platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize.prototype;
  dart.addTypeTests(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize);
  dart.addTypeCaches(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize);
  dart.setMethodSignature(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize, () => ({
    __proto__: dart.getMethods(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize.__proto__),
    [S$._enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize, I[41]);
  dart.setStaticFieldSignature(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize, () => ['values', 'normal', 'compact']);
  dart.defineLazy(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize, {
    /*platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize.values*/get values() {
      return C[83] || CT.C83;
    },
    /*platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize.normal*/get normal() {
      return C[42] || CT.C42;
    },
    /*platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize.compact*/get compact() {
      return C[41] || CT.C41;
    }
  }, false);
  platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme = class RecaptchaVerifierTheme extends core._Enum {
    [S$._enumToString]() {
      return "RecaptchaVerifierTheme." + this[S$._name];
    }
  };
  (platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme.new = function(index, name) {
    platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme.__proto__.new.call(this, index, name);
    ;
  }).prototype = platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme.prototype;
  dart.addTypeTests(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme);
  dart.addTypeCaches(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme);
  dart.setMethodSignature(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme, () => ({
    __proto__: dart.getMethods(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme.__proto__),
    [S$._enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme, I[41]);
  dart.setStaticFieldSignature(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme, () => ['values', 'light', 'dark']);
  dart.defineLazy(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme, {
    /*platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme.values*/get values() {
      return C[84] || CT.C84;
    },
    /*platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme.light*/get light() {
      return C[44] || CT.C44;
    },
    /*platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme.dark*/get dark() {
      return C[43] || CT.C43;
    }
  }, false);
  apple_auth.AppleAuthProvider = class AppleAuthProvider extends auth_provider.AuthProvider {
    static ['_#new#tearOff']() {
      return new apple_auth.AppleAuthProvider.new();
    }
    static credential(accessToken) {
      return apple_auth.AppleAuthCredential._credential(accessToken);
    }
    static get APPLE_SIGN_IN_METHOD() {
      return "apple.com";
    }
    static get PROVIDER_ID() {
      return "apple.com";
    }
    get scopes() {
      return this[S$._scopes];
    }
    get parameters() {
      return this[S$._parameters];
    }
    addScope(scope) {
      this[S$._scopes][S$.$add](scope);
      return this;
    }
    setCustomParameters(customOAuthParameters) {
      this[S$._parameters] = customOAuthParameters;
      return this;
    }
  };
  (apple_auth.AppleAuthProvider.new = function() {
    this[S$._scopes] = T$.JSArrayOfString().of([]);
    this[S$._parameters] = new _js_helper.LinkedMap.new();
    apple_auth.AppleAuthProvider.__proto__.new.call(this, "apple.com");
    ;
  }).prototype = apple_auth.AppleAuthProvider.prototype;
  dart.addTypeTests(apple_auth.AppleAuthProvider);
  dart.addTypeCaches(apple_auth.AppleAuthProvider);
  dart.setMethodSignature(apple_auth.AppleAuthProvider, () => ({
    __proto__: dart.getMethods(apple_auth.AppleAuthProvider.__proto__),
    addScope: dart.fnType(apple_auth.AppleAuthProvider, [core.String]),
    setCustomParameters: dart.fnType(apple_auth.AppleAuthProvider, [core.Map])
  }));
  dart.setStaticMethodSignature(apple_auth.AppleAuthProvider, () => ['credential']);
  dart.setGetterSignature(apple_auth.AppleAuthProvider, () => ({
    __proto__: dart.getGetters(apple_auth.AppleAuthProvider.__proto__),
    scopes: core.List$(core.String),
    parameters: core.Map
  }));
  dart.setStaticGetterSignature(apple_auth.AppleAuthProvider, () => ['APPLE_SIGN_IN_METHOD', 'PROVIDER_ID']);
  dart.setLibraryUri(apple_auth.AppleAuthProvider, I[90]);
  dart.setFieldSignature(apple_auth.AppleAuthProvider, () => ({
    __proto__: dart.getFields(apple_auth.AppleAuthProvider.__proto__),
    [S$._scopes]: dart.fieldType(core.List$(core.String)),
    [S$._parameters]: dart.fieldType(core.Map)
  }));
  oauth.OAuthCredential = class OAuthCredential extends auth_credential.AuthCredential {
    get idToken() {
      return this[S$.idToken];
    }
    set idToken(value) {
      super.idToken = value;
    }
    get secret() {
      return this[S$.secret];
    }
    set secret(value) {
      super.secret = value;
    }
    get rawNonce() {
      return this[S$.rawNonce];
    }
    set rawNonce(value) {
      super.rawNonce = value;
    }
    static ['_#new#tearOff'](opts) {
      let providerId = opts && 'providerId' in opts ? opts.providerId : null;
      let signInMethod = opts && 'signInMethod' in opts ? opts.signInMethod : null;
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      let idToken = opts && 'idToken' in opts ? opts.idToken : null;
      let secret = opts && 'secret' in opts ? opts.secret : null;
      let rawNonce = opts && 'rawNonce' in opts ? opts.rawNonce : null;
      return new oauth.OAuthCredential.new({providerId: providerId, signInMethod: signInMethod, accessToken: accessToken, idToken: idToken, secret: secret, rawNonce: rawNonce});
    }
    asMap() {
      return new (T$.IdentityMapOfString$StringN()).from(["providerId", this.providerId, "signInMethod", this.signInMethod, "idToken", this.idToken, "accessToken", this.accessToken, "secret", this.secret, "rawNonce", this.rawNonce]);
    }
  };
  (oauth.OAuthCredential.new = function(opts) {
    let providerId = opts && 'providerId' in opts ? opts.providerId : null;
    let signInMethod = opts && 'signInMethod' in opts ? opts.signInMethod : null;
    let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
    let idToken = opts && 'idToken' in opts ? opts.idToken : null;
    let secret = opts && 'secret' in opts ? opts.secret : null;
    let rawNonce = opts && 'rawNonce' in opts ? opts.rawNonce : null;
    this[S$.idToken] = idToken;
    this[S$.secret] = secret;
    this[S$.rawNonce] = rawNonce;
    oauth.OAuthCredential.__proto__.new.call(this, {providerId: providerId, signInMethod: signInMethod, accessToken: accessToken});
    ;
  }).prototype = oauth.OAuthCredential.prototype;
  dart.addTypeTests(oauth.OAuthCredential);
  dart.addTypeCaches(oauth.OAuthCredential);
  dart.setMethodSignature(oauth.OAuthCredential, () => ({
    __proto__: dart.getMethods(oauth.OAuthCredential.__proto__),
    asMap: dart.fnType(core.Map$(core.String, dart.nullable(core.String)), [])
  }));
  dart.setLibraryUri(oauth.OAuthCredential, I[91]);
  dart.setFieldSignature(oauth.OAuthCredential, () => ({
    __proto__: dart.getFields(oauth.OAuthCredential.__proto__),
    idToken: dart.finalFieldType(dart.nullable(core.String)),
    secret: dart.finalFieldType(dart.nullable(core.String)),
    rawNonce: dart.finalFieldType(dart.nullable(core.String))
  }));
  apple_auth.AppleAuthCredential = class AppleAuthCredential extends oauth.OAuthCredential {
    static ['_#_#tearOff'](opts) {
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      return new apple_auth.AppleAuthCredential.__({accessToken: accessToken});
    }
    static _credential(accessToken) {
      return new apple_auth.AppleAuthCredential.__({accessToken: accessToken});
    }
    static ['_#_credential#tearOff'](accessToken) {
      return apple_auth.AppleAuthCredential._credential(accessToken);
    }
  };
  (apple_auth.AppleAuthCredential.__ = function(opts) {
    let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
    apple_auth.AppleAuthCredential.__proto__.new.call(this, {providerId: "apple.com", signInMethod: "apple.com", accessToken: accessToken});
    ;
  }).prototype = apple_auth.AppleAuthCredential.prototype;
  dart.addTypeTests(apple_auth.AppleAuthCredential);
  dart.addTypeCaches(apple_auth.AppleAuthCredential);
  dart.setStaticMethodSignature(apple_auth.AppleAuthCredential, () => ['_credential']);
  dart.setLibraryUri(apple_auth.AppleAuthCredential, I[90]);
  dart.defineLazy(apple_auth, {
    /*apple_auth._kProviderId*/get _kProviderId() {
      return "apple.com";
    }
  }, false);
  email_auth.EmailAuthProvider = class EmailAuthProvider extends auth_provider.AuthProvider {
    static get EMAIL_LINK_SIGN_IN_METHOD() {
      return "emailLink";
    }
    static get EMAIL_PASSWORD_SIGN_IN_METHOD() {
      return "password";
    }
    static get PROVIDER_ID() {
      return "password";
    }
    static credential(opts) {
      let email = opts && 'email' in opts ? opts.email : null;
      let password = opts && 'password' in opts ? opts.password : null;
      return email_auth.EmailAuthCredential._credential(email, password);
    }
    static credentialWithLink(opts) {
      let email = opts && 'email' in opts ? opts.email : null;
      let emailLink = opts && 'emailLink' in opts ? opts.emailLink : null;
      return email_auth.EmailAuthCredential._credentialWithLink(email, emailLink);
    }
  };
  (email_auth.EmailAuthProvider.new = function() {
    email_auth.EmailAuthProvider.__proto__.new.call(this, "password");
    ;
  }).prototype = email_auth.EmailAuthProvider.prototype;
  dart.addTypeTests(email_auth.EmailAuthProvider);
  dart.addTypeCaches(email_auth.EmailAuthProvider);
  dart.setStaticMethodSignature(email_auth.EmailAuthProvider, () => ['credential', 'credentialWithLink']);
  dart.setStaticGetterSignature(email_auth.EmailAuthProvider, () => ['EMAIL_LINK_SIGN_IN_METHOD', 'EMAIL_PASSWORD_SIGN_IN_METHOD', 'PROVIDER_ID']);
  dart.setLibraryUri(email_auth.EmailAuthProvider, I[92]);
  email_auth.EmailAuthCredential = class EmailAuthCredential extends auth_credential.AuthCredential {
    get email() {
      return this[S$.email$1];
    }
    set email(value) {
      super.email = value;
    }
    get password() {
      return this[S$.password];
    }
    set password(value) {
      super.password = value;
    }
    get emailLink() {
      return this[S$.emailLink];
    }
    set emailLink(value) {
      super.emailLink = value;
    }
    static ['_#_#tearOff'](_signInMethod, opts) {
      let email = opts && 'email' in opts ? opts.email : null;
      let password = opts && 'password' in opts ? opts.password : null;
      let emailLink = opts && 'emailLink' in opts ? opts.emailLink : null;
      return new email_auth.EmailAuthCredential.__(_signInMethod, {email: email, password: password, emailLink: emailLink});
    }
    static _credential(email, password) {
      return new email_auth.EmailAuthCredential.__("password", {email: email, password: password});
    }
    static ['_#_credential#tearOff'](email, password) {
      return email_auth.EmailAuthCredential._credential(email, password);
    }
    static _credentialWithLink(email, emailLink) {
      return new email_auth.EmailAuthCredential.__("emailLink", {email: email, emailLink: emailLink});
    }
    static ['_#_credentialWithLink#tearOff'](email, emailLink) {
      return email_auth.EmailAuthCredential._credentialWithLink(email, emailLink);
    }
    asMap() {
      return new (T$.IdentityMapOfString$StringN()).from(["providerId", this.providerId, "signInMethod", this.signInMethod, "email", this.email, "emailLink", this.emailLink, "secret", this.password]);
    }
  };
  (email_auth.EmailAuthCredential.__ = function(_signInMethod, opts) {
    let email = opts && 'email' in opts ? opts.email : null;
    let password = opts && 'password' in opts ? opts.password : null;
    let emailLink = opts && 'emailLink' in opts ? opts.emailLink : null;
    this[S$.email$1] = email;
    this[S$.password] = password;
    this[S$.emailLink] = emailLink;
    email_auth.EmailAuthCredential.__proto__.new.call(this, {providerId: "password", signInMethod: _signInMethod});
    ;
  }).prototype = email_auth.EmailAuthCredential.prototype;
  dart.addTypeTests(email_auth.EmailAuthCredential);
  dart.addTypeCaches(email_auth.EmailAuthCredential);
  dart.setMethodSignature(email_auth.EmailAuthCredential, () => ({
    __proto__: dart.getMethods(email_auth.EmailAuthCredential.__proto__),
    asMap: dart.fnType(core.Map$(core.String, dart.nullable(core.String)), [])
  }));
  dart.setStaticMethodSignature(email_auth.EmailAuthCredential, () => ['_credential', '_credentialWithLink']);
  dart.setLibraryUri(email_auth.EmailAuthCredential, I[92]);
  dart.setFieldSignature(email_auth.EmailAuthCredential, () => ({
    __proto__: dart.getFields(email_auth.EmailAuthCredential.__proto__),
    email: dart.finalFieldType(core.String),
    password: dart.finalFieldType(dart.nullable(core.String)),
    emailLink: dart.finalFieldType(dart.nullable(core.String))
  }));
  dart.defineLazy(email_auth, {
    /*email_auth._kLinkProviderId*/get _kLinkProviderId() {
      return "emailLink";
    },
    /*email_auth._kProviderId*/get _kProviderId() {
      return "password";
    }
  }, false);
  facebook_auth.FacebookAuthProvider = class FacebookAuthProvider extends auth_provider.AuthProvider {
    static ['_#new#tearOff']() {
      return new facebook_auth.FacebookAuthProvider.new();
    }
    static credential(accessToken) {
      return facebook_auth.FacebookAuthCredential._credential(accessToken);
    }
    static get FACEBOOK_SIGN_IN_METHOD() {
      return "facebook.com";
    }
    static get PROVIDER_ID() {
      return "facebook.com";
    }
    get scopes() {
      return this[S$._scopes$1];
    }
    get parameters() {
      return this[S$._parameters$1];
    }
    addScope(scope) {
      this[S$._scopes$1][S$.$add](scope);
      return this;
    }
    setCustomParameters(customOAuthParameters) {
      this[S$._parameters$1] = customOAuthParameters;
      return this;
    }
  };
  (facebook_auth.FacebookAuthProvider.new = function() {
    this[S$._scopes$1] = T$.JSArrayOfString().of([]);
    this[S$._parameters$1] = new _js_helper.LinkedMap.new();
    facebook_auth.FacebookAuthProvider.__proto__.new.call(this, "facebook.com");
    ;
  }).prototype = facebook_auth.FacebookAuthProvider.prototype;
  dart.addTypeTests(facebook_auth.FacebookAuthProvider);
  dart.addTypeCaches(facebook_auth.FacebookAuthProvider);
  dart.setMethodSignature(facebook_auth.FacebookAuthProvider, () => ({
    __proto__: dart.getMethods(facebook_auth.FacebookAuthProvider.__proto__),
    addScope: dart.fnType(facebook_auth.FacebookAuthProvider, [core.String]),
    setCustomParameters: dart.fnType(facebook_auth.FacebookAuthProvider, [core.Map])
  }));
  dart.setStaticMethodSignature(facebook_auth.FacebookAuthProvider, () => ['credential']);
  dart.setGetterSignature(facebook_auth.FacebookAuthProvider, () => ({
    __proto__: dart.getGetters(facebook_auth.FacebookAuthProvider.__proto__),
    scopes: core.List$(core.String),
    parameters: core.Map
  }));
  dart.setStaticGetterSignature(facebook_auth.FacebookAuthProvider, () => ['FACEBOOK_SIGN_IN_METHOD', 'PROVIDER_ID']);
  dart.setLibraryUri(facebook_auth.FacebookAuthProvider, I[93]);
  dart.setFieldSignature(facebook_auth.FacebookAuthProvider, () => ({
    __proto__: dart.getFields(facebook_auth.FacebookAuthProvider.__proto__),
    [S$._scopes$1]: dart.fieldType(core.List$(core.String)),
    [S$._parameters$1]: dart.fieldType(core.Map)
  }));
  facebook_auth.FacebookAuthCredential = class FacebookAuthCredential extends oauth.OAuthCredential {
    static ['_#_#tearOff'](opts) {
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      return new facebook_auth.FacebookAuthCredential.__({accessToken: accessToken});
    }
    static _credential(accessToken) {
      return new facebook_auth.FacebookAuthCredential.__({accessToken: accessToken});
    }
    static ['_#_credential#tearOff'](accessToken) {
      return facebook_auth.FacebookAuthCredential._credential(accessToken);
    }
  };
  (facebook_auth.FacebookAuthCredential.__ = function(opts) {
    let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
    facebook_auth.FacebookAuthCredential.__proto__.new.call(this, {providerId: "facebook.com", signInMethod: "facebook.com", accessToken: accessToken});
    ;
  }).prototype = facebook_auth.FacebookAuthCredential.prototype;
  dart.addTypeTests(facebook_auth.FacebookAuthCredential);
  dart.addTypeCaches(facebook_auth.FacebookAuthCredential);
  dart.setStaticMethodSignature(facebook_auth.FacebookAuthCredential, () => ['_credential']);
  dart.setLibraryUri(facebook_auth.FacebookAuthCredential, I[93]);
  dart.defineLazy(facebook_auth, {
    /*facebook_auth._kProviderId*/get _kProviderId() {
      return "facebook.com";
    }
  }, false);
  github_auth.GithubAuthProvider = class GithubAuthProvider extends auth_provider.AuthProvider {
    static ['_#new#tearOff']() {
      return new github_auth.GithubAuthProvider.new();
    }
    static credential(accessToken) {
      return github_auth.GithubAuthCredential._credential(accessToken);
    }
    static get GITHUB_SIGN_IN_METHOD() {
      return "github.com";
    }
    static get PROVIDER_ID() {
      return "github.com";
    }
    get scopes() {
      return this[S$._scopes$2];
    }
    get parameters() {
      return this[S$._parameters$2];
    }
    addScope(scope) {
      this[S$._scopes$2][S$.$add](scope);
      return this;
    }
    setCustomParameters(customOAuthParameters) {
      this[S$._parameters$2] = customOAuthParameters;
      return this;
    }
  };
  (github_auth.GithubAuthProvider.new = function() {
    this[S$._scopes$2] = T$.JSArrayOfString().of([]);
    this[S$._parameters$2] = new _js_helper.LinkedMap.new();
    github_auth.GithubAuthProvider.__proto__.new.call(this, "github.com");
    ;
  }).prototype = github_auth.GithubAuthProvider.prototype;
  dart.addTypeTests(github_auth.GithubAuthProvider);
  dart.addTypeCaches(github_auth.GithubAuthProvider);
  dart.setMethodSignature(github_auth.GithubAuthProvider, () => ({
    __proto__: dart.getMethods(github_auth.GithubAuthProvider.__proto__),
    addScope: dart.fnType(github_auth.GithubAuthProvider, [core.String]),
    setCustomParameters: dart.fnType(github_auth.GithubAuthProvider, [core.Map])
  }));
  dart.setStaticMethodSignature(github_auth.GithubAuthProvider, () => ['credential']);
  dart.setGetterSignature(github_auth.GithubAuthProvider, () => ({
    __proto__: dart.getGetters(github_auth.GithubAuthProvider.__proto__),
    scopes: core.List$(core.String),
    parameters: core.Map
  }));
  dart.setStaticGetterSignature(github_auth.GithubAuthProvider, () => ['GITHUB_SIGN_IN_METHOD', 'PROVIDER_ID']);
  dart.setLibraryUri(github_auth.GithubAuthProvider, I[94]);
  dart.setFieldSignature(github_auth.GithubAuthProvider, () => ({
    __proto__: dart.getFields(github_auth.GithubAuthProvider.__proto__),
    [S$._scopes$2]: dart.fieldType(core.List$(core.String)),
    [S$._parameters$2]: dart.fieldType(core.Map)
  }));
  github_auth.GithubAuthCredential = class GithubAuthCredential extends oauth.OAuthCredential {
    static ['_#_#tearOff'](opts) {
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      return new github_auth.GithubAuthCredential.__({accessToken: accessToken});
    }
    static _credential(accessToken) {
      return new github_auth.GithubAuthCredential.__({accessToken: accessToken});
    }
    static ['_#_credential#tearOff'](accessToken) {
      return github_auth.GithubAuthCredential._credential(accessToken);
    }
  };
  (github_auth.GithubAuthCredential.__ = function(opts) {
    let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
    github_auth.GithubAuthCredential.__proto__.new.call(this, {providerId: "github.com", signInMethod: "github.com", accessToken: accessToken});
    ;
  }).prototype = github_auth.GithubAuthCredential.prototype;
  dart.addTypeTests(github_auth.GithubAuthCredential);
  dart.addTypeCaches(github_auth.GithubAuthCredential);
  dart.setStaticMethodSignature(github_auth.GithubAuthCredential, () => ['_credential']);
  dart.setLibraryUri(github_auth.GithubAuthCredential, I[94]);
  dart.defineLazy(github_auth, {
    /*github_auth._kProviderId*/get _kProviderId() {
      return "github.com";
    }
  }, false);
  google_auth.GoogleAuthProvider = class GoogleAuthProvider extends auth_provider.AuthProvider {
    static ['_#new#tearOff']() {
      return new google_auth.GoogleAuthProvider.new();
    }
    static credential(opts) {
      let idToken = opts && 'idToken' in opts ? opts.idToken : null;
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      if (!(accessToken != null || idToken != null)) dart.assertFailed("At least one of ID token and access token is required", I[95], 43, 12, "accessToken != null || idToken != null");
      return google_auth.GoogleAuthCredential._credential({idToken: idToken, accessToken: accessToken});
    }
    static get GOOGLE_SIGN_IN_METHOD() {
      return "google.com";
    }
    static get PROVIDER_ID() {
      return "google.com";
    }
    get scopes() {
      return this[S$._scopes$3];
    }
    get parameters() {
      return this[S$._parameters$3];
    }
    addScope(scope) {
      this[S$._scopes$3][S$.$add](scope);
      return this;
    }
    setCustomParameters(customOAuthParameters) {
      this[S$._parameters$3] = customOAuthParameters;
      return this;
    }
  };
  (google_auth.GoogleAuthProvider.new = function() {
    this[S$._scopes$3] = T$.JSArrayOfString().of([]);
    this[S$._parameters$3] = new _js_helper.LinkedMap.new();
    google_auth.GoogleAuthProvider.__proto__.new.call(this, "google.com");
    ;
  }).prototype = google_auth.GoogleAuthProvider.prototype;
  dart.addTypeTests(google_auth.GoogleAuthProvider);
  dart.addTypeCaches(google_auth.GoogleAuthProvider);
  dart.setMethodSignature(google_auth.GoogleAuthProvider, () => ({
    __proto__: dart.getMethods(google_auth.GoogleAuthProvider.__proto__),
    addScope: dart.fnType(google_auth.GoogleAuthProvider, [core.String]),
    setCustomParameters: dart.fnType(google_auth.GoogleAuthProvider, [core.Map])
  }));
  dart.setStaticMethodSignature(google_auth.GoogleAuthProvider, () => ['credential']);
  dart.setGetterSignature(google_auth.GoogleAuthProvider, () => ({
    __proto__: dart.getGetters(google_auth.GoogleAuthProvider.__proto__),
    scopes: core.List$(core.String),
    parameters: core.Map
  }));
  dart.setStaticGetterSignature(google_auth.GoogleAuthProvider, () => ['GOOGLE_SIGN_IN_METHOD', 'PROVIDER_ID']);
  dart.setLibraryUri(google_auth.GoogleAuthProvider, I[96]);
  dart.setFieldSignature(google_auth.GoogleAuthProvider, () => ({
    __proto__: dart.getFields(google_auth.GoogleAuthProvider.__proto__),
    [S$._scopes$3]: dart.fieldType(core.List$(core.String)),
    [S$._parameters$3]: dart.fieldType(core.Map)
  }));
  google_auth.GoogleAuthCredential = class GoogleAuthCredential extends oauth.OAuthCredential {
    static ['_#_#tearOff'](opts) {
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      let idToken = opts && 'idToken' in opts ? opts.idToken : null;
      return new google_auth.GoogleAuthCredential.__({accessToken: accessToken, idToken: idToken});
    }
    static _credential(opts) {
      let idToken = opts && 'idToken' in opts ? opts.idToken : null;
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      return new google_auth.GoogleAuthCredential.__({accessToken: accessToken, idToken: idToken});
    }
    static ['_#_credential#tearOff'](opts) {
      let idToken = opts && 'idToken' in opts ? opts.idToken : null;
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      return google_auth.GoogleAuthCredential._credential({idToken: idToken, accessToken: accessToken});
    }
  };
  (google_auth.GoogleAuthCredential.__ = function(opts) {
    let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
    let idToken = opts && 'idToken' in opts ? opts.idToken : null;
    google_auth.GoogleAuthCredential.__proto__.new.call(this, {providerId: "google.com", signInMethod: "google.com", accessToken: accessToken, idToken: idToken});
    ;
  }).prototype = google_auth.GoogleAuthCredential.prototype;
  dart.addTypeTests(google_auth.GoogleAuthCredential);
  dart.addTypeCaches(google_auth.GoogleAuthCredential);
  dart.setStaticMethodSignature(google_auth.GoogleAuthCredential, () => ['_credential']);
  dart.setLibraryUri(google_auth.GoogleAuthCredential, I[96]);
  dart.defineLazy(google_auth, {
    /*google_auth._kProviderId*/get _kProviderId() {
      return "google.com";
    }
  }, false);
  microsoft_auth.MicrosoftAuthProvider = class MicrosoftAuthProvider extends auth_provider.AuthProvider {
    static ['_#new#tearOff']() {
      return new microsoft_auth.MicrosoftAuthProvider.new();
    }
    static credential(accessToken) {
      return microsoft_auth.MicrosoftAuthCredential._credential(accessToken);
    }
    static get MICROSOFT_SIGN_IN_METHOD() {
      return "microsoft.com";
    }
    static get PROVIDER_ID() {
      return "microsoft.com";
    }
    get scopes() {
      return this[S$._scopes$4];
    }
    get parameters() {
      return this[S$._parameters$4];
    }
    addScope(scope) {
      this[S$._scopes$4][S$.$add](scope);
      return this;
    }
    setCustomParameters(customOAuthParameters) {
      this[S$._parameters$4] = customOAuthParameters;
      return this;
    }
  };
  (microsoft_auth.MicrosoftAuthProvider.new = function() {
    this[S$._scopes$4] = T$.JSArrayOfString().of([]);
    this[S$._parameters$4] = new _js_helper.LinkedMap.new();
    microsoft_auth.MicrosoftAuthProvider.__proto__.new.call(this, "microsoft.com");
    ;
  }).prototype = microsoft_auth.MicrosoftAuthProvider.prototype;
  dart.addTypeTests(microsoft_auth.MicrosoftAuthProvider);
  dart.addTypeCaches(microsoft_auth.MicrosoftAuthProvider);
  dart.setMethodSignature(microsoft_auth.MicrosoftAuthProvider, () => ({
    __proto__: dart.getMethods(microsoft_auth.MicrosoftAuthProvider.__proto__),
    addScope: dart.fnType(microsoft_auth.MicrosoftAuthProvider, [core.String]),
    setCustomParameters: dart.fnType(microsoft_auth.MicrosoftAuthProvider, [core.Map])
  }));
  dart.setStaticMethodSignature(microsoft_auth.MicrosoftAuthProvider, () => ['credential']);
  dart.setGetterSignature(microsoft_auth.MicrosoftAuthProvider, () => ({
    __proto__: dart.getGetters(microsoft_auth.MicrosoftAuthProvider.__proto__),
    scopes: core.List$(core.String),
    parameters: core.Map
  }));
  dart.setStaticGetterSignature(microsoft_auth.MicrosoftAuthProvider, () => ['MICROSOFT_SIGN_IN_METHOD', 'PROVIDER_ID']);
  dart.setLibraryUri(microsoft_auth.MicrosoftAuthProvider, I[97]);
  dart.setFieldSignature(microsoft_auth.MicrosoftAuthProvider, () => ({
    __proto__: dart.getFields(microsoft_auth.MicrosoftAuthProvider.__proto__),
    [S$._scopes$4]: dart.fieldType(core.List$(core.String)),
    [S$._parameters$4]: dart.fieldType(core.Map)
  }));
  microsoft_auth.MicrosoftAuthCredential = class MicrosoftAuthCredential extends oauth.OAuthCredential {
    static ['_#_#tearOff'](opts) {
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      return new microsoft_auth.MicrosoftAuthCredential.__({accessToken: accessToken});
    }
    static _credential(accessToken) {
      return new microsoft_auth.MicrosoftAuthCredential.__({accessToken: accessToken});
    }
    static ['_#_credential#tearOff'](accessToken) {
      return microsoft_auth.MicrosoftAuthCredential._credential(accessToken);
    }
  };
  (microsoft_auth.MicrosoftAuthCredential.__ = function(opts) {
    let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
    microsoft_auth.MicrosoftAuthCredential.__proto__.new.call(this, {providerId: "microsoft.com", signInMethod: "microsoft.com", accessToken: accessToken});
    ;
  }).prototype = microsoft_auth.MicrosoftAuthCredential.prototype;
  dart.addTypeTests(microsoft_auth.MicrosoftAuthCredential);
  dart.addTypeCaches(microsoft_auth.MicrosoftAuthCredential);
  dart.setStaticMethodSignature(microsoft_auth.MicrosoftAuthCredential, () => ['_credential']);
  dart.setLibraryUri(microsoft_auth.MicrosoftAuthCredential, I[97]);
  dart.defineLazy(microsoft_auth, {
    /*microsoft_auth._kProviderId*/get _kProviderId() {
      return "microsoft.com";
    }
  }, false);
  oauth.OAuthProvider = class OAuthProvider extends auth_provider.AuthProvider {
    static ['_#new#tearOff'](providerId) {
      return new oauth.OAuthProvider.new(providerId);
    }
    get scopes() {
      return this[S$._scopes$5];
    }
    get parameters() {
      return this[S$._parameters$5];
    }
    setScopes(scopes) {
      this[S$._scopes$5] = scopes;
      return this;
    }
    addScope(scope) {
      this[S$._scopes$5][S$.$add](scope);
      return this;
    }
    setCustomParameters(customOAuthParameters) {
      this[S$._parameters$5] = customOAuthParameters;
      return this;
    }
    credential(opts) {
      let t100;
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      let secret = opts && 'secret' in opts ? opts.secret : null;
      let idToken = opts && 'idToken' in opts ? opts.idToken : null;
      let rawNonce = opts && 'rawNonce' in opts ? opts.rawNonce : null;
      let signInMethod = opts && 'signInMethod' in opts ? opts.signInMethod : null;
      return new oauth.OAuthCredential.new({providerId: this.providerId, signInMethod: (t100 = signInMethod, t100 == null ? "oauth" : t100), accessToken: accessToken, secret: secret, idToken: idToken, rawNonce: rawNonce});
    }
  };
  (oauth.OAuthProvider.new = function(providerId) {
    this[S$._scopes$5] = T$.JSArrayOfString().of([]);
    this[S$._parameters$5] = new _js_helper.LinkedMap.new();
    oauth.OAuthProvider.__proto__.new.call(this, providerId);
    ;
  }).prototype = oauth.OAuthProvider.prototype;
  dart.addTypeTests(oauth.OAuthProvider);
  dart.addTypeCaches(oauth.OAuthProvider);
  dart.setMethodSignature(oauth.OAuthProvider, () => ({
    __proto__: dart.getMethods(oauth.OAuthProvider.__proto__),
    setScopes: dart.fnType(oauth.OAuthProvider, [core.List$(core.String)]),
    addScope: dart.fnType(oauth.OAuthProvider, [core.String]),
    setCustomParameters: dart.fnType(oauth.OAuthProvider, [core.Map]),
    credential: dart.fnType(oauth.OAuthCredential, [], {accessToken: dart.nullable(core.String), idToken: dart.nullable(core.String), rawNonce: dart.nullable(core.String), secret: dart.nullable(core.String), signInMethod: dart.nullable(core.String)}, {})
  }));
  dart.setGetterSignature(oauth.OAuthProvider, () => ({
    __proto__: dart.getGetters(oauth.OAuthProvider.__proto__),
    scopes: core.List$(core.String),
    parameters: core.Map
  }));
  dart.setLibraryUri(oauth.OAuthProvider, I[91]);
  dart.setFieldSignature(oauth.OAuthProvider, () => ({
    __proto__: dart.getFields(oauth.OAuthProvider.__proto__),
    [S$._scopes$5]: dart.fieldType(core.List$(core.String)),
    [S$._parameters$5]: dart.fieldType(core.Map)
  }));
  phone_auth.PhoneAuthProvider = class PhoneAuthProvider extends auth_provider.AuthProvider {
    static ['_#new#tearOff']() {
      return new phone_auth.PhoneAuthProvider.new();
    }
    static get PHONE_SIGN_IN_METHOD() {
      return "phone";
    }
    static get PROVIDER_ID() {
      return "phone";
    }
    static credential(opts) {
      let verificationId = opts && 'verificationId' in opts ? opts.verificationId : null;
      let smsCode = opts && 'smsCode' in opts ? opts.smsCode : null;
      return phone_auth.PhoneAuthCredential._credential(verificationId, smsCode);
    }
    static credentialFromToken(token, opts) {
      let smsCode = opts && 'smsCode' in opts ? opts.smsCode : null;
      return phone_auth.PhoneAuthCredential._credentialFromToken(token, {smsCode: smsCode});
    }
  };
  (phone_auth.PhoneAuthProvider.new = function() {
    phone_auth.PhoneAuthProvider.__proto__.new.call(this, "phone");
    ;
  }).prototype = phone_auth.PhoneAuthProvider.prototype;
  dart.addTypeTests(phone_auth.PhoneAuthProvider);
  dart.addTypeCaches(phone_auth.PhoneAuthProvider);
  dart.setStaticMethodSignature(phone_auth.PhoneAuthProvider, () => ['credential', 'credentialFromToken']);
  dart.setStaticGetterSignature(phone_auth.PhoneAuthProvider, () => ['PHONE_SIGN_IN_METHOD', 'PROVIDER_ID']);
  dart.setLibraryUri(phone_auth.PhoneAuthProvider, I[98]);
  phone_auth.PhoneAuthCredential = class PhoneAuthCredential extends auth_credential.AuthCredential {
    get verificationId() {
      return this[S$.verificationId$1];
    }
    set verificationId(value) {
      super.verificationId = value;
    }
    get smsCode() {
      return this[S$.smsCode];
    }
    set smsCode(value) {
      super.smsCode = value;
    }
    static ['_#_#tearOff'](opts) {
      let verificationId = opts && 'verificationId' in opts ? opts.verificationId : null;
      let smsCode = opts && 'smsCode' in opts ? opts.smsCode : null;
      let token = opts && 'token' in opts ? opts.token : null;
      return new phone_auth.PhoneAuthCredential.__({verificationId: verificationId, smsCode: smsCode, token: token});
    }
    static _credential(verificationId, smsCode) {
      return new phone_auth.PhoneAuthCredential.__({verificationId: verificationId, smsCode: smsCode});
    }
    static ['_#_credential#tearOff'](verificationId, smsCode) {
      return phone_auth.PhoneAuthCredential._credential(verificationId, smsCode);
    }
    static _credentialFromToken(token, opts) {
      let smsCode = opts && 'smsCode' in opts ? opts.smsCode : null;
      return new phone_auth.PhoneAuthCredential.__({token: token, smsCode: smsCode});
    }
    static ['_#_credentialFromToken#tearOff'](token, opts) {
      let smsCode = opts && 'smsCode' in opts ? opts.smsCode : null;
      return phone_auth.PhoneAuthCredential._credentialFromToken(token, {smsCode: smsCode});
    }
    asMap() {
      return new (T$.IdentityMapOfString$dynamic()).from(["providerId", this.providerId, "signInMethod", this.signInMethod, "verificationId", this.verificationId, "smsCode", this.smsCode, "token", this.token]);
    }
  };
  (phone_auth.PhoneAuthCredential.__ = function(opts) {
    let verificationId = opts && 'verificationId' in opts ? opts.verificationId : null;
    let smsCode = opts && 'smsCode' in opts ? opts.smsCode : null;
    let token = opts && 'token' in opts ? opts.token : null;
    this[S$.verificationId$1] = verificationId;
    this[S$.smsCode] = smsCode;
    phone_auth.PhoneAuthCredential.__proto__.new.call(this, {providerId: "phone", signInMethod: "phone", token: token});
    ;
  }).prototype = phone_auth.PhoneAuthCredential.prototype;
  dart.addTypeTests(phone_auth.PhoneAuthCredential);
  dart.addTypeCaches(phone_auth.PhoneAuthCredential);
  dart.setStaticMethodSignature(phone_auth.PhoneAuthCredential, () => ['_credential', '_credentialFromToken']);
  dart.setLibraryUri(phone_auth.PhoneAuthCredential, I[98]);
  dart.setFieldSignature(phone_auth.PhoneAuthCredential, () => ({
    __proto__: dart.getFields(phone_auth.PhoneAuthCredential.__proto__),
    verificationId: dart.finalFieldType(dart.nullable(core.String)),
    smsCode: dart.finalFieldType(dart.nullable(core.String))
  }));
  dart.defineLazy(phone_auth, {
    /*phone_auth._kProviderId*/get _kProviderId() {
      return "phone";
    }
  }, false);
  saml_auth.SAMLAuthProvider = class SAMLAuthProvider extends auth_provider.AuthProvider {
    static ['_#new#tearOff'](providerId) {
      return new saml_auth.SAMLAuthProvider.new(providerId);
    }
  };
  (saml_auth.SAMLAuthProvider.new = function(providerId) {
    saml_auth.SAMLAuthProvider.__proto__.new.call(this, providerId);
    ;
  }).prototype = saml_auth.SAMLAuthProvider.prototype;
  dart.addTypeTests(saml_auth.SAMLAuthProvider);
  dart.addTypeCaches(saml_auth.SAMLAuthProvider);
  dart.setLibraryUri(saml_auth.SAMLAuthProvider, I[99]);
  twitter_auth.TwitterAuthProvider = class TwitterAuthProvider extends auth_provider.AuthProvider {
    static ['_#new#tearOff']() {
      return new twitter_auth.TwitterAuthProvider.new();
    }
    static credential(opts) {
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      let secret = opts && 'secret' in opts ? opts.secret : null;
      return twitter_auth.TwitterAuthCredential._credential({accessToken: accessToken, secret: secret});
    }
    static get TWITTER_SIGN_IN_METHOD() {
      return "twitter.com";
    }
    static get PROVIDER_ID() {
      return "twitter.com";
    }
    get parameters() {
      return this[S$._parameters$6];
    }
    setCustomParameters(customOAuthParameters) {
      this[S$._parameters$6] = customOAuthParameters;
      return this;
    }
  };
  (twitter_auth.TwitterAuthProvider.new = function() {
    this[S$._parameters$6] = new _js_helper.LinkedMap.new();
    twitter_auth.TwitterAuthProvider.__proto__.new.call(this, "twitter.com");
    ;
  }).prototype = twitter_auth.TwitterAuthProvider.prototype;
  dart.addTypeTests(twitter_auth.TwitterAuthProvider);
  dart.addTypeCaches(twitter_auth.TwitterAuthProvider);
  dart.setMethodSignature(twitter_auth.TwitterAuthProvider, () => ({
    __proto__: dart.getMethods(twitter_auth.TwitterAuthProvider.__proto__),
    setCustomParameters: dart.fnType(twitter_auth.TwitterAuthProvider, [core.Map])
  }));
  dart.setStaticMethodSignature(twitter_auth.TwitterAuthProvider, () => ['credential']);
  dart.setGetterSignature(twitter_auth.TwitterAuthProvider, () => ({
    __proto__: dart.getGetters(twitter_auth.TwitterAuthProvider.__proto__),
    parameters: core.Map
  }));
  dart.setStaticGetterSignature(twitter_auth.TwitterAuthProvider, () => ['TWITTER_SIGN_IN_METHOD', 'PROVIDER_ID']);
  dart.setLibraryUri(twitter_auth.TwitterAuthProvider, I[100]);
  dart.setFieldSignature(twitter_auth.TwitterAuthProvider, () => ({
    __proto__: dart.getFields(twitter_auth.TwitterAuthProvider.__proto__),
    [S$._parameters$6]: dart.fieldType(core.Map)
  }));
  twitter_auth.TwitterAuthCredential = class TwitterAuthCredential extends oauth.OAuthCredential {
    static ['_#_#tearOff'](opts) {
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      let secret = opts && 'secret' in opts ? opts.secret : null;
      return new twitter_auth.TwitterAuthCredential.__({accessToken: accessToken, secret: secret});
    }
    static _credential(opts) {
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      let secret = opts && 'secret' in opts ? opts.secret : null;
      return new twitter_auth.TwitterAuthCredential.__({accessToken: accessToken, secret: secret});
    }
    static ['_#_credential#tearOff'](opts) {
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      let secret = opts && 'secret' in opts ? opts.secret : null;
      return twitter_auth.TwitterAuthCredential._credential({accessToken: accessToken, secret: secret});
    }
  };
  (twitter_auth.TwitterAuthCredential.__ = function(opts) {
    let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
    let secret = opts && 'secret' in opts ? opts.secret : null;
    twitter_auth.TwitterAuthCredential.__proto__.new.call(this, {providerId: "twitter.com", signInMethod: "twitter.com", accessToken: accessToken, secret: secret});
    ;
  }).prototype = twitter_auth.TwitterAuthCredential.prototype;
  dart.addTypeTests(twitter_auth.TwitterAuthCredential);
  dart.addTypeCaches(twitter_auth.TwitterAuthCredential);
  dart.setStaticMethodSignature(twitter_auth.TwitterAuthCredential, () => ['_credential']);
  dart.setLibraryUri(twitter_auth.TwitterAuthCredential, I[100]);
  dart.defineLazy(twitter_auth, {
    /*twitter_auth._kProviderId*/get _kProviderId() {
      return "twitter.com";
    }
  }, false);
  yahoo_auth.YahooAuthProvider = class YahooAuthProvider extends auth_provider.AuthProvider {
    static ['_#new#tearOff']() {
      return new yahoo_auth.YahooAuthProvider.new();
    }
    static credential(accessToken) {
      return yahoo_auth.YahooAuthCredential._credential(accessToken);
    }
    static get YAHOO_SIGN_IN_METHOD() {
      return "yahoo.com";
    }
    static get PROVIDER_ID() {
      return "yahoo.com";
    }
    get scopes() {
      return this[S$._scopes$6];
    }
    get parameters() {
      return this[S$._parameters$7];
    }
    addScope(scope) {
      this[S$._scopes$6][S$.$add](scope);
      return this;
    }
    setCustomParameters(customOAuthParameters) {
      this[S$._parameters$7] = customOAuthParameters;
      return this;
    }
  };
  (yahoo_auth.YahooAuthProvider.new = function() {
    this[S$._scopes$6] = T$.JSArrayOfString().of([]);
    this[S$._parameters$7] = new _js_helper.LinkedMap.new();
    yahoo_auth.YahooAuthProvider.__proto__.new.call(this, "yahoo.com");
    ;
  }).prototype = yahoo_auth.YahooAuthProvider.prototype;
  dart.addTypeTests(yahoo_auth.YahooAuthProvider);
  dart.addTypeCaches(yahoo_auth.YahooAuthProvider);
  dart.setMethodSignature(yahoo_auth.YahooAuthProvider, () => ({
    __proto__: dart.getMethods(yahoo_auth.YahooAuthProvider.__proto__),
    addScope: dart.fnType(yahoo_auth.YahooAuthProvider, [core.String]),
    setCustomParameters: dart.fnType(yahoo_auth.YahooAuthProvider, [core.Map])
  }));
  dart.setStaticMethodSignature(yahoo_auth.YahooAuthProvider, () => ['credential']);
  dart.setGetterSignature(yahoo_auth.YahooAuthProvider, () => ({
    __proto__: dart.getGetters(yahoo_auth.YahooAuthProvider.__proto__),
    scopes: core.List$(core.String),
    parameters: core.Map
  }));
  dart.setStaticGetterSignature(yahoo_auth.YahooAuthProvider, () => ['YAHOO_SIGN_IN_METHOD', 'PROVIDER_ID']);
  dart.setLibraryUri(yahoo_auth.YahooAuthProvider, I[101]);
  dart.setFieldSignature(yahoo_auth.YahooAuthProvider, () => ({
    __proto__: dart.getFields(yahoo_auth.YahooAuthProvider.__proto__),
    [S$._scopes$6]: dart.fieldType(core.List$(core.String)),
    [S$._parameters$7]: dart.fieldType(core.Map)
  }));
  yahoo_auth.YahooAuthCredential = class YahooAuthCredential extends oauth.OAuthCredential {
    static ['_#_#tearOff'](opts) {
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      return new yahoo_auth.YahooAuthCredential.__({accessToken: accessToken});
    }
    static _credential(accessToken) {
      return new yahoo_auth.YahooAuthCredential.__({accessToken: accessToken});
    }
    static ['_#_credential#tearOff'](accessToken) {
      return yahoo_auth.YahooAuthCredential._credential(accessToken);
    }
  };
  (yahoo_auth.YahooAuthCredential.__ = function(opts) {
    let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
    yahoo_auth.YahooAuthCredential.__proto__.new.call(this, {providerId: "yahoo.com", signInMethod: "yahoo.com", accessToken: accessToken});
    ;
  }).prototype = yahoo_auth.YahooAuthCredential.prototype;
  dart.addTypeTests(yahoo_auth.YahooAuthCredential);
  dart.addTypeCaches(yahoo_auth.YahooAuthCredential);
  dart.setStaticMethodSignature(yahoo_auth.YahooAuthCredential, () => ['_credential']);
  dart.setLibraryUri(yahoo_auth.YahooAuthCredential, I[101]);
  dart.defineLazy(yahoo_auth, {
    /*yahoo_auth._kProviderId*/get _kProviderId() {
      return "yahoo.com";
    }
  }, false);
  types.Persistence = class Persistence extends core._Enum {
    [S$._enumToString]() {
      return "Persistence." + this[S$._name];
    }
  };
  (types.Persistence.new = function(index, name) {
    types.Persistence.__proto__.new.call(this, index, name);
    ;
  }).prototype = types.Persistence.prototype;
  dart.addTypeTests(types.Persistence);
  dart.addTypeCaches(types.Persistence);
  dart.setMethodSignature(types.Persistence, () => ({
    __proto__: dart.getMethods(types.Persistence.__proto__),
    [S$._enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(types.Persistence, I[102]);
  dart.setStaticFieldSignature(types.Persistence, () => ['values', 'LOCAL', 'INDEXED_DB', 'NONE', 'SESSION']);
  dart.defineLazy(types.Persistence, {
    /*types.Persistence.values*/get values() {
      return C[85] || CT.C85;
    },
    /*types.Persistence.LOCAL*/get LOCAL() {
      return C[50] || CT.C50;
    },
    /*types.Persistence.INDEXED_DB*/get INDEXED_DB() {
      return C[51] || CT.C51;
    },
    /*types.Persistence.NONE*/get NONE() {
      return C[53] || CT.C53;
    },
    /*types.Persistence.SESSION*/get SESSION() {
      return C[52] || CT.C52;
    }
  }, false);
  user_info.UserInfo = class UserInfo extends core.Object {
    static ['_#new#tearOff'](_data) {
      return new user_info.UserInfo.new(_data);
    }
    get displayName() {
      return this[S$._data$3][S$.$_get]("displayName");
    }
    get email() {
      return this[S$._data$3][S$.$_get]("email");
    }
    get phoneNumber() {
      return this[S$._data$3][S$.$_get]("phoneNumber");
    }
    get photoURL() {
      return this[S$._data$3][S$.$_get]("photoURL");
    }
    get providerId() {
      return dart.nullCheck(this[S$._data$3][S$.$_get]("providerId"));
    }
    get uid() {
      return this[S$._data$3][S$.$_get]("uid");
    }
    toString() {
      return dart.str(dart.wrapType(user_info.UserInfo)) + "(displayName: " + dart.str(this.displayName) + ", email: " + dart.str(this.email) + ", phoneNumber: " + dart.str(this.phoneNumber) + ", photoURL: " + dart.str(this.photoURL) + ", providerId: " + this.providerId + ", uid: " + dart.str(this.uid) + ")";
    }
  };
  (user_info.UserInfo.new = function(_data) {
    this[S$._data$3] = _data;
    ;
  }).prototype = user_info.UserInfo.prototype;
  dart.addTypeTests(user_info.UserInfo);
  dart.addTypeCaches(user_info.UserInfo);
  dart.setGetterSignature(user_info.UserInfo, () => ({
    __proto__: dart.getGetters(user_info.UserInfo.__proto__),
    displayName: dart.nullable(core.String),
    email: dart.nullable(core.String),
    phoneNumber: dart.nullable(core.String),
    photoURL: dart.nullable(core.String),
    providerId: core.String,
    uid: dart.nullable(core.String)
  }));
  dart.setLibraryUri(user_info.UserInfo, I[103]);
  dart.setFieldSignature(user_info.UserInfo, () => ({
    __proto__: dart.getFields(user_info.UserInfo.__proto__),
    [S$._data$3]: dart.finalFieldType(core.Map$(core.String, dart.nullable(core.String)))
  }));
  dart.defineExtensionMethods(user_info.UserInfo, ['toString']);
  user_metadata.UserMetadata = class UserMetadata extends core.Object {
    static ['_#new#tearOff'](_creationTimestamp, _lastSignInTime) {
      return new user_metadata.UserMetadata.new(_creationTimestamp, _lastSignInTime);
    }
    get creationTime() {
      return this[S$._creationTimestamp] == null ? null : new core.DateTime.fromMillisecondsSinceEpoch(dart.nullCheck(this[S$._creationTimestamp]), {isUtc: true});
    }
    get lastSignInTime() {
      return this[S$._lastSignInTime] == null ? null : new core.DateTime.fromMillisecondsSinceEpoch(dart.nullCheck(this[S$._lastSignInTime]), {isUtc: true});
    }
    toString() {
      return "UserMetadata(creationTime: " + dart.toString(this.creationTime) + ", lastSignInTime: " + dart.toString(this.lastSignInTime) + ")";
    }
  };
  (user_metadata.UserMetadata.new = function(_creationTimestamp, _lastSignInTime) {
    this[S$._creationTimestamp] = _creationTimestamp;
    this[S$._lastSignInTime] = _lastSignInTime;
    ;
  }).prototype = user_metadata.UserMetadata.prototype;
  dart.addTypeTests(user_metadata.UserMetadata);
  dart.addTypeCaches(user_metadata.UserMetadata);
  dart.setGetterSignature(user_metadata.UserMetadata, () => ({
    __proto__: dart.getGetters(user_metadata.UserMetadata.__proto__),
    creationTime: dart.nullable(core.DateTime),
    lastSignInTime: dart.nullable(core.DateTime)
  }));
  dart.setLibraryUri(user_metadata.UserMetadata, I[104]);
  dart.setFieldSignature(user_metadata.UserMetadata, () => ({
    __proto__: dart.getFields(user_metadata.UserMetadata.__proto__),
    [S$._creationTimestamp]: dart.finalFieldType(dart.nullable(core.int)),
    [S$._lastSignInTime]: dart.finalFieldType(dart.nullable(core.int))
  }));
  dart.defineExtensionMethods(user_metadata.UserMetadata, ['toString']);
  app$.App = class App extends js$.JsObjectWrapper$(dart.packageJSType("firebase_core.FirebaseApp", false)) {
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new app$.App._fromJsObject(jsObject);
    }
    get name() {
      return this.jsObject.name;
    }
    get options() {
      return this.jsObject.options;
    }
    static getInstance(jsObject) {
      let t105, t104, t103, t102;
      t102 = app$.App._expando;
      t103 = jsObject;
      t104 = t102._get(t103);
      return t104 == null ? (t105 = new app$.App._fromJsObject(jsObject), t102._set(t103, t105), t105) : t104;
    }
    delete() {
      return utils$.handleThenable(dart.void, dart.global.firebase_core.deleteApp(this.jsObject));
    }
  };
  (app$.App._fromJsObject = function(jsObject) {
    app$.App.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = app$.App.prototype;
  dart.addTypeTests(app$.App);
  dart.addTypeCaches(app$.App);
  dart.setMethodSignature(app$.App, () => ({
    __proto__: dart.getMethods(app$.App.__proto__),
    delete: dart.fnType(async.Future$(dart.void), [])
  }));
  dart.setStaticMethodSignature(app$.App, () => ['getInstance']);
  dart.setGetterSignature(app$.App, () => ({
    __proto__: dart.getGetters(app$.App.__proto__),
    name: core.String,
    options: dart.packageJSType("FirebaseOptions", false)
  }));
  dart.setLibraryUri(app$.App, I[105]);
  dart.setStaticFieldSignature(app$.App, () => ['_expando']);
  dart.defineLazy(app$.App, {
    /*app$.App._expando*/get _expando() {
      return new (T$.ExpandoOfApp()).new();
    }
  }, false);
  storage.TaskState = class TaskState extends core._Enum {
    [S$._enumToString]() {
      return "TaskState." + this[S$._name];
    }
  };
  (storage.TaskState.new = function(index, name) {
    storage.TaskState.__proto__.new.call(this, index, name);
    ;
  }).prototype = storage.TaskState.prototype;
  dart.addTypeTests(storage.TaskState);
  dart.addTypeCaches(storage.TaskState);
  dart.setMethodSignature(storage.TaskState, () => ({
    __proto__: dart.getMethods(storage.TaskState.__proto__),
    [S$._enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(storage.TaskState, I[106]);
  dart.setStaticFieldSignature(storage.TaskState, () => ['values', 'RUNNING', 'PAUSED', 'SUCCESS', 'CANCELED', 'ERROR']);
  dart.defineLazy(storage.TaskState, {
    /*storage.TaskState.values*/get values() {
      return C[86] || CT.C86;
    },
    /*storage.TaskState.RUNNING*/get RUNNING() {
      return C[87] || CT.C87;
    },
    /*storage.TaskState.PAUSED*/get PAUSED() {
      return C[88] || CT.C88;
    },
    /*storage.TaskState.SUCCESS*/get SUCCESS() {
      return C[89] || CT.C89;
    },
    /*storage.TaskState.CANCELED*/get CANCELED() {
      return C[90] || CT.C90;
    },
    /*storage.TaskState.ERROR*/get ERROR() {
      return C[91] || CT.C91;
    }
  }, false);
  storage.Storage = class Storage extends js$.JsObjectWrapper$(dart.packageJSType("firebase_storage.FirebaseStorage", false)) {
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new storage.Storage._fromJsObject(jsObject);
    }
    get app() {
      return app$.App.getInstance(this.jsObject.app);
    }
    get maxOperationRetryTime() {
      return this.jsObject.maxOperationRetryTime;
    }
    get maxUploadRetryTime() {
      return this.jsObject.maxUploadRetryTime;
    }
    static getInstance(jsObject) {
      let t107, t106, t105, t104;
      t104 = storage.Storage._expando;
      t105 = jsObject;
      t106 = t104._get(t105);
      return t106 == null ? (t107 = new storage.Storage._fromJsObject(jsObject), t104._set(t105, t107), t107) : t106;
    }
    ref(path = null) {
      return storage.StorageReference.getInstance(dart.global.firebase_storage.ref(this.jsObject, path));
    }
    refFromURL(url) {
      return storage.StorageReference.getInstance(dart.global.firebase_storage.ref(this.jsObject, url));
    }
    set maxOperationRetryTime(time) {
      this.jsObject.maxOperationRetryTime = time;
    }
    set maxUploadRetryTime(time) {
      this.jsObject.maxUploadRetryTime = time;
    }
    useStorageEmulator(host, port) {
      return dart.global.firebase_storage.connectStorageEmulator(this.jsObject, host, port);
    }
  };
  (storage.Storage._fromJsObject = function(jsObject) {
    storage.Storage.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = storage.Storage.prototype;
  dart.addTypeTests(storage.Storage);
  dart.addTypeCaches(storage.Storage);
  dart.setMethodSignature(storage.Storage, () => ({
    __proto__: dart.getMethods(storage.Storage.__proto__),
    ref: dart.fnType(storage.StorageReference, [], [dart.nullable(core.String)]),
    refFromURL: dart.fnType(storage.StorageReference, [core.String]),
    useStorageEmulator: dart.fnType(dart.void, [core.String, core.int])
  }));
  dart.setStaticMethodSignature(storage.Storage, () => ['getInstance']);
  dart.setGetterSignature(storage.Storage, () => ({
    __proto__: dart.getGetters(storage.Storage.__proto__),
    app: app$.App,
    maxOperationRetryTime: core.int,
    maxUploadRetryTime: core.int
  }));
  dart.setSetterSignature(storage.Storage, () => ({
    __proto__: dart.getSetters(storage.Storage.__proto__),
    maxOperationRetryTime: core.int,
    maxUploadRetryTime: core.int
  }));
  dart.setLibraryUri(storage.Storage, I[106]);
  dart.setStaticFieldSignature(storage.Storage, () => ['_expando']);
  dart.defineLazy(storage.Storage, {
    /*storage.Storage._expando*/get _expando() {
      return new (T$.ExpandoOfStorage()).new();
    }
  }, false);
  storage.StorageReference = class StorageReference extends js$.JsObjectWrapper$(dart.packageJSType("firebase_storage.StorageReference", false)) {
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new storage.StorageReference._fromJsObject(jsObject);
    }
    get bucket() {
      return this.jsObject.bucket;
    }
    get fullPath() {
      return this.jsObject.fullPath;
    }
    get name() {
      return this.jsObject.name;
    }
    get parent() {
      return storage.StorageReference.getInstance(this.jsObject.parent);
    }
    get root() {
      return storage.StorageReference.getInstance(this.jsObject.root);
    }
    get storage() {
      return storage.Storage.getInstance(this.jsObject.storage);
    }
    static getInstance(jsObject) {
      let t107, t106, t105, t104;
      t104 = storage.StorageReference._expando;
      t105 = jsObject;
      t106 = t104._get(t105);
      return t106 == null ? (t107 = new storage.StorageReference._fromJsObject(jsObject), t104._set(t105, t107), t107) : t106;
    }
    child(path) {
      return storage.StorageReference.getInstance(dart.global.firebase_storage.ref(this.jsObject, path));
    }
    delete() {
      return utils$.handleThenable(dart.dynamic, dart.global.firebase_storage.deleteObject(this.jsObject));
    }
    getDownloadURL() {
      return async.async(core.Uri, (function* getDownloadURL() {
        let uriString = (yield utils$.handleThenable(core.String, dart.global.firebase_storage.getDownloadURL(this.jsObject)));
        return core.Uri.parse(uriString);
      }).bind(this));
    }
    getMetadata() {
      return utils$.handleThenable(dart.packageJSType("FullMetadataJsImpl", false), dart.global.firebase_storage.getMetadata(this.jsObject)).then(storage.FullMetadata, C[92] || CT.C92);
    }
    list(options) {
      let t104;
      return utils$.handleThenable(dart.packageJSType("ListResultJsImpl", false), dart.global.firebase_storage.list(this.jsObject, (t104 = options, t104 == null ? null : t104.jsObject))).then(storage.ListResult, C[93] || CT.C93);
    }
    listAll() {
      return utils$.handleThenable(dart.packageJSType("ListResultJsImpl", false), dart.global.firebase_storage.listAll(this.jsObject)).then(storage.ListResult, C[93] || CT.C93);
    }
    put(blob, metadata = null) {
      let taskImpl = null;
      if (metadata != null) {
        taskImpl = dart.global.firebase_storage.uploadBytesResumable(this.jsObject, blob, metadata.jsObject);
      } else {
        taskImpl = dart.global.firebase_storage.uploadBytesResumable(this.jsObject, blob);
      }
      return storage.UploadTask.getInstance(taskImpl);
    }
    toString() {
      return this.jsObject.toString();
    }
    updateMetadata(metadata) {
      return async.async(storage.FullMetadata, (function* updateMetadata() {
        yield utils$.handleThenable(dart.packageJSType("FullMetadataJsImpl", false), dart.global.firebase_storage.updateMetadata(this.jsObject, metadata.jsObject));
        return this.getMetadata();
      }).bind(this));
    }
  };
  (storage.StorageReference._fromJsObject = function(jsObject) {
    storage.StorageReference.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = storage.StorageReference.prototype;
  dart.addTypeTests(storage.StorageReference);
  dart.addTypeCaches(storage.StorageReference);
  dart.setMethodSignature(storage.StorageReference, () => ({
    __proto__: dart.getMethods(storage.StorageReference.__proto__),
    child: dart.fnType(storage.StorageReference, [core.String]),
    delete: dart.fnType(async.Future, []),
    getDownloadURL: dart.fnType(async.Future$(core.Uri), []),
    getMetadata: dart.fnType(async.Future$(storage.FullMetadata), []),
    list: dart.fnType(async.Future$(storage.ListResult), [dart.nullable(storage.ListOptions)]),
    listAll: dart.fnType(async.Future$(storage.ListResult), []),
    put: dart.fnType(storage.UploadTask, [dart.dynamic], [dart.nullable(storage.UploadMetadata)]),
    updateMetadata: dart.fnType(async.Future$(storage.FullMetadata), [storage.SettableMetadata])
  }));
  dart.setStaticMethodSignature(storage.StorageReference, () => ['getInstance']);
  dart.setGetterSignature(storage.StorageReference, () => ({
    __proto__: dart.getGetters(storage.StorageReference.__proto__),
    bucket: core.String,
    fullPath: core.String,
    name: core.String,
    parent: dart.nullable(storage.StorageReference),
    root: storage.StorageReference,
    storage: storage.Storage
  }));
  dart.setLibraryUri(storage.StorageReference, I[106]);
  dart.setStaticFieldSignature(storage.StorageReference, () => ['_expando']);
  dart.defineExtensionMethods(storage.StorageReference, ['toString']);
  dart.defineLazy(storage.StorageReference, {
    /*storage.StorageReference._expando*/get _expando() {
      return new (T$.ExpandoOfStorageReference()).new();
    }
  }, false);
  const _is__SettableMetadataBase_default = Symbol('_is__SettableMetadataBase_default');
  storage._SettableMetadataBase$ = dart.generic(T => {
    class _SettableMetadataBase extends js$.JsObjectWrapper$(T) {
      get cacheControl() {
        return this.jsObject.cacheControl;
      }
      set cacheControl(s) {
        this.jsObject.cacheControl = s;
      }
      get contentDisposition() {
        return this.jsObject.contentDisposition;
      }
      set contentDisposition(s) {
        this.jsObject.contentDisposition = s;
      }
      get contentEncoding() {
        return this.jsObject.contentEncoding;
      }
      set contentEncoding(s) {
        this.jsObject.contentEncoding = s;
      }
      get contentLanguage() {
        return this.jsObject.contentLanguage;
      }
      set contentLanguage(s) {
        this.jsObject.contentLanguage = s;
      }
      get contentType() {
        return this.jsObject.contentType;
      }
      set contentType(s) {
        this.jsObject.contentType = s;
      }
      get customMetadata() {
        let metadata = T$.MapNOfString$dynamic().as(utils$.dartify(this.jsObject.customMetadata));
        if (metadata != null) {
          return T$.LinkedHashMapOfString$String().from(metadata);
        } else {
          return new (T$.IdentityMapOfString$String()).new();
        }
      }
      set customMetadata(m) {
        this.jsObject.customMetadata = utils$.jsify(m);
      }
    }
    (_SettableMetadataBase.fromJsObject = function(jsObject) {
      _SettableMetadataBase.__proto__.fromJsObject.call(this, jsObject);
      ;
    }).prototype = _SettableMetadataBase.prototype;
    dart.addTypeTests(_SettableMetadataBase);
    _SettableMetadataBase.prototype[_is__SettableMetadataBase_default] = true;
    dart.addTypeCaches(_SettableMetadataBase);
    dart.setGetterSignature(_SettableMetadataBase, () => ({
      __proto__: dart.getGetters(_SettableMetadataBase.__proto__),
      cacheControl: core.String,
      contentDisposition: core.String,
      contentEncoding: core.String,
      contentLanguage: core.String,
      contentType: core.String,
      customMetadata: core.Map$(core.String, core.String)
    }));
    dart.setSetterSignature(_SettableMetadataBase, () => ({
      __proto__: dart.getSetters(_SettableMetadataBase.__proto__),
      cacheControl: core.String,
      contentDisposition: core.String,
      contentEncoding: core.String,
      contentLanguage: core.String,
      contentType: core.String,
      customMetadata: core.Map$(core.String, core.String)
    }));
    dart.setLibraryUri(_SettableMetadataBase, I[106]);
    return _SettableMetadataBase;
  });
  storage._SettableMetadataBase = storage._SettableMetadataBase$();
  dart.addTypeTests(storage._SettableMetadataBase, _is__SettableMetadataBase_default);
  const _is__UploadMetadataBase_default = Symbol('_is__UploadMetadataBase_default');
  storage._UploadMetadataBase$ = dart.generic(T => {
    class _UploadMetadataBase extends storage._SettableMetadataBase$(T) {
      get md5Hash() {
        return this.jsObject.md5Hash;
      }
      set md5Hash(s) {
        this.jsObject.md5Hash = s;
      }
    }
    (_UploadMetadataBase.fromJsObject = function(jsObject) {
      _UploadMetadataBase.__proto__.fromJsObject.call(this, jsObject);
      ;
    }).prototype = _UploadMetadataBase.prototype;
    dart.addTypeTests(_UploadMetadataBase);
    _UploadMetadataBase.prototype[_is__UploadMetadataBase_default] = true;
    dart.addTypeCaches(_UploadMetadataBase);
    dart.setGetterSignature(_UploadMetadataBase, () => ({
      __proto__: dart.getGetters(_UploadMetadataBase.__proto__),
      md5Hash: core.String
    }));
    dart.setSetterSignature(_UploadMetadataBase, () => ({
      __proto__: dart.getSetters(_UploadMetadataBase.__proto__),
      md5Hash: core.String
    }));
    dart.setLibraryUri(_UploadMetadataBase, I[106]);
    return _UploadMetadataBase;
  });
  storage._UploadMetadataBase = storage._UploadMetadataBase$();
  dart.addTypeTests(storage._UploadMetadataBase, _is__UploadMetadataBase_default);
  storage.FullMetadata = class FullMetadata extends storage._UploadMetadataBase$(dart.packageJSType("FullMetadataJsImpl", false)) {
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new storage.FullMetadata._fromJsObject(jsObject);
    }
    get bucket() {
      return this.jsObject.bucket;
    }
    get fullPath() {
      return this.jsObject.fullPath;
    }
    get generation() {
      return this.jsObject.generation;
    }
    get metageneration() {
      return this.jsObject.metageneration;
    }
    get name() {
      return this.jsObject.name;
    }
    get size() {
      return this.jsObject.size;
    }
    get timeCreated() {
      return this.jsObject.timeCreated == null ? null : core.DateTime.parse(dart.nullCheck(this.jsObject.timeCreated));
    }
    get updated() {
      return this.jsObject.updated == null ? null : core.DateTime.parse(dart.nullCheck(this.jsObject.updated));
    }
    static getInstance(jsObject) {
      let t107, t106, t105, t104;
      t104 = storage.FullMetadata._expando;
      t105 = jsObject;
      t106 = t104._get(t105);
      return t106 == null ? (t107 = new storage.FullMetadata._fromJsObject(jsObject), t104._set(t105, t107), t107) : t106;
    }
  };
  (storage.FullMetadata._fromJsObject = function(jsObject) {
    storage.FullMetadata.__proto__.fromJsObject.call(this, dart.packageJSType("FullMetadataJsImpl", false).as(jsObject));
    ;
  }).prototype = storage.FullMetadata.prototype;
  dart.addTypeTests(storage.FullMetadata);
  dart.addTypeCaches(storage.FullMetadata);
  dart.setStaticMethodSignature(storage.FullMetadata, () => ['getInstance']);
  dart.setGetterSignature(storage.FullMetadata, () => ({
    __proto__: dart.getGetters(storage.FullMetadata.__proto__),
    bucket: core.String,
    fullPath: dart.nullable(core.String),
    generation: dart.nullable(core.String),
    metageneration: dart.nullable(core.String),
    name: dart.nullable(core.String),
    size: dart.nullable(core.int),
    timeCreated: dart.nullable(core.DateTime),
    updated: dart.nullable(core.DateTime)
  }));
  dart.setLibraryUri(storage.FullMetadata, I[106]);
  dart.setStaticFieldSignature(storage.FullMetadata, () => ['_expando']);
  dart.defineLazy(storage.FullMetadata, {
    /*storage.FullMetadata._expando*/get _expando() {
      return new (T$.ExpandoOfFullMetadata()).new();
    }
  }, false);
  storage.UploadMetadata = class UploadMetadata extends storage._UploadMetadataBase$(dart.packageJSType("UploadMetadataJsImpl", false)) {
    static new(opts) {
      let md5Hash = opts && 'md5Hash' in opts ? opts.md5Hash : null;
      let cacheControl = opts && 'cacheControl' in opts ? opts.cacheControl : null;
      let contentDisposition = opts && 'contentDisposition' in opts ? opts.contentDisposition : null;
      let contentEncoding = opts && 'contentEncoding' in opts ? opts.contentEncoding : null;
      let contentLanguage = opts && 'contentLanguage' in opts ? opts.contentLanguage : null;
      let contentType = opts && 'contentType' in opts ? opts.contentType : null;
      let customMetadata = opts && 'customMetadata' in opts ? opts.customMetadata : null;
      return new storage.UploadMetadata.fromJsObject({md5Hash: md5Hash, cacheControl: cacheControl, contentDisposition: contentDisposition, contentEncoding: contentEncoding, contentLanguage: contentLanguage, contentType: contentType, customMetadata: customMetadata != null ? utils$.jsify(customMetadata) : null});
    }
    static ['_#new#tearOff'](opts) {
      let md5Hash = opts && 'md5Hash' in opts ? opts.md5Hash : null;
      let cacheControl = opts && 'cacheControl' in opts ? opts.cacheControl : null;
      let contentDisposition = opts && 'contentDisposition' in opts ? opts.contentDisposition : null;
      let contentEncoding = opts && 'contentEncoding' in opts ? opts.contentEncoding : null;
      let contentLanguage = opts && 'contentLanguage' in opts ? opts.contentLanguage : null;
      let contentType = opts && 'contentType' in opts ? opts.contentType : null;
      let customMetadata = opts && 'customMetadata' in opts ? opts.customMetadata : null;
      return storage.UploadMetadata.new({md5Hash: md5Hash, cacheControl: cacheControl, contentDisposition: contentDisposition, contentEncoding: contentEncoding, contentLanguage: contentLanguage, contentType: contentType, customMetadata: customMetadata});
    }
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new storage.UploadMetadata.fromJsObject(jsObject);
    }
  };
  (storage.UploadMetadata.fromJsObject = function(jsObject) {
    storage.UploadMetadata.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = storage.UploadMetadata.prototype;
  dart.addTypeTests(storage.UploadMetadata);
  dart.addTypeCaches(storage.UploadMetadata);
  dart.setStaticMethodSignature(storage.UploadMetadata, () => ['new']);
  dart.setLibraryUri(storage.UploadMetadata, I[106]);
  storage.UploadTask = class UploadTask extends js$.JsObjectWrapper$(dart.packageJSType("firebase_storage.UploadTask", false)) {
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new storage.UploadTask._fromJsObject(jsObject);
    }
    get future() {
      let t104;
      t104 = this[S$._future];
      return t104 == null ? this[S$._future] = utils$.handleThenable(dart.packageJSType("UploadTaskSnapshotJsImpl", false), this.jsObject).then(storage.UploadTaskSnapshot, C[94] || CT.C94) : t104;
    }
    get snapshot() {
      return storage.UploadTaskSnapshot.getInstance(this.jsObject.snapshot);
    }
    static getInstance(jsObject) {
      let t107, t106, t105, t104;
      t104 = storage.UploadTask._expando;
      t105 = jsObject;
      t106 = t104._get(t105);
      return t106 == null ? (t107 = new storage.UploadTask._fromJsObject(jsObject), t104._set(t105, t107), t107) : t106;
    }
    cancel() {
      return this.jsObject.cancel();
    }
    get onStateChanged() {
      let changeController = null;
      function changeController$35get() {
        let t105;
        t105 = changeController;
        return t105 == null ? dart.throw(new _internal.LateError.localNI("changeController")) : t105;
      }
      function changeController$35set(changeController$35param) {
        return changeController = changeController$35param;
      }
      let onStateChangedUnsubscribe = null;
      function onStateChangedUnsubscribe$35get() {
        let t108;
        t108 = onStateChangedUnsubscribe;
        return t108 == null ? dart.throw(new _internal.LateError.localNI("onStateChangedUnsubscribe")) : t108;
      }
      function onStateChangedUnsubscribe$35set(onStateChangedUnsubscribe$35param) {
        return onStateChangedUnsubscribe = onStateChangedUnsubscribe$35param;
      }
      let nextWrapper = js.allowInterop(T$.UploadTaskSnapshotJsImplToNull(), dart.fn(data => {
        changeController$35get().add(storage.UploadTaskSnapshot.getInstance(data));
      }, T$.UploadTaskSnapshotJsImplToNull()));
      let errorWrapper = js.allowInterop(T$.dynamicTovoid(), dart.fn(e => changeController$35get().addError(core.Object.as(e)), T$.dynamicTovoid()));
      let onCompletion = js.allowInterop(T$.VoidToNull(), dart.fn(() => {
        changeController$35get().close();
      }, T$.VoidToNull()));
      const startListen = () => {
        onStateChangedUnsubscribe$35set(this.jsObject.on(dart.global.firebase_storage.TaskEvent, dart.assertInterop(nextWrapper), dart.assertInterop(errorWrapper), dart.assertInterop(onCompletion)));
      };
      dart.fn(startListen, T$.VoidTovoid());
      function stopListen() {
        onStateChangedUnsubscribe$35get()();
        changeController$35get().close();
      }
      dart.fn(stopListen, T$.VoidTovoid());
      changeController$35set(T$.StreamControllerOfUploadTaskSnapshot().broadcast({onListen: startListen, onCancel: stopListen, sync: true}));
      return changeController$35get().stream;
    }
    pause() {
      return this.jsObject.pause();
    }
    resume() {
      return this.jsObject.resume();
    }
  };
  (storage.UploadTask._fromJsObject = function(jsObject) {
    this[S$._future] = null;
    storage.UploadTask.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = storage.UploadTask.prototype;
  dart.addTypeTests(storage.UploadTask);
  dart.addTypeCaches(storage.UploadTask);
  dart.setMethodSignature(storage.UploadTask, () => ({
    __proto__: dart.getMethods(storage.UploadTask.__proto__),
    cancel: dart.fnType(core.bool, []),
    pause: dart.fnType(core.bool, []),
    resume: dart.fnType(core.bool, [])
  }));
  dart.setStaticMethodSignature(storage.UploadTask, () => ['getInstance']);
  dart.setGetterSignature(storage.UploadTask, () => ({
    __proto__: dart.getGetters(storage.UploadTask.__proto__),
    future: async.Future$(storage.UploadTaskSnapshot),
    snapshot: storage.UploadTaskSnapshot,
    onStateChanged: async.Stream$(storage.UploadTaskSnapshot)
  }));
  dart.setLibraryUri(storage.UploadTask, I[106]);
  dart.setFieldSignature(storage.UploadTask, () => ({
    __proto__: dart.getFields(storage.UploadTask.__proto__),
    [S$._future]: dart.fieldType(dart.nullable(async.Future$(storage.UploadTaskSnapshot)))
  }));
  dart.setStaticFieldSignature(storage.UploadTask, () => ['_expando']);
  dart.defineLazy(storage.UploadTask, {
    /*storage.UploadTask._expando*/get _expando() {
      return new (T$.ExpandoOfUploadTask()).new();
    }
  }, false);
  storage.UploadTaskSnapshot = class UploadTaskSnapshot extends js$.JsObjectWrapper$(dart.packageJSType("UploadTaskSnapshotJsImpl", false)) {
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new storage.UploadTaskSnapshot._fromJsObject(jsObject);
    }
    get bytesTransferred() {
      return this.jsObject.bytesTransferred;
    }
    get metadata() {
      return storage.FullMetadata.getInstance(this.jsObject.metadata);
    }
    get ref() {
      return storage.StorageReference.getInstance(this.jsObject.ref);
    }
    get state() {
      switch (this.jsObject.state) {
        case "running":
          {
            return storage.TaskState.RUNNING;
          }
        case "paused":
          {
            return storage.TaskState.PAUSED;
          }
        case "success":
          {
            return storage.TaskState.SUCCESS;
          }
        case "canceled":
          {
            return storage.TaskState.CANCELED;
          }
        case "error":
          {
            return storage.TaskState.ERROR;
          }
        default:
          {
            dart.throw(new core.UnsupportedError.new("Unknown state '" + this.jsObject.state + "' please file a bug."));
          }
      }
    }
    get task() {
      return storage.UploadTask.getInstance(this.jsObject.task);
    }
    get totalBytes() {
      return this.jsObject.totalBytes;
    }
    static getInstance(jsObject) {
      let t113, t112, t111, t110;
      t110 = storage.UploadTaskSnapshot._expando;
      t111 = jsObject;
      t112 = t110._get(t111);
      return t112 == null ? (t113 = new storage.UploadTaskSnapshot._fromJsObject(jsObject), t110._set(t111, t113), t113) : t112;
    }
  };
  (storage.UploadTaskSnapshot._fromJsObject = function(jsObject) {
    storage.UploadTaskSnapshot.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = storage.UploadTaskSnapshot.prototype;
  dart.addTypeTests(storage.UploadTaskSnapshot);
  dart.addTypeCaches(storage.UploadTaskSnapshot);
  dart.setStaticMethodSignature(storage.UploadTaskSnapshot, () => ['getInstance']);
  dart.setGetterSignature(storage.UploadTaskSnapshot, () => ({
    __proto__: dart.getGetters(storage.UploadTaskSnapshot.__proto__),
    bytesTransferred: core.int,
    metadata: storage.FullMetadata,
    ref: storage.StorageReference,
    state: storage.TaskState,
    task: storage.UploadTask,
    totalBytes: core.int
  }));
  dart.setLibraryUri(storage.UploadTaskSnapshot, I[106]);
  dart.setStaticFieldSignature(storage.UploadTaskSnapshot, () => ['_expando']);
  dart.defineLazy(storage.UploadTaskSnapshot, {
    /*storage.UploadTaskSnapshot._expando*/get _expando() {
      return new (T$.ExpandoOfUploadTaskSnapshot()).new();
    }
  }, false);
  storage.SettableMetadata = class SettableMetadata extends storage._SettableMetadataBase$(dart.packageJSType("SettableMetadataJsImpl", false)) {
    static new(opts) {
      let cacheControl = opts && 'cacheControl' in opts ? opts.cacheControl : null;
      let contentDisposition = opts && 'contentDisposition' in opts ? opts.contentDisposition : null;
      let contentEncoding = opts && 'contentEncoding' in opts ? opts.contentEncoding : null;
      let contentLanguage = opts && 'contentLanguage' in opts ? opts.contentLanguage : null;
      let contentType = opts && 'contentType' in opts ? opts.contentType : null;
      let customMetadata = opts && 'customMetadata' in opts ? opts.customMetadata : null;
      return new storage.SettableMetadata.fromJsObject({cacheControl: cacheControl, contentDisposition: contentDisposition, contentEncoding: contentEncoding, contentLanguage: contentLanguage, contentType: contentType, customMetadata: customMetadata != null ? utils$.jsify(customMetadata) : null});
    }
    static ['_#new#tearOff'](opts) {
      let cacheControl = opts && 'cacheControl' in opts ? opts.cacheControl : null;
      let contentDisposition = opts && 'contentDisposition' in opts ? opts.contentDisposition : null;
      let contentEncoding = opts && 'contentEncoding' in opts ? opts.contentEncoding : null;
      let contentLanguage = opts && 'contentLanguage' in opts ? opts.contentLanguage : null;
      let contentType = opts && 'contentType' in opts ? opts.contentType : null;
      let customMetadata = opts && 'customMetadata' in opts ? opts.customMetadata : null;
      return storage.SettableMetadata.new({cacheControl: cacheControl, contentDisposition: contentDisposition, contentEncoding: contentEncoding, contentLanguage: contentLanguage, contentType: contentType, customMetadata: customMetadata});
    }
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new storage.SettableMetadata.fromJsObject(jsObject);
    }
  };
  (storage.SettableMetadata.fromJsObject = function(jsObject) {
    storage.SettableMetadata.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = storage.SettableMetadata.prototype;
  dart.addTypeTests(storage.SettableMetadata);
  dart.addTypeCaches(storage.SettableMetadata);
  dart.setStaticMethodSignature(storage.SettableMetadata, () => ['new']);
  dart.setLibraryUri(storage.SettableMetadata, I[106]);
  storage.ListOptions = class ListOptions extends js$.JsObjectWrapper$(dart.packageJSType("ListOptionsJsImpl", false)) {
    static new(opts) {
      let maxResults = opts && 'maxResults' in opts ? opts.maxResults : null;
      let pageToken = opts && 'pageToken' in opts ? opts.pageToken : null;
      return new storage.ListOptions._fromJsObject({maxResults: maxResults, pageToken: pageToken});
    }
    static ['_#new#tearOff'](opts) {
      let maxResults = opts && 'maxResults' in opts ? opts.maxResults : null;
      let pageToken = opts && 'pageToken' in opts ? opts.pageToken : null;
      return storage.ListOptions.new({maxResults: maxResults, pageToken: pageToken});
    }
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new storage.ListOptions._fromJsObject(jsObject);
    }
    get maxResults() {
      return this.jsObject.maxResults;
    }
    set maxResults(n) {
      return this.jsObject.maxResults = n;
    }
    get pageToken() {
      return this.jsObject.pageToken;
    }
    set pageToken(t) {
      return this.jsObject.pageToken = t;
    }
  };
  (storage.ListOptions._fromJsObject = function(jsObject) {
    storage.ListOptions.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = storage.ListOptions.prototype;
  dart.addTypeTests(storage.ListOptions);
  dart.addTypeCaches(storage.ListOptions);
  dart.setStaticMethodSignature(storage.ListOptions, () => ['new']);
  dart.setGetterSignature(storage.ListOptions, () => ({
    __proto__: dart.getGetters(storage.ListOptions.__proto__),
    maxResults: core.int,
    pageToken: core.String
  }));
  dart.setSetterSignature(storage.ListOptions, () => ({
    __proto__: dart.getSetters(storage.ListOptions.__proto__),
    maxResults: core.int,
    pageToken: core.String
  }));
  dart.setLibraryUri(storage.ListOptions, I[106]);
  storage.ListResult = class ListResult extends js$.JsObjectWrapper$(dart.packageJSType("ListResultJsImpl", false)) {
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new storage.ListResult._fromJsObject(jsObject);
    }
    get items() {
      return this.jsObject.items[S$.$map](storage.StorageReference, dart.fn(data => new storage.StorageReference._fromJsObject(dart.packageJSType("firebase_storage.StorageReference", false).as(data)), T$.dynamicToStorageReference()))[S$.$toList]();
    }
    get nextPageToken() {
      return this.jsObject.nextPageToken;
    }
    get prefixes() {
      return this.jsObject.prefixes[S$.$map](storage.StorageReference, dart.fn(data => new storage.StorageReference._fromJsObject(dart.packageJSType("firebase_storage.StorageReference", false).as(data)), T$.dynamicToStorageReference()))[S$.$toList]();
    }
    static getInstance(jsObject) {
      let t113, t112, t111, t110;
      t110 = storage.ListResult._expando;
      t111 = jsObject;
      t112 = t110._get(t111);
      return t112 == null ? (t113 = new storage.ListResult._fromJsObject(jsObject), t110._set(t111, t113), t113) : t112;
    }
  };
  (storage.ListResult._fromJsObject = function(jsObject) {
    storage.ListResult.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = storage.ListResult.prototype;
  dart.addTypeTests(storage.ListResult);
  dart.addTypeCaches(storage.ListResult);
  dart.setStaticMethodSignature(storage.ListResult, () => ['getInstance']);
  dart.setGetterSignature(storage.ListResult, () => ({
    __proto__: dart.getGetters(storage.ListResult.__proto__),
    items: core.List$(storage.StorageReference),
    nextPageToken: core.String,
    prefixes: core.List$(storage.StorageReference)
  }));
  dart.setLibraryUri(storage.ListResult, I[106]);
  dart.setStaticFieldSignature(storage.ListResult, () => ['_expando']);
  dart.defineLazy(storage.ListResult, {
    /*storage.ListResult._expando*/get _expando() {
      return new (T$.ExpandoOfListResult()).new();
    }
  }, false);
  storage.getStorageInstance = function getStorageInstance(app = null, bucket = null) {
    let appImpl = app != null ? core$.app(app.name) : core$.app();
    return storage.Storage.getInstance(bucket != null ? dart.global.firebase_storage.getStorage(appImpl.jsObject, bucket) : dart.global.firebase_storage.getStorage(appImpl.jsObject));
  };
  platform_interface_reference.ReferencePlatform = class ReferencePlatform extends plugin_platform_interface.PlatformInterface {
    get storage() {
      return this[S$.storage];
    }
    set storage(value) {
      super.storage = value;
    }
    static verifyExtends(instance) {
      plugin_platform_interface.PlatformInterface.verifyToken(instance, platform_interface_reference.ReferencePlatform._token);
    }
    get bucket() {
      return this.storage.bucket;
    }
    get fullPath() {
      return this[S$._pointer$4].path;
    }
    get name() {
      return this[S$._pointer$4].name;
    }
    get parent() {
      let parentPath = this[S$._pointer$4].parent;
      if (parentPath == null) {
        return null;
      }
      return this.storage.ref(parentPath);
    }
    get root() {
      return this.storage.ref("/");
    }
    child(path) {
      return this.storage.ref(this[S$._pointer$4].child(path));
    }
    delete() {
      dart.throw(new core.UnimplementedError.new("delete() is not implemented"));
    }
    getDownloadURL() {
      dart.throw(new core.UnimplementedError.new("getDownloadURL() is not implemented"));
    }
    getMetadata() {
      dart.throw(new core.UnimplementedError.new("getMetadata() is not implemented"));
    }
    list(options = null) {
      dart.throw(new core.UnimplementedError.new("list() is not implemented"));
    }
    listAll() {
      dart.throw(new core.UnimplementedError.new("listAll() is not implemented"));
    }
    getData(maxSize) {
      return async.async(T$.Uint8ListN(), function* getData() {
        dart.throw(new core.UnimplementedError.new("getData() is not implemented"));
      });
    }
    putData(data, metadata = null) {
      dart.throw(new core.UnimplementedError.new("putData() is not implemented"));
    }
    putBlob(data, metadata = null) {
      dart.throw(new core.UnimplementedError.new("putBlob() is not implemented"));
    }
    putFile(file, metadata = null) {
      dart.throw(new core.UnimplementedError.new("putFile() is not implemented"));
    }
    putString(data, format, metadata = null) {
      dart.throw(new core.UnimplementedError.new("putString() is not implemented"));
    }
    updateMetadata(metadata) {
      dart.throw(new core.UnimplementedError.new("updateMetadata() is not implemented"));
    }
    writeToFile(file) {
      dart.throw(new core.UnimplementedError.new("writeToFile() is not implemented"));
    }
  };
  (platform_interface_reference.ReferencePlatform.new = function(storage, path) {
    this[S$.storage] = storage;
    this[S$._pointer$4] = new pointer$.Pointer.new(path);
    platform_interface_reference.ReferencePlatform.__proto__.new.call(this, {token: platform_interface_reference.ReferencePlatform._token});
    ;
  }).prototype = platform_interface_reference.ReferencePlatform.prototype;
  dart.addTypeTests(platform_interface_reference.ReferencePlatform);
  dart.addTypeCaches(platform_interface_reference.ReferencePlatform);
  dart.setMethodSignature(platform_interface_reference.ReferencePlatform, () => ({
    __proto__: dart.getMethods(platform_interface_reference.ReferencePlatform.__proto__),
    child: dart.fnType(platform_interface_reference.ReferencePlatform, [core.String]),
    delete: dart.fnType(async.Future$(dart.void), []),
    getDownloadURL: dart.fnType(async.Future$(core.String), []),
    getMetadata: dart.fnType(async.Future$(full_metadata.FullMetadata), []),
    list: dart.fnType(async.Future$(platform_interface_list_result.ListResultPlatform), [], [dart.nullable(list_options.ListOptions)]),
    listAll: dart.fnType(async.Future$(platform_interface_list_result.ListResultPlatform), []),
    getData: dart.fnType(async.Future$(dart.nullable(typed_data.Uint8List)), [core.int]),
    putData: dart.fnType(platform_interface_task.TaskPlatform, [typed_data.Uint8List], [dart.nullable(settable_metadata.SettableMetadata)]),
    putBlob: dart.fnType(platform_interface_task.TaskPlatform, [dart.dynamic], [dart.nullable(settable_metadata.SettableMetadata)]),
    putFile: dart.fnType(platform_interface_task.TaskPlatform, [io.File], [dart.nullable(settable_metadata.SettableMetadata)]),
    putString: dart.fnType(platform_interface_task.TaskPlatform, [core.String, put_string_format.PutStringFormat], [dart.nullable(settable_metadata.SettableMetadata)]),
    updateMetadata: dart.fnType(async.Future$(full_metadata.FullMetadata), [settable_metadata.SettableMetadata]),
    writeToFile: dart.fnType(platform_interface_task.TaskPlatform, [io.File])
  }));
  dart.setStaticMethodSignature(platform_interface_reference.ReferencePlatform, () => ['verifyExtends']);
  dart.setGetterSignature(platform_interface_reference.ReferencePlatform, () => ({
    __proto__: dart.getGetters(platform_interface_reference.ReferencePlatform.__proto__),
    bucket: core.String,
    fullPath: core.String,
    name: core.String,
    parent: dart.nullable(platform_interface_reference.ReferencePlatform),
    root: platform_interface_reference.ReferencePlatform
  }));
  dart.setLibraryUri(platform_interface_reference.ReferencePlatform, I[108]);
  dart.setFieldSignature(platform_interface_reference.ReferencePlatform, () => ({
    __proto__: dart.getFields(platform_interface_reference.ReferencePlatform.__proto__),
    [S$._pointer$4]: dart.fieldType(pointer$.Pointer),
    storage: dart.finalFieldType(platform_interface_firebase_storage.FirebaseStoragePlatform)
  }));
  dart.setStaticFieldSignature(platform_interface_reference.ReferencePlatform, () => ['_token']);
  dart.defineLazy(platform_interface_reference.ReferencePlatform, {
    /*platform_interface_reference.ReferencePlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  reference_web.ReferenceWeb = class ReferenceWeb extends platform_interface_reference.ReferencePlatform {
    static ['_#new#tearOff'](storage, path) {
      return new reference_web.ReferenceWeb.new(storage, path);
    }
    get [S$._ref]() {
      let t110;
      t110 = this[S$.__ReferenceWeb__ref];
      return t110 == null ? dart.throw(new _internal.LateError.fieldNI("_ref")) : t110;
    }
    set [S$._ref](_ref$35param) {
      this[S$.__ReferenceWeb__ref] = _ref$35param;
    }
    delete() {
      return errors.guard(T$.FutureOfvoid(), dart.bind(this[S$._ref], 'delete'));
    }
    getDownloadURL() {
      return errors.guard(T$.FutureOfString(), dart.fn(() => async.async(core.String, (function*() {
        let uri = (yield this[S$._ref].getDownloadURL());
        return uri.toString();
      }).bind(this)), T$.VoidToFutureOfString()));
    }
    getMetadata() {
      return errors.guard(T$.FutureOfFullMetadata(), dart.fn(() => async.async(full_metadata.FullMetadata, (function*() {
        let fullMetadata = (yield this[S$._ref].getMetadata());
        return metadata$.fbFullMetadataToFullMetadata(fullMetadata);
      }).bind(this)), T$.VoidToFutureOfFullMetadata()));
    }
    list(options = null) {
      return async.async(platform_interface_list_result.ListResultPlatform, (function* list$() {
        return errors.guard(T$.FutureOrOfListResultPlatform(), dart.fn(() => async.async(list_result_web.ListResultWeb, (function*() {
          let listResult = (yield this[S$._ref].list(list.listOptionsToFbListOptions(options)));
          return list.fbListResultToListResultWeb(this.storage, listResult);
        }).bind(this)), T$.VoidToFutureOfListResultWeb()));
      }).bind(this));
    }
    listAll() {
      return errors.guard(T$.FutureOfListResultPlatform(), dart.fn(() => async.async(list_result_web.ListResultWeb, (function*() {
        let listResult = (yield this[S$._ref].listAll());
        return list.fbListResultToListResultWeb(this.storage, listResult);
      }).bind(this)), T$.VoidToFutureOfListResultWeb()));
    }
    getData(maxSize, opts) {
      let readBytes = opts && 'readBytes' in opts ? opts.readBytes : C[95] || CT.C95;
      return async.async(T$.Uint8ListN(), (function* getData() {
        if (maxSize > 0) {
          let metadata = (yield this.getMetadata());
          if (dart.nullCheck(metadata.size) > maxSize) {
            return null;
          }
        }
        return errors.guard(T$.FutureOrOfUint8ListN(), dart.fn(() => async.async(typed_data.Uint8List, (function*() {
          let url = (yield this.getDownloadURL());
          return readBytes(core.Uri.parse(url));
        }).bind(this)), T$.VoidToFutureOfUint8List()));
      }).bind(this));
    }
    putData(data, metadata = null) {
      return new task_web.TaskWeb.new(this, this[S$._ref].put(data, metadata$.settableMetadataToFbUploadMetadata(this[S$._cache].store(metadata))));
    }
    putBlob(data, metadata = null) {
      if (!html.Blob.is(data)) dart.assertFailed("data must be a dart:html Blob object.", I[107], 159, 12, "data is html.Blob");
      return new task_web.TaskWeb.new(this, this[S$._ref].put(data, metadata$.settableMetadataToFbUploadMetadata(this[S$._cache].store(metadata))));
    }
    putString(data, format, metadata = null) {
      let _data = data;
      if (format === put_string_format.PutStringFormat.base64) {
        _data = convert.base64Decode(data);
      }
      return new task_web.TaskWeb.new(this, this[S$._ref].put(_data, metadata$.settableMetadataToFbUploadMetadata(this[S$._cache].store(metadata))));
    }
    updateMetadata(metadata) {
      return errors.guard(T$.FutureOfFullMetadata(), dart.fn(() => async.async(full_metadata.FullMetadata, (function*() {
        let fullMetadata = (yield this[S$._ref].updateMetadata(metadata$.settableMetadataToFbSettableMetadata(this[S$._cache].store(metadata))));
        return metadata$.fbFullMetadataToFullMetadata(fullMetadata);
      }).bind(this)), T$.VoidToFutureOfFullMetadata()));
    }
  };
  (reference_web.ReferenceWeb.new = function(storage, path) {
    this[S$.__ReferenceWeb__ref] = null;
    this[S$._cache] = new metadata_cache.SettableMetadataCache.new();
    this[S$._path$1] = path;
    reference_web.ReferenceWeb.__proto__.new.call(this, storage, path);
    if (this[S$._path$1][S$.$startsWith](reference_web._storageUrlPrefix)) {
      this[S$._ref] = storage.delegate.refFromURL(this[S$._path$1]);
    } else {
      this[S$._ref] = storage.delegate.ref(this[S$._path$1]);
    }
  }).prototype = reference_web.ReferenceWeb.prototype;
  dart.addTypeTests(reference_web.ReferenceWeb);
  dart.addTypeCaches(reference_web.ReferenceWeb);
  dart.setMethodSignature(reference_web.ReferenceWeb, () => ({
    __proto__: dart.getMethods(reference_web.ReferenceWeb.__proto__),
    getData: dart.fnType(async.Future$(dart.nullable(typed_data.Uint8List)), [core.int], {readBytes: dart.fnType(async.Future$(typed_data.Uint8List), [core.Uri])}, {})
  }));
  dart.setGetterSignature(reference_web.ReferenceWeb, () => ({
    __proto__: dart.getGetters(reference_web.ReferenceWeb.__proto__),
    [S$._ref]: storage.StorageReference
  }));
  dart.setSetterSignature(reference_web.ReferenceWeb, () => ({
    __proto__: dart.getSetters(reference_web.ReferenceWeb.__proto__),
    [S$._ref]: storage.StorageReference
  }));
  dart.setLibraryUri(reference_web.ReferenceWeb, I[109]);
  dart.setFieldSignature(reference_web.ReferenceWeb, () => ({
    __proto__: dart.getFields(reference_web.ReferenceWeb.__proto__),
    [S$.__ReferenceWeb__ref]: dart.fieldType(dart.nullable(storage.StorageReference)),
    [S$._cache]: dart.finalFieldType(metadata_cache.SettableMetadataCache),
    [S$._path$1]: dart.finalFieldType(core.String)
  }));
  dart.defineLazy(reference_web, {
    /*reference_web._storageUrlPrefix*/get _storageUrlPrefix() {
      return core.RegExp.new("^(?:gs|https?):\\//");
    }
  }, false);
  errors.guard = function guard(R, cb) {
    return _flutterfire_internals.guardWebExceptions(R, cb, {plugin: "firebase_storage", codeParser: dart.fn(code => code[S$.$split]("/")[S$.$last], T$.StringToString()), messageParser: dart.fn((code, message) => {
        let t110;
        t110 = errors._errorCodeToMessage[S$.$_get](code);
        return t110 == null ? message : t110;
      }, T$.StringAndStringToString())});
  };
  dart.defineLazy(errors, {
    /*errors._errorCodeToMessage*/get _errorCodeToMessage() {
      return new (T$.IdentityMapOfString$StringN()).from(["unauthorized", "User is not authorized to perform the desired action.", "object-not-found", "No object exists at the desired reference.", "invalid-argument", null, "canceled", null]);
    },
    set _errorCodeToMessage(value) {}
  }, false);
  field_path_type.FieldPathType = class FieldPathType extends core._Enum {
    [S$._enumToString]() {
      return "FieldPathType." + this[S$._name];
    }
  };
  (field_path_type.FieldPathType.new = function(index, name) {
    field_path_type.FieldPathType.__proto__.new.call(this, index, name);
    ;
  }).prototype = field_path_type.FieldPathType.prototype;
  dart.addTypeTests(field_path_type.FieldPathType);
  dart.addTypeCaches(field_path_type.FieldPathType);
  dart.setMethodSignature(field_path_type.FieldPathType, () => ({
    __proto__: dart.getMethods(field_path_type.FieldPathType.__proto__),
    [S$._enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(field_path_type.FieldPathType, I[110]);
  dart.setStaticFieldSignature(field_path_type.FieldPathType, () => ['values', 'documentId']);
  dart.defineLazy(field_path_type.FieldPathType, {
    /*field_path_type.FieldPathType.values*/get values() {
      return C[96] || CT.C96;
    },
    /*field_path_type.FieldPathType.documentId*/get documentId() {
      return C[97] || CT.C97;
    }
  }, false);
  method_channel_firestore.MethodChannelFirebaseFirestore = class MethodChannelFirebaseFirestore extends platform_interface_firestore.FirebaseFirestorePlatform {
    get settings() {
      return this[S$.settings];
    }
    set settings(value) {
      this[S$.settings] = value;
    }
    static ['_#new#tearOff'](opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      return new method_channel_firestore.MethodChannelFirebaseFirestore.new({app: app});
    }
    static querySnapshotChannel(id) {
      return new platform_channel.EventChannel.new("plugins.flutter.io/firebase_firestore/query/" + id, C[98] || CT.C98);
    }
    static documentSnapshotChannel(id) {
      return new platform_channel.EventChannel.new("plugins.flutter.io/firebase_firestore/document/" + id, C[98] || CT.C98);
    }
    static snapshotsInSyncChannel(id) {
      return new platform_channel.EventChannel.new("plugins.flutter.io/firebase_firestore/snapshotsInSync/" + id, C[98] || CT.C98);
    }
    static loadBundleChannel(id) {
      return new platform_channel.EventChannel.new("plugins.flutter.io/firebase_firestore/loadBundle/" + id, C[98] || CT.C98);
    }
    delegateFor(opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      return new method_channel_firestore.MethodChannelFirebaseFirestore.new({app: app});
    }
    loadBundle(bundle) {
      return new method_channel_load_bundle_task.MethodChannelLoadBundleTask.new({task: method_channel_firestore.MethodChannelFirebaseFirestore.channel.invokeMethod(core.String, "LoadBundle#snapshots"), bundle: bundle, firestore: this});
    }
    namedQueryGet(name, opts) {
      let options = opts && 'options' in opts ? opts.options : C[21] || CT.C21;
      return async.async(platform_interface_query_snapshot.QuerySnapshotPlatform, function* namedQueryGet() {
        try {
          let data = (yield method_channel_firestore.MethodChannelFirebaseFirestore.channel.invokeMapMethod(core.String, dart.dynamic, "Firestore#namedQueryGet", new (T$.IdentityMapOfString$dynamic()).from(["name", name, "firestore", platform_interface_firestore.FirebaseFirestorePlatform.instance, "source", source$.getSourceString(options.source)])));
          return new method_channel_query_snapshot.MethodChannelQuerySnapshot.new(platform_interface_firestore.FirebaseFirestorePlatform.instance, dart.nullCheck(data));
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            if (e[S$.$toString]()[S$.$contains]("Named query has not been found")) {
              core.Error.throwWithStackTrace(new firebase_core_platform_interface.FirebaseException.new({plugin: "cloud_firestore", code: "non-existent-named-query", message: "Named query has not been found. " + "Please check it has been loaded properly via loadBundle()."}), stack);
            }
            exception.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      });
    }
    batch() {
      return new method_channel_write_batch.MethodChannelWriteBatch.new(this);
    }
    clearPersistence() {
      return async.async(dart.void, (function* clearPersistence() {
        try {
          yield method_channel_firestore.MethodChannelFirebaseFirestore.channel.invokeMethod(dart.void, "Firestore#clearPersistence", new (T$.IdentityMapOfString$dynamic()).from(["firestore", this]));
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    enablePersistence(persistenceSettings = null) {
      return async.async(dart.void, function* enablePersistence() {
        dart.throw(new core.UnimplementedError.new("enablePersistence() is only available for Web. Use [Settings.persistenceEnabled] for other platforms."));
      });
    }
    collection(collectionPath) {
      return new method_channel_collection_reference.MethodChannelCollectionReference.new(this, collectionPath);
    }
    collectionGroup(collectionPath) {
      return new method_channel_query.MethodChannelQuery.new(this, collectionPath, {isCollectionGroupQuery: true});
    }
    disableNetwork() {
      return async.async(dart.void, (function* disableNetwork() {
        try {
          yield method_channel_firestore.MethodChannelFirebaseFirestore.channel.invokeMethod(dart.void, "Firestore#disableNetwork", new (T$.IdentityMapOfString$dynamic()).from(["firestore", this]));
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    doc(documentPath) {
      return new method_channel_document_reference.MethodChannelDocumentReference.new(this, documentPath);
    }
    enableNetwork() {
      return async.async(dart.void, (function* enableNetwork() {
        try {
          yield method_channel_firestore.MethodChannelFirebaseFirestore.channel.invokeMethod(dart.void, "Firestore#enableNetwork", new (T$.IdentityMapOfString$dynamic()).from(["firestore", this]));
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    snapshotsInSync() {
      let snapshotStreamSubscription = null;
      let controller = null;
      function controller$35get() {
        let t117;
        t117 = controller;
        return t117 == null ? dart.throw(new _internal.LateError.localNI("controller")) : t117;
      }
      function controller$35set(controller$35param) {
        return controller = controller$35param;
      }
      controller$35set(T$.StreamControllerOfvoid().broadcast({onListen: dart.fn(() => async.async(dart.void, (function*() {
          let observerId = (yield method_channel_firestore.MethodChannelFirebaseFirestore.channel.invokeMethod(core.String, "SnapshotsInSync#setup"));
          snapshotStreamSubscription = exception$['EventChannelExtension|receiveGuardedBroadcastStream'](method_channel_firestore.MethodChannelFirebaseFirestore.snapshotsInSyncChannel(dart.nullCheck(observerId)), {arguments: new (T$.IdentityMapOfString$dynamic()).from(["firestore", this]), onError: C[100] || CT.C100}).listen(dart.fn(event => controller$35get().add(null), T$.dynamicTovoid()), {onError: dart.bind(controller$35get(), 'addError')});
        }).bind(this)), T$.VoidToFutureOfvoid()), onCancel: dart.fn(() => {
          let t119;
          t119 = snapshotStreamSubscription;
          t119 == null ? null : t119.cancel();
        }, T$.VoidTovoid())}));
      return controller$35get().stream;
    }
    runTransaction(T, transactionHandler, opts) {
      let timeout = opts && 'timeout' in opts ? opts.timeout : C[25] || CT.C25;
      let maxAttempts = opts && 'maxAttempts' in opts ? opts.maxAttempts : 5;
      return async.async(T, (function* runTransaction() {
        if (!(timeout.inMilliseconds > 0)) dart.assertFailed("Transaction timeout must be more than 0 milliseconds", I[111], 226, 12, "timeout.inMilliseconds > 0");
        let transactionId = (yield method_channel_firestore.MethodChannelFirebaseFirestore.channel.invokeMethod(core.String, "Transaction#create"));
        let completer = async.Completer$(T).new();
        let result = null;
        let result$35isSet = false;
        function result$35get() {
          return result$35isSet ? result : dart.throw(new _internal.LateError.localNI("result"));
        }
        function result$35set(result$35param) {
          result$35isSet = true;
          return result = result$35param;
        }
        let eventChannel = new platform_channel.EventChannel.new("plugins.flutter.io/firebase_firestore/transaction/" + dart.str(transactionId), C[98] || CT.C98);
        let snapshotStreamSubscription = exception$['EventChannelExtension|receiveGuardedBroadcastStream'](eventChannel, {arguments: new (T$.IdentityMapOfString$dynamic()).from(["firestore", this, "timeout", timeout.inMilliseconds, "maxAttempts", maxAttempts]), onError: C[100] || CT.C100}).listen(dart.fn(event => async.async(dart.void, function*() {
          if (dart.dsend(event, '_get', ["error"]) != null) {
            completer.completeError(new firebase_core_platform_interface.FirebaseException.new({plugin: "cloud_firestore", code: T$.StringN().as(dart.dsend(dart.dsend(event, '_get', ["error"]), '_get', ["code"])), message: T$.StringN().as(dart.dsend(dart.dsend(event, '_get', ["error"]), '_get', ["message"]))}));
            return;
          } else if (dart.equals(dart.dsend(event, '_get', ["complete"]), true)) {
            completer.complete(result$35get());
            return;
          }
          let transaction = new method_channel_transaction.MethodChannelTransaction.new(dart.nullCheck(transactionId), core.String.as(dart.dsend(event, '_get', ["appName"])));
          try {
            result$35set(T.as(yield transactionHandler(transaction)));
          } catch (e) {
            let error = dart.getThrown(e);
            let stack = dart.stackTrace(e);
            if (core.Object.is(error)) {
              yield method_channel_firestore.MethodChannelFirebaseFirestore.channel.invokeMethod(dart.dynamic, "Transaction#storeResult", new (T$.IdentityMapOfString$dynamic()).from(["transactionId", transactionId, "result", new (T$.IdentityMapOfString$String()).from(["type", "ERROR"])]));
              completer.completeError(error, stack);
              return;
            } else
              throw e;
          }
          yield method_channel_firestore.MethodChannelFirebaseFirestore.channel.invokeMethod(dart.dynamic, "Transaction#storeResult", new (T$.IdentityMapOfString$dynamic()).from(["transactionId", transactionId, "result", new (T$.IdentityMapOfString$Object()).from(["type", "SUCCESS", "commands", transaction.commands])]));
        }), T$.dynamicToFutureOfvoid()));
        return completer.future.whenComplete(dart.bind(snapshotStreamSubscription, 'cancel'));
      }).bind(this));
    }
    terminate() {
      return async.async(dart.void, (function* terminate() {
        try {
          yield method_channel_firestore.MethodChannelFirebaseFirestore.channel.invokeMethod(dart.void, "Firestore#terminate", new (T$.IdentityMapOfString$dynamic()).from(["firestore", this]));
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    waitForPendingWrites() {
      return async.async(dart.void, (function* waitForPendingWrites() {
        try {
          yield method_channel_firestore.MethodChannelFirebaseFirestore.channel.invokeMethod(dart.void, "Firestore#waitForPendingWrites", new (T$.IdentityMapOfString$dynamic()).from(["firestore", this]));
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
  };
  (method_channel_firestore.MethodChannelFirebaseFirestore.new = function(opts) {
    let app = opts && 'app' in opts ? opts.app : null;
    this[S$.settings] = C[29] || CT.C29;
    method_channel_firestore.MethodChannelFirebaseFirestore.__proto__.new.call(this, {appInstance: app});
    ;
  }).prototype = method_channel_firestore.MethodChannelFirebaseFirestore.prototype;
  dart.addTypeTests(method_channel_firestore.MethodChannelFirebaseFirestore);
  dart.addTypeCaches(method_channel_firestore.MethodChannelFirebaseFirestore);
  dart.setMethodSignature(method_channel_firestore.MethodChannelFirebaseFirestore, () => ({
    __proto__: dart.getMethods(method_channel_firestore.MethodChannelFirebaseFirestore.__proto__),
    runTransaction: dart.gFnType(T => [async.Future$(T), [dart.fnType(dart.nullable(async.Future$(dart.nullable(T))), [platform_interface_transaction.TransactionPlatform])], {maxAttempts: core.int, timeout: core.Duration}, {}], T => [dart.nullable(core.Object)])
  }));
  dart.setStaticMethodSignature(method_channel_firestore.MethodChannelFirebaseFirestore, () => ['querySnapshotChannel', 'documentSnapshotChannel', 'snapshotsInSyncChannel', 'loadBundleChannel']);
  dart.setLibraryUri(method_channel_firestore.MethodChannelFirebaseFirestore, I[112]);
  dart.setFieldSignature(method_channel_firestore.MethodChannelFirebaseFirestore, () => ({
    __proto__: dart.getFields(method_channel_firestore.MethodChannelFirebaseFirestore.__proto__),
    settings: dart.fieldType(settings.Settings)
  }));
  dart.setStaticFieldSignature(method_channel_firestore.MethodChannelFirebaseFirestore, () => ['channel']);
  dart.defineLazy(method_channel_firestore.MethodChannelFirebaseFirestore, {
    /*method_channel_firestore.MethodChannelFirebaseFirestore.channel*/get channel() {
      return C[101] || CT.C101;
    },
    set channel(value) {}
  }, false);
  method_channel_field_value_factory.MethodChannelFieldValueFactory = class MethodChannelFieldValueFactory extends platform_interface_field_value_factory.FieldValueFactoryPlatform {
    arrayRemove(elements) {
      return new method_channel_field_value.MethodChannelFieldValue.new(method_channel_field_value.FieldValueType.arrayRemove, elements);
    }
    arrayUnion(elements) {
      return new method_channel_field_value.MethodChannelFieldValue.new(method_channel_field_value.FieldValueType.arrayUnion, elements);
    }
    delete() {
      return new method_channel_field_value.MethodChannelFieldValue.new(method_channel_field_value.FieldValueType.delete, null);
    }
    increment(value) {
      if (!(core.int.is(value) || typeof value == 'number')) dart.assertFailed(null, I[113], 31, 12, "value is int || value is double");
      if (typeof value == 'number') {
        return new method_channel_field_value.MethodChannelFieldValue.new(method_channel_field_value.FieldValueType.incrementDouble, value);
      } else if (core.int.is(value)) {
        return new method_channel_field_value.MethodChannelFieldValue.new(method_channel_field_value.FieldValueType.incrementInteger, value);
      }
      dart.throw(new core.StateError.new("MethodChannelFieldValue().increment() expects a \"num\" value"));
    }
    serverTimestamp() {
      return new method_channel_field_value.MethodChannelFieldValue.new(method_channel_field_value.FieldValueType.serverTimestamp, null);
    }
    static ['_#new#tearOff']() {
      return new method_channel_field_value_factory.MethodChannelFieldValueFactory.new();
    }
  };
  (method_channel_field_value_factory.MethodChannelFieldValueFactory.new = function() {
    method_channel_field_value_factory.MethodChannelFieldValueFactory.__proto__.new.call(this);
    ;
  }).prototype = method_channel_field_value_factory.MethodChannelFieldValueFactory.prototype;
  dart.addTypeTests(method_channel_field_value_factory.MethodChannelFieldValueFactory);
  dart.addTypeCaches(method_channel_field_value_factory.MethodChannelFieldValueFactory);
  dart.setMethodSignature(method_channel_field_value_factory.MethodChannelFieldValueFactory, () => ({
    __proto__: dart.getMethods(method_channel_field_value_factory.MethodChannelFieldValueFactory.__proto__),
    arrayRemove: dart.fnType(method_channel_field_value.MethodChannelFieldValue, [core.List]),
    arrayUnion: dart.fnType(method_channel_field_value.MethodChannelFieldValue, [core.List]),
    delete: dart.fnType(method_channel_field_value.MethodChannelFieldValue, []),
    increment: dart.fnType(method_channel_field_value.MethodChannelFieldValue, [core.num]),
    serverTimestamp: dart.fnType(method_channel_field_value.MethodChannelFieldValue, [])
  }));
  dart.setLibraryUri(method_channel_field_value_factory.MethodChannelFieldValueFactory, I[114]);
  exception$.convertPlatformExceptionToFirebaseException = function convertPlatformExceptionToFirebaseException(exception, rawStackTrace, opts) {
    let plugin = opts && 'plugin' in opts ? opts.plugin : null;
    let stackTrace = rawStackTrace;
    if (stackTrace[S$.$_equals](core.StackTrace.empty)) {
      stackTrace = core.StackTrace.current;
    }
    if (!message_codec.PlatformException.is(exception)) {
      core.Error.throwWithStackTrace(exception, stackTrace);
    }
    core.Error.throwWithStackTrace(exception$.platformExceptionToFirebaseException(exception, {plugin: plugin}), stackTrace);
  };
  exception$.platformExceptionToFirebaseException = function platformExceptionToFirebaseException(platformException, opts) {
    let t126, t126$, t126$0;
    let plugin = opts && 'plugin' in opts ? opts.plugin : null;
    let details = platformException.details != null ? T$.LinkedHashMapOfString$String().from(core.Map.as(platformException.details)) : null;
    let code = null;
    let message = (t126 = platformException.message, t126 == null ? "" : t126);
    if (details != null) {
      code = (t126$ = details[S$.$_get]("code"), t126$ == null ? code : t126$);
      message = (t126$0 = details[S$.$_get]("message"), t126$0 == null ? message : t126$0);
    }
    return new firebase_core_platform_interface.FirebaseException.new({plugin: plugin, code: code, message: message});
  };
  exception$['EventChannelExtension|receiveGuardedBroadcastStream'] = function EventChannelExtension$124receiveGuardedBroadcastStream($this, opts) {
    let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
    let onError = opts && 'onError' in opts ? opts.onError : null;
    let incomingStackTrace = core.StackTrace.current;
    return $this.receiveBroadcastStream($arguments).handleError(dart.fn(error => onError(error, incomingStackTrace), T$.ObjectTodynamic()));
  };
  exception$['EventChannelExtension|get#receiveGuardedBroadcastStream'] = function EventChannelExtension$124get$35receiveGuardedBroadcastStream($this) {
    return dart.fn(opts => {
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      let onError = opts && 'onError' in opts ? opts.onError : null;
      return exception$['EventChannelExtension|receiveGuardedBroadcastStream']($this, {arguments: $arguments, onError: onError});
    }, T$.__ToStream());
  };
  method_channel_firebase_auth.MethodChannelFirebaseAuth = class MethodChannelFirebaseAuth extends platform_interface_firebase_auth.FirebaseAuthPlatform {
    get currentUser() {
      return this[S$.currentUser];
    }
    set currentUser(value) {
      this[S$.currentUser] = value;
    }
    get languageCode() {
      return this[S$.languageCode];
    }
    set languageCode(value) {
      this[S$.languageCode] = value;
    }
    [S$._createBroadcastStream](T) {
      return async.StreamController$(T).broadcast();
    }
    static get instance() {
      return new method_channel_firebase_auth.MethodChannelFirebaseAuth.__();
    }
    static ['_#_#tearOff']() {
      return new method_channel_firebase_auth.MethodChannelFirebaseAuth.__();
    }
    static ['_#new#tearOff'](opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      return new method_channel_firebase_auth.MethodChannelFirebaseAuth.new({app: app});
    }
    sendAuthChangesEvent(appName, userPlatform) {
      if (!(method_channel_firebase_auth.MethodChannelFirebaseAuth._userChangesListeners[S$.$_get](appName) != null)) dart.assertFailed(null, I[115], 110, 12, "_userChangesListeners[appName] != null");
      dart.nullCheck(method_channel_firebase_auth.MethodChannelFirebaseAuth._userChangesListeners[S$.$_get](appName)).add(new (T$._ValueWrapperOfUserPlatform()).new(userPlatform));
    }
    [S$._handleAuthStateChangesListener](appName, $arguments) {
      return async.async(dart.void, function* _handleAuthStateChangesListener() {
        let streamController = dart.nullCheck(method_channel_firebase_auth.MethodChannelFirebaseAuth._authStateChangesListeners[S$.$_get](appName));
        let instance = dart.nullCheck(method_channel_firebase_auth.MethodChannelFirebaseAuth.methodChannelFirebaseAuthInstances[S$.$_get](appName));
        let multiFactorInstance = method_channel_firebase_auth.MethodChannelFirebaseAuth._multiFactorInstances[S$.$_get](appName);
        if (multiFactorInstance == null) {
          multiFactorInstance = new method_channel_multi_factor.MethodChannelMultiFactor.new(instance);
          method_channel_firebase_auth.MethodChannelFirebaseAuth._multiFactorInstances[S$.$_set](appName, multiFactorInstance);
        }
        let userMap = $arguments[S$.$_get]("user");
        if (userMap == null) {
          instance.currentUser = null;
          streamController.add(C[103] || CT.C103);
        } else {
          let user = new method_channel_user.MethodChannelUser.new(instance, multiFactorInstance, T$.MapOfString$dynamic().as(dart.dgsend(userMap, [core.String, dart.dynamic], 'cast', [])));
          instance.currentUser = user;
          streamController.add(new (T$._ValueWrapperOfUserPlatform()).new(instance.currentUser));
        }
      });
    }
    [S$._handleIdTokenChangesListener](appName, $arguments) {
      return async.async(dart.void, function* _handleIdTokenChangesListener() {
        let idTokenStreamController = dart.nullCheck(method_channel_firebase_auth.MethodChannelFirebaseAuth._idTokenChangesListeners[S$.$_get](appName));
        let userChangesStreamController = dart.nullCheck(method_channel_firebase_auth.MethodChannelFirebaseAuth._userChangesListeners[S$.$_get](appName));
        let instance = dart.nullCheck(method_channel_firebase_auth.MethodChannelFirebaseAuth.methodChannelFirebaseAuthInstances[S$.$_get](appName));
        let multiFactorInstance = method_channel_firebase_auth.MethodChannelFirebaseAuth._multiFactorInstances[S$.$_get](appName);
        if (multiFactorInstance == null) {
          multiFactorInstance = new method_channel_multi_factor.MethodChannelMultiFactor.new(instance);
          method_channel_firebase_auth.MethodChannelFirebaseAuth._multiFactorInstances[S$.$_set](appName, multiFactorInstance);
        }
        let userMap = $arguments[S$.$_get]("user");
        if (userMap == null) {
          instance.currentUser = null;
          idTokenStreamController.add(C[103] || CT.C103);
          userChangesStreamController.add(C[103] || CT.C103);
        } else {
          let user = new method_channel_user.MethodChannelUser.new(instance, multiFactorInstance, T$.MapOfString$dynamic().as(dart.dgsend(userMap, [core.String, dart.dynamic], 'cast', [])));
          instance.currentUser = user;
          idTokenStreamController.add(new (T$._ValueWrapperOfUserPlatform()).new(user));
          userChangesStreamController.add(new (T$._ValueWrapperOfUserPlatform()).new(user));
        }
      });
    }
    [S$._withChannelDefaults](other) {
      let t128;
      t128 = new (T$.IdentityMapOfString$dynamic()).from(["appName", this.app.name, "tenantId", this.tenantId]);
      return (() => {
        t128[S$.$addAll](other);
        return t128;
      })();
    }
    delegateFor(opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      let persistence = opts && 'persistence' in opts ? opts.persistence : null;
      return method_channel_firebase_auth.MethodChannelFirebaseAuth.methodChannelFirebaseAuthInstances[S$.$putIfAbsent](app.name, dart.fn(() => new method_channel_firebase_auth.MethodChannelFirebaseAuth.new({app: app}), T$.VoidToMethodChannelFirebaseAuth()));
    }
    setInitialValues(opts) {
      let currentUser = opts && 'currentUser' in opts ? opts.currentUser : null;
      let languageCode = opts && 'languageCode' in opts ? opts.languageCode : null;
      if (currentUser != null) {
        let multiFactor = new method_channel_multi_factor.MethodChannelMultiFactor.new(this);
        this.currentUser = new method_channel_user.MethodChannelUser.new(this, multiFactor, currentUser);
      }
      this.languageCode = languageCode;
      return this;
    }
    useAuthEmulator(host, port) {
      return async.async(dart.void, (function* useAuthEmulator() {
        try {
          yield method_channel_firebase_auth.MethodChannelFirebaseAuth.channel.invokeMethod(dart.void, "Auth#useEmulator", this[S$._withChannelDefaults](new (T$.IdentityMapOfString$dynamic()).from(["host", host, "port", port])));
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    applyActionCode(code) {
      return async.async(dart.void, (function* applyActionCode() {
        try {
          yield method_channel_firebase_auth.MethodChannelFirebaseAuth.channel.invokeMethod(dart.void, "Auth#applyActionCode", this[S$._withChannelDefaults](new (T$.IdentityMapOfString$dynamic()).from(["code", code])));
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    checkActionCode(code) {
      return async.async(action_code_info.ActionCodeInfo, (function* checkActionCode() {
        try {
          let result = dart.nullCheck(yield method_channel_firebase_auth.MethodChannelFirebaseAuth.channel.invokeMapMethod(core.String, dart.dynamic, "Auth#checkActionCode", this[S$._withChannelDefaults](new (T$.IdentityMapOfString$dynamic()).from(["code", code]))));
          return new action_code_info.ActionCodeInfo.new({operation: core.int.as(result[S$.$_get]("operation")), data: T$.LinkedHashMapOfString$dynamic().from(core.Map.as(result[S$.$_get]("data")))});
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    confirmPasswordReset(code, newPassword) {
      return async.async(dart.void, (function* confirmPasswordReset() {
        try {
          yield method_channel_firebase_auth.MethodChannelFirebaseAuth.channel.invokeMethod(dart.void, "Auth#confirmPasswordReset", this[S$._withChannelDefaults](new (T$.IdentityMapOfString$dynamic()).from(["code", code, "newPassword", newPassword])));
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    createUserWithEmailAndPassword(email, password) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* createUserWithEmailAndPassword() {
        try {
          let data = dart.nullCheck(yield method_channel_firebase_auth.MethodChannelFirebaseAuth.channel.invokeMapMethod(core.String, dart.dynamic, "Auth#createUserWithEmailAndPassword", this[S$._withChannelDefaults](new (T$.IdentityMapOfString$dynamic()).from(["email", email, "password", password]))));
          let userCredential = new method_channel_user_credential.MethodChannelUserCredential.new(this, data);
          this.currentUser = userCredential.user;
          return userCredential;
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    fetchSignInMethodsForEmail(email) {
      return async.async(T$.ListOfString(), (function* fetchSignInMethodsForEmail() {
        try {
          let data = dart.nullCheck(yield method_channel_firebase_auth.MethodChannelFirebaseAuth.channel.invokeMapMethod(core.String, dart.dynamic, "Auth#fetchSignInMethodsForEmail", this[S$._withChannelDefaults](new (T$.IdentityMapOfString$dynamic()).from(["email", email]))));
          return T$.ListOfString().from(core.Iterable.as(data[S$.$_get]("providers")));
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    authStateChanges() {
      return new (T$._AsyncStarImplOfUserPlatformN()).new((function* authStateChanges(stream) {
        if (stream.add(this.currentUser)) return;
        yield;
        if (stream.addStream(dart.nullCheck(method_channel_firebase_auth.MethodChannelFirebaseAuth._authStateChangesListeners[S$.$_get](this.app.name)).stream.map(T$.UserPlatformN(), dart.fn(event => event.value, T$._ValueWrapperOfUserPlatformToUserPlatformN())))) return;
        yield;
      }).bind(this)).stream;
    }
    idTokenChanges() {
      return new (T$._AsyncStarImplOfUserPlatformN()).new((function* idTokenChanges(stream) {
        if (stream.add(this.currentUser)) return;
        yield;
        if (stream.addStream(dart.nullCheck(method_channel_firebase_auth.MethodChannelFirebaseAuth._idTokenChangesListeners[S$.$_get](this.app.name)).stream.map(T$.UserPlatformN(), dart.fn(event => event.value, T$._ValueWrapperOfUserPlatformToUserPlatformN())))) return;
        yield;
      }).bind(this)).stream;
    }
    userChanges() {
      return new (T$._AsyncStarImplOfUserPlatformN()).new((function* userChanges(stream) {
        if (stream.add(this.currentUser)) return;
        yield;
        if (stream.addStream(dart.nullCheck(method_channel_firebase_auth.MethodChannelFirebaseAuth._userChangesListeners[S$.$_get](this.app.name)).stream.map(T$.UserPlatformN(), dart.fn(event => event.value, T$._ValueWrapperOfUserPlatformToUserPlatformN())))) return;
        yield;
      }).bind(this)).stream;
    }
    sendPasswordResetEmail(email, actionCodeSettings = null) {
      return async.async(dart.void, (function* sendPasswordResetEmail() {
        let t134;
        try {
          yield method_channel_firebase_auth.MethodChannelFirebaseAuth.channel.invokeMethod(dart.void, "Auth#sendPasswordResetEmail", this[S$._withChannelDefaults](new (T$.IdentityMapOfString$dynamic()).from(["email", email, "actionCodeSettings", (t134 = actionCodeSettings, t134 == null ? null : t134.asMap())])));
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    sendSignInLinkToEmail(email, actionCodeSettings) {
      return async.async(dart.void, (function* sendSignInLinkToEmail() {
        try {
          yield method_channel_firebase_auth.MethodChannelFirebaseAuth.channel.invokeMethod(dart.void, "Auth#sendSignInLinkToEmail", this[S$._withChannelDefaults](new (T$.IdentityMapOfString$dynamic()).from(["email", email, "actionCodeSettings", actionCodeSettings.asMap()])));
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    setLanguageCode(languageCode) {
      return async.async(dart.void, (function* setLanguageCode() {
        try {
          let data = dart.nullCheck(yield method_channel_firebase_auth.MethodChannelFirebaseAuth.channel.invokeMapMethod(core.String, dart.dynamic, "Auth#setLanguageCode", this[S$._withChannelDefaults](new (T$.IdentityMapOfString$dynamic()).from(["appName", this.app.name, "languageCode", languageCode]))));
          this.languageCode = T$.StringN().as(data[S$.$_get]("languageCode"));
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    setSettings(opts) {
      let appVerificationDisabledForTesting = opts && 'appVerificationDisabledForTesting' in opts ? opts.appVerificationDisabledForTesting : null;
      let userAccessGroup = opts && 'userAccessGroup' in opts ? opts.userAccessGroup : null;
      let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
      let smsCode = opts && 'smsCode' in opts ? opts.smsCode : null;
      let forceRecaptchaFlow = opts && 'forceRecaptchaFlow' in opts ? opts.forceRecaptchaFlow : null;
      return async.async(dart.void, (function* setSettings() {
        if (phoneNumber != null && smsCode == null || phoneNumber == null && smsCode != null) {
          dart.throw(new core.ArgumentError.new("The [smsCode] and the [phoneNumber] must both be either 'null' or a 'String''."));
        }
        let $arguments = new (T$.IdentityMapOfString$dynamic()).from(["appVerificationDisabledForTesting", appVerificationDisabledForTesting]);
        if (io.Platform.isIOS || io.Platform.isMacOS) {
          $arguments[S$.$_set]("userAccessGroup", userAccessGroup);
        }
        if (io.Platform.isAndroid) {
          if (phoneNumber != null && smsCode != null) {
            $arguments[S$.$_set]("phoneNumber", phoneNumber);
            $arguments[S$.$_set]("smsCode", smsCode);
          }
          if (forceRecaptchaFlow != null) {
            $arguments[S$.$_set]("forceRecaptchaFlow", forceRecaptchaFlow);
          }
        }
        try {
          yield method_channel_firebase_auth.MethodChannelFirebaseAuth.channel.invokeMethod(dart.dynamic, "Auth#setSettings", this[S$._withChannelDefaults]($arguments));
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    setPersistence(persistence) {
      dart.throw(new core.UnimplementedError.new("setPersistence() is only supported on web based platforms"));
    }
    signInAnonymously() {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* signInAnonymously() {
        try {
          let data = dart.nullCheck(yield method_channel_firebase_auth.MethodChannelFirebaseAuth.channel.invokeMapMethod(core.String, dart.dynamic, "Auth#signInAnonymously", this[S$._withChannelDefaults](new (T$.IdentityMapOfString$dynamic()).new())));
          let userCredential = new method_channel_user_credential.MethodChannelUserCredential.new(this, data);
          this.currentUser = userCredential.user;
          return userCredential;
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithCredential(credential) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* signInWithCredential() {
        try {
          let data = dart.nullCheck(yield method_channel_firebase_auth.MethodChannelFirebaseAuth.channel.invokeMapMethod(core.String, dart.dynamic, "Auth#signInWithCredential", this[S$._withChannelDefaults](new (T$.IdentityMapOfString$dynamic()).from(["credential", credential.asMap()]))));
          let userCredential = new method_channel_user_credential.MethodChannelUserCredential.new(this, data);
          this.currentUser = userCredential.user;
          return userCredential;
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithCustomToken(token) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* signInWithCustomToken() {
        try {
          let data = dart.nullCheck(yield method_channel_firebase_auth.MethodChannelFirebaseAuth.channel.invokeMapMethod(core.String, dart.dynamic, "Auth#signInWithCustomToken", this[S$._withChannelDefaults](new (T$.IdentityMapOfString$dynamic()).from(["token", token]))));
          let userCredential = new method_channel_user_credential.MethodChannelUserCredential.new(this, data);
          this.currentUser = userCredential.user;
          return userCredential;
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithEmailAndPassword(email, password) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* signInWithEmailAndPassword() {
        try {
          let data = dart.nullCheck(yield method_channel_firebase_auth.MethodChannelFirebaseAuth.channel.invokeMapMethod(core.String, dart.dynamic, "Auth#signInWithEmailAndPassword", this[S$._withChannelDefaults](new (T$.IdentityMapOfString$dynamic()).from(["email", email, "password", password]))));
          let userCredential = new method_channel_user_credential.MethodChannelUserCredential.new(this, data);
          this.currentUser = userCredential.user;
          return userCredential;
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithEmailLink(email, emailLink) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* signInWithEmailLink() {
        try {
          let data = dart.nullCheck(yield method_channel_firebase_auth.MethodChannelFirebaseAuth.channel.invokeMapMethod(core.String, dart.dynamic, "Auth#signInWithEmailLink", this[S$._withChannelDefaults](new (T$.IdentityMapOfString$dynamic()).from(["email", email, "emailLink", emailLink]))));
          let userCredential = new method_channel_user_credential.MethodChannelUserCredential.new(this, data);
          this.currentUser = userCredential.user;
          return userCredential;
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithPopup(provider) {
      dart.throw(new core.UnimplementedError.new("signInWithPopup() is only supported on web based platforms"));
    }
    signInWithRedirect(provider) {
      dart.throw(new core.UnimplementedError.new("signInWithRedirect() is only supported on web based platforms"));
    }
    signOut() {
      return async.async(dart.void, (function* signOut() {
        try {
          yield method_channel_firebase_auth.MethodChannelFirebaseAuth.channel.invokeMethod(dart.void, "Auth#signOut", this[S$._withChannelDefaults](new (T$.IdentityMapOfString$dynamic()).new()));
          this.currentUser = null;
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    verifyPasswordResetCode(code) {
      return async.async(core.String, (function* verifyPasswordResetCode() {
        try {
          let data = dart.nullCheck(yield method_channel_firebase_auth.MethodChannelFirebaseAuth.channel.invokeMapMethod(core.String, dart.dynamic, "Auth#verifyPasswordResetCode", this[S$._withChannelDefaults](new (T$.IdentityMapOfString$dynamic()).from(["code", code]))));
          return T$.FutureOrOfString().as(data[S$.$_get]("email"));
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithProvider(provider) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* signInWithProvider() {
        try {
          let convertedProvider = convert_auth_provider.convertToOAuthProvider(provider);
          let data = dart.nullCheck(yield method_channel_firebase_auth.MethodChannelFirebaseAuth.channel.invokeMapMethod(core.String, dart.dynamic, "Auth#signInWithProvider", this[S$._withChannelDefaults]((() => {
            let t145 = new (T$.IdentityMapOfString$dynamic()).new();
            t145[S$.$_set]("signInProvider", convertedProvider.providerId);
            if (oauth.OAuthProvider.is(convertedProvider)) t145[S$.$addAll](new (T$.IdentityMapOfString$dynamic()).from(["scopes", convertedProvider.scopes, "customParameters", convertedProvider.parameters]));
            return t145;
          })())));
          let userCredential = new method_channel_user_credential.MethodChannelUserCredential.new(this, data);
          this.currentUser = userCredential.user;
          return userCredential;
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    verifyPhoneNumber(opts) {
      let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
      let multiFactorInfo = opts && 'multiFactorInfo' in opts ? opts.multiFactorInfo : null;
      let verificationCompleted = opts && 'verificationCompleted' in opts ? opts.verificationCompleted : null;
      let verificationFailed = opts && 'verificationFailed' in opts ? opts.verificationFailed : null;
      let codeSent = opts && 'codeSent' in opts ? opts.codeSent : null;
      let codeAutoRetrievalTimeout = opts && 'codeAutoRetrievalTimeout' in opts ? opts.codeAutoRetrievalTimeout : null;
      let autoRetrievedSmsCodeForTesting = opts && 'autoRetrievedSmsCodeForTesting' in opts ? opts.autoRetrievedSmsCodeForTesting : null;
      let timeout = opts && 'timeout' in opts ? opts.timeout : C[25] || CT.C25;
      let forceResendingToken = opts && 'forceResendingToken' in opts ? opts.forceResendingToken : null;
      let multiFactorSession = opts && 'multiFactorSession' in opts ? opts.multiFactorSession : null;
      return async.async(dart.void, (function* verifyPhoneNumber() {
        let t148, t148$, t148$0;
        if (platform.defaultTargetPlatform === platform.TargetPlatform.macOS) {
          dart.throw(new core.UnimplementedError.new("verifyPhoneNumber() is not available on MacOS platforms."));
        }
        try {
          let eventChannelName = (yield method_channel_firebase_auth.MethodChannelFirebaseAuth.channel.invokeMethod(core.String, "Auth#verifyPhoneNumber", this[S$._withChannelDefaults]((() => {
            let t147 = new (T$.IdentityMapOfString$dynamic()).new();
            if (phoneNumber != null) t147[S$.$_set]("phoneNumber", phoneNumber);
            if ((t148 = multiFactorInfo, t148 == null ? null : t148.uid) != null) t147[S$.$_set]("multiFactorInfo", (t148$ = multiFactorInfo, t148$ == null ? null : t148$.uid));
            t147[S$.$_set]("timeout", timeout.inMilliseconds);
            t147[S$.$_set]("forceResendingToken", forceResendingToken);
            t147[S$.$_set]("autoRetrievedSmsCodeForTesting", autoRetrievedSmsCodeForTesting);
            if ((t148$0 = multiFactorSession, t148$0 == null ? null : t148$0.id) != null) t147[S$.$_set]("multiFactorSessionId", dart.nullCheck(multiFactorSession).id);
            return t147;
          })())));
          exception$['EventChannelExtension|receiveGuardedBroadcastStream'](new platform_channel.EventChannel.new(dart.nullCheck(eventChannelName)), {onError: C[102] || CT.C102}).listen(dart.fn($arguments => {
            let t148, t148$;
            let name = dart.dsend($arguments, '_get', ["name"]);
            if (dart.equals(name, "Auth#phoneVerificationCompleted")) {
              let token = core.int.as(dart.dsend($arguments, '_get', ["token"]));
              let smsCode = T$.StringN().as(dart.dsend($arguments, '_get', ["smsCode"]));
              let phoneAuthCredential = phone_auth.PhoneAuthProvider.credentialFromToken(token, {smsCode: smsCode});
              verificationCompleted(phoneAuthCredential);
            } else if (dart.equals(name, "Auth#phoneVerificationFailed")) {
              let error = T$.MapN().as(dart.dsend($arguments, '_get', ["error"]));
              let details = T$.MapN().as((t148 = error, t148 == null ? null : t148[S$.$_get]("details")));
              let exception = new firebase_auth_exception.FirebaseAuthException.new({message: T$.StringN().as(details != null ? details[S$.$_get]("message") : (t148$ = error, t148$ == null ? null : t148$[S$.$_get]("message"))), code: core.String.as(details != null ? details[S$.$_get]("code") : "unknown")});
              verificationFailed(exception);
            } else if (dart.equals(name, "Auth#phoneCodeSent")) {
              let verificationId = core.String.as(dart.dsend($arguments, '_get', ["verificationId"]));
              let forceResendingToken = T$.intN().as(dart.dsend($arguments, '_get', ["forceResendingToken"]));
              codeSent(verificationId, forceResendingToken);
            } else if (dart.equals(name, "Auth#phoneCodeAutoRetrievalTimeout")) {
              let verificationId = core.String.as(dart.dsend($arguments, '_get', ["verificationId"]));
              codeAutoRetrievalTimeout(verificationId);
            }
          }, T$.dynamicTovoid()));
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
  };
  (method_channel_firebase_auth.MethodChannelFirebaseAuth.__ = function() {
    this[S$.currentUser] = null;
    this[S$.languageCode] = null;
    method_channel_firebase_auth.MethodChannelFirebaseAuth.__proto__.new.call(this, {appInstance: null});
    ;
  }).prototype = method_channel_firebase_auth.MethodChannelFirebaseAuth.prototype;
  (method_channel_firebase_auth.MethodChannelFirebaseAuth.new = function(opts) {
    let app = opts && 'app' in opts ? opts.app : null;
    this[S$.currentUser] = null;
    this[S$.languageCode] = null;
    method_channel_firebase_auth.MethodChannelFirebaseAuth.__proto__.new.call(this, {appInstance: app});
    method_channel_firebase_auth.MethodChannelFirebaseAuth.channel.invokeMethod(core.String, "Auth#registerIdTokenListener", new (T$.IdentityMapOfString$String()).from(["appName", app.name])).then(core.Null, dart.fn(channelName => {
      let events = new platform_channel.EventChannel.new(dart.nullCheck(channelName), method_channel_firebase_auth.MethodChannelFirebaseAuth.channel.codec);
      exception$['EventChannelExtension|receiveGuardedBroadcastStream'](events, {onError: C[102] || CT.C102}).listen(dart.fn($arguments => {
        this[S$._handleIdTokenChangesListener](app.name, core.Map.as($arguments));
      }, T$.dynamicTovoid()));
    }, T$.StringNToNull()));
    method_channel_firebase_auth.MethodChannelFirebaseAuth.channel.invokeMethod(core.String, "Auth#registerAuthStateListener", new (T$.IdentityMapOfString$String()).from(["appName", app.name])).then(core.Null, dart.fn(channelName => {
      let events = new platform_channel.EventChannel.new(dart.nullCheck(channelName), method_channel_firebase_auth.MethodChannelFirebaseAuth.channel.codec);
      exception$['EventChannelExtension|receiveGuardedBroadcastStream'](events, {onError: C[102] || CT.C102}).listen(dart.fn($arguments => {
        this[S$._handleAuthStateChangesListener](app.name, core.Map.as($arguments));
      }, T$.dynamicTovoid()));
    }, T$.StringNToNull()));
    method_channel_firebase_auth.MethodChannelFirebaseAuth._authStateChangesListeners[S$.$_set](app.name, this[S$._createBroadcastStream](T$._ValueWrapperOfUserPlatform()));
    method_channel_firebase_auth.MethodChannelFirebaseAuth._idTokenChangesListeners[S$.$_set](app.name, this[S$._createBroadcastStream](T$._ValueWrapperOfUserPlatform()));
    method_channel_firebase_auth.MethodChannelFirebaseAuth._userChangesListeners[S$.$_set](app.name, this[S$._createBroadcastStream](T$._ValueWrapperOfUserPlatform()));
  }).prototype = method_channel_firebase_auth.MethodChannelFirebaseAuth.prototype;
  dart.addTypeTests(method_channel_firebase_auth.MethodChannelFirebaseAuth);
  dart.addTypeCaches(method_channel_firebase_auth.MethodChannelFirebaseAuth);
  dart.setMethodSignature(method_channel_firebase_auth.MethodChannelFirebaseAuth, () => ({
    __proto__: dart.getMethods(method_channel_firebase_auth.MethodChannelFirebaseAuth.__proto__),
    [S$._createBroadcastStream]: dart.gFnType(T => [async.StreamController$(T), []], T => [dart.nullable(core.Object)]),
    [S$._handleAuthStateChangesListener]: dart.fnType(async.Future$(dart.void), [core.String, core.Map]),
    [S$._handleIdTokenChangesListener]: dart.fnType(async.Future$(dart.void), [core.String, core.Map]),
    [S$._withChannelDefaults]: dart.fnType(core.Map$(core.String, dart.dynamic), [core.Map$(core.String, dart.dynamic)]),
    setInitialValues: dart.fnType(method_channel_firebase_auth.MethodChannelFirebaseAuth, [], {currentUser: dart.nullable(core.Map$(core.String, dart.dynamic)), languageCode: dart.nullable(core.String)}, {}),
    verifyPhoneNumber: dart.fnType(async.Future$(dart.void), [], {autoRetrievedSmsCodeForTesting: dart.nullable(core.String), forceResendingToken: dart.nullable(core.int), multiFactorInfo: dart.nullable(platform_interface_multi_factor.MultiFactorInfo), multiFactorSession: dart.nullable(platform_interface_multi_factor.MultiFactorSession), phoneNumber: dart.nullable(core.String), timeout: core.Duration}, {codeAutoRetrievalTimeout: dart.fnType(dart.void, [core.String]), codeSent: dart.fnType(dart.void, [core.String, dart.nullable(core.int)]), verificationCompleted: dart.fnType(dart.void, [phone_auth.PhoneAuthCredential]), verificationFailed: dart.fnType(dart.void, [firebase_auth_exception.FirebaseAuthException])})
  }));
  dart.setStaticGetterSignature(method_channel_firebase_auth.MethodChannelFirebaseAuth, () => ['instance']);
  dart.setLibraryUri(method_channel_firebase_auth.MethodChannelFirebaseAuth, I[116]);
  dart.setFieldSignature(method_channel_firebase_auth.MethodChannelFirebaseAuth, () => ({
    __proto__: dart.getFields(method_channel_firebase_auth.MethodChannelFirebaseAuth.__proto__),
    currentUser: dart.fieldType(dart.nullable(platform_interface_user.UserPlatform)),
    languageCode: dart.fieldType(dart.nullable(core.String))
  }));
  dart.setStaticFieldSignature(method_channel_firebase_auth.MethodChannelFirebaseAuth, () => ['channel', 'methodChannelFirebaseAuthInstances', '_multiFactorInstances', '_authStateChangesListeners', '_idTokenChangesListeners', '_userChangesListeners']);
  dart.defineLazy(method_channel_firebase_auth.MethodChannelFirebaseAuth, {
    /*method_channel_firebase_auth.MethodChannelFirebaseAuth.channel*/get channel() {
      return C[104] || CT.C104;
    },
    /*method_channel_firebase_auth.MethodChannelFirebaseAuth.methodChannelFirebaseAuthInstances*/get methodChannelFirebaseAuthInstances() {
      return new (T$.IdentityMapOfString$MethodChannelFirebaseAuth()).new();
    },
    set methodChannelFirebaseAuthInstances(value) {},
    /*method_channel_firebase_auth.MethodChannelFirebaseAuth._multiFactorInstances*/get _multiFactorInstances() {
      return new (T$.IdentityMapOfString$MethodChannelMultiFactor()).new();
    },
    set _multiFactorInstances(value) {},
    /*method_channel_firebase_auth.MethodChannelFirebaseAuth._authStateChangesListeners*/get _authStateChangesListeners() {
      return new (T$.IdentityMapOfString$StreamControllerOf_ValueWrapperOfUserPlatform()).new();
    },
    /*method_channel_firebase_auth.MethodChannelFirebaseAuth._idTokenChangesListeners*/get _idTokenChangesListeners() {
      return new (T$.IdentityMapOfString$StreamControllerOf_ValueWrapperOfUserPlatform()).new();
    },
    /*method_channel_firebase_auth.MethodChannelFirebaseAuth._userChangesListeners*/get _userChangesListeners() {
      return new (T$.IdentityMapOfString$StreamControllerOf_ValueWrapperOfUserPlatform()).new();
    }
  }, false);
  const _is__ValueWrapper_default = Symbol('_is__ValueWrapper_default');
  method_channel_firebase_auth._ValueWrapper$ = dart.generic(T => {
    class _ValueWrapper extends core.Object {
      get value() {
        return this[S$.value];
      }
      set value(value) {
        super.value = value;
      }
      static ['_#new#tearOff'](T, value) {
        return new (method_channel_firebase_auth._ValueWrapper$(T)).new(value);
      }
      static ['_#absent#tearOff'](T) {
        return new (method_channel_firebase_auth._ValueWrapper$(T)).absent();
      }
    }
    (_ValueWrapper.new = function(value) {
      this[S$.value] = value;
      ;
    }).prototype = _ValueWrapper.prototype;
    (_ValueWrapper.absent = function() {
      this[S$.value] = null;
      ;
    }).prototype = _ValueWrapper.prototype;
    dart.addTypeTests(_ValueWrapper);
    _ValueWrapper.prototype[_is__ValueWrapper_default] = true;
    dart.addTypeCaches(_ValueWrapper);
    dart.setLibraryUri(_ValueWrapper, I[116]);
    dart.setFieldSignature(_ValueWrapper, () => ({
      __proto__: dart.getFields(_ValueWrapper.__proto__),
      value: dart.finalFieldType(dart.nullable(T))
    }));
    return _ValueWrapper;
  });
  method_channel_firebase_auth._ValueWrapper = method_channel_firebase_auth._ValueWrapper$();
  dart.addTypeTests(method_channel_firebase_auth._ValueWrapper, _is__ValueWrapper_default);
  method_channel_multi_factor.MethodChannelMultiFactor = class MethodChannelMultiFactor extends platform_interface_multi_factor.MultiFactorPlatform {
    static ['_#new#tearOff'](auth) {
      return new method_channel_multi_factor.MethodChannelMultiFactor.new(auth);
    }
    getSession() {
      return async.async(platform_interface_multi_factor.MultiFactorSession, (function* getSession() {
        let pigeonObject = (yield this[S$._api$1].getSession(this.auth.app.name));
        return new platform_interface_multi_factor.MultiFactorSession.new(pigeonObject.id);
      }).bind(this));
    }
    enroll(assertion, opts) {
      let displayName = opts && 'displayName' in opts ? opts.displayName : null;
      return async.async(dart.void, (function* enroll() {
        let _assertion = method_channel_multi_factor.MultiFactorAssertion.as(assertion);
        if (phone_auth.PhoneAuthCredential.is(_assertion.credential)) {
          let credential = phone_auth.PhoneAuthCredential.as(_assertion.credential);
          let verificationId = credential.verificationId;
          let verificationCode = credential.smsCode;
          if (verificationCode == null) {
            dart.throw(new core.ArgumentError.new("verificationCode must not be null"));
          }
          if (verificationId == null) {
            dart.throw(new core.ArgumentError.new("verificationId must not be null"));
          }
          yield this[S$._api$1].enrollPhone(this.auth.app.name, new messages$46pigeon$.PigeonPhoneMultiFactorAssertion.new({verificationId: verificationId, verificationCode: verificationCode}), displayName);
        } else {
          dart.throw(new core.UnimplementedError.new("Credential type " + dart.str(_assertion.credential) + " is not supported yet"));
        }
      }).bind(this));
    }
    unenroll(opts) {
      let t150, t149;
      let factorUid = opts && 'factorUid' in opts ? opts.factorUid : null;
      let multiFactorInfo = opts && 'multiFactorInfo' in opts ? opts.multiFactorInfo : null;
      let uidToUnenroll = (t149 = factorUid, t149 == null ? (t150 = multiFactorInfo, t150 == null ? null : t150.uid) : t149);
      if (uidToUnenroll == null) {
        dart.throw(new core.ArgumentError.new("Either factorUid or multiFactorInfo must not be null"));
      }
      return this[S$._api$1].unenroll(this.auth.app.name, uidToUnenroll);
    }
    getEnrolledFactors() {
      return async.async(T$.ListOfMultiFactorInfo(), (function* getEnrolledFactors() {
        let data = (yield this[S$._api$1].getEnrolledFactors(this.auth.app.name));
        return pigeon_helper.multiFactorInfoPigeonToObject(data);
      }).bind(this));
    }
  };
  (method_channel_multi_factor.MethodChannelMultiFactor.new = function(auth) {
    this[S$._api$1] = new messages$46pigeon$.MultiFactorUserHostApi.new();
    method_channel_multi_factor.MethodChannelMultiFactor.__proto__.new.call(this, auth);
    ;
  }).prototype = method_channel_multi_factor.MethodChannelMultiFactor.prototype;
  dart.addTypeTests(method_channel_multi_factor.MethodChannelMultiFactor);
  dart.addTypeCaches(method_channel_multi_factor.MethodChannelMultiFactor);
  dart.setLibraryUri(method_channel_multi_factor.MethodChannelMultiFactor, I[117]);
  dart.setFieldSignature(method_channel_multi_factor.MethodChannelMultiFactor, () => ({
    __proto__: dart.getFields(method_channel_multi_factor.MethodChannelMultiFactor.__proto__),
    [S$._api$1]: dart.finalFieldType(messages$46pigeon$.MultiFactorUserHostApi)
  }));
  method_channel_multi_factor.MethodChannelMultiFactorResolver = class MethodChannelMultiFactorResolver extends platform_interface_multi_factor.MultiFactorResolverPlatform {
    static ['_#new#tearOff'](hints, session, resolverId, auth) {
      return new method_channel_multi_factor.MethodChannelMultiFactorResolver.new(hints, session, resolverId, auth);
    }
    resolveSignIn(assertion) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* resolveSignIn() {
        let _assertion = method_channel_multi_factor.MultiFactorAssertion.as(assertion);
        if (phone_auth.PhoneAuthCredential.is(_assertion.credential)) {
          let credential = phone_auth.PhoneAuthCredential.as(_assertion.credential);
          let verificationId = credential.verificationId;
          let verificationCode = credential.smsCode;
          if (verificationCode == null) {
            dart.throw(new core.ArgumentError.new("verificationCode must not be null"));
          }
          if (verificationId == null) {
            dart.throw(new core.ArgumentError.new("verificationId must not be null"));
          }
          let data = (yield this[S$._api$1].resolveSignIn(this[S$._resolverId], new messages$46pigeon$.PigeonPhoneMultiFactorAssertion.new({verificationId: verificationId, verificationCode: verificationCode})));
          let userCredential = new method_channel_user_credential.MethodChannelUserCredential.new(this[S$._auth$2], data[S$.$cast](core.String, dart.dynamic));
          return userCredential;
        } else {
          dart.throw(new core.UnimplementedError.new("Credential type " + dart.str(_assertion.credential) + " is not supported yet"));
        }
      }).bind(this));
    }
  };
  (method_channel_multi_factor.MethodChannelMultiFactorResolver.new = function(hints, session, resolverId, auth) {
    this[S$._api$1] = new messages$46pigeon$.MultiFactoResolverHostApi.new();
    this[S$._resolverId] = resolverId;
    this[S$._auth$2] = auth;
    method_channel_multi_factor.MethodChannelMultiFactorResolver.__proto__.new.call(this, hints, session);
    ;
  }).prototype = method_channel_multi_factor.MethodChannelMultiFactorResolver.prototype;
  dart.addTypeTests(method_channel_multi_factor.MethodChannelMultiFactorResolver);
  dart.addTypeCaches(method_channel_multi_factor.MethodChannelMultiFactorResolver);
  dart.setLibraryUri(method_channel_multi_factor.MethodChannelMultiFactorResolver, I[117]);
  dart.setFieldSignature(method_channel_multi_factor.MethodChannelMultiFactorResolver, () => ({
    __proto__: dart.getFields(method_channel_multi_factor.MethodChannelMultiFactorResolver.__proto__),
    [S$._resolverId]: dart.finalFieldType(core.String),
    [S$._auth$2]: dart.finalFieldType(method_channel_firebase_auth.MethodChannelFirebaseAuth),
    [S$._api$1]: dart.finalFieldType(messages$46pigeon$.MultiFactoResolverHostApi)
  }));
  method_channel_multi_factor.MultiFactorAssertion = class MultiFactorAssertion extends platform_interface_multi_factor.MultiFactorAssertionPlatform {
    get credential() {
      return this[S$.credential$2];
    }
    set credential(value) {
      super.credential = value;
    }
    static ['_#new#tearOff'](credential) {
      return new method_channel_multi_factor.MultiFactorAssertion.new(credential);
    }
  };
  (method_channel_multi_factor.MultiFactorAssertion.new = function(credential) {
    this[S$.credential$2] = credential;
    method_channel_multi_factor.MultiFactorAssertion.__proto__.new.call(this);
    ;
  }).prototype = method_channel_multi_factor.MultiFactorAssertion.prototype;
  dart.addTypeTests(method_channel_multi_factor.MultiFactorAssertion);
  dart.addTypeCaches(method_channel_multi_factor.MultiFactorAssertion);
  dart.setLibraryUri(method_channel_multi_factor.MultiFactorAssertion, I[117]);
  dart.setFieldSignature(method_channel_multi_factor.MultiFactorAssertion, () => ({
    __proto__: dart.getFields(method_channel_multi_factor.MultiFactorAssertion.__proto__),
    credential: dart.finalFieldType(auth_credential.AuthCredential)
  }));
  method_channel_multi_factor.MethodChannelPhoneMultiFactorGenerator = class MethodChannelPhoneMultiFactorGenerator extends platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform {
    getAssertion(credential) {
      return new method_channel_multi_factor.MultiFactorAssertion.new(credential);
    }
    static ['_#new#tearOff']() {
      return new method_channel_multi_factor.MethodChannelPhoneMultiFactorGenerator.new();
    }
  };
  (method_channel_multi_factor.MethodChannelPhoneMultiFactorGenerator.new = function() {
    method_channel_multi_factor.MethodChannelPhoneMultiFactorGenerator.__proto__.new.call(this);
    ;
  }).prototype = method_channel_multi_factor.MethodChannelPhoneMultiFactorGenerator.prototype;
  dart.addTypeTests(method_channel_multi_factor.MethodChannelPhoneMultiFactorGenerator);
  dart.addTypeCaches(method_channel_multi_factor.MethodChannelPhoneMultiFactorGenerator);
  dart.setLibraryUri(method_channel_multi_factor.MethodChannelPhoneMultiFactorGenerator, I[117]);
  authentication_challenge.AuthenticationChallenge = class AuthenticationChallenge extends core.Object {
    get scheme() {
      return this[S$.scheme];
    }
    set scheme(value) {
      super.scheme = value;
    }
    get parameters() {
      return this[S$.parameters$1];
    }
    set parameters(value) {
      super.parameters = value;
    }
    static parseHeader(header) {
      return utils$1.wrapFormatException(T$.ListOfAuthenticationChallenge(), "authentication header", header, dart.fn(() => {
        let scanner = new string_scanner.StringScanner.new(header);
        scanner.scan(scan.whitespace);
        let challenges = scan.parseList(authentication_challenge.AuthenticationChallenge, scanner, dart.fn(() => {
          let scheme = authentication_challenge.AuthenticationChallenge._scanScheme(scanner, {whitespaceName: "\" \" or \"=\""});
          let params = new (T$.IdentityMapOfString$String()).new();
          while (scanner.scan(",")) {
            scanner.scan(scan.whitespace);
          }
          authentication_challenge.AuthenticationChallenge._scanAuthParam(scanner, params);
          let beforeComma = scanner.position;
          while (scanner.scan(",")) {
            scanner.scan(scan.whitespace);
            if (scanner.matches(",") || scanner.isDone) continue;
            scanner.expect(scan.token, {name: "a token"});
            let name = dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0));
            scanner.scan(scan.whitespace);
            if (!scanner.scan("=")) {
              scanner.position = beforeComma;
              break;
            }
            scanner.scan(scan.whitespace);
            if (scanner.scan(scan.token)) {
              params[S$.$_set](name, dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0)));
            } else {
              params[S$.$_set](name, scan.expectQuotedString(scanner, {name: "a token or a quoted string"}));
            }
            scanner.scan(scan.whitespace);
            beforeComma = scanner.position;
          }
          return new authentication_challenge.AuthenticationChallenge.new(scheme, params);
        }, T$.VoidToAuthenticationChallenge()));
        scanner.expectDone();
        return challenges;
      }, T$.VoidToListOfAuthenticationChallenge()));
    }
    static parse(challenge) {
      return utils$1.wrapFormatException(authentication_challenge.AuthenticationChallenge, "authentication challenge", challenge, dart.fn(() => {
        let scanner = new string_scanner.StringScanner.new(challenge);
        scanner.scan(scan.whitespace);
        let scheme = authentication_challenge.AuthenticationChallenge._scanScheme(scanner);
        let params = new (T$.IdentityMapOfString$String()).new();
        scan.parseList(dart.void, scanner, dart.fn(() => authentication_challenge.AuthenticationChallenge._scanAuthParam(scanner, params), T$.VoidTovoid()));
        scanner.expectDone();
        return new authentication_challenge.AuthenticationChallenge.new(scheme, params);
      }, T$.VoidToAuthenticationChallenge()));
    }
    static ['_#parse#tearOff'](challenge) {
      return authentication_challenge.AuthenticationChallenge.parse(challenge);
    }
    static _scanScheme(scanner, opts) {
      let whitespaceName = opts && 'whitespaceName' in opts ? opts.whitespaceName : null;
      scanner.expect(scan.token, {name: "a token"});
      let scheme = dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0))[S$.$toLowerCase]();
      scanner.scan(scan.whitespace);
      if (scanner.lastMatch == null || !dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0))[S$.$contains](" ")) {
        scanner.expect(" ", {name: whitespaceName});
      }
      return scheme;
    }
    static _scanAuthParam(scanner, params) {
      scanner.expect(scan.token, {name: "a token"});
      let name = dart.nullCheck(scanner.lastMatch)._get(0);
      scanner.scan(scan.whitespace);
      scanner.expect("=");
      scanner.scan(scan.whitespace);
      if (scanner.scan(scan.token)) {
        params[S$.$_set](name, dart.nullCheck(scanner.lastMatch)._get(0));
      } else {
        params[S$.$_set](name, scan.expectQuotedString(scanner, {name: "a token or a quoted string"}));
      }
      scanner.scan(scan.whitespace);
    }
    static ['_#new#tearOff'](scheme, parameters) {
      return new authentication_challenge.AuthenticationChallenge.new(scheme, parameters);
    }
  };
  (authentication_challenge.AuthenticationChallenge.new = function(scheme, parameters) {
    this[S$.scheme] = scheme;
    this[S$.parameters$1] = new (T$.UnmodifiableMapViewOfString$String()).new(new (T$.CaseInsensitiveMapOfString()).from(parameters));
    ;
  }).prototype = authentication_challenge.AuthenticationChallenge.prototype;
  dart.addTypeTests(authentication_challenge.AuthenticationChallenge);
  dart.addTypeCaches(authentication_challenge.AuthenticationChallenge);
  dart.setStaticMethodSignature(authentication_challenge.AuthenticationChallenge, () => ['parseHeader', 'parse', '_scanScheme', '_scanAuthParam']);
  dart.setLibraryUri(authentication_challenge.AuthenticationChallenge, I[118]);
  dart.setFieldSignature(authentication_challenge.AuthenticationChallenge, () => ({
    __proto__: dart.getFields(authentication_challenge.AuthenticationChallenge.__proto__),
    scheme: dart.finalFieldType(core.String),
    parameters: dart.finalFieldType(core.Map$(core.String, core.String))
  }));
  const _is_CaseInsensitiveMap_default = Symbol('_is_CaseInsensitiveMap_default');
  case_insensitive_map.CaseInsensitiveMap$ = dart.generic(V => {
    class CaseInsensitiveMap extends canonicalized_map.CanonicalizedMap$(core.String, core.String, V) {
      static ['_#new#tearOff'](V) {
        return new (case_insensitive_map.CaseInsensitiveMap$(V)).new();
      }
      static ['_#from#tearOff'](V, other) {
        return new (case_insensitive_map.CaseInsensitiveMap$(V)).from(other);
      }
    }
    (CaseInsensitiveMap.new = function() {
      CaseInsensitiveMap.__proto__.new.call(this, dart.fn(key => key[S$.$toLowerCase](), T$.StringToString()));
      ;
    }).prototype = CaseInsensitiveMap.prototype;
    (CaseInsensitiveMap.from = function(other) {
      CaseInsensitiveMap.__proto__.from.call(this, other, dart.fn(key => key[S$.$toLowerCase](), T$.StringToString()));
      ;
    }).prototype = CaseInsensitiveMap.prototype;
    dart.addTypeTests(CaseInsensitiveMap);
    CaseInsensitiveMap.prototype[_is_CaseInsensitiveMap_default] = true;
    dart.addTypeCaches(CaseInsensitiveMap);
    dart.setLibraryUri(CaseInsensitiveMap, I[119]);
    return CaseInsensitiveMap;
  });
  case_insensitive_map.CaseInsensitiveMap = case_insensitive_map.CaseInsensitiveMap$();
  dart.addTypeTests(case_insensitive_map.CaseInsensitiveMap, _is_CaseInsensitiveMap_default);
  chunked_coding.ChunkedCodingCodec = class ChunkedCodingCodec extends convert.Codec$(core.List$(core.int), core.List$(core.int)) {
    get encoder() {
      return encoder.chunkedCodingEncoder;
    }
    get decoder() {
      return decoder.chunkedCodingDecoder;
    }
    static ['_#_#tearOff']() {
      return new chunked_coding.ChunkedCodingCodec.__();
    }
  };
  (chunked_coding.ChunkedCodingCodec.__ = function() {
    chunked_coding.ChunkedCodingCodec.__proto__.new.call(this);
    ;
  }).prototype = chunked_coding.ChunkedCodingCodec.prototype;
  dart.addTypeTests(chunked_coding.ChunkedCodingCodec);
  dart.addTypeCaches(chunked_coding.ChunkedCodingCodec);
  dart.setGetterSignature(chunked_coding.ChunkedCodingCodec, () => ({
    __proto__: dart.getGetters(chunked_coding.ChunkedCodingCodec.__proto__),
    encoder: encoder.ChunkedCodingEncoder,
    decoder: decoder.ChunkedCodingDecoder
  }));
  dart.setLibraryUri(chunked_coding.ChunkedCodingCodec, I[120]);
  dart.defineLazy(chunked_coding, {
    /*chunked_coding.chunkedCoding*/get chunkedCoding() {
      return C[107] || CT.C107;
    }
  }, false);
  http_date.formatHttpDate = function formatHttpDate(date) {
    let t149;
    date = date.toUtc();
    let buffer = (t149 = new core.StringBuffer.new(), (() => {
      t149.write(http_date._weekdays[S$.$_get](date.weekday - 1));
      t149.write(", ");
      t149.write(date.day <= 9 ? "0" : "");
      t149.write(date.day[S$.$toString]());
      t149.write(" ");
      t149.write(http_date._months[S$.$_get](date.month - 1));
      t149.write(" ");
      t149.write(date.year[S$.$toString]());
      t149.write(date.hour <= 9 ? " 0" : " ");
      t149.write(date.hour[S$.$toString]());
      t149.write(date.minute <= 9 ? ":0" : ":");
      t149.write(date.minute[S$.$toString]());
      t149.write(date.second <= 9 ? ":0" : ":");
      t149.write(date.second[S$.$toString]());
      t149.write(" GMT");
      return t149;
    })());
    return buffer.toString();
  };
  http_date.parseHttpDate = function parseHttpDate(date) {
    return utils$1.wrapFormatException(core.DateTime, "HTTP date", date, dart.fn(() => {
      let scanner = new string_scanner.StringScanner.new(date);
      if (scanner.scan(http_date._longWeekdayRegExp)) {
        scanner.expect(", ");
        let day = http_date._parseInt(scanner, 2);
        scanner.expect("-");
        let month = http_date._parseMonth(scanner);
        scanner.expect("-");
        let year = 1900 + http_date._parseInt(scanner, 2);
        scanner.expect(" ");
        let time = http_date._parseTime(scanner);
        scanner.expect(" GMT");
        scanner.expectDone();
        return http_date._makeDateTime(year, month, day, time);
      }
      scanner.expect(http_date._shortWeekdayRegExp);
      if (scanner.scan(", ")) {
        let day = http_date._parseInt(scanner, 2);
        scanner.expect(" ");
        let month = http_date._parseMonth(scanner);
        scanner.expect(" ");
        let year = http_date._parseInt(scanner, 4);
        scanner.expect(" ");
        let time = http_date._parseTime(scanner);
        scanner.expect(" GMT");
        scanner.expectDone();
        return http_date._makeDateTime(year, month, day, time);
      }
      scanner.expect(" ");
      let month = http_date._parseMonth(scanner);
      scanner.expect(" ");
      let day = scanner.scan(" ") ? http_date._parseInt(scanner, 1) : http_date._parseInt(scanner, 2);
      scanner.expect(" ");
      let time = http_date._parseTime(scanner);
      scanner.expect(" ");
      let year = http_date._parseInt(scanner, 4);
      scanner.expectDone();
      return http_date._makeDateTime(year, month, day, time);
    }, T$.VoidToDateTime()));
  };
  http_date._parseMonth = function _parseMonth(scanner) {
    scanner.expect(http_date._monthRegExp);
    return http_date._months[S$.$indexOf](dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0))) + 1;
  };
  http_date._parseInt = function _parseInt(scanner, digits) {
    scanner.expect(http_date._digitRegExp);
    if (dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0)).length !== digits) {
      scanner.error("expected a " + dart.str(digits) + "-digit number.");
    }
    return core.int.parse(dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0)));
  };
  http_date._parseTime = function _parseTime(scanner) {
    let hours = http_date._parseInt(scanner, 2);
    if (hours >= 24) scanner.error("hours may not be greater than 24.");
    scanner.expect(":");
    let minutes = http_date._parseInt(scanner, 2);
    if (minutes >= 60) scanner.error("minutes may not be greater than 60.");
    scanner.expect(":");
    let seconds = http_date._parseInt(scanner, 2);
    if (seconds >= 60) scanner.error("seconds may not be greater than 60.");
    return new core.DateTime.new(1, 1, 1, hours, minutes, seconds);
  };
  http_date._makeDateTime = function _makeDateTime(year, month, day, time) {
    let dateTime = new core.DateTime.utc(year, month, day, time.hour, time.minute, time.second);
    if (dateTime.month !== month) {
      dart.throw(new core.FormatException.new("invalid day '" + dart.str(day) + "' for month '" + dart.str(month) + "'."));
    }
    return dateTime;
  };
  dart.defineLazy(http_date, {
    /*http_date._weekdays*/get _weekdays() {
      return C[108] || CT.C108;
    },
    /*http_date._months*/get _months() {
      return C[109] || CT.C109;
    },
    /*http_date._shortWeekdayRegExp*/get _shortWeekdayRegExp() {
      return core.RegExp.new("Mon|Tue|Wed|Thu|Fri|Sat|Sun");
    },
    /*http_date._longWeekdayRegExp*/get _longWeekdayRegExp() {
      return core.RegExp.new("Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday");
    },
    /*http_date._monthRegExp*/get _monthRegExp() {
      return core.RegExp.new("Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec");
    },
    /*http_date._digitRegExp*/get _digitRegExp() {
      return core.RegExp.new("\\d+");
    }
  }, false);
  media_type.MediaType = class MediaType extends core.Object {
    get type() {
      return this[S$.type$1];
    }
    set type(value) {
      super.type = value;
    }
    get subtype() {
      return this[S$.subtype];
    }
    set subtype(value) {
      super.subtype = value;
    }
    get parameters() {
      return this[S$.parameters$2];
    }
    set parameters(value) {
      super.parameters = value;
    }
    get mimeType() {
      return this.type + "/" + this.subtype;
    }
    static parse(mediaType) {
      return utils$1.wrapFormatException(media_type.MediaType, "media type", mediaType, dart.fn(() => {
        let scanner = new string_scanner.StringScanner.new(mediaType);
        scanner.scan(scan.whitespace);
        scanner.expect(scan.token);
        let type = dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0));
        scanner.expect("/");
        scanner.expect(scan.token);
        let subtype = dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0));
        scanner.scan(scan.whitespace);
        let parameters = new (T$.IdentityMapOfString$String()).new();
        while (scanner.scan(";")) {
          scanner.scan(scan.whitespace);
          scanner.expect(scan.token);
          let attribute = dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0));
          scanner.expect("=");
          let value = null;
          if (scanner.scan(scan.token)) {
            value = dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0));
          } else {
            value = scan.expectQuotedString(scanner);
          }
          scanner.scan(scan.whitespace);
          parameters[S$.$_set](attribute, value);
        }
        scanner.expectDone();
        return new media_type.MediaType.new(type, subtype, parameters);
      }, T$.VoidToMediaType()));
    }
    static ['_#parse#tearOff'](mediaType) {
      return media_type.MediaType.parse(mediaType);
    }
    static ['_#new#tearOff'](type, subtype, parameters = null) {
      return new media_type.MediaType.new(type, subtype, parameters);
    }
    change(opts) {
      let type = opts && 'type' in opts ? opts.type : null;
      let subtype = opts && 'subtype' in opts ? opts.subtype : null;
      let mimeType = opts && 'mimeType' in opts ? opts.mimeType : null;
      let parameters = opts && 'parameters' in opts ? opts.parameters : null;
      let clearParameters = opts && 'clearParameters' in opts ? opts.clearParameters : false;
      if (mimeType != null) {
        if (type != null) {
          dart.throw(new core.ArgumentError.new("You may not pass both [type] and [mimeType]."));
        } else if (subtype != null) {
          dart.throw(new core.ArgumentError.new("You may not pass both [subtype] and " + "[mimeType]."));
        }
        let segments = mimeType[S$.$split]("/");
        if (segments[S$.$length] !== 2) {
          dart.throw(new core.FormatException.new("Invalid mime type \"" + dart.str(mimeType) + "\"."));
        }
        type = segments[S$.$_get](0);
        subtype = segments[S$.$_get](1);
      }
      type == null ? type = this.type : null;
      subtype == null ? subtype = this.subtype : null;
      parameters == null ? parameters = new (T$.IdentityMapOfString$String()).new() : null;
      if (!clearParameters) {
        let newParameters = parameters;
        parameters = T$.LinkedHashMapOfString$String().from(this.parameters);
        parameters[S$.$addAll](newParameters);
      }
      return new media_type.MediaType.new(type, subtype, parameters);
    }
    toString() {
      let t149;
      let buffer = (t149 = new core.StringBuffer.new(), (() => {
        t149.write(this.type);
        t149.write("/");
        t149.write(this.subtype);
        return t149;
      })());
      this.parameters[S$.$forEach](dart.fn((attribute, value) => {
        let t149;
        buffer.write("; " + attribute + "=");
        if (scan.nonToken.hasMatch(value)) {
          t149 = buffer;
          (() => {
            t149.write("\"");
            t149.write(value[S$.$replaceAllMapped](media_type._escapedChar, dart.fn(match => "\\" + dart.str(match._get(0)), T$.MatchToString())));
            t149.write("\"");
            return t149;
          })();
        } else {
          buffer.write(value);
        }
      }, T$.StringAndStringTovoid()));
      return buffer.toString();
    }
  };
  (media_type.MediaType.new = function(type, subtype, parameters = null) {
    this[S$.type$1] = type[S$.$toLowerCase]();
    this[S$.subtype] = subtype[S$.$toLowerCase]();
    this[S$.parameters$2] = new (T$.UnmodifiableMapViewOfString$String()).new(parameters == null ? new (T$.IdentityMapOfString$String()).new() : new (T$.CaseInsensitiveMapOfString()).from(parameters));
    ;
  }).prototype = media_type.MediaType.prototype;
  dart.addTypeTests(media_type.MediaType);
  dart.addTypeCaches(media_type.MediaType);
  dart.setMethodSignature(media_type.MediaType, () => ({
    __proto__: dart.getMethods(media_type.MediaType.__proto__),
    change: dart.fnType(media_type.MediaType, [], {clearParameters: core.bool, mimeType: dart.nullable(core.String), parameters: dart.nullable(core.Map$(core.String, core.String)), subtype: dart.nullable(core.String), type: dart.nullable(core.String)}, {})
  }));
  dart.setStaticMethodSignature(media_type.MediaType, () => ['parse']);
  dart.setGetterSignature(media_type.MediaType, () => ({
    __proto__: dart.getGetters(media_type.MediaType.__proto__),
    mimeType: core.String
  }));
  dart.setLibraryUri(media_type.MediaType, I[121]);
  dart.setFieldSignature(media_type.MediaType, () => ({
    __proto__: dart.getFields(media_type.MediaType.__proto__),
    type: dart.finalFieldType(core.String),
    subtype: dart.finalFieldType(core.String),
    parameters: dart.finalFieldType(core.Map$(core.String, core.String))
  }));
  dart.defineExtensionMethods(media_type.MediaType, ['toString']);
  dart.defineLazy(media_type, {
    /*media_type._escapedChar*/get _escapedChar() {
      return core.RegExp.new("[\"\\x00-\\x1F\\x7F]");
    }
  }, false);
  full_metadata.FullMetadata = class FullMetadata extends core.Object {
    static ['_#new#tearOff'](_metadata) {
      return new full_metadata.FullMetadata.new(_metadata);
    }
    get bucket() {
      return T$.StringN().as(this[S$._metadata][S$.$_get]("bucket"));
    }
    get cacheControl() {
      return T$.StringN().as(this[S$._metadata][S$.$_get]("cacheControl"));
    }
    get contentDisposition() {
      return T$.StringN().as(this[S$._metadata][S$.$_get]("contentDisposition"));
    }
    get contentEncoding() {
      return T$.StringN().as(this[S$._metadata][S$.$_get]("contentEncoding"));
    }
    get contentLanguage() {
      return T$.StringN().as(this[S$._metadata][S$.$_get]("contentLanguage"));
    }
    get contentType() {
      return T$.StringN().as(this[S$._metadata][S$.$_get]("contentType"));
    }
    get customMetadata() {
      return this[S$._metadata][S$.$_get]("customMetadata") == null ? null : T$.LinkedHashMapOfString$String().from(core.Map.as(this[S$._metadata][S$.$_get]("customMetadata")));
    }
    get fullPath() {
      return core.String.as(this[S$._metadata][S$.$_get]("fullPath"));
    }
    get generation() {
      return T$.StringN().as(this[S$._metadata][S$.$_get]("generation"));
    }
    get metadataGeneration() {
      return T$.StringN().as(this[S$._metadata][S$.$_get]("metadataGeneration"));
    }
    get md5Hash() {
      return T$.StringN().as(this[S$._metadata][S$.$_get]("md5Hash"));
    }
    get metageneration() {
      return T$.StringN().as(this[S$._metadata][S$.$_get]("metageneration"));
    }
    get name() {
      return core.String.as(this[S$._metadata][S$.$_get]("name"));
    }
    get size() {
      return T$.intN().as(this[S$._metadata][S$.$_get]("size"));
    }
    get timeCreated() {
      return this[S$._metadata][S$.$_get]("creationTimeMillis") == null ? null : new core.DateTime.fromMillisecondsSinceEpoch(core.int.as(this[S$._metadata][S$.$_get]("creationTimeMillis")));
    }
    get updated() {
      return this[S$._metadata][S$.$_get]("updatedTimeMillis") == null ? null : new core.DateTime.fromMillisecondsSinceEpoch(core.int.as(this[S$._metadata][S$.$_get]("updatedTimeMillis")));
    }
  };
  (full_metadata.FullMetadata.new = function(_metadata) {
    this[S$._metadata] = _metadata;
    ;
  }).prototype = full_metadata.FullMetadata.prototype;
  dart.addTypeTests(full_metadata.FullMetadata);
  dart.addTypeCaches(full_metadata.FullMetadata);
  dart.setGetterSignature(full_metadata.FullMetadata, () => ({
    __proto__: dart.getGetters(full_metadata.FullMetadata.__proto__),
    bucket: dart.nullable(core.String),
    cacheControl: dart.nullable(core.String),
    contentDisposition: dart.nullable(core.String),
    contentEncoding: dart.nullable(core.String),
    contentLanguage: dart.nullable(core.String),
    contentType: dart.nullable(core.String),
    customMetadata: dart.nullable(core.Map$(core.String, core.String)),
    fullPath: core.String,
    generation: dart.nullable(core.String),
    metadataGeneration: dart.nullable(core.String),
    md5Hash: dart.nullable(core.String),
    metageneration: dart.nullable(core.String),
    name: core.String,
    size: dart.nullable(core.int),
    timeCreated: dart.nullable(core.DateTime),
    updated: dart.nullable(core.DateTime)
  }));
  dart.setLibraryUri(full_metadata.FullMetadata, I[122]);
  dart.setFieldSignature(full_metadata.FullMetadata, () => ({
    __proto__: dart.getFields(full_metadata.FullMetadata.__proto__),
    [S$._metadata]: dart.finalFieldType(core.Map$(core.String, dart.dynamic))
  }));
  list_options.ListOptions = class ListOptions extends core.Object {
    get maxResults() {
      return this[S$.maxResults];
    }
    set maxResults(value) {
      super.maxResults = value;
    }
    get pageToken() {
      return this[S$.pageToken];
    }
    set pageToken(value) {
      super.pageToken = value;
    }
    static ['_#new#tearOff'](opts) {
      let maxResults = opts && 'maxResults' in opts ? opts.maxResults : null;
      let pageToken = opts && 'pageToken' in opts ? opts.pageToken : null;
      return new list_options.ListOptions.new({maxResults: maxResults, pageToken: pageToken});
    }
  };
  (list_options.ListOptions.new = function(opts) {
    let maxResults = opts && 'maxResults' in opts ? opts.maxResults : null;
    let pageToken = opts && 'pageToken' in opts ? opts.pageToken : null;
    this[S$.maxResults] = maxResults;
    this[S$.pageToken] = pageToken;
    ;
  }).prototype = list_options.ListOptions.prototype;
  dart.addTypeTests(list_options.ListOptions);
  dart.addTypeCaches(list_options.ListOptions);
  dart.setLibraryUri(list_options.ListOptions, I[123]);
  dart.setFieldSignature(list_options.ListOptions, () => ({
    __proto__: dart.getFields(list_options.ListOptions.__proto__),
    maxResults: dart.finalFieldType(dart.nullable(core.int)),
    pageToken: dart.finalFieldType(dart.nullable(core.String))
  }));
  platform_interface_list_result.ListResultPlatform = class ListResultPlatform extends plugin_platform_interface.PlatformInterface {
    get storage() {
      return this[S$.storage$1];
    }
    set storage(value) {
      super.storage = value;
    }
    get nextPageToken() {
      return this[S$.nextPageToken];
    }
    set nextPageToken(value) {
      super.nextPageToken = value;
    }
    static verifyExtends(instance) {
      plugin_platform_interface.PlatformInterface.verifyToken(instance, platform_interface_list_result.ListResultPlatform._token);
    }
    get items() {
      dart.throw(new core.UnimplementedError.new("items is not implemented"));
    }
    get prefixes() {
      dart.throw(new core.UnimplementedError.new("prefixes is not implemented"));
    }
  };
  (platform_interface_list_result.ListResultPlatform.new = function(storage, nextPageToken) {
    this[S$.storage$1] = storage;
    this[S$.nextPageToken] = nextPageToken;
    platform_interface_list_result.ListResultPlatform.__proto__.new.call(this, {token: platform_interface_list_result.ListResultPlatform._token});
    ;
  }).prototype = platform_interface_list_result.ListResultPlatform.prototype;
  dart.addTypeTests(platform_interface_list_result.ListResultPlatform);
  dart.addTypeCaches(platform_interface_list_result.ListResultPlatform);
  dart.setStaticMethodSignature(platform_interface_list_result.ListResultPlatform, () => ['verifyExtends']);
  dart.setGetterSignature(platform_interface_list_result.ListResultPlatform, () => ({
    __proto__: dart.getGetters(platform_interface_list_result.ListResultPlatform.__proto__),
    items: core.List$(platform_interface_reference.ReferencePlatform),
    prefixes: core.List$(platform_interface_reference.ReferencePlatform)
  }));
  dart.setLibraryUri(platform_interface_list_result.ListResultPlatform, I[124]);
  dart.setFieldSignature(platform_interface_list_result.ListResultPlatform, () => ({
    __proto__: dart.getFields(platform_interface_list_result.ListResultPlatform.__proto__),
    storage: dart.finalFieldType(dart.nullable(platform_interface_firebase_storage.FirebaseStoragePlatform)),
    nextPageToken: dart.finalFieldType(dart.nullable(core.String))
  }));
  dart.setStaticFieldSignature(platform_interface_list_result.ListResultPlatform, () => ['_token']);
  dart.defineLazy(platform_interface_list_result.ListResultPlatform, {
    /*platform_interface_list_result.ListResultPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  platform_interface_task.TaskPlatform = class TaskPlatform extends plugin_platform_interface.PlatformInterface {
    static verifyExtends(instance) {
      plugin_platform_interface.PlatformInterface.verifyToken(instance, platform_interface_task.TaskPlatform._token);
    }
    get snapshotEvents() {
      dart.throw(new core.UnimplementedError.new("snapshotEvents is not implemented"));
    }
    get snapshot() {
      dart.throw(new core.UnimplementedError.new("snapshot is not implemented"));
    }
    get onComplete() {
      dart.throw(new core.UnimplementedError.new("onComplete is not implemented"));
    }
    pause() {
      dart.throw(new core.UnimplementedError.new("pause() is not implemented"));
    }
    resume() {
      dart.throw(new core.UnimplementedError.new("resume() is not implemented"));
    }
    cancel() {
      dart.throw(new core.UnimplementedError.new("cancel() is not implemented"));
    }
  };
  (platform_interface_task.TaskPlatform.new = function() {
    platform_interface_task.TaskPlatform.__proto__.new.call(this, {token: platform_interface_task.TaskPlatform._token});
    ;
  }).prototype = platform_interface_task.TaskPlatform.prototype;
  dart.addTypeTests(platform_interface_task.TaskPlatform);
  dart.addTypeCaches(platform_interface_task.TaskPlatform);
  dart.setMethodSignature(platform_interface_task.TaskPlatform, () => ({
    __proto__: dart.getMethods(platform_interface_task.TaskPlatform.__proto__),
    pause: dart.fnType(async.Future$(core.bool), []),
    resume: dart.fnType(async.Future$(core.bool), []),
    cancel: dart.fnType(async.Future$(core.bool), [])
  }));
  dart.setStaticMethodSignature(platform_interface_task.TaskPlatform, () => ['verifyExtends']);
  dart.setGetterSignature(platform_interface_task.TaskPlatform, () => ({
    __proto__: dart.getGetters(platform_interface_task.TaskPlatform.__proto__),
    snapshotEvents: async.Stream$(platform_interface_task_snapshot.TaskSnapshotPlatform),
    snapshot: platform_interface_task_snapshot.TaskSnapshotPlatform,
    onComplete: async.Future$(platform_interface_task_snapshot.TaskSnapshotPlatform)
  }));
  dart.setLibraryUri(platform_interface_task.TaskPlatform, I[125]);
  dart.setStaticFieldSignature(platform_interface_task.TaskPlatform, () => ['_token']);
  dart.defineLazy(platform_interface_task.TaskPlatform, {
    /*platform_interface_task.TaskPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  platform_interface_task_snapshot.TaskSnapshotPlatform = class TaskSnapshotPlatform extends plugin_platform_interface.PlatformInterface {
    static verifyExtends(instance) {
      plugin_platform_interface.PlatformInterface.verifyToken(instance, platform_interface_task_snapshot.TaskSnapshotPlatform._token);
    }
    get bytesTransferred() {
      return core.int.as(this[S$._data$4][S$.$_get]("bytesTransferred"));
    }
    get metadata() {
      return this[S$._data$4][S$.$_get]("metadata") == null ? null : new full_metadata.FullMetadata.new(T$.LinkedHashMapOfString$dynamic().from(core.Map.as(this[S$._data$4][S$.$_get]("metadata"))));
    }
    get ref() {
      dart.throw(new core.UnimplementedError.new("ref is not implemented"));
    }
    get state() {
      return this[S$._state];
    }
    get totalBytes() {
      return core.int.as(this[S$._data$4][S$.$_get]("totalBytes"));
    }
  };
  (platform_interface_task_snapshot.TaskSnapshotPlatform.new = function(_state, _data) {
    this[S$._state] = _state;
    this[S$._data$4] = _data;
    platform_interface_task_snapshot.TaskSnapshotPlatform.__proto__.new.call(this, {token: platform_interface_task_snapshot.TaskSnapshotPlatform._token});
    ;
  }).prototype = platform_interface_task_snapshot.TaskSnapshotPlatform.prototype;
  dart.addTypeTests(platform_interface_task_snapshot.TaskSnapshotPlatform);
  dart.addTypeCaches(platform_interface_task_snapshot.TaskSnapshotPlatform);
  dart.setStaticMethodSignature(platform_interface_task_snapshot.TaskSnapshotPlatform, () => ['verifyExtends']);
  dart.setGetterSignature(platform_interface_task_snapshot.TaskSnapshotPlatform, () => ({
    __proto__: dart.getGetters(platform_interface_task_snapshot.TaskSnapshotPlatform.__proto__),
    bytesTransferred: core.int,
    metadata: dart.nullable(full_metadata.FullMetadata),
    ref: platform_interface_reference.ReferencePlatform,
    state: task_state.TaskState,
    totalBytes: core.int
  }));
  dart.setLibraryUri(platform_interface_task_snapshot.TaskSnapshotPlatform, I[126]);
  dart.setFieldSignature(platform_interface_task_snapshot.TaskSnapshotPlatform, () => ({
    __proto__: dart.getFields(platform_interface_task_snapshot.TaskSnapshotPlatform.__proto__),
    [S$._state]: dart.finalFieldType(task_state.TaskState),
    [S$._data$4]: dart.finalFieldType(core.Map$(core.String, dart.dynamic))
  }));
  dart.setStaticFieldSignature(platform_interface_task_snapshot.TaskSnapshotPlatform, () => ['_token']);
  dart.defineLazy(platform_interface_task_snapshot.TaskSnapshotPlatform, {
    /*platform_interface_task_snapshot.TaskSnapshotPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  put_string_format.PutStringFormat = class PutStringFormat extends core._Enum {
    [S$._enumToString]() {
      return "PutStringFormat." + this[S$._name];
    }
  };
  (put_string_format.PutStringFormat.new = function(index, name) {
    put_string_format.PutStringFormat.__proto__.new.call(this, index, name);
    ;
  }).prototype = put_string_format.PutStringFormat.prototype;
  dart.addTypeTests(put_string_format.PutStringFormat);
  dart.addTypeCaches(put_string_format.PutStringFormat);
  dart.setMethodSignature(put_string_format.PutStringFormat, () => ({
    __proto__: dart.getMethods(put_string_format.PutStringFormat.__proto__),
    [S$._enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(put_string_format.PutStringFormat, I[127]);
  dart.setStaticFieldSignature(put_string_format.PutStringFormat, () => ['values', 'raw', 'base64', 'base64Url', 'dataUrl']);
  dart.defineLazy(put_string_format.PutStringFormat, {
    /*put_string_format.PutStringFormat.values*/get values() {
      return C[110] || CT.C110;
    },
    /*put_string_format.PutStringFormat.raw*/get raw() {
      return C[111] || CT.C111;
    },
    /*put_string_format.PutStringFormat.base64*/get base64() {
      return C[112] || CT.C112;
    },
    /*put_string_format.PutStringFormat.base64Url*/get base64Url() {
      return C[113] || CT.C113;
    },
    /*put_string_format.PutStringFormat.dataUrl*/get dataUrl() {
      return C[114] || CT.C114;
    }
  }, false);
  settable_metadata.SettableMetadata = class SettableMetadata extends core.Object {
    get cacheControl() {
      return this[S$.cacheControl];
    }
    set cacheControl(value) {
      super.cacheControl = value;
    }
    get contentDisposition() {
      return this[S$.contentDisposition];
    }
    set contentDisposition(value) {
      super.contentDisposition = value;
    }
    get contentEncoding() {
      return this[S$.contentEncoding];
    }
    set contentEncoding(value) {
      super.contentEncoding = value;
    }
    get contentLanguage() {
      return this[S$.contentLanguage];
    }
    set contentLanguage(value) {
      super.contentLanguage = value;
    }
    get contentType() {
      return this[S$.contentType];
    }
    set contentType(value) {
      super.contentType = value;
    }
    get customMetadata() {
      return this[S$.customMetadata];
    }
    set customMetadata(value) {
      super.customMetadata = value;
    }
    static ['_#new#tearOff'](opts) {
      let cacheControl = opts && 'cacheControl' in opts ? opts.cacheControl : null;
      let contentDisposition = opts && 'contentDisposition' in opts ? opts.contentDisposition : null;
      let contentEncoding = opts && 'contentEncoding' in opts ? opts.contentEncoding : null;
      let contentLanguage = opts && 'contentLanguage' in opts ? opts.contentLanguage : null;
      let contentType = opts && 'contentType' in opts ? opts.contentType : null;
      let customMetadata = opts && 'customMetadata' in opts ? opts.customMetadata : null;
      return new settable_metadata.SettableMetadata.new({cacheControl: cacheControl, contentDisposition: contentDisposition, contentEncoding: contentEncoding, contentLanguage: contentLanguage, contentType: contentType, customMetadata: customMetadata});
    }
    asMap() {
      return new (T$.IdentityMapOfString$dynamic()).from(["cacheControl", this.cacheControl, "contentDisposition", this.contentDisposition, "contentEncoding", this.contentEncoding, "contentLanguage", this.contentLanguage, "contentType", this.contentType, "customMetadata", this.customMetadata]);
    }
  };
  (settable_metadata.SettableMetadata.new = function(opts) {
    let cacheControl = opts && 'cacheControl' in opts ? opts.cacheControl : null;
    let contentDisposition = opts && 'contentDisposition' in opts ? opts.contentDisposition : null;
    let contentEncoding = opts && 'contentEncoding' in opts ? opts.contentEncoding : null;
    let contentLanguage = opts && 'contentLanguage' in opts ? opts.contentLanguage : null;
    let contentType = opts && 'contentType' in opts ? opts.contentType : null;
    let customMetadata = opts && 'customMetadata' in opts ? opts.customMetadata : null;
    this[S$.cacheControl] = cacheControl;
    this[S$.contentDisposition] = contentDisposition;
    this[S$.contentEncoding] = contentEncoding;
    this[S$.contentLanguage] = contentLanguage;
    this[S$.contentType] = contentType;
    this[S$.customMetadata] = customMetadata;
    ;
  }).prototype = settable_metadata.SettableMetadata.prototype;
  dart.addTypeTests(settable_metadata.SettableMetadata);
  dart.addTypeCaches(settable_metadata.SettableMetadata);
  dart.setMethodSignature(settable_metadata.SettableMetadata, () => ({
    __proto__: dart.getMethods(settable_metadata.SettableMetadata.__proto__),
    asMap: dart.fnType(core.Map$(core.String, dart.dynamic), [])
  }));
  dart.setLibraryUri(settable_metadata.SettableMetadata, I[128]);
  dart.setFieldSignature(settable_metadata.SettableMetadata, () => ({
    __proto__: dart.getFields(settable_metadata.SettableMetadata.__proto__),
    cacheControl: dart.finalFieldType(dart.nullable(core.String)),
    contentDisposition: dart.finalFieldType(dart.nullable(core.String)),
    contentEncoding: dart.finalFieldType(dart.nullable(core.String)),
    contentLanguage: dart.finalFieldType(dart.nullable(core.String)),
    contentType: dart.finalFieldType(dart.nullable(core.String)),
    customMetadata: dart.finalFieldType(dart.nullable(core.Map$(core.String, core.String)))
  }));
  task_state.TaskState = class TaskState extends core._Enum {
    [S$._enumToString]() {
      return "TaskState." + this[S$._name];
    }
  };
  (task_state.TaskState.new = function(index, name) {
    task_state.TaskState.__proto__.new.call(this, index, name);
    ;
  }).prototype = task_state.TaskState.prototype;
  dart.addTypeTests(task_state.TaskState);
  dart.addTypeCaches(task_state.TaskState);
  dart.setMethodSignature(task_state.TaskState, () => ({
    __proto__: dart.getMethods(task_state.TaskState.__proto__),
    [S$._enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(task_state.TaskState, I[129]);
  dart.setStaticFieldSignature(task_state.TaskState, () => ['values', 'paused', 'running', 'success', 'canceled', 'error']);
  dart.defineLazy(task_state.TaskState, {
    /*task_state.TaskState.values*/get values() {
      return C[115] || CT.C115;
    },
    /*task_state.TaskState.paused*/get paused() {
      return C[116] || CT.C116;
    },
    /*task_state.TaskState.running*/get running() {
      return C[117] || CT.C117;
    },
    /*task_state.TaskState.success*/get success() {
      return C[118] || CT.C118;
    },
    /*task_state.TaskState.canceled*/get canceled() {
      return C[119] || CT.C119;
    },
    /*task_state.TaskState.error*/get error() {
      return C[120] || CT.C120;
    }
  }, false);
  http.head = function head(url, opts) {
    let headers = opts && 'headers' in opts ? opts.headers : null;
    return http._withClient(response$.Response, dart.fn(client => client.head(url, {headers: headers}), T$.ClientToFutureOfResponse()));
  };
  http.get = function get(url, opts) {
    let headers = opts && 'headers' in opts ? opts.headers : null;
    return http._withClient(response$.Response, dart.fn(client => client.get(url, {headers: headers}), T$.ClientToFutureOfResponse()));
  };
  http.post = function post(url, opts) {
    let headers = opts && 'headers' in opts ? opts.headers : null;
    let body = opts && 'body' in opts ? opts.body : null;
    let encoding = opts && 'encoding' in opts ? opts.encoding : null;
    return http._withClient(response$.Response, dart.fn(client => client.post(url, {headers: headers, body: body, encoding: encoding}), T$.ClientToFutureOfResponse()));
  };
  http.put = function put(url, opts) {
    let headers = opts && 'headers' in opts ? opts.headers : null;
    let body = opts && 'body' in opts ? opts.body : null;
    let encoding = opts && 'encoding' in opts ? opts.encoding : null;
    return http._withClient(response$.Response, dart.fn(client => client.put(url, {headers: headers, body: body, encoding: encoding}), T$.ClientToFutureOfResponse()));
  };
  http.patch = function patch(url, opts) {
    let headers = opts && 'headers' in opts ? opts.headers : null;
    let body = opts && 'body' in opts ? opts.body : null;
    let encoding = opts && 'encoding' in opts ? opts.encoding : null;
    return http._withClient(response$.Response, dart.fn(client => client.patch(url, {headers: headers, body: body, encoding: encoding}), T$.ClientToFutureOfResponse()));
  };
  http.delete = function $delete(url, opts) {
    let headers = opts && 'headers' in opts ? opts.headers : null;
    let body = opts && 'body' in opts ? opts.body : null;
    let encoding = opts && 'encoding' in opts ? opts.encoding : null;
    return http._withClient(response$.Response, dart.fn(client => client.delete(url, {headers: headers, body: body, encoding: encoding}), T$.ClientToFutureOfResponse()));
  };
  http.read = function read(url, opts) {
    let headers = opts && 'headers' in opts ? opts.headers : null;
    return http._withClient(core.String, dart.fn(client => client.read(url, {headers: headers}), T$.ClientToFutureOfString()));
  };
  http.readBytes = function readBytes(url, opts) {
    let headers = opts && 'headers' in opts ? opts.headers : null;
    return http._withClient(typed_data.Uint8List, dart.fn(client => client.readBytes(url, {headers: headers}), T$.ClientToFutureOfUint8List()));
  };
  http._withClient = function _withClient(T, fn) {
    return async.async(T, function* _withClient() {
      let client = client$.Client.new();
      try {
        return yield fn(client);
      } finally {
        client.close();
      }
    });
  };
  metadata$.fbFullMetadataToFullMetadata = function fbFullMetadataToFullMetadata(metadata) {
    return new full_metadata.FullMetadata.new(new (T$.IdentityMapOfString$dynamic()).from(["bucket", metadata.bucket, "cacheControl", metadata.cacheControl, "contentDisposition", metadata.contentDisposition, "contentEncoding", metadata.contentEncoding, "contentLanguage", metadata.contentLanguage, "contentType", metadata.contentType, "customMetadata", metadata.customMetadata, "fullPath", metadata.fullPath, "generation", metadata.generation, "md5Hash", metadata.md5Hash, "metageneration", metadata.metageneration, "name", metadata.name, "size", metadata.size, "creationTimeMillis", dart.nullCheck(metadata.timeCreated).millisecondsSinceEpoch, "updatedTimeMillis", dart.nullCheck(metadata.updated).millisecondsSinceEpoch]));
  };
  metadata$.settableMetadataToFbSettableMetadata = function settableMetadataToFbSettableMetadata(metadata) {
    return storage.SettableMetadata.new({cacheControl: metadata.cacheControl, contentDisposition: metadata.contentDisposition, contentEncoding: metadata.contentEncoding, contentLanguage: metadata.contentLanguage, contentType: metadata.contentType, customMetadata: metadata.customMetadata});
  };
  metadata$.settableMetadataToFbUploadMetadata = function settableMetadataToFbUploadMetadata(metadata, opts) {
    let md5Hash = opts && 'md5Hash' in opts ? opts.md5Hash : null;
    return storage.UploadMetadata.new({cacheControl: metadata.cacheControl, contentDisposition: metadata.contentDisposition, contentEncoding: metadata.contentEncoding, contentLanguage: metadata.contentLanguage, contentType: metadata.contentType, customMetadata: metadata.customMetadata, md5Hash: md5Hash});
  };
  metadata$.putStringFormatToString = function putStringFormatToString(format) {
    return metadata$._putStringFormatToFbStringFormat[S$.$_get](format);
  };
  dart.defineLazy(metadata$, {
    /*metadata$._putStringFormatToFbStringFormat*/get _putStringFormatToFbStringFormat() {
      return new (T$.LinkedMapOfPutStringFormat$String()).from([put_string_format.PutStringFormat.base64, dart.global.firebase_storage.StringFormat.BASE64, put_string_format.PutStringFormat.base64Url, dart.global.firebase_storage.StringFormat.BASE64URL, put_string_format.PutStringFormat.dataUrl, dart.global.firebase_storage.StringFormat.DATA_URL, put_string_format.PutStringFormat.raw, dart.global.firebase_storage.StringFormat.RAW]);
    },
    set _putStringFormatToFbStringFormat(value) {}
  }, false);
  task_web.TaskWeb = class TaskWeb extends platform_interface_task.TaskPlatform {
    static ['_#new#tearOff'](reference, task) {
      return new task_web.TaskWeb.new(reference, task);
    }
    get snapshotEvents() {
      return errors.guard(T$.StreamOfTaskSnapshotPlatform(), dart.fn(() => {
        let group = new (T$.StreamGroupOfTaskSnapshotPlatform()).broadcast();
        let onStateChangedStream = this[S$._task].onStateChanged.map(platform_interface_task_snapshot.TaskSnapshotPlatform, dart.fn(snapshot => task.fbUploadTaskSnapshotToTaskSnapshot(this[S$._reference], snapshot), T$.UploadTaskSnapshotToTaskSnapshotWeb()));
        group.add(onStateChangedStream);
        group.add(this.onComplete.asStream());
        return group.stream;
      }, T$.VoidToStreamOfTaskSnapshotPlatform()));
    }
    get onComplete() {
      return errors.guard(T$.FutureOfTaskSnapshotPlatform(), dart.fn(() => async.async(task_snapshot_web.TaskSnapshotWeb, (function*() {
        return task.fbUploadTaskSnapshotToTaskSnapshot(this[S$._reference], yield this[S$._task].future);
      }).bind(this)), T$.VoidToFutureOfTaskSnapshotWeb()));
    }
    get snapshot() {
      return task.fbUploadTaskSnapshotToTaskSnapshot(this[S$._reference], this[S$._task].snapshot);
    }
    pause() {
      return async.async(core.bool, (function* pause() {
        if (this.snapshot.state === task_state.TaskState.paused) {
          return true;
        }
        let paused = this[S$._task].pause();
        return this.snapshotEvents.takeWhile(dart.fn(snapshot => snapshot.state !== task_state.TaskState.paused, T$.TaskSnapshotPlatformTobool())).last.then(core.bool, dart.fn(_ => paused, T$.TaskSnapshotPlatformTobool()));
      }).bind(this));
    }
    resume() {
      return async.async(core.bool, (function* resume() {
        return this[S$._task].resume();
      }).bind(this));
    }
    cancel() {
      return async.async(core.bool, (function* cancel() {
        if (this.snapshot.state === task_state.TaskState.canceled) {
          return true;
        }
        let canceled = this[S$._task].cancel();
        return this.snapshotEvents.drain(dart.dynamic).then(core.bool, dart.fn(_ => canceled, T$.dynamicTobool()), {onError: dart.fn(_ => canceled, T$.dynamicTobool())});
      }).bind(this));
    }
  };
  (task_web.TaskWeb.new = function(reference, task) {
    this[S$._reference] = reference;
    this[S$._task] = task;
    task_web.TaskWeb.__proto__.new.call(this);
    ;
  }).prototype = task_web.TaskWeb.prototype;
  dart.addTypeTests(task_web.TaskWeb);
  dart.addTypeCaches(task_web.TaskWeb);
  dart.setLibraryUri(task_web.TaskWeb, I[130]);
  dart.setFieldSignature(task_web.TaskWeb, () => ({
    __proto__: dart.getFields(task_web.TaskWeb.__proto__),
    [S$._reference]: dart.finalFieldType(platform_interface_reference.ReferencePlatform),
    [S$._task]: dart.finalFieldType(storage.UploadTask)
  }));
  list.listOptionsToFbListOptions = function listOptionsToFbListOptions(options) {
    if (options == null) {
      return null;
    }
    return storage.ListOptions.new({maxResults: options.maxResults, pageToken: options.pageToken});
  };
  list.fbListResultToListResultWeb = function fbListResultToListResultWeb(storage, result) {
    return new list_result_web.ListResultWeb.new(storage, {nextPageToken: result.nextPageToken, items: result.items[S$.$map](core.String, dart.fn(item => item.fullPath, T$.StorageReferenceToString()))[S$.$toList](), prefixes: result.prefixes[S$.$map](core.String, dart.fn(prefix => prefix.fullPath, T$.StorageReferenceToString()))[S$.$toList]()});
  };
  metadata_cache.SettableMetadataCache = class SettableMetadataCache extends core.Object {
    store(incoming, opts) {
      let t153, t156, t156$, t156$0, t156$1, t156$2;
      let overwrite = opts && 'overwrite' in opts ? opts.overwrite : false;
      if (overwrite) {
        return this[S$._cache$1] = (t153 = incoming, t153 == null ? new settable_metadata.SettableMetadata.new() : t153);
      }
      if (incoming == null) {
        return this[S$._cache$1];
      }
      let newMetadata = (() => {
        let t153 = new (T$.IdentityMapOfString$String()).new();
        let t154 = incoming.customMetadata;
        if (t154 != null) t153[S$.$addAll](t154);
        let t155 = this[S$._cache$1].customMetadata;
        if (t155 != null) t153[S$.$addAll](t155);
        return t153;
      })();
      return this[S$._cache$1] = new settable_metadata.SettableMetadata.new({cacheControl: (t156 = this[S$._cache$1].cacheControl, t156 == null ? incoming.cacheControl : t156), contentDisposition: (t156$ = this[S$._cache$1].contentDisposition, t156$ == null ? incoming.contentDisposition : t156$), contentEncoding: (t156$0 = this[S$._cache$1].contentEncoding, t156$0 == null ? incoming.contentEncoding : t156$0), contentLanguage: (t156$1 = this[S$._cache$1].contentLanguage, t156$1 == null ? incoming.contentLanguage : t156$1), contentType: (t156$2 = this[S$._cache$1].contentType, t156$2 == null ? incoming.contentType : t156$2), customMetadata: newMetadata[S$.$isEmpty] ? null : newMetadata});
    }
    static ['_#new#tearOff']() {
      return new metadata_cache.SettableMetadataCache.new();
    }
  };
  (metadata_cache.SettableMetadataCache.new = function() {
    this[S$._cache$1] = new settable_metadata.SettableMetadata.new();
    ;
  }).prototype = metadata_cache.SettableMetadataCache.prototype;
  dart.addTypeTests(metadata_cache.SettableMetadataCache);
  dart.addTypeCaches(metadata_cache.SettableMetadataCache);
  dart.setMethodSignature(metadata_cache.SettableMetadataCache, () => ({
    __proto__: dart.getMethods(metadata_cache.SettableMetadataCache.__proto__),
    store: dart.fnType(settable_metadata.SettableMetadata, [dart.nullable(settable_metadata.SettableMetadata)], {overwrite: core.bool}, {})
  }));
  dart.setLibraryUri(metadata_cache.SettableMetadataCache, I[131]);
  dart.setFieldSignature(metadata_cache.SettableMetadataCache, () => ({
    __proto__: dart.getFields(metadata_cache.SettableMetadataCache.__proto__),
    [S$._cache$1]: dart.fieldType(settable_metadata.SettableMetadata)
  }));
  method_channel_load_bundle_task.MethodChannelLoadBundleTask = class MethodChannelLoadBundleTask extends platform_interface_load_bundle_task.LoadBundleTaskPlatform {
    static ['_#new#tearOff'](opts) {
      let task = opts && 'task' in opts ? opts.task : null;
      let bundle = opts && 'bundle' in opts ? opts.bundle : null;
      let firestore = opts && 'firestore' in opts ? opts.firestore : null;
      return new method_channel_load_bundle_task.MethodChannelLoadBundleTask.new({task: task, bundle: bundle, firestore: firestore});
    }
    get stream() {
      let t157;
      t157 = this[S$.__MethodChannelLoadBundleTask_stream];
      return t157 == null ? dart.throw(new _internal.LateError.fieldNI("stream")) : t157;
    }
    set stream(stream$35param) {
      if (this[S$.__MethodChannelLoadBundleTask_stream] == null)
        this[S$.__MethodChannelLoadBundleTask_stream] = stream$35param;
      else
        dart.throw(new _internal.LateError.fieldAI("stream"));
    }
  };
  (method_channel_load_bundle_task.MethodChannelLoadBundleTask.new = function(opts) {
    let task = opts && 'task' in opts ? opts.task : null;
    let bundle = opts && 'bundle' in opts ? opts.bundle : null;
    let firestore = opts && 'firestore' in opts ? opts.firestore : null;
    this[S$.__MethodChannelLoadBundleTask_stream] = null;
    method_channel_load_bundle_task.MethodChannelLoadBundleTask.__proto__.new.call(this);
    function mapNativeStream() {
      return new (T$._AsyncStarImplOfLoadBundleTaskSnapshotPlatform()).new(function* mapNativeStream(stream) {
        let t157, t157$;
        let observerId = (yield task);
        let nativePlatformStream = method_channel_firestore.MethodChannelFirebaseFirestore.loadBundleChannel(dart.nullCheck(observerId)).receiveBroadcastStream(new (T$.IdentityMapOfString$Object()).from(["bundle", bundle, "firestore", firestore]));
        try {
          let iter = async.StreamIterator.new(nativePlatformStream);
          try {
            while (yield iter.moveNext()) {
              let snapshot = iter.current;
              {
                let taskState = load_bundle_task_state$.convertToTaskState(core.String.as(dart.dsend(snapshot, '_get', ["taskState"])));
                if (stream.add(new platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform.new(taskState, T$.LinkedHashMapOfString$dynamic().from(core.Map.as(snapshot))))) return;
                yield;
                if (taskState === load_bundle_task_state.LoadBundleTaskState.success) {
                  return;
                }
              }
            }
          } finally {
            yield iter.cancel();
          }
        } catch (e) {
          let exception = dart.getThrown(e);
          if (core.Object.is(exception)) {
            if (!core.Exception.is(exception) || !message_codec.PlatformException.is(exception)) {
              dart.rethrow(e);
            }
            let details = exception.details != null ? T$.LinkedHashMapOfString$String().from(core.Map.as(exception.details)) : null;
            dart.throw(new firebase_core_platform_interface.FirebaseException.new({plugin: "cloud_firestore", code: "load-bundle-error", message: (t157$ = (t157 = details, t157 == null ? null : t157[S$.$_get]("message")), t157$ == null ? "" : t157$)}));
          } else
            throw e;
        }
      }).stream;
    }
    dart.fn(mapNativeStream, T$.VoidToStreamOfLoadBundleTaskSnapshotPlatform());
    this.stream = mapNativeStream().asBroadcastStream({onListen: dart.fn(sub => sub.resume(), T$.StreamSubscriptionOfLoadBundleTaskSnapshotPlatformTovoid()), onCancel: dart.fn(sub => sub.pause(), T$.StreamSubscriptionOfLoadBundleTaskSnapshotPlatformTovoid())});
  }).prototype = method_channel_load_bundle_task.MethodChannelLoadBundleTask.prototype;
  dart.addTypeTests(method_channel_load_bundle_task.MethodChannelLoadBundleTask);
  dart.addTypeCaches(method_channel_load_bundle_task.MethodChannelLoadBundleTask);
  dart.setGetterSignature(method_channel_load_bundle_task.MethodChannelLoadBundleTask, () => ({
    __proto__: dart.getGetters(method_channel_load_bundle_task.MethodChannelLoadBundleTask.__proto__),
    stream: async.Stream$(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform)
  }));
  dart.setSetterSignature(method_channel_load_bundle_task.MethodChannelLoadBundleTask, () => ({
    __proto__: dart.getSetters(method_channel_load_bundle_task.MethodChannelLoadBundleTask.__proto__),
    stream: async.Stream$(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform)
  }));
  dart.setLibraryUri(method_channel_load_bundle_task.MethodChannelLoadBundleTask, I[132]);
  dart.setFieldSignature(method_channel_load_bundle_task.MethodChannelLoadBundleTask, () => ({
    __proto__: dart.getFields(method_channel_load_bundle_task.MethodChannelLoadBundleTask.__proto__),
    [S$.__MethodChannelLoadBundleTask_stream]: dart.fieldType(dart.nullable(async.Stream$(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform)))
  }));
  method_channel_query_snapshot.MethodChannelQuerySnapshot = class MethodChannelQuerySnapshot extends platform_interface_query_snapshot.QuerySnapshotPlatform {
    static ['_#new#tearOff'](firestore, data) {
      return new method_channel_query_snapshot.MethodChannelQuerySnapshot.new(firestore, data);
    }
  };
  (method_channel_query_snapshot.MethodChannelQuerySnapshot.new = function(firestore, data) {
    method_channel_query_snapshot.MethodChannelQuerySnapshot.__proto__.new.call(this, T$.ListOfDocumentSnapshotPlatform().generate(core.int.as(dart.dload(data[S$.$_get]("documents"), 'length')), dart.fn(index => new platform_interface_document_snapshot.DocumentSnapshotPlatform.new(firestore, core.String.as(dart.dsend(data[S$.$_get]("paths"), '_get', [index])), new (T$.IdentityMapOfString$dynamic()).from(["data", T$.LinkedHashMapOfString$dynamic().from(core.Map.as(dart.dsend(data[S$.$_get]("documents"), '_get', [index]))), "metadata", new (T$.IdentityMapOfString$dynamic()).from(["isFromCache", dart.dsend(dart.dsend(data[S$.$_get]("metadatas"), '_get', [index]), '_get', ["isFromCache"]), "hasPendingWrites", dart.dsend(dart.dsend(data[S$.$_get]("metadatas"), '_get', [index]), '_get', ["hasPendingWrites"])])])), T$.intToDocumentSnapshotPlatform())), T$.ListOfDocumentChangePlatform().generate(core.int.as(dart.dload(data[S$.$_get]("documentChanges"), 'length')), dart.fn(index => new method_channel_document_change.MethodChannelDocumentChange.new(firestore, T$.LinkedHashMapOfString$dynamic().from(core.Map.as(dart.dsend(data[S$.$_get]("documentChanges"), '_get', [index])))), T$.intToMethodChannelDocumentChange())), new snapshot_metadata.SnapshotMetadataPlatform.new(core.bool.as(dart.dsend(data[S$.$_get]("metadata"), '_get', ["hasPendingWrites"])), core.bool.as(dart.dsend(data[S$.$_get]("metadata"), '_get', ["isFromCache"]))));
    ;
  }).prototype = method_channel_query_snapshot.MethodChannelQuerySnapshot.prototype;
  dart.addTypeTests(method_channel_query_snapshot.MethodChannelQuerySnapshot);
  dart.addTypeCaches(method_channel_query_snapshot.MethodChannelQuerySnapshot);
  dart.setLibraryUri(method_channel_query_snapshot.MethodChannelQuerySnapshot, I[133]);
  source$.getSourceString = function getSourceString(source) {
    switch (source) {
      case C[34] || CT.C34:
        {
          return "server";
        }
      case C[33] || CT.C33:
        {
          return "cache";
        }
      default:
        {
          return "default";
        }
    }
  };
  method_channel_query.MethodChannelQuery = class MethodChannelQuery extends platform_interface_query.QueryPlatform {
    get isCollectionGroupQuery() {
      return this[S$.isCollectionGroupQuery$1];
    }
    set isCollectionGroupQuery(value) {
      super.isCollectionGroupQuery = value;
    }
    static ['_#new#tearOff'](_firestore, path, opts) {
      let parameters = opts && 'parameters' in opts ? opts.parameters : null;
      let isCollectionGroupQuery = opts && 'isCollectionGroupQuery' in opts ? opts.isCollectionGroupQuery : false;
      return new method_channel_query.MethodChannelQuery.new(_firestore, path, {parameters: parameters, isCollectionGroupQuery: isCollectionGroupQuery});
    }
    get path() {
      return this[S$._pointer$7].path;
    }
    [S$._copyWithParameters$1](parameters) {
      let t157;
      return new method_channel_query.MethodChannelQuery.new(this.firestore, this[S$._pointer$7].path, {isCollectionGroupQuery: this.isCollectionGroupQuery, parameters: T$.MapOfString$dynamic().unmodifiable((t157 = T$.LinkedHashMapOfString$dynamic().from(this.parameters), (() => {
          t157[S$.$addAll](parameters);
          return t157;
        })()))});
    }
    endAtDocument(orders, values) {
      return this[S$._copyWithParameters$1](new (T$.IdentityMapOfString$dynamic()).from(["orderBy", orders, "endAt", values, "endBefore", null]));
    }
    endAt(fields) {
      return this[S$._copyWithParameters$1](new (T$.IdentityMapOfString$dynamic()).from(["endAt", fields, "endBefore", null]));
    }
    endBeforeDocument(orders, values) {
      return this[S$._copyWithParameters$1](new (T$.IdentityMapOfString$dynamic()).from(["orderBy", orders, "endAt", null, "endBefore", values]));
    }
    endBefore(fields) {
      return this[S$._copyWithParameters$1](new (T$.IdentityMapOfString$dynamic()).from(["endAt", null, "endBefore", fields]));
    }
    get(options = C[21] || CT.C21) {
      return async.async(platform_interface_query_snapshot.QuerySnapshotPlatform, (function* get() {
        try {
          let data = (yield method_channel_firestore.MethodChannelFirebaseFirestore.channel.invokeMapMethod(core.String, dart.dynamic, "Query#get", new (T$.IdentityMapOfString$dynamic()).from(["query", this, "firestore", this.firestore, "source", source$.getSourceString(options.source)])));
          return new method_channel_query_snapshot.MethodChannelQuerySnapshot.new(this.firestore, dart.nullCheck(data));
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    limit(limit) {
      return this[S$._copyWithParameters$1](new (T$.IdentityMapOfString$dynamic()).from(["limit", limit, "limitToLast", null]));
    }
    limitToLast(limit) {
      return this[S$._copyWithParameters$1](new (T$.IdentityMapOfString$dynamic()).from(["limit", null, "limitToLast", limit]));
    }
    snapshots(opts) {
      let includeMetadataChanges = opts && 'includeMetadataChanges' in opts ? opts.includeMetadataChanges : false;
      let controller = null;
      function controller$35get() {
        let t159;
        t159 = controller;
        return t159 == null ? dart.throw(new _internal.LateError.localNI("controller")) : t159;
      }
      function controller$35set(controller$35param) {
        return controller = controller$35param;
      }
      let snapshotStreamSubscription = null;
      controller$35set(T$.StreamControllerOfQuerySnapshotPlatform().broadcast({onListen: dart.fn(() => async.async(dart.void, (function*() {
          let observerId = (yield method_channel_firestore.MethodChannelFirebaseFirestore.channel.invokeMethod(core.String, "Query#snapshots"));
          snapshotStreamSubscription = exception$['EventChannelExtension|receiveGuardedBroadcastStream'](method_channel_firestore.MethodChannelFirebaseFirestore.querySnapshotChannel(dart.nullCheck(observerId)), {arguments: new (T$.IdentityMapOfString$dynamic()).from(["query", this, "includeMetadataChanges", includeMetadataChanges]), onError: C[100] || CT.C100}).listen(dart.fn(snapshot => {
            controller$35get().add(new method_channel_query_snapshot.MethodChannelQuerySnapshot.new(this.firestore, core.Map.as(snapshot)));
          }, T$.dynamicTovoid()), {onError: dart.bind(controller$35get(), 'addError')});
        }).bind(this)), T$.VoidToFutureOfvoid()), onCancel: dart.fn(() => {
          let t161;
          t161 = snapshotStreamSubscription;
          t161 == null ? null : t161.cancel();
        }, T$.VoidTovoid())}));
      return controller$35get().stream;
    }
    orderBy(orders) {
      return this[S$._copyWithParameters$1](new (T$.IdentityMapOfString$dynamic()).from(["orderBy", orders]));
    }
    startAfterDocument(orders, values) {
      return this[S$._copyWithParameters$1](new (T$.IdentityMapOfString$dynamic()).from(["orderBy", orders, "startAt", null, "startAfter", values]));
    }
    startAfter(fields) {
      return this[S$._copyWithParameters$1](new (T$.IdentityMapOfString$dynamic()).from(["startAt", null, "startAfter", fields]));
    }
    startAtDocument(orders, values) {
      return this[S$._copyWithParameters$1](new (T$.IdentityMapOfString$dynamic()).from(["orderBy", orders, "startAt", values, "startAfter", null]));
    }
    startAt(fields) {
      return this[S$._copyWithParameters$1](new (T$.IdentityMapOfString$dynamic()).from(["startAt", fields, "startAfter", null]));
    }
    where(conditions) {
      return this[S$._copyWithParameters$1](new (T$.IdentityMapOfString$dynamic()).from(["where", conditions]));
    }
    _equals(other) {
      if (other == null) return false;
      return this[S$.$runtimeType]._equals(other[S$.$runtimeType]) && method_channel_query.MethodChannelQuery.is(other) && other.firestore._equals(this.firestore) && other[S$._pointer$7]._equals(this[S$._pointer$7]) && other.isCollectionGroupQuery === this.isCollectionGroupQuery && (C[36] || CT.C36).equals(other.parameters, this.parameters);
    }
    get hashCode() {
      return core.Object.hash(this[S$.$runtimeType], this.firestore, this[S$._pointer$7], this.isCollectionGroupQuery, (C[36] || CT.C36).hash(this.parameters));
    }
  };
  (method_channel_query.MethodChannelQuery.new = function(_firestore, path, opts) {
    let parameters = opts && 'parameters' in opts ? opts.parameters : null;
    let isCollectionGroupQuery = opts && 'isCollectionGroupQuery' in opts ? opts.isCollectionGroupQuery : false;
    this[S$.isCollectionGroupQuery$1] = isCollectionGroupQuery;
    this[S$._pointer$7] = new pointer.Pointer.new(path);
    method_channel_query.MethodChannelQuery.__proto__.new.call(this, _firestore, parameters);
    ;
  }).prototype = method_channel_query.MethodChannelQuery.prototype;
  dart.addTypeTests(method_channel_query.MethodChannelQuery);
  dart.addTypeCaches(method_channel_query.MethodChannelQuery);
  dart.setMethodSignature(method_channel_query.MethodChannelQuery, () => ({
    __proto__: dart.getMethods(method_channel_query.MethodChannelQuery.__proto__),
    [S$._copyWithParameters$1]: dart.fnType(method_channel_query.MethodChannelQuery, [core.Map$(core.String, dart.dynamic)])
  }));
  dart.setGetterSignature(method_channel_query.MethodChannelQuery, () => ({
    __proto__: dart.getGetters(method_channel_query.MethodChannelQuery.__proto__),
    path: core.String
  }));
  dart.setLibraryUri(method_channel_query.MethodChannelQuery, I[134]);
  dart.setFieldSignature(method_channel_query.MethodChannelQuery, () => ({
    __proto__: dart.getFields(method_channel_query.MethodChannelQuery.__proto__),
    isCollectionGroupQuery: dart.finalFieldType(core.bool),
    [S$._pointer$7]: dart.finalFieldType(pointer.Pointer)
  }));
  dart.defineExtensionMethods(method_channel_query.MethodChannelQuery, ['_equals']);
  dart.defineExtensionAccessors(method_channel_query.MethodChannelQuery, ['hashCode']);
  method_channel_collection_reference.MethodChannelCollectionReference = class MethodChannelCollectionReference extends method_channel_query.MethodChannelQuery {
    get [S$._pointer$6]() {
      return this[S$._pointer$5];
    }
    set [S$._pointer$6](value) {
      super[S$._pointer$6] = value;
    }
    static ['_#new#tearOff'](firestore, path) {
      return new method_channel_collection_reference.MethodChannelCollectionReference.new(firestore, path);
    }
    get id() {
      return this[S$._pointer$6].id;
    }
    get parent() {
      let parentPath = this[S$._pointer$6].parentPath();
      return parentPath == null ? null : new method_channel_document_reference.MethodChannelDocumentReference.new(this.firestore, parentPath);
    }
    get path() {
      return this[S$._pointer$6].path;
    }
    doc(path = null) {
      let documentPath = null;
      if (path != null) {
        documentPath = this[S$._pointer$6].documentPath(path);
      } else {
        let autoId = auto_id_generator.AutoIdGenerator.autoId();
        documentPath = this[S$._pointer$6].documentPath(autoId);
      }
      return new method_channel_document_reference.MethodChannelDocumentReference.new(this.firestore, documentPath);
    }
    get [S$._pointer$1]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[121] || CT.C121)));
    }
  };
  (method_channel_collection_reference.MethodChannelCollectionReference.new = function(firestore, path) {
    this[S$._pointer$5] = new pointer.Pointer.new(path);
    method_channel_collection_reference.MethodChannelCollectionReference.__proto__.new.call(this, firestore, path);
    ;
  }).prototype = method_channel_collection_reference.MethodChannelCollectionReference.prototype;
  dart.addTypeTests(method_channel_collection_reference.MethodChannelCollectionReference);
  dart.addTypeCaches(method_channel_collection_reference.MethodChannelCollectionReference);
  method_channel_collection_reference.MethodChannelCollectionReference[dart.implements] = () => [platform_interface_collection_reference.CollectionReferencePlatform];
  dart.setMethodSignature(method_channel_collection_reference.MethodChannelCollectionReference, () => ({
    __proto__: dart.getMethods(method_channel_collection_reference.MethodChannelCollectionReference.__proto__),
    doc: dart.fnType(platform_interface_document_reference.DocumentReferencePlatform, [], [dart.nullable(core.String)])
  }));
  dart.setGetterSignature(method_channel_collection_reference.MethodChannelCollectionReference, () => ({
    __proto__: dart.getGetters(method_channel_collection_reference.MethodChannelCollectionReference.__proto__),
    id: core.String,
    parent: dart.nullable(platform_interface_document_reference.DocumentReferencePlatform),
    [S$._pointer$1]: pointer.Pointer
  }));
  dart.setLibraryUri(method_channel_collection_reference.MethodChannelCollectionReference, I[135]);
  dart.setFieldSignature(method_channel_collection_reference.MethodChannelCollectionReference, () => ({
    __proto__: dart.getFields(method_channel_collection_reference.MethodChannelCollectionReference.__proto__),
    [S$._pointer$6]: dart.finalFieldType(pointer.Pointer)
  }));
  method_channel_document_reference.MethodChannelDocumentReference = class MethodChannelDocumentReference extends platform_interface_document_reference.DocumentReferencePlatform {
    get [S$._pointer$8]() {
      let t161;
      t161 = this[S$.__MethodChannelDocumentReference__pointer];
      return t161 == null ? dart.throw(new _internal.LateError.fieldNI("_pointer")) : t161;
    }
    set [S$._pointer$8](_pointer$35param) {
      this[S$.__MethodChannelDocumentReference__pointer] = _pointer$35param;
    }
    static ['_#new#tearOff'](firestore, path) {
      return new method_channel_document_reference.MethodChannelDocumentReference.new(firestore, path);
    }
    set(data, options = null) {
      return async.async(dart.void, (function* set() {
        let t161, t161$;
        try {
          yield method_channel_firestore.MethodChannelFirebaseFirestore.channel.invokeMethod(dart.void, "DocumentReference#set", new (T$.IdentityMapOfString$dynamic()).from(["firestore", this.firestore, "reference", this, "data", data, "options", new (T$.IdentityMapOfString$dynamic()).from(["merge", (t161 = options, t161 == null ? null : t161.merge), "mergeFields", (t161$ = options, t161$ == null ? null : t161$.mergeFields)])]));
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    update(data) {
      return async.async(dart.void, (function* update() {
        try {
          yield method_channel_firestore.MethodChannelFirebaseFirestore.channel.invokeMethod(dart.void, "DocumentReference#update", new (T$.IdentityMapOfString$dynamic()).from(["firestore", this.firestore, "reference", this, "data", data]));
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    get(options = C[21] || CT.C21) {
      return async.async(platform_interface_document_snapshot.DocumentSnapshotPlatform, (function* get() {
        try {
          let data = (yield method_channel_firestore.MethodChannelFirebaseFirestore.channel.invokeMapMethod(core.String, dart.dynamic, "DocumentReference#get", new (T$.IdentityMapOfString$dynamic()).from(["firestore", this.firestore, "reference", this, "source", source$.getSourceString(options.source)])));
          return new platform_interface_document_snapshot.DocumentSnapshotPlatform.new(this.firestore, this[S$._pointer$8].path, dart.nullCheck(data));
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    delete() {
      return async.async(dart.void, (function* $delete() {
        try {
          yield method_channel_firestore.MethodChannelFirebaseFirestore.channel.invokeMethod(dart.void, "DocumentReference#delete", new (T$.IdentityMapOfString$dynamic()).from(["firestore", this.firestore, "reference", this]));
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    snapshots(opts) {
      let includeMetadataChanges = opts && 'includeMetadataChanges' in opts ? opts.includeMetadataChanges : false;
      let controller = null;
      function controller$35get() {
        let t166;
        t166 = controller;
        return t166 == null ? dart.throw(new _internal.LateError.localNI("controller")) : t166;
      }
      function controller$35set(controller$35param) {
        return controller = controller$35param;
      }
      let snapshotStreamSubscription = null;
      controller$35set(T$.StreamControllerOfDocumentSnapshotPlatform().broadcast({onListen: dart.fn(() => async.async(dart.void, (function*() {
          let observerId = (yield method_channel_firestore.MethodChannelFirebaseFirestore.channel.invokeMethod(core.String, "DocumentReference#snapshots"));
          snapshotStreamSubscription = exception$['EventChannelExtension|receiveGuardedBroadcastStream'](method_channel_firestore.MethodChannelFirebaseFirestore.documentSnapshotChannel(dart.nullCheck(observerId)), {arguments: new (T$.IdentityMapOfString$dynamic()).from(["reference", this, "includeMetadataChanges", includeMetadataChanges]), onError: C[100] || CT.C100}).listen(dart.fn(snapshot => {
            controller$35get().add(new platform_interface_document_snapshot.DocumentSnapshotPlatform.new(this.firestore, core.String.as(dart.dsend(snapshot, '_get', ["path"])), new (T$.IdentityMapOfString$dynamic()).from(["data", dart.dsend(snapshot, '_get', ["data"]), "metadata", dart.dsend(snapshot, '_get', ["metadata"])])));
          }, T$.dynamicTovoid()), {onError: dart.bind(controller$35get(), 'addError')});
        }).bind(this)), T$.VoidToFutureOfvoid()), onCancel: dart.fn(() => {
          let t168;
          t168 = snapshotStreamSubscription;
          t168 == null ? null : t168.cancel();
        }, T$.VoidTovoid())}));
      return controller$35get().stream;
    }
  };
  (method_channel_document_reference.MethodChannelDocumentReference.new = function(firestore, path) {
    this[S$.__MethodChannelDocumentReference__pointer] = null;
    method_channel_document_reference.MethodChannelDocumentReference.__proto__.new.call(this, firestore, path);
    this[S$._pointer$8] = new pointer.Pointer.new(path);
  }).prototype = method_channel_document_reference.MethodChannelDocumentReference.prototype;
  dart.addTypeTests(method_channel_document_reference.MethodChannelDocumentReference);
  dart.addTypeCaches(method_channel_document_reference.MethodChannelDocumentReference);
  dart.setGetterSignature(method_channel_document_reference.MethodChannelDocumentReference, () => ({
    __proto__: dart.getGetters(method_channel_document_reference.MethodChannelDocumentReference.__proto__),
    [S$._pointer$8]: pointer.Pointer
  }));
  dart.setSetterSignature(method_channel_document_reference.MethodChannelDocumentReference, () => ({
    __proto__: dart.getSetters(method_channel_document_reference.MethodChannelDocumentReference.__proto__),
    [S$._pointer$8]: pointer.Pointer
  }));
  dart.setLibraryUri(method_channel_document_reference.MethodChannelDocumentReference, I[136]);
  dart.setFieldSignature(method_channel_document_reference.MethodChannelDocumentReference, () => ({
    __proto__: dart.getFields(method_channel_document_reference.MethodChannelDocumentReference.__proto__),
    [S$.__MethodChannelDocumentReference__pointer]: dart.fieldType(dart.nullable(pointer.Pointer))
  }));
  method_channel_transaction.MethodChannelTransaction = class MethodChannelTransaction extends platform_interface_transaction.TransactionPlatform {
    get appName() {
      return this[S$.appName];
    }
    set appName(value) {
      super.appName = value;
    }
    get [S$._transactionId]() {
      let t168;
      t168 = this[S$.__MethodChannelTransaction__transactionId];
      return t168 == null ? dart.throw(new _internal.LateError.fieldNI("_transactionId")) : t168;
    }
    set [S$._transactionId](_transactionId$35param) {
      this[S$.__MethodChannelTransaction__transactionId] = _transactionId$35param;
    }
    get [S$._firestore$3]() {
      let t168;
      t168 = this[S$.__MethodChannelTransaction__firestore];
      return t168 == null ? dart.throw(new _internal.LateError.fieldNI("_firestore")) : t168;
    }
    set [S$._firestore$3](_firestore$35param) {
      this[S$.__MethodChannelTransaction__firestore] = _firestore$35param;
    }
    static ['_#new#tearOff'](transactionId, appName) {
      return new method_channel_transaction.MethodChannelTransaction.new(transactionId, appName);
    }
    get commands() {
      return this[S$._commands];
    }
    get(documentPath) {
      return async.async(platform_interface_document_snapshot.DocumentSnapshotPlatform, (function* get() {
        if (!this[S$._commands][S$.$isEmpty]) dart.assertFailed("Transactions require all reads to be executed before all writes.", I[137], 43, 12, "_commands.isEmpty");
        let result = (yield method_channel_firestore.MethodChannelFirebaseFirestore.channel.invokeMapMethod(core.String, dart.dynamic, "Transaction#get", new (T$.IdentityMapOfString$dynamic()).from(["firestore", this[S$._firestore$3], "transactionId", this[S$._transactionId], "reference", this[S$._firestore$3].doc(documentPath)])));
        return new platform_interface_document_snapshot.DocumentSnapshotPlatform.new(this[S$._firestore$3], documentPath, T$.LinkedHashMapOfString$dynamic().from(dart.nullCheck(result)));
      }).bind(this));
    }
    delete(documentPath) {
      this[S$._commands][S$.$add](new (T$.IdentityMapOfString$String()).from(["type", "DELETE", "path", documentPath]));
      return this;
    }
    update(documentPath, data) {
      this[S$._commands][S$.$add](new (T$.IdentityMapOfString$dynamic()).from(["type", "UPDATE", "path", documentPath, "data", data]));
      return this;
    }
    set(documentPath, data, options = null) {
      let t168, t168$;
      this[S$._commands][S$.$add](new (T$.IdentityMapOfString$dynamic()).from(["type", "SET", "path", documentPath, "data", data, "options", new (T$.IdentityMapOfString$ObjectN()).from(["merge", (t168 = options, t168 == null ? null : t168.merge), "mergeFields", (t168$ = options, t168$ == null ? null : t168$.mergeFields)])]));
      return this;
    }
  };
  (method_channel_transaction.MethodChannelTransaction.new = function(transactionId, appName) {
    this[S$.__MethodChannelTransaction__transactionId] = null;
    this[S$.__MethodChannelTransaction__firestore] = null;
    this[S$._commands] = T$.JSArrayOfMapOfString$dynamic().of([]);
    this[S$.appName] = appName;
    this[S$.__MethodChannelTransaction__transactionId] = transactionId;
    method_channel_transaction.MethodChannelTransaction.__proto__.new.call(this);
    this[S$._firestore$3] = platform_interface_firestore.FirebaseFirestorePlatform.instanceFor({app: firebase_core.Firebase.app(this.appName)});
  }).prototype = method_channel_transaction.MethodChannelTransaction.prototype;
  dart.addTypeTests(method_channel_transaction.MethodChannelTransaction);
  dart.addTypeCaches(method_channel_transaction.MethodChannelTransaction);
  dart.setMethodSignature(method_channel_transaction.MethodChannelTransaction, () => ({
    __proto__: dart.getMethods(method_channel_transaction.MethodChannelTransaction.__proto__),
    delete: dart.fnType(method_channel_transaction.MethodChannelTransaction, [core.String]),
    update: dart.fnType(method_channel_transaction.MethodChannelTransaction, [core.String, core.Map$(core.String, dart.dynamic)]),
    set: dart.fnType(method_channel_transaction.MethodChannelTransaction, [core.String, core.Map$(core.String, dart.dynamic)], [dart.nullable(set_options.SetOptions)])
  }));
  dart.setGetterSignature(method_channel_transaction.MethodChannelTransaction, () => ({
    __proto__: dart.getGetters(method_channel_transaction.MethodChannelTransaction.__proto__),
    [S$._transactionId]: core.String,
    [S$._firestore$3]: platform_interface_firestore.FirebaseFirestorePlatform
  }));
  dart.setSetterSignature(method_channel_transaction.MethodChannelTransaction, () => ({
    __proto__: dart.getSetters(method_channel_transaction.MethodChannelTransaction.__proto__),
    [S$._transactionId]: core.String,
    [S$._firestore$3]: platform_interface_firestore.FirebaseFirestorePlatform
  }));
  dart.setLibraryUri(method_channel_transaction.MethodChannelTransaction, I[138]);
  dart.setFieldSignature(method_channel_transaction.MethodChannelTransaction, () => ({
    __proto__: dart.getFields(method_channel_transaction.MethodChannelTransaction.__proto__),
    appName: dart.finalFieldType(core.String),
    [S$.__MethodChannelTransaction__transactionId]: dart.fieldType(dart.nullable(core.String)),
    [S$.__MethodChannelTransaction__firestore]: dart.fieldType(dart.nullable(platform_interface_firestore.FirebaseFirestorePlatform)),
    [S$._commands]: dart.fieldType(core.List$(core.Map$(core.String, dart.dynamic)))
  }));
  method_channel_write_batch.MethodChannelWriteBatch = class MethodChannelWriteBatch extends platform_interface_write_batch.WriteBatchPlatform {
    static ['_#new#tearOff'](_firestore) {
      return new method_channel_write_batch.MethodChannelWriteBatch.new(_firestore);
    }
    commit() {
      return async.async(dart.void, (function* commit() {
        this[S$._assertNotCommitted]();
        this[S$._committed] = true;
        if (this[S$._writes][S$.$isEmpty]) {
          return;
        }
        try {
          yield method_channel_firestore.MethodChannelFirebaseFirestore.channel.invokeMethod(dart.void, "WriteBatch#commit", new (T$.IdentityMapOfString$dynamic()).from(["firestore", this[S$._firestore$4], "writes", this[S$._writes]]));
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    delete(documentPath) {
      this[S$._assertNotCommitted]();
      this[S$._writes][S$.$add](new (T$.IdentityMapOfString$dynamic()).from(["path", documentPath, "type", "DELETE"]));
    }
    set(documentPath, data, options = null) {
      let t169, t169$;
      this[S$._assertNotCommitted]();
      this[S$._writes][S$.$add](new (T$.IdentityMapOfString$dynamic()).from(["path", documentPath, "type", "SET", "data", data, "options", new (T$.IdentityMapOfString$dynamic()).from(["merge", (t169 = options, t169 == null ? null : t169.merge), "mergeFields", (t169$ = options, t169$ == null ? null : t169$.mergeFields)])]));
    }
    update(documentPath, data) {
      this[S$._assertNotCommitted]();
      this[S$._writes][S$.$add](new (T$.IdentityMapOfString$dynamic()).from(["path", documentPath, "type", "UPDATE", "data", data]));
    }
    [S$._assertNotCommitted]() {
      if (this[S$._committed]) {
        dart.throw(new core.StateError.new("This batch has already been committed and can no longer be changed."));
      }
    }
  };
  (method_channel_write_batch.MethodChannelWriteBatch.new = function(_firestore) {
    this[S$._writes] = T$.JSArrayOfMapOfString$dynamic().of([]);
    this[S$._committed] = false;
    this[S$._firestore$4] = _firestore;
    method_channel_write_batch.MethodChannelWriteBatch.__proto__.new.call(this);
    ;
  }).prototype = method_channel_write_batch.MethodChannelWriteBatch.prototype;
  dart.addTypeTests(method_channel_write_batch.MethodChannelWriteBatch);
  dart.addTypeCaches(method_channel_write_batch.MethodChannelWriteBatch);
  dart.setMethodSignature(method_channel_write_batch.MethodChannelWriteBatch, () => ({
    __proto__: dart.getMethods(method_channel_write_batch.MethodChannelWriteBatch.__proto__),
    [S$._assertNotCommitted]: dart.fnType(dart.void, [])
  }));
  dart.setLibraryUri(method_channel_write_batch.MethodChannelWriteBatch, I[139]);
  dart.setFieldSignature(method_channel_write_batch.MethodChannelWriteBatch, () => ({
    __proto__: dart.getFields(method_channel_write_batch.MethodChannelWriteBatch.__proto__),
    [S$._firestore$4]: dart.finalFieldType(platform_interface_firestore.FirebaseFirestorePlatform),
    [S$._writes]: dart.fieldType(core.List$(core.Map$(core.String, dart.dynamic))),
    [S$._committed]: dart.fieldType(core.bool)
  }));
  exception.convertPlatformException = function convertPlatformException(exception, stackTrace) {
    exception$.convertPlatformExceptionToFirebaseException(exception, stackTrace, {plugin: "cloud_firestore"});
  };
  firestore_message_codec.FirestoreMessageCodec = class FirestoreMessageCodec extends message_codecs.StandardMessageCodec {
    static ['_#new#tearOff']() {
      return new firestore_message_codec.FirestoreMessageCodec.new();
    }
    writeValue(buffer, value) {
      if (core.DateTime.is(value)) {
        buffer.putUint8(128);
        buffer.putInt64(value.millisecondsSinceEpoch);
      } else if (timestamp.Timestamp.is(value)) {
        buffer.putUint8(136);
        buffer.putInt64(value.seconds);
        buffer.putInt32(value.nanoseconds);
      } else if (geo_point.GeoPoint.is(value)) {
        buffer.putUint8(129);
        buffer.putFloat64(value.latitude);
        buffer.putFloat64(value.longitude);
      } else if (platform_interface_document_reference.DocumentReferencePlatform.is(value)) {
        buffer.putUint8(130);
        this.writeValue(buffer, value.firestore);
        this.writeValue(buffer, value.path);
      } else if (blob.Blob.is(value)) {
        buffer.putUint8(131);
        this.writeSize(buffer, value.bytes[S$.$length]);
        buffer.putUint8List(value.bytes);
      } else if (platform_interface_field_value.FieldValuePlatform.is(value)) {
        let delegate = method_channel_field_value.MethodChannelFieldValue.as(platform_interface_field_value.FieldValuePlatform.getDelegate(value));
        let code = dart.nullCheck(firestore_message_codec.FirestoreMessageCodec._kFieldValueCodes[S$.$_get](delegate.type));
        buffer.putUint8(code);
        if (delegate.value != null) this.writeValue(buffer, delegate.value);
      } else if (field_path_type.FieldPathType.is(value)) {
        let code = dart.nullCheck(firestore_message_codec.FirestoreMessageCodec._kFieldPathCodes[S$.$_get](value));
        buffer.putUint8(code);
      } else if (field_path.FieldPath.is(value)) {
        buffer.putUint8(140);
        this.writeSize(buffer, value.components[S$.$length]);
        for (let item of value.components) {
          this.writeValue(buffer, item);
        }
      } else if (method_channel_firestore.MethodChannelFirebaseFirestore.is(value)) {
        buffer.putUint8(144);
        this.writeValue(buffer, value.app.name);
        this.writeValue(buffer, value.settings);
      } else if (method_channel_query.MethodChannelQuery.is(value)) {
        buffer.putUint8(145);
        this.writeValue(buffer, new (T$.IdentityMapOfString$dynamic()).from(["firestore", value.firestore, "path", value.path, "isCollectionGroup", value.isCollectionGroupQuery, "parameters", value.parameters]));
      } else if (settings.Settings.is(value)) {
        buffer.putUint8(146);
        this.writeValue(buffer, value.asMap);
      } else if (dart.equals(value, 0 / 0)) {
        buffer.putUint8(141);
      } else if (dart.equals(value, 1 / 0)) {
        buffer.putUint8(142);
      } else if (dart.equals(value, -1 / 0)) {
        buffer.putUint8(143);
      } else {
        super.writeValue(buffer, value);
      }
    }
    readValueOfType(type, buffer) {
      switch (type) {
        case 128:
          {
            return new core.DateTime.fromMillisecondsSinceEpoch(buffer.getInt64());
          }
        case 136:
          {
            return new timestamp.Timestamp.new(buffer.getInt64(), buffer.getInt32());
          }
        case 129:
          {
            return new geo_point.GeoPoint.new(buffer.getFloat64(), buffer.getFloat64());
          }
        case 130:
          {
            let appName = core.String.as(dart.nullCheck(this.readValue(buffer)));
            let path = core.String.as(dart.nullCheck(this.readValue(buffer)));
            let app = firebase_core.Firebase.app(appName);
            let firestore = platform_interface_firestore.FirebaseFirestorePlatform.instanceFor({app: app});
            return firestore.doc(path);
          }
        case 131:
          {
            let length = this.readSize(buffer);
            let bytes = buffer.getUint8List(length);
            return new blob.Blob.new(typed_data.Uint8List.as(bytes));
          }
        case 139:
          {
            return field_path.FieldPath.documentId;
          }
        case 141:
          {
            return 0 / 0;
          }
        case 142:
          {
            return 1 / 0;
          }
        case 143:
          {
            return -1 / 0;
          }
        case 144:
        case 145:
        case 146:
        case 132:
        case 133:
        case 134:
        case 135:
        case 137:
        case 138:
        default:
          {
            return super.readValueOfType(type, buffer);
          }
      }
    }
  };
  (firestore_message_codec.FirestoreMessageCodec.new = function() {
    firestore_message_codec.FirestoreMessageCodec.__proto__.new.call(this);
    ;
  }).prototype = firestore_message_codec.FirestoreMessageCodec.prototype;
  dart.addTypeTests(firestore_message_codec.FirestoreMessageCodec);
  dart.addTypeCaches(firestore_message_codec.FirestoreMessageCodec);
  dart.setMethodSignature(firestore_message_codec.FirestoreMessageCodec, () => ({
    __proto__: dart.getMethods(firestore_message_codec.FirestoreMessageCodec.__proto__),
    writeValue: dart.fnType(dart.void, [serialization.WriteBuffer, dart.dynamic])
  }));
  dart.setLibraryUri(firestore_message_codec.FirestoreMessageCodec, I[140]);
  dart.setStaticFieldSignature(firestore_message_codec.FirestoreMessageCodec, () => ['_kDateTime', '_kGeoPoint', '_kDocumentReference', '_kBlob', '_kArrayUnion', '_kArrayRemove', '_kDelete', '_kServerTimestamp', '_kTimestamp', '_kIncrementDouble', '_kIncrementInteger', '_kDocumentId', '_kFieldPath', '_kNaN', '_kInfinity', '_kNegativeInfinity', '_kFirestoreInstance', '_kFirestoreQuery', '_kFirestoreSettings', '_kFieldValueCodes', '_kFieldPathCodes']);
  dart.defineLazy(firestore_message_codec.FirestoreMessageCodec, {
    /*firestore_message_codec.FirestoreMessageCodec._kDateTime*/get _kDateTime() {
      return 128;
    },
    /*firestore_message_codec.FirestoreMessageCodec._kGeoPoint*/get _kGeoPoint() {
      return 129;
    },
    /*firestore_message_codec.FirestoreMessageCodec._kDocumentReference*/get _kDocumentReference() {
      return 130;
    },
    /*firestore_message_codec.FirestoreMessageCodec._kBlob*/get _kBlob() {
      return 131;
    },
    /*firestore_message_codec.FirestoreMessageCodec._kArrayUnion*/get _kArrayUnion() {
      return 132;
    },
    /*firestore_message_codec.FirestoreMessageCodec._kArrayRemove*/get _kArrayRemove() {
      return 133;
    },
    /*firestore_message_codec.FirestoreMessageCodec._kDelete*/get _kDelete() {
      return 134;
    },
    /*firestore_message_codec.FirestoreMessageCodec._kServerTimestamp*/get _kServerTimestamp() {
      return 135;
    },
    /*firestore_message_codec.FirestoreMessageCodec._kTimestamp*/get _kTimestamp() {
      return 136;
    },
    /*firestore_message_codec.FirestoreMessageCodec._kIncrementDouble*/get _kIncrementDouble() {
      return 137;
    },
    /*firestore_message_codec.FirestoreMessageCodec._kIncrementInteger*/get _kIncrementInteger() {
      return 138;
    },
    /*firestore_message_codec.FirestoreMessageCodec._kDocumentId*/get _kDocumentId() {
      return 139;
    },
    /*firestore_message_codec.FirestoreMessageCodec._kFieldPath*/get _kFieldPath() {
      return 140;
    },
    /*firestore_message_codec.FirestoreMessageCodec._kNaN*/get _kNaN() {
      return 141;
    },
    /*firestore_message_codec.FirestoreMessageCodec._kInfinity*/get _kInfinity() {
      return 142;
    },
    /*firestore_message_codec.FirestoreMessageCodec._kNegativeInfinity*/get _kNegativeInfinity() {
      return 143;
    },
    /*firestore_message_codec.FirestoreMessageCodec._kFirestoreInstance*/get _kFirestoreInstance() {
      return 144;
    },
    /*firestore_message_codec.FirestoreMessageCodec._kFirestoreQuery*/get _kFirestoreQuery() {
      return 145;
    },
    /*firestore_message_codec.FirestoreMessageCodec._kFirestoreSettings*/get _kFirestoreSettings() {
      return 146;
    },
    /*firestore_message_codec.FirestoreMessageCodec._kFieldValueCodes*/get _kFieldValueCodes() {
      return C[122] || CT.C122;
    },
    /*firestore_message_codec.FirestoreMessageCodec._kFieldPathCodes*/get _kFieldPathCodes() {
      return C[129] || CT.C129;
    }
  }, false);
  method_channel_field_value.FieldValueType = class FieldValueType extends core._Enum {
    [S$._enumToString]() {
      return "FieldValueType." + this[S$._name];
    }
  };
  (method_channel_field_value.FieldValueType.new = function(index, name) {
    method_channel_field_value.FieldValueType.__proto__.new.call(this, index, name);
    ;
  }).prototype = method_channel_field_value.FieldValueType.prototype;
  dart.addTypeTests(method_channel_field_value.FieldValueType);
  dart.addTypeCaches(method_channel_field_value.FieldValueType);
  dart.setMethodSignature(method_channel_field_value.FieldValueType, () => ({
    __proto__: dart.getMethods(method_channel_field_value.FieldValueType.__proto__),
    [S$._enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(method_channel_field_value.FieldValueType, I[141]);
  dart.setStaticFieldSignature(method_channel_field_value.FieldValueType, () => ['values', 'arrayUnion', 'arrayRemove', 'delete', 'serverTimestamp', 'incrementDouble', 'incrementInteger']);
  dart.defineLazy(method_channel_field_value.FieldValueType, {
    /*method_channel_field_value.FieldValueType.values*/get values() {
      return C[130] || CT.C130;
    },
    /*method_channel_field_value.FieldValueType.arrayUnion*/get arrayUnion() {
      return C[123] || CT.C123;
    },
    /*method_channel_field_value.FieldValueType.arrayRemove*/get arrayRemove() {
      return C[124] || CT.C124;
    },
    /*method_channel_field_value.FieldValueType.delete*/get delete() {
      return C[125] || CT.C125;
    },
    /*method_channel_field_value.FieldValueType.serverTimestamp*/get serverTimestamp() {
      return C[126] || CT.C126;
    },
    /*method_channel_field_value.FieldValueType.incrementDouble*/get incrementDouble() {
      return C[127] || CT.C127;
    },
    /*method_channel_field_value.FieldValueType.incrementInteger*/get incrementInteger() {
      return C[128] || CT.C128;
    }
  }, false);
  method_channel_field_value.MethodChannelFieldValue = class MethodChannelFieldValue extends core.Object {
    get type() {
      return this[S$.type$2];
    }
    set type(value) {
      super.type = value;
    }
    get value() {
      return this[S$.value$1];
    }
    set value(value) {
      super.value = value;
    }
    static ['_#new#tearOff'](type, value) {
      return new method_channel_field_value.MethodChannelFieldValue.new(type, value);
    }
    _equals(other) {
      if (other == null) return false;
      return method_channel_field_value.MethodChannelFieldValue.is(other) && other.type === this.type && (C[36] || CT.C36).equals(other.value, this.value);
    }
    get hashCode() {
      return core.Object.hash(this.type, this.value);
    }
  };
  (method_channel_field_value.MethodChannelFieldValue.new = function(type, value) {
    this[S$.type$2] = type;
    this[S$.value$1] = value;
    ;
  }).prototype = method_channel_field_value.MethodChannelFieldValue.prototype;
  dart.addTypeTests(method_channel_field_value.MethodChannelFieldValue);
  dart.addTypeCaches(method_channel_field_value.MethodChannelFieldValue);
  dart.setLibraryUri(method_channel_field_value.MethodChannelFieldValue, I[141]);
  dart.setFieldSignature(method_channel_field_value.MethodChannelFieldValue, () => ({
    __proto__: dart.getFields(method_channel_field_value.MethodChannelFieldValue.__proto__),
    type: dart.finalFieldType(method_channel_field_value.FieldValueType),
    value: dart.finalFieldType(dart.dynamic)
  }));
  dart.defineExtensionMethods(method_channel_field_value.MethodChannelFieldValue, ['_equals']);
  dart.defineExtensionAccessors(method_channel_field_value.MethodChannelFieldValue, ['hashCode']);
  convert_auth_provider.convertToOAuthProvider = function convertToOAuthProvider(authProvider) {
    if (microsoft_auth.MicrosoftAuthProvider.is(authProvider)) {
      let oAuthProvider = new oauth.OAuthProvider.new(authProvider.providerId);
      oAuthProvider.setScopes(authProvider.scopes);
      oAuthProvider.setCustomParameters(authProvider.parameters);
      return oAuthProvider;
    }
    if (github_auth.GithubAuthProvider.is(authProvider)) {
      let oAuthProvider = new oauth.OAuthProvider.new(authProvider.providerId);
      oAuthProvider.setScopes(authProvider.scopes);
      oAuthProvider.setCustomParameters(authProvider.parameters);
      return oAuthProvider;
    }
    if (apple_auth.AppleAuthProvider.is(authProvider)) {
      let oAuthProvider = new oauth.OAuthProvider.new(authProvider.providerId);
      oAuthProvider.setScopes(authProvider.scopes);
      oAuthProvider.setCustomParameters(authProvider.parameters);
      return oAuthProvider;
    }
    if (twitter_auth.TwitterAuthProvider.is(authProvider)) {
      let oAuthProvider = new oauth.OAuthProvider.new(authProvider.providerId);
      oAuthProvider.setCustomParameters(authProvider.parameters);
      return oAuthProvider;
    }
    return authProvider;
  };
  const multiFactor$ = Symbol("multiFactor");
  method_channel_user.MethodChannelUser = class MethodChannelUser extends platform_interface_user.UserPlatform {
    static ['_#new#tearOff'](auth, multiFactor, data) {
      return new method_channel_user.MethodChannelUser.new(auth, multiFactor, data);
    }
    [S$._withChannelDefaults$1](other) {
      let t171;
      t171 = new (T$.IdentityMapOfString$dynamic()).from(["appName", this.auth.app.name, "tenantId", this.auth.tenantId]);
      return (() => {
        t171[S$.$addAll](other);
        return t171;
      })();
    }
    delete() {
      return async.async(dart.void, (function* $delete() {
        try {
          yield method_channel_firebase_auth.MethodChannelFirebaseAuth.channel.invokeMethod(dart.void, "User#delete", this[S$._withChannelDefaults$1](new (T$.IdentityMapOfString$dynamic()).new()));
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    getIdToken(forceRefresh) {
      return async.async(core.String, (function* getIdToken() {
        try {
          let data = dart.nullCheck(yield method_channel_firebase_auth.MethodChannelFirebaseAuth.channel.invokeMapMethod(core.String, dart.dynamic, "User#getIdToken", this[S$._withChannelDefaults$1](new (T$.IdentityMapOfString$dynamic()).from(["forceRefresh", forceRefresh, "tokenOnly", true]))));
          return T$.FutureOrOfString().as(data[S$.$_get]("token"));
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    getIdTokenResult(forceRefresh) {
      return async.async(id_token_result.IdTokenResult, (function* getIdTokenResult() {
        try {
          let data = dart.nullCheck(yield method_channel_firebase_auth.MethodChannelFirebaseAuth.channel.invokeMapMethod(core.String, dart.dynamic, "User#getIdToken", this[S$._withChannelDefaults$1](new (T$.IdentityMapOfString$dynamic()).from(["forceRefresh", forceRefresh, "tokenOnly", false]))));
          return new id_token_result.IdTokenResult.new(data);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    linkWithCredential(credential) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* linkWithCredential() {
        try {
          let data = dart.nullCheck(yield method_channel_firebase_auth.MethodChannelFirebaseAuth.channel.invokeMapMethod(core.String, dart.dynamic, "User#linkWithCredential", this[S$._withChannelDefaults$1](new (T$.IdentityMapOfString$dynamic()).from(["credential", credential.asMap()]))));
          let userCredential = new method_channel_user_credential.MethodChannelUserCredential.new(this.auth, data);
          this.auth.currentUser = userCredential.user;
          return userCredential;
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    linkWithProvider(provider) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* linkWithProvider() {
        try {
          let convertedProvider = convert_auth_provider.convertToOAuthProvider(provider);
          let data = dart.nullCheck(yield method_channel_firebase_auth.MethodChannelFirebaseAuth.channel.invokeMapMethod(core.String, dart.dynamic, "User#linkWithProvider", this[S$._withChannelDefaults$1]((() => {
            let t175 = new (T$.IdentityMapOfString$dynamic()).new();
            t175[S$.$_set]("signInProvider", convertedProvider.providerId);
            if (oauth.OAuthProvider.is(convertedProvider)) t175[S$.$addAll](new (T$.IdentityMapOfString$dynamic()).from(["scopes", convertedProvider.scopes, "customParameters", convertedProvider.parameters]));
            return t175;
          })())));
          let userCredential = new method_channel_user_credential.MethodChannelUserCredential.new(this.auth, data);
          this.auth.currentUser = userCredential.user;
          return userCredential;
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    reauthenticateWithProvider(provider) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* reauthenticateWithProvider() {
        try {
          let convertedProvider = convert_auth_provider.convertToOAuthProvider(provider);
          let data = dart.nullCheck(yield method_channel_firebase_auth.MethodChannelFirebaseAuth.channel.invokeMapMethod(core.String, dart.dynamic, "User#reauthenticateWithProvider", this[S$._withChannelDefaults$1]((() => {
            let t177 = new (T$.IdentityMapOfString$dynamic()).new();
            t177[S$.$_set]("signInProvider", convertedProvider.providerId);
            if (oauth.OAuthProvider.is(convertedProvider)) t177[S$.$addAll](new (T$.IdentityMapOfString$dynamic()).from(["scopes", convertedProvider.scopes, "customParameters", convertedProvider.parameters]));
            return t177;
          })())));
          let userCredential = new method_channel_user_credential.MethodChannelUserCredential.new(this.auth, data);
          this.auth.currentUser = userCredential.user;
          return userCredential;
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    reauthenticateWithCredential(credential) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* reauthenticateWithCredential() {
        try {
          let data = dart.nullCheck(yield method_channel_firebase_auth.MethodChannelFirebaseAuth.channel.invokeMapMethod(core.String, dart.dynamic, "User#reauthenticateUserWithCredential", this[S$._withChannelDefaults$1](new (T$.IdentityMapOfString$dynamic()).from(["credential", credential.asMap()]))));
          let userCredential = new method_channel_user_credential.MethodChannelUserCredential.new(this.auth, data);
          this.auth.currentUser = userCredential.user;
          return userCredential;
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    reload() {
      return async.async(dart.void, (function* reload() {
        try {
          let data = dart.nullCheck(yield method_channel_firebase_auth.MethodChannelFirebaseAuth.channel.invokeMapMethod(core.String, dart.dynamic, "User#reload", this[S$._withChannelDefaults$1](new (T$.IdentityMapOfString$dynamic()).new())));
          let user = new method_channel_user.MethodChannelUser.new(this.auth, this[multiFactor$], data);
          this.auth.currentUser = user;
          this.auth.sendAuthChangesEvent(this.auth.app.name, user);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    sendEmailVerification(actionCodeSettings) {
      return async.async(dart.void, (function* sendEmailVerification() {
        let t181;
        try {
          yield method_channel_firebase_auth.MethodChannelFirebaseAuth.channel.invokeMethod(dart.void, "User#sendEmailVerification", this[S$._withChannelDefaults$1](new (T$.IdentityMapOfString$dynamic()).from(["actionCodeSettings", (t181 = actionCodeSettings, t181 == null ? null : t181.asMap())])));
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    unlink(providerId) {
      return async.async(platform_interface_user.UserPlatform, (function* unlink() {
        try {
          let data = dart.nullCheck(yield method_channel_firebase_auth.MethodChannelFirebaseAuth.channel.invokeMapMethod(core.String, dart.dynamic, "User#unlink", this[S$._withChannelDefaults$1](new (T$.IdentityMapOfString$dynamic()).from(["providerId", providerId]))));
          let userCredential = new method_channel_user_credential.MethodChannelUserCredential.new(this.auth, data);
          let user = T$.MethodChannelUserN().as(userCredential.user);
          this.auth.currentUser = user;
          this.auth.sendAuthChangesEvent(this.auth.app.name, user);
          return dart.nullCheck(user);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    updateEmail(newEmail) {
      return async.async(dart.void, (function* updateEmail() {
        try {
          let data = dart.nullCheck(yield method_channel_firebase_auth.MethodChannelFirebaseAuth.channel.invokeMapMethod(core.String, dart.dynamic, "User#updateEmail", this[S$._withChannelDefaults$1](new (T$.IdentityMapOfString$dynamic()).from(["newEmail", newEmail]))));
          let user = new method_channel_user.MethodChannelUser.new(this.auth, this[multiFactor$], data);
          this.auth.currentUser = user;
          this.auth.sendAuthChangesEvent(this.auth.app.name, user);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    updatePassword(newPassword) {
      return async.async(dart.void, (function* updatePassword() {
        try {
          let data = dart.nullCheck(yield method_channel_firebase_auth.MethodChannelFirebaseAuth.channel.invokeMapMethod(core.String, dart.dynamic, "User#updatePassword", this[S$._withChannelDefaults$1](new (T$.IdentityMapOfString$dynamic()).from(["newPassword", newPassword]))));
          let user = new method_channel_user.MethodChannelUser.new(this.auth, this[multiFactor$], data);
          this.auth.currentUser = user;
          this.auth.sendAuthChangesEvent(this.auth.app.name, user);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    updatePhoneNumber(phoneCredential) {
      return async.async(dart.void, (function* updatePhoneNumber() {
        try {
          let data = dart.nullCheck(yield method_channel_firebase_auth.MethodChannelFirebaseAuth.channel.invokeMapMethod(core.String, dart.dynamic, "User#updatePhoneNumber", this[S$._withChannelDefaults$1](new (T$.IdentityMapOfString$dynamic()).from(["credential", phoneCredential.asMap()]))));
          let user = new method_channel_user.MethodChannelUser.new(this.auth, this[multiFactor$], data);
          this.auth.currentUser = user;
          this.auth.sendAuthChangesEvent(this.auth.app.name, user);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    updateProfile(profile) {
      return async.async(dart.void, (function* updateProfile() {
        try {
          let data = dart.nullCheck(yield method_channel_firebase_auth.MethodChannelFirebaseAuth.channel.invokeMapMethod(core.String, dart.dynamic, "User#updateProfile", this[S$._withChannelDefaults$1](new (T$.IdentityMapOfString$dynamic()).from(["profile", profile]))));
          let user = new method_channel_user.MethodChannelUser.new(this.auth, this[multiFactor$], data);
          this.auth.currentUser = user;
          this.auth.sendAuthChangesEvent(this.auth.app.name, user);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    verifyBeforeUpdateEmail(newEmail, actionCodeSettings = null) {
      return async.async(dart.void, (function* verifyBeforeUpdateEmail() {
        let t187;
        try {
          yield method_channel_firebase_auth.MethodChannelFirebaseAuth.channel.invokeMethod(dart.void, "User#verifyBeforeUpdateEmail", this[S$._withChannelDefaults$1](new (T$.IdentityMapOfString$dynamic()).from(["newEmail", newEmail, "actionCodeSettings", (t187 = actionCodeSettings, t187 == null ? null : t187.asMap())])));
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    get [multiFactor$]() {
      return super.multiFactor;
    }
  };
  (method_channel_user.MethodChannelUser.new = function(auth, multiFactor, data) {
    method_channel_user.MethodChannelUser.__proto__.new.call(this, auth, multiFactor, data);
    ;
  }).prototype = method_channel_user.MethodChannelUser.prototype;
  dart.addTypeTests(method_channel_user.MethodChannelUser);
  dart.addTypeCaches(method_channel_user.MethodChannelUser);
  dart.setMethodSignature(method_channel_user.MethodChannelUser, () => ({
    __proto__: dart.getMethods(method_channel_user.MethodChannelUser.__proto__),
    [S$._withChannelDefaults$1]: dart.fnType(core.Map$(core.String, dart.dynamic), [core.Map$(core.String, dart.dynamic)])
  }));
  dart.setLibraryUri(method_channel_user.MethodChannelUser, I[142]);
  method_channel_user_credential.MethodChannelUserCredential = class MethodChannelUserCredential extends platform_interface_user_credential.UserCredentialPlatform {
    static ['_#new#tearOff'](auth, data) {
      return new method_channel_user_credential.MethodChannelUserCredential.new(auth, data);
    }
  };
  (method_channel_user_credential.MethodChannelUserCredential.new = function(auth, data) {
    let t188;
    method_channel_user_credential.MethodChannelUserCredential.__proto__.new.call(this, {auth: auth, additionalUserInfo: data[S$.$_get]("additionalUserInfo") == null ? null : new additional_user_info.AdditionalUserInfo.new({isNewUser: core.bool.as(dart.dsend(data[S$.$_get]("additionalUserInfo"), '_get', ["isNewUser"])), profile: T$.LinkedHashMapOfString$dynamic().from(core.Map.as((t188 = dart.dsend(data[S$.$_get]("additionalUserInfo"), '_get', ["profile"]), t188 == null ? new _js_helper.LinkedMap.new() : t188))), providerId: T$.StringN().as(dart.dsend(data[S$.$_get]("additionalUserInfo"), '_get', ["providerId"])), username: T$.StringN().as(dart.dsend(data[S$.$_get]("additionalUserInfo"), '_get', ["username"]))}), credential: data[S$.$_get]("authCredential") == null ? null : new auth_credential.AuthCredential.new({providerId: core.String.as(dart.dsend(data[S$.$_get]("authCredential"), '_get', ["providerId"])), signInMethod: core.String.as(dart.dsend(data[S$.$_get]("authCredential"), '_get', ["signInMethod"])), token: T$.intN().as(dart.dsend(data[S$.$_get]("authCredential"), '_get', ["token"])), accessToken: T$.StringN().as(dart.dsend(data[S$.$_get]("authCredential"), '_get', ["accessToken"]))}), user: data[S$.$_get]("user") == null ? null : new method_channel_user.MethodChannelUser.new(auth, new method_channel_multi_factor.MethodChannelMultiFactor.new(auth), T$.LinkedHashMapOfString$dynamic().from(core.Map.as(data[S$.$_get]("user"))))});
    ;
  }).prototype = method_channel_user_credential.MethodChannelUserCredential.prototype;
  dart.addTypeTests(method_channel_user_credential.MethodChannelUserCredential);
  dart.addTypeCaches(method_channel_user_credential.MethodChannelUserCredential);
  dart.setLibraryUri(method_channel_user_credential.MethodChannelUserCredential, I[143]);
  exception$0.convertPlatformException = function convertPlatformException$(exception, stackTrace) {
    if (!message_codec.PlatformException.is(exception)) {
      core.Error.throwWithStackTrace(exception, stackTrace);
    }
    core.Error.throwWithStackTrace(exception$0.platformExceptionToFirebaseAuthException(exception), stackTrace);
  };
  exception$0.platformExceptionToFirebaseAuthException = function platformExceptionToFirebaseAuthException(platformException) {
    let t188, t188$;
    let details = platformException.details != null ? T$.LinkedHashMapOfString$dynamic().from(core.Map.as(platformException.details)) : null;
    let code = "unknown";
    let message = platformException.message;
    let email = null;
    let credential = null;
    if (details != null) {
      code = core.String.as((t188 = details[S$.$_get]("code"), t188 == null ? code : t188));
      if (code === "second-factor-required") {
        return exception$0.parseMultiFactorError(details);
      }
      message = T$.StringN().as((t188$ = details[S$.$_get]("message"), t188$ == null ? message : t188$));
      if (details[S$.$_get]("additionalData") != null) {
        if (dart.dsend(details[S$.$_get]("additionalData"), '_get', ["authCredential"]) != null) {
          credential = new auth_credential.AuthCredential.new({providerId: core.String.as(dart.dsend(dart.dsend(details[S$.$_get]("additionalData"), '_get', ["authCredential"]), '_get', ["providerId"])), signInMethod: core.String.as(dart.dsend(dart.dsend(details[S$.$_get]("additionalData"), '_get', ["authCredential"]), '_get', ["signInMethod"])), token: T$.intN().as(dart.dsend(dart.dsend(details[S$.$_get]("additionalData"), '_get', ["authCredential"]), '_get', ["token"]))});
        }
        if (dart.dsend(details[S$.$_get]("additionalData"), '_get', ["email"]) != null) {
          email = T$.StringN().as(dart.dsend(details[S$.$_get]("additionalData"), '_get', ["email"]));
        }
      }
    }
    return new firebase_auth_exception.FirebaseAuthException.new({code: code, message: message, email: email, credential: credential});
  };
  exception$0.parseMultiFactorError = function parseMultiFactorError(details) {
    let t188, t188$, t188$0;
    let code = T$.StringN().as(details[S$.$_get]("code"));
    let message = T$.StringN().as(details[S$.$_get]("message"));
    let additionalData = T$.MapNOfObjectN$ObjectN().as(details[S$.$_get]("additionalData"));
    if (additionalData == null) {
      dart.throw(new firebase_auth_exception.FirebaseAuthException.new({code: "Can't parse multi factor error", message: message}));
    }
    let pigeonMultiFactorInfo = iterable_extensions['IterableNullableExtension|whereNotNull'](core.Object, (t188 = T$.ListNOfObjectN().as(additionalData[S$.$_get]("multiFactorHints")), t188 == null ? T$.JSArrayOfObjectN().of([]) : t188))[S$.$map](messages$46pigeon$.PigeonMultiFactorInfo, C[131] || CT.C131)[S$.$toList]();
    let multiFactorInfo = pigeon_helper.multiFactorInfoPigeonToObject(pigeonMultiFactorInfo);
    let auth = method_channel_firebase_auth.MethodChannelFirebaseAuth.methodChannelFirebaseAuthInstances[S$.$_get](additionalData[S$.$_get]("appName"));
    if (auth == null) {
      dart.throw(new firebase_auth_exception.FirebaseAuthException.new({code: (t188$ = code, t188$ == null ? "Unknown" : t188$), message: message}));
    }
    let sessionId = T$.StringN().as(additionalData[S$.$_get]("multiFactorSessionId"));
    let resolverId = T$.StringN().as(additionalData[S$.$_get]("multiFactorResolverId"));
    if (sessionId == null || resolverId == null) {
      dart.throw(new firebase_auth_exception.FirebaseAuthException.new({code: "Can't parse multi factor error", message: message}));
    }
    let multiFactorResolver = new method_channel_multi_factor.MethodChannelMultiFactorResolver.new(multiFactorInfo, new platform_interface_multi_factor.MultiFactorSession.new(sessionId), resolverId, auth);
    return new firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform.new({code: (t188$0 = code, t188$0 == null ? "Unknown" : t188$0), message: message, resolver: multiFactorResolver});
  };
  pigeon_helper.multiFactorInfoPigeonToObject = function multiFactorInfoPigeonToObject(pigeonMultiFactorInfo) {
    return iterable_extensions['IterableNullableExtension|whereNotNull'](messages$46pigeon$.PigeonMultiFactorInfo, pigeonMultiFactorInfo)[S$.$map](platform_interface_multi_factor.MultiFactorInfo, dart.fn(e => {
      let t188, t188$;
      if (e.phoneNumber != null) {
        return new platform_interface_multi_factor.PhoneMultiFactorInfo.new({displayName: e.displayName, enrollmentTimestamp: e.enrollmentTimestamp, factorId: (t188 = e.factorId, t188 == null ? "phone" : t188), uid: e.uid, phoneNumber: dart.nullCheck(e.phoneNumber)});
      }
      return new platform_interface_multi_factor.MultiFactorInfo.new({displayName: e.displayName, enrollmentTimestamp: e.enrollmentTimestamp, factorId: (t188$ = e.factorId, t188$ == null ? "" : t188$), uid: e.uid});
    }, T$.PigeonMultiFactorInfoToMultiFactorInfo()))[S$.$toList]();
  };
  messages$46pigeon$.PigeonMultiFactorSession = class PigeonMultiFactorSession extends core.Object {
    get id() {
      return this[S$.id$1];
    }
    set id(value) {
      this[S$.id$1] = value;
    }
    static ['_#new#tearOff'](opts) {
      let id = opts && 'id' in opts ? opts.id : null;
      return new messages$46pigeon$.PigeonMultiFactorSession.new({id: id});
    }
    encode() {
      let pigeonMap = new (T$.LinkedMapOfObjectN$ObjectN()).new();
      pigeonMap[S$.$_set]("id", this.id);
      return pigeonMap;
    }
    static decode(message) {
      let pigeonMap = T$.MapOfObjectN$ObjectN().as(message);
      return new messages$46pigeon$.PigeonMultiFactorSession.new({id: core.String.as(dart.nullCheck(pigeonMap[S$.$_get]("id")))});
    }
  };
  (messages$46pigeon$.PigeonMultiFactorSession.new = function(opts) {
    let id = opts && 'id' in opts ? opts.id : null;
    this[S$.id$1] = id;
    ;
  }).prototype = messages$46pigeon$.PigeonMultiFactorSession.prototype;
  dart.addTypeTests(messages$46pigeon$.PigeonMultiFactorSession);
  dart.addTypeCaches(messages$46pigeon$.PigeonMultiFactorSession);
  dart.setMethodSignature(messages$46pigeon$.PigeonMultiFactorSession, () => ({
    __proto__: dart.getMethods(messages$46pigeon$.PigeonMultiFactorSession.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon$.PigeonMultiFactorSession, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon$.PigeonMultiFactorSession, I[144]);
  dart.setFieldSignature(messages$46pigeon$.PigeonMultiFactorSession, () => ({
    __proto__: dart.getFields(messages$46pigeon$.PigeonMultiFactorSession.__proto__),
    id: dart.fieldType(core.String)
  }));
  messages$46pigeon$.PigeonPhoneMultiFactorAssertion = class PigeonPhoneMultiFactorAssertion extends core.Object {
    get verificationId() {
      return this[S$.verificationId$2];
    }
    set verificationId(value) {
      this[S$.verificationId$2] = value;
    }
    get verificationCode() {
      return this[S$.verificationCode];
    }
    set verificationCode(value) {
      this[S$.verificationCode] = value;
    }
    static ['_#new#tearOff'](opts) {
      let verificationId = opts && 'verificationId' in opts ? opts.verificationId : null;
      let verificationCode = opts && 'verificationCode' in opts ? opts.verificationCode : null;
      return new messages$46pigeon$.PigeonPhoneMultiFactorAssertion.new({verificationId: verificationId, verificationCode: verificationCode});
    }
    encode() {
      let pigeonMap = new (T$.LinkedMapOfObjectN$ObjectN()).new();
      pigeonMap[S$.$_set]("verificationId", this.verificationId);
      pigeonMap[S$.$_set]("verificationCode", this.verificationCode);
      return pigeonMap;
    }
    static decode(message) {
      let pigeonMap = T$.MapOfObjectN$ObjectN().as(message);
      return new messages$46pigeon$.PigeonPhoneMultiFactorAssertion.new({verificationId: core.String.as(dart.nullCheck(pigeonMap[S$.$_get]("verificationId"))), verificationCode: core.String.as(dart.nullCheck(pigeonMap[S$.$_get]("verificationCode")))});
    }
  };
  (messages$46pigeon$.PigeonPhoneMultiFactorAssertion.new = function(opts) {
    let verificationId = opts && 'verificationId' in opts ? opts.verificationId : null;
    let verificationCode = opts && 'verificationCode' in opts ? opts.verificationCode : null;
    this[S$.verificationId$2] = verificationId;
    this[S$.verificationCode] = verificationCode;
    ;
  }).prototype = messages$46pigeon$.PigeonPhoneMultiFactorAssertion.prototype;
  dart.addTypeTests(messages$46pigeon$.PigeonPhoneMultiFactorAssertion);
  dart.addTypeCaches(messages$46pigeon$.PigeonPhoneMultiFactorAssertion);
  dart.setMethodSignature(messages$46pigeon$.PigeonPhoneMultiFactorAssertion, () => ({
    __proto__: dart.getMethods(messages$46pigeon$.PigeonPhoneMultiFactorAssertion.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon$.PigeonPhoneMultiFactorAssertion, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon$.PigeonPhoneMultiFactorAssertion, I[144]);
  dart.setFieldSignature(messages$46pigeon$.PigeonPhoneMultiFactorAssertion, () => ({
    __proto__: dart.getFields(messages$46pigeon$.PigeonPhoneMultiFactorAssertion.__proto__),
    verificationId: dart.fieldType(core.String),
    verificationCode: dart.fieldType(core.String)
  }));
  messages$46pigeon$.PigeonMultiFactorInfo = class PigeonMultiFactorInfo extends core.Object {
    get displayName() {
      return this[S$.displayName$1];
    }
    set displayName(value) {
      this[S$.displayName$1] = value;
    }
    get enrollmentTimestamp() {
      return this[S$.enrollmentTimestamp$1];
    }
    set enrollmentTimestamp(value) {
      this[S$.enrollmentTimestamp$1] = value;
    }
    get factorId() {
      return this[S$.factorId$1];
    }
    set factorId(value) {
      this[S$.factorId$1] = value;
    }
    get uid() {
      return this[S$.uid$1];
    }
    set uid(value) {
      this[S$.uid$1] = value;
    }
    get phoneNumber() {
      return this[S$.phoneNumber$2];
    }
    set phoneNumber(value) {
      this[S$.phoneNumber$2] = value;
    }
    static ['_#new#tearOff'](opts) {
      let displayName = opts && 'displayName' in opts ? opts.displayName : null;
      let enrollmentTimestamp = opts && 'enrollmentTimestamp' in opts ? opts.enrollmentTimestamp : null;
      let factorId = opts && 'factorId' in opts ? opts.factorId : null;
      let uid = opts && 'uid' in opts ? opts.uid : null;
      let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
      return new messages$46pigeon$.PigeonMultiFactorInfo.new({displayName: displayName, enrollmentTimestamp: enrollmentTimestamp, factorId: factorId, uid: uid, phoneNumber: phoneNumber});
    }
    encode() {
      let pigeonMap = new (T$.LinkedMapOfObjectN$ObjectN()).new();
      pigeonMap[S$.$_set]("displayName", this.displayName);
      pigeonMap[S$.$_set]("enrollmentTimestamp", this.enrollmentTimestamp);
      pigeonMap[S$.$_set]("factorId", this.factorId);
      pigeonMap[S$.$_set]("uid", this.uid);
      pigeonMap[S$.$_set]("phoneNumber", this.phoneNumber);
      return pigeonMap;
    }
    static decode(message) {
      let pigeonMap = T$.MapOfObjectN$ObjectN().as(message);
      return new messages$46pigeon$.PigeonMultiFactorInfo.new({displayName: T$.StringN().as(pigeonMap[S$.$_get]("displayName")), enrollmentTimestamp: core.double.as(dart.nullCheck(pigeonMap[S$.$_get]("enrollmentTimestamp"))), factorId: T$.StringN().as(pigeonMap[S$.$_get]("factorId")), uid: core.String.as(dart.nullCheck(pigeonMap[S$.$_get]("uid"))), phoneNumber: T$.StringN().as(pigeonMap[S$.$_get]("phoneNumber"))});
    }
  };
  (messages$46pigeon$.PigeonMultiFactorInfo.new = function(opts) {
    let displayName = opts && 'displayName' in opts ? opts.displayName : null;
    let enrollmentTimestamp = opts && 'enrollmentTimestamp' in opts ? opts.enrollmentTimestamp : null;
    let factorId = opts && 'factorId' in opts ? opts.factorId : null;
    let uid = opts && 'uid' in opts ? opts.uid : null;
    let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
    this[S$.displayName$1] = displayName;
    this[S$.enrollmentTimestamp$1] = enrollmentTimestamp;
    this[S$.factorId$1] = factorId;
    this[S$.uid$1] = uid;
    this[S$.phoneNumber$2] = phoneNumber;
    ;
  }).prototype = messages$46pigeon$.PigeonMultiFactorInfo.prototype;
  dart.addTypeTests(messages$46pigeon$.PigeonMultiFactorInfo);
  dart.addTypeCaches(messages$46pigeon$.PigeonMultiFactorInfo);
  dart.setMethodSignature(messages$46pigeon$.PigeonMultiFactorInfo, () => ({
    __proto__: dart.getMethods(messages$46pigeon$.PigeonMultiFactorInfo.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon$.PigeonMultiFactorInfo, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon$.PigeonMultiFactorInfo, I[144]);
  dart.setFieldSignature(messages$46pigeon$.PigeonMultiFactorInfo, () => ({
    __proto__: dart.getFields(messages$46pigeon$.PigeonMultiFactorInfo.__proto__),
    displayName: dart.fieldType(dart.nullable(core.String)),
    enrollmentTimestamp: dart.fieldType(core.double),
    factorId: dart.fieldType(dart.nullable(core.String)),
    uid: dart.fieldType(core.String),
    phoneNumber: dart.fieldType(dart.nullable(core.String))
  }));
  messages$46pigeon$._MultiFactorUserHostApiCodec = class _MultiFactorUserHostApiCodec extends message_codecs.StandardMessageCodec {
    static ['_#new#tearOff']() {
      return new messages$46pigeon$._MultiFactorUserHostApiCodec.new();
    }
    writeValue(buffer, value) {
      if (messages$46pigeon$.PigeonMultiFactorInfo.is(value)) {
        buffer.putUint8(128);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$.PigeonMultiFactorSession.is(value)) {
        buffer.putUint8(129);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$.PigeonPhoneMultiFactorAssertion.is(value)) {
        buffer.putUint8(130);
        this.writeValue(buffer, value.encode());
      } else {
        super.writeValue(buffer, value);
      }
    }
    readValueOfType(type, buffer) {
      switch (type) {
        case 128:
          {
            return messages$46pigeon$.PigeonMultiFactorInfo.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 129:
          {
            return messages$46pigeon$.PigeonMultiFactorSession.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 130:
          {
            return messages$46pigeon$.PigeonPhoneMultiFactorAssertion.decode(dart.nullCheck(this.readValue(buffer)));
          }
        default:
          {
            return super.readValueOfType(type, buffer);
          }
      }
    }
  };
  (messages$46pigeon$._MultiFactorUserHostApiCodec.new = function() {
    messages$46pigeon$._MultiFactorUserHostApiCodec.__proto__.new.call(this);
    ;
  }).prototype = messages$46pigeon$._MultiFactorUserHostApiCodec.prototype;
  dart.addTypeTests(messages$46pigeon$._MultiFactorUserHostApiCodec);
  dart.addTypeCaches(messages$46pigeon$._MultiFactorUserHostApiCodec);
  dart.setLibraryUri(messages$46pigeon$._MultiFactorUserHostApiCodec, I[144]);
  messages$46pigeon$.MultiFactorUserHostApi = class MultiFactorUserHostApi extends core.Object {
    static ['_#new#tearOff'](opts) {
      let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
      return new messages$46pigeon$.MultiFactorUserHostApi.new({binaryMessenger: binaryMessenger});
    }
    enrollPhone(arg_appName, arg_assertion, arg_displayName) {
      return async.async(dart.void, (function* enrollPhone() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.MultiFactorUserHostApi.enrollPhone", messages$46pigeon$.MultiFactorUserHostApi.codec, {binaryMessenger: this[S$._binaryMessenger$1]});
        let replyMap = T$.MapNOfObjectN$ObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_appName, arg_assertion, arg_displayName])));
        if (replyMap == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyMap[S$.$_get]("error") != null) {
          let error = dart.nullCheck(T$.MapNOfObjectN$ObjectN().as(replyMap[S$.$_get]("error")));
          dart.throw(new message_codec.PlatformException.new({code: dart.nullCheck(T$.StringN().as(error[S$.$_get]("code"))), message: T$.StringN().as(error[S$.$_get]("message")), details: error[S$.$_get]("details")}));
        } else {
          return;
        }
      }).bind(this));
    }
    getSession(arg_appName) {
      return async.async(messages$46pigeon$.PigeonMultiFactorSession, (function* getSession() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.MultiFactorUserHostApi.getSession", messages$46pigeon$.MultiFactorUserHostApi.codec, {binaryMessenger: this[S$._binaryMessenger$1]});
        let replyMap = T$.MapNOfObjectN$ObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_appName])));
        if (replyMap == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyMap[S$.$_get]("error") != null) {
          let error = dart.nullCheck(T$.MapNOfObjectN$ObjectN().as(replyMap[S$.$_get]("error")));
          dart.throw(new message_codec.PlatformException.new({code: dart.nullCheck(T$.StringN().as(error[S$.$_get]("code"))), message: T$.StringN().as(error[S$.$_get]("message")), details: error[S$.$_get]("details")}));
        } else if (replyMap[S$.$_get]("result") == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonMultiFactorSessionN().as(replyMap[S$.$_get]("result")));
        }
      }).bind(this));
    }
    unenroll(arg_appName, arg_factorUid) {
      return async.async(dart.void, (function* unenroll() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.MultiFactorUserHostApi.unenroll", messages$46pigeon$.MultiFactorUserHostApi.codec, {binaryMessenger: this[S$._binaryMessenger$1]});
        let replyMap = T$.MapNOfObjectN$ObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_appName, arg_factorUid])));
        if (replyMap == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyMap[S$.$_get]("error") != null) {
          let error = dart.nullCheck(T$.MapNOfObjectN$ObjectN().as(replyMap[S$.$_get]("error")));
          dart.throw(new message_codec.PlatformException.new({code: dart.nullCheck(T$.StringN().as(error[S$.$_get]("code"))), message: T$.StringN().as(error[S$.$_get]("message")), details: error[S$.$_get]("details")}));
        } else {
          return;
        }
      }).bind(this));
    }
    getEnrolledFactors(arg_appName) {
      return async.async(T$.ListOfPigeonMultiFactorInfoN(), (function* getEnrolledFactors() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.MultiFactorUserHostApi.getEnrolledFactors", messages$46pigeon$.MultiFactorUserHostApi.codec, {binaryMessenger: this[S$._binaryMessenger$1]});
        let replyMap = T$.MapNOfObjectN$ObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_appName])));
        if (replyMap == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyMap[S$.$_get]("error") != null) {
          let error = dart.nullCheck(T$.MapNOfObjectN$ObjectN().as(replyMap[S$.$_get]("error")));
          dart.throw(new message_codec.PlatformException.new({code: dart.nullCheck(T$.StringN().as(error[S$.$_get]("code"))), message: T$.StringN().as(error[S$.$_get]("message")), details: error[S$.$_get]("details")}));
        } else if (replyMap[S$.$_get]("result") == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.ListNOfObjectN().as(replyMap[S$.$_get]("result")))[S$.$cast](T$.PigeonMultiFactorInfoN());
        }
      }).bind(this));
    }
  };
  (messages$46pigeon$.MultiFactorUserHostApi.new = function(opts) {
    let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
    this[S$._binaryMessenger$1] = binaryMessenger;
    ;
  }).prototype = messages$46pigeon$.MultiFactorUserHostApi.prototype;
  dart.addTypeTests(messages$46pigeon$.MultiFactorUserHostApi);
  dart.addTypeCaches(messages$46pigeon$.MultiFactorUserHostApi);
  dart.setMethodSignature(messages$46pigeon$.MultiFactorUserHostApi, () => ({
    __proto__: dart.getMethods(messages$46pigeon$.MultiFactorUserHostApi.__proto__),
    enrollPhone: dart.fnType(async.Future$(dart.void), [core.String, messages$46pigeon$.PigeonPhoneMultiFactorAssertion, dart.nullable(core.String)]),
    getSession: dart.fnType(async.Future$(messages$46pigeon$.PigeonMultiFactorSession), [core.String]),
    unenroll: dart.fnType(async.Future$(dart.void), [core.String, dart.nullable(core.String)]),
    getEnrolledFactors: dart.fnType(async.Future$(core.List$(dart.nullable(messages$46pigeon$.PigeonMultiFactorInfo))), [core.String])
  }));
  dart.setLibraryUri(messages$46pigeon$.MultiFactorUserHostApi, I[144]);
  dart.setFieldSignature(messages$46pigeon$.MultiFactorUserHostApi, () => ({
    __proto__: dart.getFields(messages$46pigeon$.MultiFactorUserHostApi.__proto__),
    [S$._binaryMessenger$1]: dart.finalFieldType(dart.nullable(binary_messenger.BinaryMessenger))
  }));
  dart.setStaticFieldSignature(messages$46pigeon$.MultiFactorUserHostApi, () => ['codec']);
  dart.defineLazy(messages$46pigeon$.MultiFactorUserHostApi, {
    /*messages$46pigeon$.MultiFactorUserHostApi.codec*/get codec() {
      return C[132] || CT.C132;
    }
  }, false);
  messages$46pigeon$._MultiFactoResolverHostApiCodec = class _MultiFactoResolverHostApiCodec extends message_codecs.StandardMessageCodec {
    static ['_#new#tearOff']() {
      return new messages$46pigeon$._MultiFactoResolverHostApiCodec.new();
    }
    writeValue(buffer, value) {
      if (messages$46pigeon$.PigeonMultiFactorInfo.is(value)) {
        buffer.putUint8(128);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$.PigeonMultiFactorSession.is(value)) {
        buffer.putUint8(129);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$.PigeonPhoneMultiFactorAssertion.is(value)) {
        buffer.putUint8(130);
        this.writeValue(buffer, value.encode());
      } else {
        super.writeValue(buffer, value);
      }
    }
    readValueOfType(type, buffer) {
      switch (type) {
        case 128:
          {
            return messages$46pigeon$.PigeonMultiFactorInfo.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 129:
          {
            return messages$46pigeon$.PigeonMultiFactorSession.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 130:
          {
            return messages$46pigeon$.PigeonPhoneMultiFactorAssertion.decode(dart.nullCheck(this.readValue(buffer)));
          }
        default:
          {
            return super.readValueOfType(type, buffer);
          }
      }
    }
  };
  (messages$46pigeon$._MultiFactoResolverHostApiCodec.new = function() {
    messages$46pigeon$._MultiFactoResolverHostApiCodec.__proto__.new.call(this);
    ;
  }).prototype = messages$46pigeon$._MultiFactoResolverHostApiCodec.prototype;
  dart.addTypeTests(messages$46pigeon$._MultiFactoResolverHostApiCodec);
  dart.addTypeCaches(messages$46pigeon$._MultiFactoResolverHostApiCodec);
  dart.setLibraryUri(messages$46pigeon$._MultiFactoResolverHostApiCodec, I[144]);
  messages$46pigeon$.MultiFactoResolverHostApi = class MultiFactoResolverHostApi extends core.Object {
    static ['_#new#tearOff'](opts) {
      let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
      return new messages$46pigeon$.MultiFactoResolverHostApi.new({binaryMessenger: binaryMessenger});
    }
    resolveSignIn(arg_resolverId, arg_assertion) {
      return async.async(T$.MapOfStringN$ObjectN(), (function* resolveSignIn() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.MultiFactoResolverHostApi.resolveSignIn", messages$46pigeon$.MultiFactoResolverHostApi.codec, {binaryMessenger: this[S$._binaryMessenger$1]});
        let replyMap = T$.MapNOfObjectN$ObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_resolverId, arg_assertion])));
        if (replyMap == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyMap[S$.$_get]("error") != null) {
          let error = dart.nullCheck(T$.MapNOfObjectN$ObjectN().as(replyMap[S$.$_get]("error")));
          dart.throw(new message_codec.PlatformException.new({code: dart.nullCheck(T$.StringN().as(error[S$.$_get]("code"))), message: T$.StringN().as(error[S$.$_get]("message")), details: error[S$.$_get]("details")}));
        } else if (replyMap[S$.$_get]("result") == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.MapNOfObjectN$ObjectN().as(replyMap[S$.$_get]("result")))[S$.$cast](T$.StringN(), T$.ObjectN());
        }
      }).bind(this));
    }
  };
  (messages$46pigeon$.MultiFactoResolverHostApi.new = function(opts) {
    let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
    this[S$._binaryMessenger$1] = binaryMessenger;
    ;
  }).prototype = messages$46pigeon$.MultiFactoResolverHostApi.prototype;
  dart.addTypeTests(messages$46pigeon$.MultiFactoResolverHostApi);
  dart.addTypeCaches(messages$46pigeon$.MultiFactoResolverHostApi);
  dart.setMethodSignature(messages$46pigeon$.MultiFactoResolverHostApi, () => ({
    __proto__: dart.getMethods(messages$46pigeon$.MultiFactoResolverHostApi.__proto__),
    resolveSignIn: dart.fnType(async.Future$(core.Map$(dart.nullable(core.String), dart.nullable(core.Object))), [core.String, messages$46pigeon$.PigeonPhoneMultiFactorAssertion])
  }));
  dart.setLibraryUri(messages$46pigeon$.MultiFactoResolverHostApi, I[144]);
  dart.setFieldSignature(messages$46pigeon$.MultiFactoResolverHostApi, () => ({
    __proto__: dart.getFields(messages$46pigeon$.MultiFactoResolverHostApi.__proto__),
    [S$._binaryMessenger$1]: dart.finalFieldType(dart.nullable(binary_messenger.BinaryMessenger))
  }));
  dart.setStaticFieldSignature(messages$46pigeon$.MultiFactoResolverHostApi, () => ['codec']);
  dart.defineLazy(messages$46pigeon$.MultiFactoResolverHostApi, {
    /*messages$46pigeon$.MultiFactoResolverHostApi.codec*/get codec() {
      return C[133] || CT.C133;
    }
  }, false);
  messages$46pigeon$._GenerateInterfacesCodec = class _GenerateInterfacesCodec extends message_codecs.StandardMessageCodec {
    static ['_#new#tearOff']() {
      return new messages$46pigeon$._GenerateInterfacesCodec.new();
    }
    writeValue(buffer, value) {
      if (messages$46pigeon$.PigeonMultiFactorInfo.is(value)) {
        buffer.putUint8(128);
        this.writeValue(buffer, value.encode());
      } else {
        super.writeValue(buffer, value);
      }
    }
    readValueOfType(type, buffer) {
      switch (type) {
        case 128:
          {
            return messages$46pigeon$.PigeonMultiFactorInfo.decode(dart.nullCheck(this.readValue(buffer)));
          }
        default:
          {
            return super.readValueOfType(type, buffer);
          }
      }
    }
  };
  (messages$46pigeon$._GenerateInterfacesCodec.new = function() {
    messages$46pigeon$._GenerateInterfacesCodec.__proto__.new.call(this);
    ;
  }).prototype = messages$46pigeon$._GenerateInterfacesCodec.prototype;
  dart.addTypeTests(messages$46pigeon$._GenerateInterfacesCodec);
  dart.addTypeCaches(messages$46pigeon$._GenerateInterfacesCodec);
  dart.setLibraryUri(messages$46pigeon$._GenerateInterfacesCodec, I[144]);
  messages$46pigeon$.GenerateInterfaces = class GenerateInterfaces extends core.Object {
    static ['_#new#tearOff'](opts) {
      let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
      return new messages$46pigeon$.GenerateInterfaces.new({binaryMessenger: binaryMessenger});
    }
    generateInterfaces(arg_info) {
      return async.async(dart.void, (function* generateInterfaces() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.GenerateInterfaces.generateInterfaces", messages$46pigeon$.GenerateInterfaces.codec, {binaryMessenger: this[S$._binaryMessenger$1]});
        let replyMap = T$.MapNOfObjectN$ObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_info])));
        if (replyMap == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyMap[S$.$_get]("error") != null) {
          let error = dart.nullCheck(T$.MapNOfObjectN$ObjectN().as(replyMap[S$.$_get]("error")));
          dart.throw(new message_codec.PlatformException.new({code: dart.nullCheck(T$.StringN().as(error[S$.$_get]("code"))), message: T$.StringN().as(error[S$.$_get]("message")), details: error[S$.$_get]("details")}));
        } else {
          return;
        }
      }).bind(this));
    }
  };
  (messages$46pigeon$.GenerateInterfaces.new = function(opts) {
    let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
    this[S$._binaryMessenger$1] = binaryMessenger;
    ;
  }).prototype = messages$46pigeon$.GenerateInterfaces.prototype;
  dart.addTypeTests(messages$46pigeon$.GenerateInterfaces);
  dart.addTypeCaches(messages$46pigeon$.GenerateInterfaces);
  dart.setMethodSignature(messages$46pigeon$.GenerateInterfaces, () => ({
    __proto__: dart.getMethods(messages$46pigeon$.GenerateInterfaces.__proto__),
    generateInterfaces: dart.fnType(async.Future$(dart.void), [messages$46pigeon$.PigeonMultiFactorInfo])
  }));
  dart.setLibraryUri(messages$46pigeon$.GenerateInterfaces, I[144]);
  dart.setFieldSignature(messages$46pigeon$.GenerateInterfaces, () => ({
    __proto__: dart.getFields(messages$46pigeon$.GenerateInterfaces.__proto__),
    [S$._binaryMessenger$1]: dart.finalFieldType(dart.nullable(binary_messenger.BinaryMessenger))
  }));
  dart.setStaticFieldSignature(messages$46pigeon$.GenerateInterfaces, () => ['codec']);
  dart.defineLazy(messages$46pigeon$.GenerateInterfaces, {
    /*messages$46pigeon$.GenerateInterfaces.codec*/get codec() {
      return C[134] || CT.C134;
    }
  }, false);
  scan.parseList = function parseList(T, scanner, parseElement) {
    let result = _interceptors.JSArray$(T).of([]);
    while (scanner.scan(",")) {
      scanner.scan(scan.whitespace);
    }
    result[S$.$add](parseElement());
    scanner.scan(scan.whitespace);
    while (scanner.scan(",")) {
      scanner.scan(scan.whitespace);
      if (scanner.matches(",") || scanner.isDone) continue;
      result[S$.$add](parseElement());
      scanner.scan(scan.whitespace);
    }
    return result;
  };
  scan.expectQuotedString = function expectQuotedString(scanner, opts) {
    let name = opts && 'name' in opts ? opts.name : "quoted string";
    scanner.expect(scan._quotedString, {name: name});
    let string = dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0));
    return string[S.$substring](1, string.length - 1)[S$.$replaceAllMapped](scan._quotedPair, dart.fn(match => dart.nullCheck(match._get(1)), T$.MatchToString()));
  };
  dart.defineLazy(scan, {
    /*scan.token*/get token() {
      return core.RegExp.new("[^()<>@,;:\"\\\\/[\\]?={} \\t\\x00-\\x1F\\x7F]+");
    },
    /*scan._lws*/get _lws() {
      return core.RegExp.new("(?:\\r\\n)?[ \\t]+");
    },
    /*scan._quotedString*/get _quotedString() {
      return core.RegExp.new("\"(?:[^\"\\x00-\\x1F\\x7F]|\\\\.)*\"");
    },
    /*scan._quotedPair*/get _quotedPair() {
      return core.RegExp.new("\\\\(.)");
    },
    /*scan.nonToken*/get nonToken() {
      return core.RegExp.new("[()<>@,;:\"\\\\/\\[\\]?={} \\t\\x00-\\x1F\\x7F]");
    },
    /*scan.whitespace*/get whitespace() {
      return core.RegExp.new("(?:" + scan._lws.pattern + ")*");
    }
  }, false);
  utils$1.wrapFormatException = function wrapFormatException(T, name, value, body) {
    try {
      return body();
    } catch (e) {
      let ex = dart.getThrown(e);
      if (span_exception.SourceSpanFormatException.is(ex)) {
        let error = ex;
        dart.throw(new span_exception.SourceSpanFormatException.new("Invalid " + name + ": " + error.message, error.span, error.source));
      } else if (core.FormatException.is(ex)) {
        let error = ex;
        dart.throw(new core.FormatException.new("Invalid " + name + " \"" + value + "\": " + error.message, error.source, error.offset));
      } else
        throw e;
    }
  };
  decoder.ChunkedCodingDecoder = class ChunkedCodingDecoder extends convert.Converter$(core.List$(core.int), core.List$(core.int)) {
    static ['_#_#tearOff']() {
      return new decoder.ChunkedCodingDecoder.__();
    }
    convert(input) {
      T$.ListOfint().as(input);
      let sink = new decoder._Sink.new(T$.StreamControllerOfListOfint().new());
      let output = sink[S._decode](input, 0, input[S$.$length]);
      if (sink[S._state$1][S$.$_equals](decoder._State.end)) return output;
      dart.throw(new core.FormatException.new("Input ended unexpectedly.", input, input[S$.$length]));
    }
    startChunkedConversion(sink) {
      T$.SinkOfListOfint().as(sink);
      return new decoder._Sink.new(sink);
    }
  };
  (decoder.ChunkedCodingDecoder.__ = function() {
    decoder.ChunkedCodingDecoder.__proto__.new.call(this);
    ;
  }).prototype = decoder.ChunkedCodingDecoder.prototype;
  dart.addTypeTests(decoder.ChunkedCodingDecoder);
  dart.addTypeCaches(decoder.ChunkedCodingDecoder);
  dart.setMethodSignature(decoder.ChunkedCodingDecoder, () => ({
    __proto__: dart.getMethods(decoder.ChunkedCodingDecoder.__proto__),
    convert: dart.fnType(core.List$(core.int), [dart.nullable(core.Object)]),
    startChunkedConversion: dart.fnType(convert.ByteConversionSink, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(decoder.ChunkedCodingDecoder, I[145]);
  decoder._Sink = class _Sink extends convert.ByteConversionSinkBase {
    get [S._size]() {
      let t190;
      t190 = this[S.___Sink__size];
      return t190 == null ? dart.throw(new _internal.LateError.fieldNI("_size")) : t190;
    }
    set [S._size](_size$35param) {
      this[S.___Sink__size] = _size$35param;
    }
    static ['_#new#tearOff'](_sink) {
      return new decoder._Sink.new(_sink);
    }
    add(chunk) {
      T$.ListOfint().as(chunk);
      return this.addSlice(chunk, 0, chunk[S$.$length], false);
    }
    addSlice(chunk, start, end, isLast) {
      core.RangeError.checkValidRange(start, end, chunk[S$.$length]);
      let output = this[S._decode](chunk, start, end);
      if (output[S$.$isNotEmpty]) this[S._sink].add(output);
      if (isLast) this[S._close](chunk, end);
    }
    close() {
      return this[S._close]();
    }
    [S._close](chunk = null, index = null) {
      if (!this[S._state$1][S$.$_equals](decoder._State.end)) {
        dart.throw(new core.FormatException.new("Input ended unexpectedly.", chunk, index));
      }
      this[S._sink].close();
    }
    [S._decode](bytes, start, end) {
      function assertCurrentChar(char, name) {
        if (bytes[S$.$_get](start) !== char) {
          dart.throw(new core.FormatException.new("Expected " + name + ".", bytes, start));
        }
      }
      dart.fn(assertCurrentChar, T$.intAndStringTovoid());
      let buffer = new typed_buffer.Uint8Buffer.new();
      while (start !== end) {
        switch (this[S._state$1]) {
          case C[135] || CT.C135:
            {
              this[S._size] = this[S._digitForByte](bytes, start);
              this[S._state$1] = decoder._State.size;
              start = start + 1;
              break;
            }
          case C[136] || CT.C136:
            {
              if (bytes[S$.$_get](start) === 13) {
                this[S._state$1] = decoder._State.sizeBeforeLF;
              } else {
                this[S._size] = (this[S._size] << 4 >>> 0) + this[S._digitForByte](bytes, start);
              }
              start = start + 1;
              break;
            }
          case C[137] || CT.C137:
            {
              assertCurrentChar(10, "LF");
              this[S._state$1] = this[S._size] === 0 ? decoder._State.endBeforeCR : decoder._State.body;
              start = start + 1;
              break;
            }
          case C[138] || CT.C138:
            {
              let chunkEnd = math.min(core.int, end, start + this[S._size]);
              buffer.addAll(bytes, start, chunkEnd);
              this[S._size] = this[S._size] - (chunkEnd - start);
              start = chunkEnd;
              if (this[S._size] === 0) this[S._state$1] = decoder._State.bodyBeforeCR;
              break;
            }
          case C[139] || CT.C139:
            {
              assertCurrentChar(13, "CR");
              this[S._state$1] = decoder._State.bodyBeforeLF;
              start = start + 1;
              break;
            }
          case C[140] || CT.C140:
            {
              assertCurrentChar(10, "LF");
              this[S._state$1] = decoder._State.boundary;
              start = start + 1;
              break;
            }
          case C[141] || CT.C141:
            {
              assertCurrentChar(13, "CR");
              this[S._state$1] = decoder._State.endBeforeLF;
              start = start + 1;
              break;
            }
          case C[142] || CT.C142:
            {
              assertCurrentChar(10, "LF");
              this[S._state$1] = decoder._State.end;
              start = start + 1;
              break;
            }
          case C[143] || CT.C143:
            {
              dart.throw(new core.FormatException.new("Expected no more data.", bytes, start));
            }
        }
      }
      return buffer.buffer[S.$asUint8List](0, buffer.length);
    }
    [S._digitForByte](bytes, index) {
      let byte = bytes[S$.$_get](index);
      let digit = (48 ^ byte) >>> 0;
      if (digit <= 9) {
        if (digit >= 0) return digit;
      } else {
        let letter = (32 | byte) >>> 0;
        if (97 <= letter && letter <= 102) return letter - 97 + 10;
      }
      dart.throw(new core.FormatException.new("Invalid hexadecimal byte 0x" + byte[S.$toRadixString](16)[S.$toUpperCase]() + ".", bytes, index));
    }
  };
  (decoder._Sink.new = function(_sink) {
    this[S._state$1] = decoder._State.boundary;
    this[S.___Sink__size] = null;
    this[S._sink] = _sink;
    decoder._Sink.__proto__.new.call(this);
    ;
  }).prototype = decoder._Sink.prototype;
  dart.addTypeTests(decoder._Sink);
  dart.addTypeCaches(decoder._Sink);
  dart.setMethodSignature(decoder._Sink, () => ({
    __proto__: dart.getMethods(decoder._Sink.__proto__),
    add: dart.fnType(dart.void, [dart.nullable(core.Object)]),
    close: dart.fnType(dart.void, []),
    [S._close]: dart.fnType(dart.void, [], [dart.nullable(core.List$(core.int)), dart.nullable(core.int)]),
    [S._decode]: dart.fnType(typed_data.Uint8List, [core.List$(core.int), core.int, core.int]),
    [S._digitForByte]: dart.fnType(core.int, [core.List$(core.int), core.int])
  }));
  dart.setGetterSignature(decoder._Sink, () => ({
    __proto__: dart.getGetters(decoder._Sink.__proto__),
    [S._size]: core.int
  }));
  dart.setSetterSignature(decoder._Sink, () => ({
    __proto__: dart.getSetters(decoder._Sink.__proto__),
    [S._size]: core.int
  }));
  dart.setLibraryUri(decoder._Sink, I[145]);
  dart.setFieldSignature(decoder._Sink, () => ({
    __proto__: dart.getFields(decoder._Sink.__proto__),
    [S._sink]: dart.finalFieldType(core.Sink$(core.List$(core.int))),
    [S._state$1]: dart.fieldType(decoder._State),
    [S.___Sink__size]: dart.fieldType(dart.nullable(core.int))
  }));
  decoder._State = class _State extends core.Object {
    get [S._name$2]() {
      return this[S._name$1];
    }
    set [S._name$2](value) {
      super[S._name$2] = value;
    }
    static ['_#_#tearOff'](_name) {
      return new decoder._State.__(_name);
    }
    toString() {
      return this[S._name$2];
    }
  };
  (decoder._State.__ = function(_name) {
    this[S._name$1] = _name;
    ;
  }).prototype = decoder._State.prototype;
  dart.addTypeTests(decoder._State);
  dart.addTypeCaches(decoder._State);
  dart.setLibraryUri(decoder._State, I[145]);
  dart.setFieldSignature(decoder._State, () => ({
    __proto__: dart.getFields(decoder._State.__proto__),
    [S._name$2]: dart.finalFieldType(core.String)
  }));
  dart.setStaticFieldSignature(decoder._State, () => ['boundary', 'size', 'sizeBeforeLF', 'body', 'bodyBeforeCR', 'bodyBeforeLF', 'endBeforeCR', 'endBeforeLF', 'end']);
  dart.defineExtensionMethods(decoder._State, ['toString']);
  dart.defineLazy(decoder._State, {
    /*decoder._State.boundary*/get boundary() {
      return C[135] || CT.C135;
    },
    /*decoder._State.size*/get size() {
      return C[136] || CT.C136;
    },
    /*decoder._State.sizeBeforeLF*/get sizeBeforeLF() {
      return C[137] || CT.C137;
    },
    /*decoder._State.body*/get body() {
      return C[138] || CT.C138;
    },
    /*decoder._State.bodyBeforeCR*/get bodyBeforeCR() {
      return C[139] || CT.C139;
    },
    /*decoder._State.bodyBeforeLF*/get bodyBeforeLF() {
      return C[140] || CT.C140;
    },
    /*decoder._State.endBeforeCR*/get endBeforeCR() {
      return C[141] || CT.C141;
    },
    /*decoder._State.endBeforeLF*/get endBeforeLF() {
      return C[142] || CT.C142;
    },
    /*decoder._State.end*/get end() {
      return C[143] || CT.C143;
    }
  }, false);
  dart.defineLazy(decoder, {
    /*decoder.chunkedCodingDecoder*/get chunkedCodingDecoder() {
      return C[144] || CT.C144;
    }
  }, false);
  encoder.ChunkedCodingEncoder = class ChunkedCodingEncoder extends convert.Converter$(core.List$(core.int), core.List$(core.int)) {
    static ['_#_#tearOff']() {
      return new encoder.ChunkedCodingEncoder.__();
    }
    convert(input) {
      T$.ListOfint().as(input);
      return encoder._convert(input, 0, input[S$.$length], {isLast: true});
    }
    startChunkedConversion(sink) {
      T$.SinkOfListOfint().as(sink);
      return new encoder._Sink.new(sink);
    }
  };
  (encoder.ChunkedCodingEncoder.__ = function() {
    encoder.ChunkedCodingEncoder.__proto__.new.call(this);
    ;
  }).prototype = encoder.ChunkedCodingEncoder.prototype;
  dart.addTypeTests(encoder.ChunkedCodingEncoder);
  dart.addTypeCaches(encoder.ChunkedCodingEncoder);
  dart.setMethodSignature(encoder.ChunkedCodingEncoder, () => ({
    __proto__: dart.getMethods(encoder.ChunkedCodingEncoder.__proto__),
    convert: dart.fnType(core.List$(core.int), [dart.nullable(core.Object)]),
    startChunkedConversion: dart.fnType(convert.ByteConversionSink, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(encoder.ChunkedCodingEncoder, I[146]);
  encoder._Sink = class _Sink extends convert.ByteConversionSinkBase {
    static ['_#new#tearOff'](_sink) {
      return new encoder._Sink.new(_sink);
    }
    add(chunk) {
      T$.ListOfint().as(chunk);
      this[S._sink$1].add(encoder._convert(chunk, 0, chunk[S$.$length]));
    }
    addSlice(chunk, start, end, isLast) {
      core.RangeError.checkValidRange(start, end, chunk[S$.$length]);
      this[S._sink$1].add(encoder._convert(chunk, start, end, {isLast: isLast}));
      if (isLast) this[S._sink$1].close();
    }
    close() {
      this[S._sink$1].add(encoder._doneChunk);
      this[S._sink$1].close();
    }
  };
  (encoder._Sink.new = function(_sink) {
    this[S._sink$1] = _sink;
    encoder._Sink.__proto__.new.call(this);
    ;
  }).prototype = encoder._Sink.prototype;
  dart.addTypeTests(encoder._Sink);
  dart.addTypeCaches(encoder._Sink);
  dart.setMethodSignature(encoder._Sink, () => ({
    __proto__: dart.getMethods(encoder._Sink.__proto__),
    add: dart.fnType(dart.void, [dart.nullable(core.Object)]),
    close: dart.fnType(dart.void, [])
  }));
  dart.setLibraryUri(encoder._Sink, I[146]);
  dart.setFieldSignature(encoder._Sink, () => ({
    __proto__: dart.getFields(encoder._Sink.__proto__),
    [S._sink$1]: dart.finalFieldType(core.Sink$(core.List$(core.int)))
  }));
  encoder._convert = function _convert(bytes, start, end, opts) {
    let t190, t190$, t190$0, t190$1;
    let isLast = opts && 'isLast' in opts ? opts.isLast : false;
    if (end === start) return isLast ? encoder._doneChunk : C[145] || CT.C145;
    let size = end - start;
    let sizeInHex = size[S.$toRadixString](16);
    let footerSize = isLast ? encoder._doneChunk[S$.$length] : 0;
    let list = _native_typed_data.NativeUint8List.new(sizeInHex.length + 4 + size + footerSize);
    list[S.$setRange](0, sizeInHex.length, sizeInHex[S.$codeUnits]);
    let cursor = sizeInHex.length;
    list[S$.$_set]((t190 = cursor, cursor = t190 + 1, t190), 13);
    list[S$.$_set]((t190$ = cursor, cursor = t190$ + 1, t190$), 10);
    list[S.$setRange](cursor, cursor + end - start, bytes, start);
    cursor = cursor + (end - start);
    list[S$.$_set]((t190$0 = cursor, cursor = t190$0 + 1, t190$0), 13);
    list[S$.$_set]((t190$1 = cursor, cursor = t190$1 + 1, t190$1), 10);
    if (isLast) {
      list[S.$setRange](list[S$.$length] - footerSize, list[S$.$length], encoder._doneChunk);
    }
    return list;
  };
  dart.defineLazy(encoder, {
    /*encoder.chunkedCodingEncoder*/get chunkedCodingEncoder() {
      return C[146] || CT.C146;
    },
    /*encoder._doneChunk*/get _doneChunk() {
      return _native_typed_data.NativeUint8List.fromList(T$.JSArrayOfint().of([48, 13, 10, 13, 10]));
    }
  }, false);
  method_channel_firebase_storage.MethodChannelFirebaseStorage = class MethodChannelFirebaseStorage extends platform_interface_firebase_storage.FirebaseStoragePlatform {
    get maxOperationRetryTime() {
      return this[S.maxOperationRetryTime];
    }
    set maxOperationRetryTime(value) {
      this[S.maxOperationRetryTime] = value;
    }
    get maxUploadRetryTime() {
      return this[S.maxUploadRetryTime];
    }
    set maxUploadRetryTime(value) {
      this[S.maxUploadRetryTime] = value;
    }
    get maxDownloadRetryTime() {
      return this[S.maxDownloadRetryTime];
    }
    set maxDownloadRetryTime(value) {
      this[S.maxDownloadRetryTime] = value;
    }
    static ['_#new#tearOff'](opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      let bucket = opts && 'bucket' in opts ? opts.bucket : null;
      return new method_channel_firebase_storage.MethodChannelFirebaseStorage.new({app: app, bucket: bucket});
    }
    static ['_#_#tearOff']() {
      return new method_channel_firebase_storage.MethodChannelFirebaseStorage.__();
    }
    static _getInstanceKey(appName, bucket) {
      return appName + "|" + bucket;
    }
    static get instance() {
      return new method_channel_firebase_storage.MethodChannelFirebaseStorage.__();
    }
    static get nextMethodChannelHandleId() {
      let t190;
      t190 = method_channel_firebase_storage.MethodChannelFirebaseStorage._methodChannelHandleId;
      method_channel_firebase_storage.MethodChannelFirebaseStorage._methodChannelHandleId = t190 + 1;
      return t190;
    }
    [S._handleTaskStateChange](taskState, $arguments) {
      return async.async(dart.void, function* _handleTaskStateChange() {
        let snapshotData = T$.LinkedHashMapOfString$dynamic().from(core.Map.as($arguments[S$.$_get]("snapshot")));
        let storage = dart.nullCheck(method_channel_firebase_storage.MethodChannelFirebaseStorage._methodChannelFirebaseStorageInstances[S$.$_get](method_channel_firebase_storage.MethodChannelFirebaseStorage._getInstanceKey(core.String.as($arguments[S$.$_get]("appName")), core.String.as($arguments[S$.$_get]("bucket")))));
        let snapshot = new method_channel_task_snapshot.MethodChannelTaskSnapshot.new(storage, taskState, snapshotData);
        dart.nullCheck(method_channel_firebase_storage.MethodChannelFirebaseStorage.taskObservers[S$.$_get]($arguments[S$.$_get]("handle"))).add(snapshot);
      });
    }
    [S._sendTaskException](handle, exception) {
      dart.nullCheck(method_channel_firebase_storage.MethodChannelFirebaseStorage.taskObservers[S$.$_get](handle)).addError(exception);
    }
    delegateFor(opts) {
      let t193, t192, t191, t190;
      let app = opts && 'app' in opts ? opts.app : null;
      let bucket = opts && 'bucket' in opts ? opts.bucket : null;
      let key = method_channel_firebase_storage.MethodChannelFirebaseStorage._getInstanceKey(app.name, bucket);
      t190 = method_channel_firebase_storage.MethodChannelFirebaseStorage._methodChannelFirebaseStorageInstances;
      t191 = key;
      t192 = t190[S$.$_get](t191);
      return t192 == null ? (t193 = new method_channel_firebase_storage.MethodChannelFirebaseStorage.new({app: app, bucket: bucket}), t190[S$.$_set](t191, t193), t193) : t192;
    }
    ref(path) {
      return new method_channel_reference.MethodChannelReference.new(this, path);
    }
    useStorageEmulator(host, port) {
      return async.async(dart.void, (function* useStorageEmulator() {
        this.emulatorHost = host;
        this.emulatorPort = port;
        try {
          yield method_channel_firebase_storage.MethodChannelFirebaseStorage.channel.invokeMethod(dart.dynamic, "Storage#useEmulator", new (T$.IdentityMapOfString$dynamic()).from(["appName", this.app.name, "maxOperationRetryTime", this.maxOperationRetryTime, "maxUploadRetryTime", this.maxUploadRetryTime, "maxDownloadRetryTime", this.maxDownloadRetryTime, "bucket", this.bucket, "host", this.emulatorHost, "port", this.emulatorPort]));
        } catch (e$) {
          let e = dart.getThrown(e$);
          let s = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$2.convertPlatformException(e, s);
          } else
            throw e$;
        }
      }).bind(this));
    }
    setMaxOperationRetryTime(time) {
      this.maxOperationRetryTime = time;
    }
    setMaxUploadRetryTime(time) {
      this.maxUploadRetryTime = time;
    }
    setMaxDownloadRetryTime(time) {
      return async.async(dart.void, (function* setMaxDownloadRetryTime() {
        this.maxDownloadRetryTime = time;
      }).bind(this));
    }
  };
  (method_channel_firebase_storage.MethodChannelFirebaseStorage.new = function(opts) {
    let app = opts && 'app' in opts ? opts.app : null;
    let bucket = opts && 'bucket' in opts ? opts.bucket : null;
    this[S.maxOperationRetryTime] = (C[58] || CT.C58).inMilliseconds;
    this[S.maxUploadRetryTime] = (C[57] || CT.C57).inMilliseconds;
    this[S.maxDownloadRetryTime] = (C[57] || CT.C57).inMilliseconds;
    method_channel_firebase_storage.MethodChannelFirebaseStorage.__proto__.new.call(this, {appInstance: app, bucket: bucket});
    if (method_channel_firebase_storage.MethodChannelFirebaseStorage._initialized) return;
    method_channel_firebase_storage.MethodChannelFirebaseStorage.channel.setMethodCallHandler(dart.fn(call => async.async(dart.void, (function*() {
      let $arguments = core.Map.as(call.arguments);
      switch (call.method) {
        case "Task#onProgress":
          {
            return this[S._handleTaskStateChange](task_state.TaskState.running, $arguments);
          }
        case "Task#onPaused":
          {
            return this[S._handleTaskStateChange](task_state.TaskState.paused, $arguments);
          }
        case "Task#onSuccess":
          {
            return this[S._handleTaskStateChange](task_state.TaskState.success, $arguments);
          }
        case "Task#onCanceled":
          {
            return this[S._sendTaskException](core.int.as($arguments[S$.$_get]("handle")), new firebase_core_platform_interface.FirebaseException.new({plugin: "firebase_storage", code: "canceled", message: "User canceled the upload/download."}));
          }
        case "Task#onFailure":
          {
            let errorMap = T$.LinkedHashMapOfString$dynamic().from(core.Map.as($arguments[S$.$_get]("error")));
            return this[S._sendTaskException](core.int.as($arguments[S$.$_get]("handle")), new firebase_core_platform_interface.FirebaseException.new({plugin: "firebase_storage", code: T$.StringN().as(errorMap[S$.$_get]("code")), message: T$.StringN().as(errorMap[S$.$_get]("message"))}));
          }
      }
    }).bind(this)), T$.MethodCallToFutureOfvoid()));
    method_channel_firebase_storage.MethodChannelFirebaseStorage._initialized = true;
  }).prototype = method_channel_firebase_storage.MethodChannelFirebaseStorage.prototype;
  (method_channel_firebase_storage.MethodChannelFirebaseStorage.__ = function() {
    this[S.maxOperationRetryTime] = (C[58] || CT.C58).inMilliseconds;
    this[S.maxUploadRetryTime] = (C[57] || CT.C57).inMilliseconds;
    this[S.maxDownloadRetryTime] = (C[57] || CT.C57).inMilliseconds;
    method_channel_firebase_storage.MethodChannelFirebaseStorage.__proto__.new.call(this, {appInstance: null, bucket: ""});
    ;
  }).prototype = method_channel_firebase_storage.MethodChannelFirebaseStorage.prototype;
  dart.addTypeTests(method_channel_firebase_storage.MethodChannelFirebaseStorage);
  dart.addTypeCaches(method_channel_firebase_storage.MethodChannelFirebaseStorage);
  dart.setMethodSignature(method_channel_firebase_storage.MethodChannelFirebaseStorage, () => ({
    __proto__: dart.getMethods(method_channel_firebase_storage.MethodChannelFirebaseStorage.__proto__),
    [S._handleTaskStateChange]: dart.fnType(async.Future$(dart.void), [task_state.TaskState, core.Map]),
    [S._sendTaskException]: dart.fnType(dart.void, [core.int, firebase_core_platform_interface.FirebaseException]),
    setMaxDownloadRetryTime: dart.fnType(async.Future$(dart.void), [core.int])
  }));
  dart.setStaticMethodSignature(method_channel_firebase_storage.MethodChannelFirebaseStorage, () => ['_getInstanceKey']);
  dart.setStaticGetterSignature(method_channel_firebase_storage.MethodChannelFirebaseStorage, () => ['instance', 'nextMethodChannelHandleId']);
  dart.setLibraryUri(method_channel_firebase_storage.MethodChannelFirebaseStorage, I[147]);
  dart.setFieldSignature(method_channel_firebase_storage.MethodChannelFirebaseStorage, () => ({
    __proto__: dart.getFields(method_channel_firebase_storage.MethodChannelFirebaseStorage.__proto__),
    maxOperationRetryTime: dart.fieldType(core.int),
    maxUploadRetryTime: dart.fieldType(core.int),
    maxDownloadRetryTime: dart.fieldType(core.int)
  }));
  dart.setStaticFieldSignature(method_channel_firebase_storage.MethodChannelFirebaseStorage, () => ['_initialized', 'channel', '_methodChannelFirebaseStorageInstances', '_methodChannelHandleId', 'taskObservers']);
  dart.defineLazy(method_channel_firebase_storage.MethodChannelFirebaseStorage, {
    /*method_channel_firebase_storage.MethodChannelFirebaseStorage._initialized*/get _initialized() {
      return false;
    },
    set _initialized(value) {},
    /*method_channel_firebase_storage.MethodChannelFirebaseStorage.channel*/get channel() {
      return C[147] || CT.C147;
    },
    /*method_channel_firebase_storage.MethodChannelFirebaseStorage._methodChannelFirebaseStorageInstances*/get _methodChannelFirebaseStorageInstances() {
      return new (T$.IdentityMapOfString$MethodChannelFirebaseStorage()).new();
    },
    set _methodChannelFirebaseStorageInstances(value) {},
    /*method_channel_firebase_storage.MethodChannelFirebaseStorage._methodChannelHandleId*/get _methodChannelHandleId() {
      return 0;
    },
    set _methodChannelHandleId(value) {},
    /*method_channel_firebase_storage.MethodChannelFirebaseStorage.taskObservers*/get taskObservers() {
      return new (T$.IdentityMapOfint$StreamControllerOfTaskSnapshotPlatform()).new();
    }
  }, false);
  pointer$.Pointer = class Pointer extends core.Object {
    static ['_#new#tearOff'](path) {
      return new pointer$.Pointer.new(path);
    }
    get isRoot() {
      return this.path === "/";
    }
    get path() {
      return this[S._path$2];
    }
    get name() {
      return this.path[S$.$split]("/")[S$.$last];
    }
    get parent() {
      if (this.isRoot) {
        return null;
      }
      let chunks = this.path[S$.$split]("/");
      chunks[S$.$removeLast]();
      return chunks[S$.$join]("/");
    }
    child(childPath) {
      let childPointer = new pointer$.Pointer.new(childPath);
      if (this.isRoot) {
        return childPointer.path;
      }
      return this.path + "/" + childPointer.path;
    }
  };
  (pointer$.Pointer.new = function(path) {
    let t191;
    this[S._path$2] = (t191 = path, t191 == null ? "/" : t191);
    if (this[S._path$2][S$.$isEmpty]) {
      this[S._path$2] = "/";
    } else {
      let _parsedPath = this[S._path$2];
      if (this[S._path$2].length > 1 && this[S._path$2][S$.$endsWith]("/")) {
        _parsedPath = _parsedPath[S.$substring](0, _parsedPath.length - 1);
      }
      if (this[S._path$2][S$.$startsWith]("/") && this[S._path$2].length > 1) {
        _parsedPath = _parsedPath[S.$substring](1, _parsedPath.length);
      }
      this[S._path$2] = _parsedPath;
    }
  }).prototype = pointer$.Pointer.prototype;
  dart.addTypeTests(pointer$.Pointer);
  dart.addTypeCaches(pointer$.Pointer);
  dart.setMethodSignature(pointer$.Pointer, () => ({
    __proto__: dart.getMethods(pointer$.Pointer.__proto__),
    child: dart.fnType(core.String, [core.String])
  }));
  dart.setGetterSignature(pointer$.Pointer, () => ({
    __proto__: dart.getGetters(pointer$.Pointer.__proto__),
    isRoot: core.bool,
    path: core.String,
    name: core.String,
    parent: dart.nullable(core.String)
  }));
  dart.setLibraryUri(pointer$.Pointer, I[148]);
  dart.setFieldSignature(pointer$.Pointer, () => ({
    __proto__: dart.getFields(pointer$.Pointer.__proto__),
    [S._path$2]: dart.fieldType(core.String)
  }));
  client$.Client = class Client extends core.Object {
    static new() {
      let t191;
      t191 = client$.zoneClient;
      return t191 == null ? browser_client.createClient() : t191;
    }
    static ['_#new#tearOff']() {
      return client$.Client.new();
    }
  };
  (client$.Client[dart.mixinNew] = function() {
  }).prototype = client$.Client.prototype;
  dart.addTypeTests(client$.Client);
  dart.addTypeCaches(client$.Client);
  dart.setStaticMethodSignature(client$.Client, () => ['new']);
  dart.setLibraryUri(client$.Client, I[149]);
  client$.runWithClient = function runWithClient(R, body, clientFactory, opts) {
    let zoneSpecification = opts && 'zoneSpecification' in opts ? opts.zoneSpecification : null;
    return async.runZoned(R, body, {zoneValues: new (T$.LinkedMapOfObjectN$ObjectN()).from([C[148] || CT.C148, async.Zone.current.bindCallback(client$.Client, clientFactory)]), zoneSpecification: zoneSpecification});
  };
  dart.copyProperties(client$, {
    get zoneClient() {
      let client = async.Zone.current._get(C[148] || CT.C148);
      return client == null ? null : T$.VoidToClient().as(client)();
    }
  });
  exception$1.ClientException = class ClientException extends core.Object {
    get message() {
      return this[S.message$1];
    }
    set message(value) {
      super.message = value;
    }
    get uri() {
      return this[S.uri];
    }
    set uri(value) {
      super.uri = value;
    }
    static ['_#new#tearOff'](message, uri = null) {
      return new exception$1.ClientException.new(message, uri);
    }
    toString() {
      return this.message;
    }
  };
  (exception$1.ClientException.new = function(message, uri = null) {
    this[S.message$1] = message;
    this[S.uri] = uri;
    ;
  }).prototype = exception$1.ClientException.prototype;
  dart.addTypeTests(exception$1.ClientException);
  dart.addTypeCaches(exception$1.ClientException);
  exception$1.ClientException[dart.implements] = () => [core.Exception];
  dart.setLibraryUri(exception$1.ClientException, I[150]);
  dart.setFieldSignature(exception$1.ClientException, () => ({
    __proto__: dart.getFields(exception$1.ClientException.__proto__),
    message: dart.finalFieldType(core.String),
    uri: dart.finalFieldType(dart.nullable(core.Uri))
  }));
  dart.defineExtensionMethods(exception$1.ClientException, ['toString']);
  base_request.BaseRequest = class BaseRequest extends core.Object {
    get method() {
      return this[S.method];
    }
    set method(value) {
      super.method = value;
    }
    get url() {
      return this[S.url$1];
    }
    set url(value) {
      super.url = value;
    }
    get headers() {
      return this[S.headers];
    }
    set headers(value) {
      super.headers = value;
    }
    get contentLength() {
      return this[S._contentLength];
    }
    set contentLength(value) {
      if (value != null && dart.notNull(value) < 0) {
        dart.throw(new core.ArgumentError.new("Invalid content length " + dart.str(value) + "."));
      }
      this[S._checkFinalized$1]();
      this[S._contentLength] = value;
    }
    get persistentConnection() {
      return this[S._persistentConnection];
    }
    set persistentConnection(value) {
      this[S._checkFinalized$1]();
      this[S._persistentConnection] = value;
    }
    get followRedirects() {
      return this[S._followRedirects];
    }
    set followRedirects(value) {
      this[S._checkFinalized$1]();
      this[S._followRedirects] = value;
    }
    get maxRedirects() {
      return this[S._maxRedirects];
    }
    set maxRedirects(value) {
      this[S._checkFinalized$1]();
      this[S._maxRedirects] = value;
    }
    get finalized() {
      return this[S._finalized];
    }
    static _validateMethod(method) {
      if (!base_request.BaseRequest._tokenRE.hasMatch(method)) {
        dart.throw(new core.ArgumentError.value(method, "method", "Not a valid method"));
      }
      return method;
    }
    finalize() {
      if (this.finalized) dart.throw(new core.StateError.new("Can't finalize a finalized Request."));
      this[S._finalized] = true;
      return C[149] || CT.C149;
    }
    send() {
      return async.async(streamed_response.StreamedResponse, (function* send() {
        let client = client$.Client.new();
        try {
          let response = (yield client.send(this));
          let stream = utils$2.onDone(T$.ListOfint(), response.stream, dart.bind(client, 'close'));
          return new streamed_response.StreamedResponse.new(new byte_stream.ByteStream.new(stream), response.statusCode, {contentLength: response.contentLength, request: response.request, headers: response.headers, isRedirect: response.isRedirect, persistentConnection: response.persistentConnection, reasonPhrase: response.reasonPhrase});
        } catch (e) {
          let _ = dart.getThrown(e);
          if (core.Object.is(_)) {
            client.close();
            dart.rethrow(e);
          } else
            throw e;
        }
      }).bind(this));
    }
    [S._checkFinalized$1]() {
      if (!this.finalized) return;
      dart.throw(new core.StateError.new("Can't modify a finalized Request."));
    }
    toString() {
      return this.method + " " + dart.str(this.url);
    }
  };
  (base_request.BaseRequest.new = function(method, url) {
    this[S._contentLength] = null;
    this[S._persistentConnection] = true;
    this[S._followRedirects] = true;
    this[S._maxRedirects] = 5;
    this[S._finalized] = false;
    this[S.url$1] = url;
    this[S.method] = base_request.BaseRequest._validateMethod(method);
    this[S.headers] = T$.LinkedHashMapOfString$String().new({equals: dart.fn((key1, key2) => key1[S$.$toLowerCase]() === key2[S$.$toLowerCase](), T$.StringAndStringTobool()), hashCode: dart.fn(key => key[S$.$toLowerCase]()[S$.$hashCode], T$.StringToint())});
    ;
  }).prototype = base_request.BaseRequest.prototype;
  dart.addTypeTests(base_request.BaseRequest);
  dart.addTypeCaches(base_request.BaseRequest);
  dart.setMethodSignature(base_request.BaseRequest, () => ({
    __proto__: dart.getMethods(base_request.BaseRequest.__proto__),
    finalize: dart.fnType(byte_stream.ByteStream, []),
    send: dart.fnType(async.Future$(streamed_response.StreamedResponse), []),
    [S._checkFinalized$1]: dart.fnType(dart.void, [])
  }));
  dart.setStaticMethodSignature(base_request.BaseRequest, () => ['_validateMethod']);
  dart.setGetterSignature(base_request.BaseRequest, () => ({
    __proto__: dart.getGetters(base_request.BaseRequest.__proto__),
    contentLength: dart.nullable(core.int),
    persistentConnection: core.bool,
    followRedirects: core.bool,
    maxRedirects: core.int,
    finalized: core.bool
  }));
  dart.setSetterSignature(base_request.BaseRequest, () => ({
    __proto__: dart.getSetters(base_request.BaseRequest.__proto__),
    contentLength: dart.nullable(core.int),
    persistentConnection: core.bool,
    followRedirects: core.bool,
    maxRedirects: core.int
  }));
  dart.setLibraryUri(base_request.BaseRequest, I[151]);
  dart.setFieldSignature(base_request.BaseRequest, () => ({
    __proto__: dart.getFields(base_request.BaseRequest.__proto__),
    method: dart.finalFieldType(core.String),
    url: dart.finalFieldType(core.Uri),
    [S._contentLength]: dart.fieldType(dart.nullable(core.int)),
    [S._persistentConnection]: dart.fieldType(core.bool),
    [S._followRedirects]: dart.fieldType(core.bool),
    [S._maxRedirects]: dart.fieldType(core.int),
    headers: dart.finalFieldType(core.Map$(core.String, core.String)),
    [S._finalized]: dart.fieldType(core.bool)
  }));
  dart.setStaticFieldSignature(base_request.BaseRequest, () => ['_tokenRE']);
  dart.defineExtensionMethods(base_request.BaseRequest, ['toString']);
  dart.defineLazy(base_request.BaseRequest, {
    /*base_request.BaseRequest._tokenRE*/get _tokenRE() {
      return core.RegExp.new("^[\\w!#%&'*+\\-.^`|~]+$");
    }
  }, false);
  request$.Request = class Request extends base_request.BaseRequest {
    get contentLength() {
      return this.bodyBytes[S$.$length];
    }
    set contentLength(value) {
      dart.throw(new core.UnsupportedError.new("Cannot set the contentLength property of " + "non-streaming Request objects."));
    }
    get encoding() {
      if (this[S._contentType] == null || !dart.nullCheck(this[S._contentType]).parameters[S$.$containsKey]("charset")) {
        return this[S._defaultEncoding];
      }
      return utils$2.requiredEncodingForCharset(dart.nullCheck(dart.nullCheck(this[S._contentType]).parameters[S$.$_get]("charset")));
    }
    set encoding(value) {
      this[S._checkFinalized]();
      this[S._defaultEncoding] = value;
      let contentType = this[S._contentType];
      if (contentType == null) return;
      this[S._contentType] = contentType.change({parameters: new (T$.IdentityMapOfString$String()).from(["charset", value.name])});
    }
    get bodyBytes() {
      return this[S._bodyBytes];
    }
    set bodyBytes(value) {
      this[S._checkFinalized]();
      this[S._bodyBytes] = utils$2.toUint8List(value);
    }
    get body() {
      return this.encoding.decode(this.bodyBytes);
    }
    set body(value) {
      this.bodyBytes = this.encoding.encode(value);
      let contentType = this[S._contentType];
      if (contentType == null) {
        this[S._contentType] = new media_type.MediaType.new("text", "plain", new (T$.IdentityMapOfString$String()).from(["charset", this.encoding.name]));
      } else if (!contentType.parameters[S$.$containsKey]("charset")) {
        this[S._contentType] = contentType.change({parameters: new (T$.IdentityMapOfString$String()).from(["charset", this.encoding.name])});
      }
    }
    get bodyFields() {
      let contentType = this[S._contentType];
      if (contentType == null || contentType.mimeType !== "application/x-www-form-urlencoded") {
        dart.throw(new core.StateError.new("Cannot access the body fields of a Request without " + "content-type \"application/x-www-form-urlencoded\"."));
      }
      return core.Uri.splitQueryString(this.body, {encoding: this.encoding});
    }
    set bodyFields(fields) {
      let contentType = this[S._contentType];
      if (contentType == null) {
        this[S._contentType] = new media_type.MediaType.new("application", "x-www-form-urlencoded");
      } else if (contentType.mimeType !== "application/x-www-form-urlencoded") {
        dart.throw(new core.StateError.new("Cannot set the body fields of a Request with " + "content-type \"" + contentType.mimeType + "\"."));
      }
      this.body = utils$2.mapToQuery(fields, {encoding: this.encoding});
    }
    static ['_#new#tearOff'](method, url) {
      return new request$.Request.new(method, url);
    }
    finalize() {
      super.finalize();
      return byte_stream.ByteStream.fromBytes(this.bodyBytes);
    }
    get [S._contentType]() {
      let contentType = this.headers[S$.$_get]("content-type");
      if (contentType == null) return null;
      return media_type.MediaType.parse(contentType);
    }
    set [S._contentType](value) {
      if (value == null) {
        this.headers[S$.$remove]("content-type");
      } else {
        this.headers[S$.$_set]("content-type", dart.toString(value));
      }
    }
    [S._checkFinalized]() {
      if (!this.finalized) return;
      dart.throw(new core.StateError.new("Can't modify a finalized Request."));
    }
  };
  (request$.Request.new = function(method, url) {
    this[S._defaultEncoding] = convert.utf8;
    this[S._bodyBytes] = _native_typed_data.NativeUint8List.new(0);
    request$.Request.__proto__.new.call(this, method, url);
    ;
  }).prototype = request$.Request.prototype;
  dart.addTypeTests(request$.Request);
  dart.addTypeCaches(request$.Request);
  dart.setMethodSignature(request$.Request, () => ({
    __proto__: dart.getMethods(request$.Request.__proto__),
    [S._checkFinalized]: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(request$.Request, () => ({
    __proto__: dart.getGetters(request$.Request.__proto__),
    contentLength: core.int,
    encoding: convert.Encoding,
    bodyBytes: typed_data.Uint8List,
    body: core.String,
    bodyFields: core.Map$(core.String, core.String),
    [S._contentType]: dart.nullable(media_type.MediaType)
  }));
  dart.setSetterSignature(request$.Request, () => ({
    __proto__: dart.getSetters(request$.Request.__proto__),
    encoding: convert.Encoding,
    bodyBytes: core.List$(core.int),
    body: core.String,
    bodyFields: core.Map$(core.String, core.String),
    [S._contentType]: dart.nullable(media_type.MediaType)
  }));
  dart.setLibraryUri(request$.Request, I[152]);
  dart.setFieldSignature(request$.Request, () => ({
    __proto__: dart.getFields(request$.Request.__proto__),
    [S._defaultEncoding]: dart.fieldType(convert.Encoding),
    [S._bodyBytes]: dart.fieldType(typed_data.Uint8List)
  }));
  base_response.BaseResponse = class BaseResponse extends core.Object {
    get request() {
      return this[S.request];
    }
    set request(value) {
      super.request = value;
    }
    get statusCode() {
      return this[S.statusCode];
    }
    set statusCode(value) {
      super.statusCode = value;
    }
    get reasonPhrase() {
      return this[S.reasonPhrase];
    }
    set reasonPhrase(value) {
      super.reasonPhrase = value;
    }
    get contentLength() {
      return this[S.contentLength];
    }
    set contentLength(value) {
      super.contentLength = value;
    }
    get headers() {
      return this[S.headers$1];
    }
    set headers(value) {
      super.headers = value;
    }
    get isRedirect() {
      return this[S.isRedirect];
    }
    set isRedirect(value) {
      super.isRedirect = value;
    }
    get persistentConnection() {
      return this[S.persistentConnection];
    }
    set persistentConnection(value) {
      super.persistentConnection = value;
    }
  };
  (base_response.BaseResponse.new = function(statusCode, opts) {
    let contentLength = opts && 'contentLength' in opts ? opts.contentLength : null;
    let request = opts && 'request' in opts ? opts.request : null;
    let headers = opts && 'headers' in opts ? opts.headers : C[151] || CT.C151;
    let isRedirect = opts && 'isRedirect' in opts ? opts.isRedirect : false;
    let persistentConnection = opts && 'persistentConnection' in opts ? opts.persistentConnection : true;
    let reasonPhrase = opts && 'reasonPhrase' in opts ? opts.reasonPhrase : null;
    this[S.statusCode] = statusCode;
    this[S.contentLength] = contentLength;
    this[S.request] = request;
    this[S.headers$1] = headers;
    this[S.isRedirect] = isRedirect;
    this[S.persistentConnection] = persistentConnection;
    this[S.reasonPhrase] = reasonPhrase;
    if (this.statusCode < 100) {
      dart.throw(new core.ArgumentError.new("Invalid status code " + dart.str(this.statusCode) + "."));
    } else if (this.contentLength != null && dart.nullCheck(this.contentLength) < 0) {
      dart.throw(new core.ArgumentError.new("Invalid content length " + dart.str(this.contentLength) + "."));
    }
  }).prototype = base_response.BaseResponse.prototype;
  dart.addTypeTests(base_response.BaseResponse);
  dart.addTypeCaches(base_response.BaseResponse);
  dart.setLibraryUri(base_response.BaseResponse, I[153]);
  dart.setFieldSignature(base_response.BaseResponse, () => ({
    __proto__: dart.getFields(base_response.BaseResponse.__proto__),
    request: dart.finalFieldType(dart.nullable(base_request.BaseRequest)),
    statusCode: dart.finalFieldType(core.int),
    reasonPhrase: dart.finalFieldType(dart.nullable(core.String)),
    contentLength: dart.finalFieldType(dart.nullable(core.int)),
    headers: dart.finalFieldType(core.Map$(core.String, core.String)),
    isRedirect: dart.finalFieldType(core.bool),
    persistentConnection: dart.finalFieldType(core.bool)
  }));
  response$.Response = class Response extends base_response.BaseResponse {
    get bodyBytes() {
      return this[S.bodyBytes];
    }
    set bodyBytes(value) {
      super.bodyBytes = value;
    }
    get body() {
      return response$._encodingForHeaders(this.headers).decode(this.bodyBytes);
    }
    static ['_#new#tearOff'](body, statusCode, opts) {
      let request = opts && 'request' in opts ? opts.request : null;
      let headers = opts && 'headers' in opts ? opts.headers : C[151] || CT.C151;
      let isRedirect = opts && 'isRedirect' in opts ? opts.isRedirect : false;
      let persistentConnection = opts && 'persistentConnection' in opts ? opts.persistentConnection : true;
      let reasonPhrase = opts && 'reasonPhrase' in opts ? opts.reasonPhrase : null;
      return new response$.Response.new(body, statusCode, {request: request, headers: headers, isRedirect: isRedirect, persistentConnection: persistentConnection, reasonPhrase: reasonPhrase});
    }
    static ['_#bytes#tearOff'](bodyBytes, statusCode, opts) {
      let request = opts && 'request' in opts ? opts.request : null;
      let headers = opts && 'headers' in opts ? opts.headers : null;
      let isRedirect = opts && 'isRedirect' in opts ? opts.isRedirect : null;
      let persistentConnection = opts && 'persistentConnection' in opts ? opts.persistentConnection : null;
      let reasonPhrase = opts && 'reasonPhrase' in opts ? opts.reasonPhrase : null;
      return new response$.Response.bytes(bodyBytes, statusCode, {request: request, headers: headers, isRedirect: isRedirect, persistentConnection: persistentConnection, reasonPhrase: reasonPhrase});
    }
    static fromStream(response) {
      return async.async(response$.Response, function* fromStream() {
        let body = (yield response.stream.toBytes());
        return new response$.Response.bytes(body, response.statusCode, {request: response.request, headers: response.headers, isRedirect: response.isRedirect, persistentConnection: response.persistentConnection, reasonPhrase: response.reasonPhrase});
      });
    }
  };
  (response$.Response.new = function(body, statusCode, opts) {
    let request = opts && 'request' in opts ? opts.request : null;
    let headers = opts && 'headers' in opts ? opts.headers : C[151] || CT.C151;
    let isRedirect = opts && 'isRedirect' in opts ? opts.isRedirect : false;
    let persistentConnection = opts && 'persistentConnection' in opts ? opts.persistentConnection : true;
    let reasonPhrase = opts && 'reasonPhrase' in opts ? opts.reasonPhrase : null;
    response$.Response.bytes.call(this, response$._encodingForHeaders(headers).encode(body), statusCode, {request: request, headers: headers, isRedirect: isRedirect, persistentConnection: persistentConnection, reasonPhrase: reasonPhrase});
  }).prototype = response$.Response.prototype;
  (response$.Response.bytes = function(bodyBytes, statusCode, opts) {
    let request = opts && 'request' in opts ? opts.request : null;
    let headers = opts && 'headers' in opts ? opts.headers : C[151] || CT.C151;
    let isRedirect = opts && 'isRedirect' in opts ? opts.isRedirect : false;
    let persistentConnection = opts && 'persistentConnection' in opts ? opts.persistentConnection : true;
    let reasonPhrase = opts && 'reasonPhrase' in opts ? opts.reasonPhrase : null;
    this[S.bodyBytes] = utils$2.toUint8List(bodyBytes);
    response$.Response.__proto__.new.call(this, statusCode, {contentLength: bodyBytes[S$.$length], request: request, headers: headers, isRedirect: isRedirect, persistentConnection: persistentConnection, reasonPhrase: reasonPhrase});
    ;
  }).prototype = response$.Response.prototype;
  dart.addTypeTests(response$.Response);
  dart.addTypeCaches(response$.Response);
  dart.setStaticMethodSignature(response$.Response, () => ['fromStream']);
  dart.setGetterSignature(response$.Response, () => ({
    __proto__: dart.getGetters(response$.Response.__proto__),
    body: core.String
  }));
  dart.setLibraryUri(response$.Response, I[154]);
  dart.setFieldSignature(response$.Response, () => ({
    __proto__: dart.getFields(response$.Response.__proto__),
    bodyBytes: dart.finalFieldType(typed_data.Uint8List)
  }));
  response$._encodingForHeaders = function _encodingForHeaders(headers) {
    return utils$2.encodingForCharset(response$._contentTypeForHeaders(headers).parameters[S$.$_get]("charset"));
  };
  response$._contentTypeForHeaders = function _contentTypeForHeaders(headers) {
    let contentType = headers[S$.$_get]("content-type");
    if (contentType != null) return media_type.MediaType.parse(contentType);
    return new media_type.MediaType.new("application", "octet-stream");
  };
  streamed_request.StreamedRequest = class StreamedRequest extends base_request.BaseRequest {
    get sink() {
      return this[S._controller].sink;
    }
    static ['_#new#tearOff'](method, url) {
      return new streamed_request.StreamedRequest.new(method, url);
    }
    finalize() {
      super.finalize();
      return new byte_stream.ByteStream.new(this[S._controller].stream);
    }
  };
  (streamed_request.StreamedRequest.new = function(method, url) {
    this[S._controller] = T$.StreamControllerOfListOfint().new({sync: true});
    streamed_request.StreamedRequest.__proto__.new.call(this, method, url);
    ;
  }).prototype = streamed_request.StreamedRequest.prototype;
  dart.addTypeTests(streamed_request.StreamedRequest);
  dart.addTypeCaches(streamed_request.StreamedRequest);
  dart.setGetterSignature(streamed_request.StreamedRequest, () => ({
    __proto__: dart.getGetters(streamed_request.StreamedRequest.__proto__),
    sink: async.EventSink$(core.List$(core.int))
  }));
  dart.setLibraryUri(streamed_request.StreamedRequest, I[155]);
  dart.setFieldSignature(streamed_request.StreamedRequest, () => ({
    __proto__: dart.getFields(streamed_request.StreamedRequest.__proto__),
    [S._controller]: dart.finalFieldType(async.StreamController$(core.List$(core.int)))
  }));
  base_client.BaseClient = class BaseClient extends core.Object {
    head(url, opts) {
      let headers = opts && 'headers' in opts ? opts.headers : null;
      return this[S._sendUnstreamed]("HEAD", url, headers);
    }
    get(url, opts) {
      let headers = opts && 'headers' in opts ? opts.headers : null;
      return this[S._sendUnstreamed]("GET", url, headers);
    }
    post(url, opts) {
      let headers = opts && 'headers' in opts ? opts.headers : null;
      let body = opts && 'body' in opts ? opts.body : null;
      let encoding = opts && 'encoding' in opts ? opts.encoding : null;
      return this[S._sendUnstreamed]("POST", url, headers, body, encoding);
    }
    put(url, opts) {
      let headers = opts && 'headers' in opts ? opts.headers : null;
      let body = opts && 'body' in opts ? opts.body : null;
      let encoding = opts && 'encoding' in opts ? opts.encoding : null;
      return this[S._sendUnstreamed]("PUT", url, headers, body, encoding);
    }
    patch(url, opts) {
      let headers = opts && 'headers' in opts ? opts.headers : null;
      let body = opts && 'body' in opts ? opts.body : null;
      let encoding = opts && 'encoding' in opts ? opts.encoding : null;
      return this[S._sendUnstreamed]("PATCH", url, headers, body, encoding);
    }
    delete(url, opts) {
      let headers = opts && 'headers' in opts ? opts.headers : null;
      let body = opts && 'body' in opts ? opts.body : null;
      let encoding = opts && 'encoding' in opts ? opts.encoding : null;
      return this[S._sendUnstreamed]("DELETE", url, headers, body, encoding);
    }
    read(url, opts) {
      let headers = opts && 'headers' in opts ? opts.headers : null;
      return async.async(core.String, (function* read() {
        let response = (yield this.get(url, {headers: headers}));
        this[S._checkResponseSuccess](url, response);
        return response.body;
      }).bind(this));
    }
    readBytes(url, opts) {
      let headers = opts && 'headers' in opts ? opts.headers : null;
      return async.async(typed_data.Uint8List, (function* readBytes() {
        let response = (yield this.get(url, {headers: headers}));
        this[S._checkResponseSuccess](url, response);
        return response.bodyBytes;
      }).bind(this));
    }
    [S._sendUnstreamed](method, url, headers, body = null, encoding = null) {
      return async.async(response$.Response, (function* _sendUnstreamed() {
        let request = new request$.Request.new(method, url);
        if (headers != null) request.headers[S$.$addAll](headers);
        if (encoding != null) request.encoding = encoding;
        if (body != null) {
          if (typeof body == 'string') {
            request.body = body;
          } else if (core.List.is(body)) {
            request.bodyBytes = body[S$.$cast](core.int);
          } else if (core.Map.is(body)) {
            request.bodyFields = body[S$.$cast](core.String, core.String);
          } else {
            dart.throw(new core.ArgumentError.new("Invalid request body \"" + dart.str(body) + "\"."));
          }
        }
        return response$.Response.fromStream(yield this.send(request));
      }).bind(this));
    }
    [S._checkResponseSuccess](url, response) {
      if (response.statusCode < 400) return;
      let message = "Request to " + dart.str(url) + " failed with status " + dart.str(response.statusCode);
      if (response.reasonPhrase != null) {
        message = message + ": " + dart.str(response.reasonPhrase);
      }
      dart.throw(new exception$1.ClientException.new(message + ".", url));
    }
    close() {
    }
  };
  (base_client.BaseClient.new = function() {
    ;
  }).prototype = base_client.BaseClient.prototype;
  dart.addTypeTests(base_client.BaseClient);
  dart.addTypeCaches(base_client.BaseClient);
  base_client.BaseClient[dart.implements] = () => [client$.Client];
  dart.setMethodSignature(base_client.BaseClient, () => ({
    __proto__: dart.getMethods(base_client.BaseClient.__proto__),
    head: dart.fnType(async.Future$(response$.Response), [core.Uri], {headers: dart.nullable(core.Map$(core.String, core.String))}, {}),
    get: dart.fnType(async.Future$(response$.Response), [core.Uri], {headers: dart.nullable(core.Map$(core.String, core.String))}, {}),
    post: dart.fnType(async.Future$(response$.Response), [core.Uri], {body: dart.nullable(core.Object), encoding: dart.nullable(convert.Encoding), headers: dart.nullable(core.Map$(core.String, core.String))}, {}),
    put: dart.fnType(async.Future$(response$.Response), [core.Uri], {body: dart.nullable(core.Object), encoding: dart.nullable(convert.Encoding), headers: dart.nullable(core.Map$(core.String, core.String))}, {}),
    patch: dart.fnType(async.Future$(response$.Response), [core.Uri], {body: dart.nullable(core.Object), encoding: dart.nullable(convert.Encoding), headers: dart.nullable(core.Map$(core.String, core.String))}, {}),
    delete: dart.fnType(async.Future$(response$.Response), [core.Uri], {body: dart.nullable(core.Object), encoding: dart.nullable(convert.Encoding), headers: dart.nullable(core.Map$(core.String, core.String))}, {}),
    read: dart.fnType(async.Future$(core.String), [core.Uri], {headers: dart.nullable(core.Map$(core.String, core.String))}, {}),
    readBytes: dart.fnType(async.Future$(typed_data.Uint8List), [core.Uri], {headers: dart.nullable(core.Map$(core.String, core.String))}, {}),
    [S._sendUnstreamed]: dart.fnType(async.Future$(response$.Response), [core.String, core.Uri, dart.nullable(core.Map$(core.String, core.String))], [dart.nullable(core.Object), dart.nullable(convert.Encoding)]),
    [S._checkResponseSuccess]: dart.fnType(dart.void, [core.Uri, response$.Response]),
    close: dart.fnType(dart.void, [])
  }));
  dart.setLibraryUri(base_client.BaseClient, I[156]);
  byte_stream.ByteStream = class ByteStream extends async.StreamView$(core.List$(core.int)) {
    static ['_#new#tearOff'](stream) {
      return new byte_stream.ByteStream.new(stream);
    }
    static fromBytes(bytes) {
      return new byte_stream.ByteStream.new(T$.StreamOfListOfint().value(bytes));
    }
    static ['_#fromBytes#tearOff'](bytes) {
      return byte_stream.ByteStream.fromBytes(bytes);
    }
    toBytes() {
      let completer = T$.CompleterOfUint8List().new();
      let sink = new convert._ByteCallbackSink.new(dart.fn(bytes => completer.complete(_native_typed_data.NativeUint8List.fromList(bytes)), T$.ListOfintTovoid()));
      this.listen(T$.ListOfintTovoid().as(dart.bind(sink, 'add')), {onError: dart.bind(completer, 'completeError'), onDone: dart.bind(sink, 'close'), cancelOnError: true});
      return completer.future;
    }
    bytesToString(encoding = C[152] || CT.C152) {
      return encoding.decodeStream(this);
    }
    toStringStream(encoding = C[152] || CT.C152) {
      return encoding.decoder.bind(this);
    }
  };
  (byte_stream.ByteStream.new = function(stream) {
    byte_stream.ByteStream.__proto__.new.call(this, stream);
    ;
  }).prototype = byte_stream.ByteStream.prototype;
  dart.addTypeTests(byte_stream.ByteStream);
  dart.addTypeCaches(byte_stream.ByteStream);
  dart.setMethodSignature(byte_stream.ByteStream, () => ({
    __proto__: dart.getMethods(byte_stream.ByteStream.__proto__),
    toBytes: dart.fnType(async.Future$(typed_data.Uint8List), []),
    bytesToString: dart.fnType(async.Future$(core.String), [], [convert.Encoding]),
    toStringStream: dart.fnType(async.Stream$(core.String), [], [convert.Encoding])
  }));
  dart.setStaticMethodSignature(byte_stream.ByteStream, () => ['fromBytes']);
  dart.setLibraryUri(byte_stream.ByteStream, I[157]);
  multipart_file.MultipartFile = class MultipartFile extends core.Object {
    get field() {
      return this[S.field];
    }
    set field(value) {
      super.field = value;
    }
    get length() {
      return this[S.length];
    }
    set length(value) {
      super.length = value;
    }
    get filename() {
      return this[S.filename];
    }
    set filename(value) {
      super.filename = value;
    }
    get contentType() {
      return this[S.contentType$1];
    }
    set contentType(value) {
      super.contentType = value;
    }
    get isFinalized() {
      return this[S._isFinalized];
    }
    static ['_#new#tearOff'](field, stream, length, opts) {
      let filename = opts && 'filename' in opts ? opts.filename : null;
      let contentType = opts && 'contentType' in opts ? opts.contentType : null;
      return new multipart_file.MultipartFile.new(field, stream, length, {filename: filename, contentType: contentType});
    }
    static fromBytes(field, value, opts) {
      let filename = opts && 'filename' in opts ? opts.filename : null;
      let contentType = opts && 'contentType' in opts ? opts.contentType : null;
      let stream = byte_stream.ByteStream.fromBytes(value);
      return new multipart_file.MultipartFile.new(field, stream, value[S$.$length], {filename: filename, contentType: contentType});
    }
    static ['_#fromBytes#tearOff'](field, value, opts) {
      let filename = opts && 'filename' in opts ? opts.filename : null;
      let contentType = opts && 'contentType' in opts ? opts.contentType : null;
      return multipart_file.MultipartFile.fromBytes(field, value, {filename: filename, contentType: contentType});
    }
    static fromString(field, value, opts) {
      let filename = opts && 'filename' in opts ? opts.filename : null;
      let contentType = opts && 'contentType' in opts ? opts.contentType : null;
      contentType == null ? contentType = new media_type.MediaType.new("text", "plain") : null;
      let encoding = utils$2.encodingForCharset(contentType.parameters[S$.$_get]("charset"), convert.utf8);
      contentType = contentType.change({parameters: new (T$.IdentityMapOfString$String()).from(["charset", encoding.name])});
      return multipart_file.MultipartFile.fromBytes(field, encoding.encode(value), {filename: filename, contentType: contentType});
    }
    static ['_#fromString#tearOff'](field, value, opts) {
      let filename = opts && 'filename' in opts ? opts.filename : null;
      let contentType = opts && 'contentType' in opts ? opts.contentType : null;
      return multipart_file.MultipartFile.fromString(field, value, {filename: filename, contentType: contentType});
    }
    static fromPath(field, filePath, opts) {
      let filename = opts && 'filename' in opts ? opts.filename : null;
      let contentType = opts && 'contentType' in opts ? opts.contentType : null;
      return multipart_file_stub.multipartFileFromPath(field, filePath, {filename: filename, contentType: contentType});
    }
    finalize() {
      if (this.isFinalized) {
        dart.throw(new core.StateError.new("Can't finalize a finalized MultipartFile."));
      }
      this[S._isFinalized] = true;
      return this[S._stream];
    }
  };
  (multipart_file.MultipartFile.new = function(field, stream, length, opts) {
    let t192;
    let filename = opts && 'filename' in opts ? opts.filename : null;
    let contentType = opts && 'contentType' in opts ? opts.contentType : null;
    this[S._isFinalized] = false;
    this[S.field] = field;
    this[S.length] = length;
    this[S.filename] = filename;
    this[S._stream] = utils$2.toByteStream(stream);
    this[S.contentType$1] = (t192 = contentType, t192 == null ? new media_type.MediaType.new("application", "octet-stream") : t192);
    ;
  }).prototype = multipart_file.MultipartFile.prototype;
  dart.addTypeTests(multipart_file.MultipartFile);
  dart.addTypeCaches(multipart_file.MultipartFile);
  dart.setMethodSignature(multipart_file.MultipartFile, () => ({
    __proto__: dart.getMethods(multipart_file.MultipartFile.__proto__),
    finalize: dart.fnType(byte_stream.ByteStream, [])
  }));
  dart.setStaticMethodSignature(multipart_file.MultipartFile, () => ['fromBytes', 'fromString', 'fromPath']);
  dart.setGetterSignature(multipart_file.MultipartFile, () => ({
    __proto__: dart.getGetters(multipart_file.MultipartFile.__proto__),
    isFinalized: core.bool
  }));
  dart.setLibraryUri(multipart_file.MultipartFile, I[158]);
  dart.setFieldSignature(multipart_file.MultipartFile, () => ({
    __proto__: dart.getFields(multipart_file.MultipartFile.__proto__),
    field: dart.finalFieldType(core.String),
    length: dart.finalFieldType(core.int),
    filename: dart.finalFieldType(dart.nullable(core.String)),
    contentType: dart.finalFieldType(media_type.MediaType),
    [S._stream]: dart.finalFieldType(byte_stream.ByteStream),
    [S._isFinalized]: dart.fieldType(core.bool)
  }));
  multipart_request.MultipartRequest = class MultipartRequest extends base_request.BaseRequest {
    get fields() {
      return this[S.fields];
    }
    set fields(value) {
      super.fields = value;
    }
    get files() {
      return this[S.files];
    }
    set files(value) {
      super.files = value;
    }
    static ['_#new#tearOff'](method, url) {
      return new multipart_request.MultipartRequest.new(method, url);
    }
    get contentLength() {
      let length = 0;
      this.fields[S$.$forEach](dart.fn((name, value) => {
        length = length + ("--".length + 70 + "\r\n".length + convert.utf8.encode(this[S._headerForField](name, value))[S$.$length] + convert.utf8.encode(value)[S$.$length] + "\r\n".length);
      }, T$.StringAndStringTovoid()));
      for (let file of this.files) {
        length = length + ("--".length + 70 + "\r\n".length + convert.utf8.encode(this[S._headerForFile](file))[S$.$length] + file.length + "\r\n".length);
      }
      return length + "--".length + 70 + "--\r\n".length;
    }
    set contentLength(value) {
      dart.throw(new core.UnsupportedError.new("Cannot set the contentLength property of " + "multipart requests."));
    }
    finalize() {
      let boundary = this[S._boundaryString]();
      this.headers[S$.$_set]("content-type", "multipart/form-data; boundary=" + boundary);
      super.finalize();
      return new byte_stream.ByteStream.new(this[S._finalize](boundary));
    }
    [S._finalize](boundary) {
      return new (T$._AsyncStarImplOfListOfint()).new((function* _finalize(stream) {
        let line = C[153] || CT.C153;
        let separator = convert.utf8.encode("--" + boundary + "\r\n");
        let close = convert.utf8.encode("--" + boundary + "--\r\n");
        for (let field of this.fields[S.$entries]) {
          if (stream.add(separator)) return;
          yield;
          if (stream.add(convert.utf8.encode(this[S._headerForField](field.key, field.value)))) return;
          yield;
          if (stream.add(convert.utf8.encode(field.value))) return;
          yield;
          if (stream.add(line)) return;
          yield;
        }
        for (let file of this.files) {
          if (stream.add(separator)) return;
          yield;
          if (stream.add(convert.utf8.encode(this[S._headerForFile](file)))) return;
          yield;
          if (stream.addStream(file.finalize())) return;
          yield;
          if (stream.add(line)) return;
          yield;
        }
        if (stream.add(close)) return;
        yield;
      }).bind(this)).stream;
    }
    [S._headerForField](name, value) {
      let header = "content-disposition: form-data; name=\"" + this[S._browserEncode](name) + "\"";
      if (!utils$2.isPlainAscii(value)) {
        header = header + "\r\n" + "content-type: text/plain; charset=utf-8\r\n" + "content-transfer-encoding: binary";
      }
      return header + "\r\n\r\n";
    }
    [S._headerForFile](file) {
      let header = "content-type: " + dart.str(file.contentType) + "\r\n" + "content-disposition: form-data; name=\"" + this[S._browserEncode](file.field) + "\"";
      if (file.filename != null) {
        header = header + "; filename=\"" + this[S._browserEncode](dart.nullCheck(file.filename)) + "\"";
      }
      return header + "\r\n\r\n";
    }
    [S._browserEncode](value) {
      return value[S$.$replaceAll](multipart_request._newlineRegExp, "%0D%0A")[S$.$replaceAll]("\"", "%22");
    }
    [S._boundaryString]() {
      let prefix = "dart-http-boundary-";
      let list = T$.ListOfint().generate(70 - prefix.length, dart.fn(index => boundary_characters.boundaryCharacters[S$.$_get](multipart_request.MultipartRequest._random.nextInt(boundary_characters.boundaryCharacters[S$.$length])), T$.intToint()), {growable: false});
      return prefix + core.String.fromCharCodes(list);
    }
  };
  (multipart_request.MultipartRequest.new = function(method, url) {
    this[S.fields] = new (T$.IdentityMapOfString$String()).new();
    this[S.files] = T$.JSArrayOfMultipartFile().of([]);
    multipart_request.MultipartRequest.__proto__.new.call(this, method, url);
    ;
  }).prototype = multipart_request.MultipartRequest.prototype;
  dart.addTypeTests(multipart_request.MultipartRequest);
  dart.addTypeCaches(multipart_request.MultipartRequest);
  dart.setMethodSignature(multipart_request.MultipartRequest, () => ({
    __proto__: dart.getMethods(multipart_request.MultipartRequest.__proto__),
    [S._finalize]: dart.fnType(async.Stream$(core.List$(core.int)), [core.String]),
    [S._headerForField]: dart.fnType(core.String, [core.String, core.String]),
    [S._headerForFile]: dart.fnType(core.String, [multipart_file.MultipartFile]),
    [S._browserEncode]: dart.fnType(core.String, [core.String]),
    [S._boundaryString]: dart.fnType(core.String, [])
  }));
  dart.setGetterSignature(multipart_request.MultipartRequest, () => ({
    __proto__: dart.getGetters(multipart_request.MultipartRequest.__proto__),
    contentLength: core.int
  }));
  dart.setLibraryUri(multipart_request.MultipartRequest, I[159]);
  dart.setFieldSignature(multipart_request.MultipartRequest, () => ({
    __proto__: dart.getFields(multipart_request.MultipartRequest.__proto__),
    fields: dart.finalFieldType(core.Map$(core.String, core.String)),
    files: dart.finalFieldType(core.List$(multipart_file.MultipartFile))
  }));
  dart.setStaticFieldSignature(multipart_request.MultipartRequest, () => ['_boundaryLength', '_random']);
  dart.defineLazy(multipart_request.MultipartRequest, {
    /*multipart_request.MultipartRequest._boundaryLength*/get _boundaryLength() {
      return 70;
    },
    /*multipart_request.MultipartRequest._random*/get _random() {
      return math.Random.new();
    }
  }, false);
  dart.defineLazy(multipart_request, {
    /*multipart_request._newlineRegExp*/get _newlineRegExp() {
      return core.RegExp.new("\\r\\n|\\r|\\n");
    }
  }, false);
  streamed_response.StreamedResponse = class StreamedResponse extends base_response.BaseResponse {
    get stream() {
      return this[S.stream];
    }
    set stream(value) {
      super.stream = value;
    }
    static ['_#new#tearOff'](stream, statusCode, opts) {
      let contentLength = opts && 'contentLength' in opts ? opts.contentLength : null;
      let request = opts && 'request' in opts ? opts.request : null;
      let headers = opts && 'headers' in opts ? opts.headers : null;
      let isRedirect = opts && 'isRedirect' in opts ? opts.isRedirect : null;
      let persistentConnection = opts && 'persistentConnection' in opts ? opts.persistentConnection : null;
      let reasonPhrase = opts && 'reasonPhrase' in opts ? opts.reasonPhrase : null;
      return new streamed_response.StreamedResponse.new(stream, statusCode, {contentLength: contentLength, request: request, headers: headers, isRedirect: isRedirect, persistentConnection: persistentConnection, reasonPhrase: reasonPhrase});
    }
  };
  (streamed_response.StreamedResponse.new = function(stream, statusCode, opts) {
    let contentLength = opts && 'contentLength' in opts ? opts.contentLength : null;
    let request = opts && 'request' in opts ? opts.request : null;
    let headers = opts && 'headers' in opts ? opts.headers : C[151] || CT.C151;
    let isRedirect = opts && 'isRedirect' in opts ? opts.isRedirect : false;
    let persistentConnection = opts && 'persistentConnection' in opts ? opts.persistentConnection : true;
    let reasonPhrase = opts && 'reasonPhrase' in opts ? opts.reasonPhrase : null;
    this[S.stream] = utils$2.toByteStream(stream);
    streamed_response.StreamedResponse.__proto__.new.call(this, statusCode, {contentLength: contentLength, request: request, headers: headers, isRedirect: isRedirect, persistentConnection: persistentConnection, reasonPhrase: reasonPhrase});
    ;
  }).prototype = streamed_response.StreamedResponse.prototype;
  dart.addTypeTests(streamed_response.StreamedResponse);
  dart.addTypeCaches(streamed_response.StreamedResponse);
  dart.setLibraryUri(streamed_response.StreamedResponse, I[160]);
  dart.setFieldSignature(streamed_response.StreamedResponse, () => ({
    __proto__: dart.getFields(streamed_response.StreamedResponse.__proto__),
    stream: dart.finalFieldType(byte_stream.ByteStream)
  }));
  task.fbTaskStateToTaskState = function fbTaskStateToTaskState(state) {
    return dart.nullCheck(task._fbTaskStateToTaskState[S$.$_get](state));
  };
  task.fbUploadTaskSnapshotToTaskSnapshot = function fbUploadTaskSnapshotToTaskSnapshot(reference, snapshot) {
    return new task_snapshot_web.TaskSnapshotWeb.new(reference, snapshot);
  };
  dart.defineLazy(task, {
    /*task._fbTaskStateToTaskState*/get _fbTaskStateToTaskState() {
      return new (T$.LinkedMapOfTaskState$TaskState()).from([storage.TaskState.CANCELED, task_state.TaskState.canceled, storage.TaskState.ERROR, task_state.TaskState.error, storage.TaskState.PAUSED, task_state.TaskState.paused, storage.TaskState.RUNNING, task_state.TaskState.running, storage.TaskState.SUCCESS, task_state.TaskState.success]);
    },
    set _fbTaskStateToTaskState(value) {}
  }, false);
  list_result_web.ListResultWeb = class ListResultWeb extends platform_interface_list_result.ListResultPlatform {
    static ['_#new#tearOff'](storage, opts) {
      let nextPageToken = opts && 'nextPageToken' in opts ? opts.nextPageToken : null;
      let items = opts && 'items' in opts ? opts.items : null;
      let prefixes = opts && 'prefixes' in opts ? opts.prefixes : null;
      return new list_result_web.ListResultWeb.new(storage, {nextPageToken: nextPageToken, items: items, prefixes: prefixes});
    }
    get items() {
      return this[S._items][S$.$map](platform_interface_reference.ReferencePlatform, dart.bind(dart.nullCheck(this.storage), 'ref'))[S$.$toList]();
    }
    get prefixes() {
      return this[S._prefixes][S$.$map](platform_interface_reference.ReferencePlatform, dart.bind(dart.nullCheck(this.storage), 'ref'))[S$.$toList]();
    }
  };
  (list_result_web.ListResultWeb.new = function(storage, opts) {
    let t192, t192$;
    let nextPageToken = opts && 'nextPageToken' in opts ? opts.nextPageToken : null;
    let items = opts && 'items' in opts ? opts.items : null;
    let prefixes = opts && 'prefixes' in opts ? opts.prefixes : null;
    this[S._items] = (t192 = items, t192 == null ? T$.JSArrayOfString().of([]) : t192);
    this[S._prefixes] = (t192$ = prefixes, t192$ == null ? T$.JSArrayOfString().of([]) : t192$);
    list_result_web.ListResultWeb.__proto__.new.call(this, storage, nextPageToken);
    ;
  }).prototype = list_result_web.ListResultWeb.prototype;
  dart.addTypeTests(list_result_web.ListResultWeb);
  dart.addTypeCaches(list_result_web.ListResultWeb);
  dart.setLibraryUri(list_result_web.ListResultWeb, I[161]);
  dart.setFieldSignature(list_result_web.ListResultWeb, () => ({
    __proto__: dart.getFields(list_result_web.ListResultWeb.__proto__),
    [S._items]: dart.fieldType(core.List$(core.String)),
    [S._prefixes]: dart.fieldType(core.List$(core.String))
  }));
  method_channel_document_change.MethodChannelDocumentChange = class MethodChannelDocumentChange extends platform_interface_document_change.DocumentChangePlatform {
    static ['_#new#tearOff'](firestore, data) {
      return new method_channel_document_change.MethodChannelDocumentChange.new(firestore, data);
    }
  };
  (method_channel_document_change.MethodChannelDocumentChange.new = function(firestore, data) {
    method_channel_document_change.MethodChannelDocumentChange.__proto__.new.call(this, platform_interface_document_change.DocumentChangeType.values[S.$firstWhere](dart.fn(type => type.toString() === data[S$.$_get]("type"), T$.DocumentChangeTypeTobool())), core.int.as(data[S$.$_get]("oldIndex")), core.int.as(data[S$.$_get]("newIndex")), new platform_interface_document_snapshot.DocumentSnapshotPlatform.new(firestore, core.String.as(data[S$.$_get]("path")), new (T$.IdentityMapOfString$dynamic()).from(["data", T$.LinkedHashMapOfString$dynamic().from(core.Map.as(data[S$.$_get]("data"))), "metadata", T$.LinkedHashMapOfString$dynamic().from(core.Map.as(data[S$.$_get]("metadata")))])));
    ;
  }).prototype = method_channel_document_change.MethodChannelDocumentChange.prototype;
  dart.addTypeTests(method_channel_document_change.MethodChannelDocumentChange);
  dart.addTypeCaches(method_channel_document_change.MethodChannelDocumentChange);
  dart.setLibraryUri(method_channel_document_change.MethodChannelDocumentChange, I[162]);
  auto_id_generator.AutoIdGenerator = class AutoIdGenerator extends core.Object {
    static autoId() {
      let stringBuffer = new core.StringBuffer.new();
      for (let i = 0; i < 20; i = i + 1) {
        stringBuffer.write(auto_id_generator.AutoIdGenerator._AUTO_ID_ALPHABET[S$.$_get](auto_id_generator.AutoIdGenerator._random.nextInt(62)));
      }
      return stringBuffer.toString();
    }
    static ['_#new#tearOff']() {
      return new auto_id_generator.AutoIdGenerator.new();
    }
  };
  (auto_id_generator.AutoIdGenerator.new = function() {
    ;
  }).prototype = auto_id_generator.AutoIdGenerator.prototype;
  dart.addTypeTests(auto_id_generator.AutoIdGenerator);
  dart.addTypeCaches(auto_id_generator.AutoIdGenerator);
  dart.setStaticMethodSignature(auto_id_generator.AutoIdGenerator, () => ['autoId']);
  dart.setLibraryUri(auto_id_generator.AutoIdGenerator, I[163]);
  dart.setStaticFieldSignature(auto_id_generator.AutoIdGenerator, () => ['_AUTO_ID_LENGTH', '_AUTO_ID_ALPHABET', '_random']);
  dart.defineLazy(auto_id_generator.AutoIdGenerator, {
    /*auto_id_generator.AutoIdGenerator._AUTO_ID_LENGTH*/get _AUTO_ID_LENGTH() {
      return 20;
    },
    /*auto_id_generator.AutoIdGenerator._AUTO_ID_ALPHABET*/get _AUTO_ID_ALPHABET() {
      return "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
    },
    /*auto_id_generator.AutoIdGenerator._random*/get _random() {
      return math.Random.new();
    }
  }, false);
  dart.defineLazy(charcodes, {
    /*charcodes.$lf*/get $lf() {
      return 10;
    },
    /*charcodes.$cr*/get $cr() {
      return 13;
    },
    /*charcodes.$0*/get $0() {
      return 48;
    },
    /*charcodes.$1*/get $1() {
      return 49;
    },
    /*charcodes.$3*/get $3() {
      return 51;
    },
    /*charcodes.$4*/get $4() {
      return 52;
    },
    /*charcodes.$7*/get $7() {
      return 55;
    },
    /*charcodes.$A*/get $A() {
      return 65;
    },
    /*charcodes.$q*/get $q() {
      return 113;
    },
    /*charcodes.$a*/get $a() {
      return 97;
    },
    /*charcodes.$f*/get $f() {
      return 102;
    }
  }, false);
  exception$2.convertPlatformException = function convertPlatformException$0(exception, stackTrace) {
    if (!core.Exception.is(exception) || !message_codec.PlatformException.is(exception)) {
      core.Error.throwWithStackTrace(core.Object.as(exception), stackTrace);
    }
    core.Error.throwWithStackTrace(exception$2.platformExceptionToFirebaseException(exception, stackTrace), stackTrace);
  };
  exception$2.catchFuturePlatformException = function catchFuturePlatformException(T, exception, stackTrace) {
    if (!core.Exception.is(exception) || !message_codec.PlatformException.is(exception)) {
      return async.Future$(T).error(exception, stackTrace);
    }
    return async.Future$(T).error(exception$2.platformExceptionToFirebaseException(exception, stackTrace), stackTrace);
  };
  exception$2.platformExceptionToFirebaseException = function platformExceptionToFirebaseException$(platformException, stackTrace) {
    let t192, t192$, t192$0;
    let details = platformException.details != null ? T$.LinkedHashMapOfString$String().from(core.Map.as(platformException.details)) : null;
    let code = "unknown";
    let message = (t192 = platformException.message, t192 == null ? "" : t192);
    if (details != null) {
      code = (t192$ = details[S$.$_get]("code"), t192$ == null ? code : t192$);
      message = (t192$0 = details[S$.$_get]("message"), t192$0 == null ? message : t192$0);
    }
    return new firebase_core_platform_interface.FirebaseException.new({plugin: "firebase_storage", code: code, message: message});
  };
  method_channel_reference.MethodChannelReference = class MethodChannelReference extends platform_interface_reference.ReferencePlatform {
    static ['_#new#tearOff'](storage, path) {
      return new method_channel_reference.MethodChannelReference.new(storage, path);
    }
    delete() {
      return async.async(dart.void, (function* $delete() {
        try {
          yield method_channel_firebase_storage.MethodChannelFirebaseStorage.channel.invokeMethod(dart.dynamic, "Reference#delete", new (T$.IdentityMapOfString$dynamic()).from(["appName", this.storage.app.name, "maxOperationRetryTime", this.storage.maxOperationRetryTime, "maxUploadRetryTime", this.storage.maxUploadRetryTime, "maxDownloadRetryTime", this.storage.maxDownloadRetryTime, "bucket", this.storage.bucket, "host", this.storage.emulatorHost, "port", this.storage.emulatorPort, "path", this.fullPath]));
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$2.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    getDownloadURL() {
      return async.async(core.String, (function* getDownloadURL() {
        try {
          let data = (yield method_channel_firebase_storage.MethodChannelFirebaseStorage.channel.invokeMapMethod(core.String, dart.dynamic, "Reference#getDownloadURL", new (T$.IdentityMapOfString$dynamic()).from(["appName", this.storage.app.name, "maxOperationRetryTime", this.storage.maxOperationRetryTime, "maxUploadRetryTime", this.storage.maxUploadRetryTime, "maxDownloadRetryTime", this.storage.maxDownloadRetryTime, "bucket", this.storage.bucket, "host", this.storage.emulatorHost, "port", this.storage.emulatorPort, "path", this.fullPath])));
          return T$.FutureOrOfString().as(dart.nullCheck(data)[S$.$_get]("downloadURL"));
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$2.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    getMetadata() {
      return async.async(full_metadata.FullMetadata, (function* getMetadata() {
        try {
          let data = (yield method_channel_firebase_storage.MethodChannelFirebaseStorage.channel.invokeMapMethod(core.String, dart.dynamic, "Reference#getMetadata", new (T$.IdentityMapOfString$dynamic()).from(["appName", this.storage.app.name, "maxOperationRetryTime", this.storage.maxOperationRetryTime, "maxUploadRetryTime", this.storage.maxUploadRetryTime, "maxDownloadRetryTime", this.storage.maxDownloadRetryTime, "bucket", this.storage.bucket, "host", this.storage.emulatorHost, "port", this.storage.emulatorPort, "path", this.fullPath])));
          return new full_metadata.FullMetadata.new(dart.nullCheck(data));
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$2.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    list(options = null) {
      return async.async(platform_interface_list_result.ListResultPlatform, (function* list() {
        let t195, t195$, t195$0;
        try {
          let data = (yield method_channel_firebase_storage.MethodChannelFirebaseStorage.channel.invokeMapMethod(core.String, dart.dynamic, "Reference#list", new (T$.IdentityMapOfString$dynamic()).from(["appName", this.storage.app.name, "maxOperationRetryTime", this.storage.maxOperationRetryTime, "maxUploadRetryTime", this.storage.maxUploadRetryTime, "maxDownloadRetryTime", this.storage.maxDownloadRetryTime, "bucket", this.storage.bucket, "host", this.storage.emulatorHost, "port", this.storage.emulatorPort, "path", this.fullPath, "options", new (T$.IdentityMapOfString$dynamic()).from(["maxResults", (t195$ = (t195 = options, t195 == null ? null : t195.maxResults), t195$ == null ? 1000 : t195$), "pageToken", (t195$0 = options, t195$0 == null ? null : t195$0.pageToken)])])));
          return new method_channel_list_result.MethodChannelListResult.new(this.storage, {nextPageToken: T$.StringN().as(dart.nullCheck(data)[S$.$_get]("nextPageToken")), items: T$.ListOfString().from(core.Iterable.as(data[S$.$_get]("items"))), prefixes: T$.ListOfString().from(core.Iterable.as(data[S$.$_get]("prefixes")))});
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$2.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    listAll() {
      return async.async(platform_interface_list_result.ListResultPlatform, (function* listAll() {
        try {
          let data = (yield method_channel_firebase_storage.MethodChannelFirebaseStorage.channel.invokeMapMethod(core.String, dart.dynamic, "Reference#listAll", new (T$.IdentityMapOfString$dynamic()).from(["appName", this.storage.app.name, "maxOperationRetryTime", this.storage.maxOperationRetryTime, "maxUploadRetryTime", this.storage.maxUploadRetryTime, "maxDownloadRetryTime", this.storage.maxDownloadRetryTime, "bucket", this.storage.bucket, "host", this.storage.emulatorHost, "port", this.storage.emulatorPort, "path", this.fullPath])));
          return new method_channel_list_result.MethodChannelListResult.new(this.storage, {nextPageToken: T$.StringN().as(dart.nullCheck(data)[S$.$_get]("nextPageToken")), items: T$.ListOfString().from(core.Iterable.as(data[S$.$_get]("items"))), prefixes: T$.ListOfString().from(core.Iterable.as(data[S$.$_get]("prefixes")))});
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$2.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    getData(maxSize) {
      try {
        return method_channel_firebase_storage.MethodChannelFirebaseStorage.channel.invokeMethod(typed_data.Uint8List, "Reference#getData", new (T$.IdentityMapOfString$dynamic()).from(["appName", this.storage.app.name, "maxOperationRetryTime", this.storage.maxOperationRetryTime, "maxUploadRetryTime", this.storage.maxUploadRetryTime, "maxDownloadRetryTime", this.storage.maxDownloadRetryTime, "bucket", this.storage.bucket, "host", this.storage.emulatorHost, "port", this.storage.emulatorPort, "path", this.fullPath, "maxSize", maxSize]));
      } catch (e$) {
        let e = dart.getThrown(e$);
        let stack = dart.stackTrace(e$);
        if (core.Object.is(e)) {
          exception$2.convertPlatformException(e, stack);
        } else
          throw e$;
      }
    }
    putData(data, metadata = null) {
      let handle = method_channel_firebase_storage.MethodChannelFirebaseStorage.nextMethodChannelHandleId;
      method_channel_firebase_storage.MethodChannelFirebaseStorage.taskObservers[S$.$_set](handle, T$.StreamControllerOfTaskSnapshotPlatform().broadcast());
      return new method_channel_task.MethodChannelPutTask.new(handle, this.storage, this.fullPath, data, metadata);
    }
    putBlob(data, metadata = null) {
      dart.throw(new core.UnimplementedError.new("putBlob() is not supported on native platforms. Use [put], [putFile] or [putString] instead."));
    }
    putFile(file, metadata = null) {
      let handle = method_channel_firebase_storage.MethodChannelFirebaseStorage.nextMethodChannelHandleId;
      method_channel_firebase_storage.MethodChannelFirebaseStorage.taskObservers[S$.$_set](handle, T$.StreamControllerOfTaskSnapshotPlatform().broadcast());
      return new method_channel_task.MethodChannelPutFileTask.new(handle, this.storage, this.fullPath, file, metadata);
    }
    putString(data, format, metadata = null) {
      let handle = method_channel_firebase_storage.MethodChannelFirebaseStorage.nextMethodChannelHandleId;
      method_channel_firebase_storage.MethodChannelFirebaseStorage.taskObservers[S$.$_set](handle, T$.StreamControllerOfTaskSnapshotPlatform().broadcast());
      return new method_channel_task.MethodChannelPutStringTask.new(handle, this.storage, this.fullPath, data, format, metadata);
    }
    updateMetadata(metadata) {
      return async.async(full_metadata.FullMetadata, (function* updateMetadata() {
        try {
          let data = (yield method_channel_firebase_storage.MethodChannelFirebaseStorage.channel.invokeMapMethod(core.String, dart.dynamic, "Reference#updateMetadata", new (T$.IdentityMapOfString$dynamic()).from(["appName", this.storage.app.name, "maxOperationRetryTime", this.storage.maxOperationRetryTime, "maxUploadRetryTime", this.storage.maxUploadRetryTime, "maxDownloadRetryTime", this.storage.maxDownloadRetryTime, "bucket", this.storage.bucket, "host", this.storage.emulatorHost, "port", this.storage.emulatorPort, "path", this.fullPath, "metadata", metadata.asMap()])));
          return new full_metadata.FullMetadata.new(dart.nullCheck(data));
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$2.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    writeToFile(file) {
      let handle = method_channel_firebase_storage.MethodChannelFirebaseStorage.nextMethodChannelHandleId;
      method_channel_firebase_storage.MethodChannelFirebaseStorage.taskObservers[S$.$_set](handle, T$.StreamControllerOfTaskSnapshotPlatform().broadcast());
      return new method_channel_task.MethodChannelDownloadTask.new(handle, this.storage, this.fullPath, file);
    }
  };
  (method_channel_reference.MethodChannelReference.new = function(storage, path) {
    method_channel_reference.MethodChannelReference.__proto__.new.call(this, storage, path);
    ;
  }).prototype = method_channel_reference.MethodChannelReference.prototype;
  dart.addTypeTests(method_channel_reference.MethodChannelReference);
  dart.addTypeCaches(method_channel_reference.MethodChannelReference);
  dart.setLibraryUri(method_channel_reference.MethodChannelReference, I[164]);
  method_channel_task_snapshot.MethodChannelTaskSnapshot = class MethodChannelTaskSnapshot extends platform_interface_task_snapshot.TaskSnapshotPlatform {
    get storage() {
      return this[S.storage$2];
    }
    set storage(value) {
      super.storage = value;
    }
    static ['_#new#tearOff'](storage, state, _data) {
      return new method_channel_task_snapshot.MethodChannelTaskSnapshot.new(storage, state, _data);
    }
    get ref() {
      return new method_channel_reference.MethodChannelReference.new(this.storage, core.String.as(this[S._data$5][S$.$_get]("path")));
    }
  };
  (method_channel_task_snapshot.MethodChannelTaskSnapshot.new = function(storage, state, _data) {
    this[S.storage$2] = storage;
    this[S._data$5] = _data;
    method_channel_task_snapshot.MethodChannelTaskSnapshot.__proto__.new.call(this, state, _data);
    ;
  }).prototype = method_channel_task_snapshot.MethodChannelTaskSnapshot.prototype;
  dart.addTypeTests(method_channel_task_snapshot.MethodChannelTaskSnapshot);
  dart.addTypeCaches(method_channel_task_snapshot.MethodChannelTaskSnapshot);
  dart.setLibraryUri(method_channel_task_snapshot.MethodChannelTaskSnapshot, I[165]);
  dart.setFieldSignature(method_channel_task_snapshot.MethodChannelTaskSnapshot, () => ({
    __proto__: dart.getFields(method_channel_task_snapshot.MethodChannelTaskSnapshot.__proto__),
    storage: dart.finalFieldType(platform_interface_firebase_storage.FirebaseStoragePlatform),
    [S._data$5]: dart.finalFieldType(core.Map$(core.String, dart.dynamic))
  }));
  browser_client.BrowserClient = class BrowserClient extends base_client.BaseClient {
    get withCredentials() {
      return this[S.withCredentials];
    }
    set withCredentials(value) {
      this[S.withCredentials] = value;
    }
    send(request) {
      return async.async(streamed_response.StreamedResponse, (function* send() {
        let t199;
        if (this[S._isClosed]) {
          dart.throw(new exception$1.ClientException.new("HTTP request failed. Client is already closed.", request.url));
        }
        let bytes = (yield request.finalize().toBytes());
        let xhr = html.HttpRequest.new();
        this[S._xhrs].add(xhr);
        t199 = xhr;
        (() => {
          t199.open(request.method, dart.str(request.url), {async: true});
          t199[S.$responseType] = "arraybuffer";
          t199.withCredentials = this.withCredentials;
          return t199;
        })();
        request.headers[S$.$forEach](dart.bind(xhr, 'setRequestHeader'));
        let completer = T$.CompleterOfStreamedResponse().new();
        async.unawaited(xhr[S.$onLoad].first.then(dart.void, dart.fn(_ => {
          let body = typed_data.ByteBuffer.as(xhr[S.$response])[S.$asUint8List]();
          completer.complete(new streamed_response.StreamedResponse.new(byte_stream.ByteStream.fromBytes(body), dart.nullCheck(xhr.status), {contentLength: body[S$.$length], request: request, headers: xhr[S.$responseHeaders], reasonPhrase: xhr.statusText}));
        }, T$.ProgressEventToNull())));
        async.unawaited(xhr[S.$onError].first.then(dart.void, dart.fn(_ => {
          completer.completeError(new exception$1.ClientException.new("XMLHttpRequest error.", request.url), core.StackTrace.current);
        }, T$.ProgressEventToNull())));
        xhr.send(bytes);
        try {
          return yield completer.future;
        } finally {
          this[S._xhrs].remove(xhr);
        }
      }).bind(this));
    }
    close() {
      this[S._isClosed] = true;
      for (let xhr of this[S._xhrs]) {
        xhr.abort();
      }
      this[S._xhrs].clear();
    }
    static ['_#new#tearOff']() {
      return new browser_client.BrowserClient.new();
    }
  };
  (browser_client.BrowserClient.new = function() {
    this[S._xhrs] = T$.LinkedHashSetOfHttpRequest().new();
    this[S.withCredentials] = false;
    this[S._isClosed] = false;
    ;
  }).prototype = browser_client.BrowserClient.prototype;
  dart.addTypeTests(browser_client.BrowserClient);
  dart.addTypeCaches(browser_client.BrowserClient);
  dart.setMethodSignature(browser_client.BrowserClient, () => ({
    __proto__: dart.getMethods(browser_client.BrowserClient.__proto__),
    send: dart.fnType(async.Future$(streamed_response.StreamedResponse), [base_request.BaseRequest])
  }));
  dart.setLibraryUri(browser_client.BrowserClient, I[166]);
  dart.setFieldSignature(browser_client.BrowserClient, () => ({
    __proto__: dart.getFields(browser_client.BrowserClient.__proto__),
    [S._xhrs]: dart.finalFieldType(core.Set$(html.HttpRequest)),
    withCredentials: dart.fieldType(core.bool),
    [S._isClosed]: dart.fieldType(core.bool)
  }));
  browser_client.createClient = function createClient() {
    ;
    return new browser_client.BrowserClient.new();
  };
  utils$2.mapToQuery = function mapToQuery(map, opts) {
    let encoding = opts && 'encoding' in opts ? opts.encoding : null;
    let pairs = T$.JSArrayOfListOfString().of([]);
    map[S$.$forEach](dart.fn((key, value) => {
      let t199, t199$;
      return pairs[S$.$add](T$.JSArrayOfString().of([core.Uri.encodeQueryComponent(key, {encoding: (t199 = encoding, t199 == null ? convert.utf8 : t199)}), core.Uri.encodeQueryComponent(value, {encoding: (t199$ = encoding, t199$ == null ? convert.utf8 : t199$)})]));
    }, T$.StringAndStringTovoid()));
    return pairs[S$.$map](core.String, dart.fn(pair => pair[S$.$_get](0) + "=" + pair[S$.$_get](1), T$.ListOfStringToString()))[S$.$join]("&");
  };
  utils$2.encodingForCharset = function encodingForCharset(charset, fallback = C[154] || CT.C154) {
    let t199;
    if (charset == null) return fallback;
    t199 = convert.Encoding.getByName(charset);
    return t199 == null ? fallback : t199;
  };
  utils$2.requiredEncodingForCharset = function requiredEncodingForCharset(charset) {
    let t199;
    t199 = convert.Encoding.getByName(charset);
    return t199 == null ? dart.throw(new core.FormatException.new("Unsupported encoding \"" + charset + "\".")) : t199;
  };
  utils$2.isPlainAscii = function isPlainAscii(string) {
    return utils$2._asciiOnly.hasMatch(string);
  };
  utils$2.toUint8List = function toUint8List(input) {
    if (typed_data.Uint8List.is(input)) return input;
    if (typed_data.TypedData.is(input)) {
      return typed_data.Uint8List.view(typed_data.TypedData.as(input)[S.$buffer]);
    }
    return _native_typed_data.NativeUint8List.fromList(input);
  };
  utils$2.toByteStream = function toByteStream(stream) {
    if (byte_stream.ByteStream.is(stream)) return stream;
    return new byte_stream.ByteStream.new(stream);
  };
  utils$2.onDone = function onDone(T, stream, onDone) {
    return stream.transform(T, new (async._StreamHandlerTransformer$(T, T)).new({handleDone: dart.fn(sink => {
        sink.close();
        onDone();
      }, dart.fnType(dart.void, [async.EventSink$(T)]))}));
  };
  dart.defineLazy(utils$2, {
    /*utils$2._asciiOnly*/get _asciiOnly() {
      return core.RegExp.new("^[\\x00-\\x7F]+$");
    }
  }, false);
  multipart_file_stub.multipartFileFromPath = function multipartFileFromPath(field, filePath, opts) {
    let filename = opts && 'filename' in opts ? opts.filename : null;
    let contentType = opts && 'contentType' in opts ? opts.contentType : null;
    return dart.throw(new core.UnsupportedError.new("MultipartFile is only supported where dart:io is available."));
  };
  dart.defineLazy(boundary_characters, {
    /*boundary_characters.boundaryCharacters*/get boundaryCharacters() {
      return C[155] || CT.C155;
    }
  }, false);
  task_snapshot_web.TaskSnapshotWeb = class TaskSnapshotWeb extends platform_interface_task_snapshot.TaskSnapshotPlatform {
    static ['_#new#tearOff'](ref, snapshot) {
      return new task_snapshot_web.TaskSnapshotWeb.new(ref, snapshot);
    }
    get bytesTransferred() {
      return this[S._snapshot].bytesTransferred;
    }
    get metadata() {
      return metadata$.fbFullMetadataToFullMetadata(this[S._snapshot].metadata);
    }
    get ref() {
      return this[S._reference$1];
    }
    get state() {
      return task.fbTaskStateToTaskState(this[S._snapshot].state);
    }
    get totalBytes() {
      return this[S._snapshot].totalBytes;
    }
  };
  (task_snapshot_web.TaskSnapshotWeb.new = function(ref, snapshot) {
    this[S._reference$1] = ref;
    this[S._snapshot] = snapshot;
    task_snapshot_web.TaskSnapshotWeb.__proto__.new.call(this, task.fbTaskStateToTaskState(snapshot.state), new (T$.IdentityMapOfString$dynamic()).new());
    ;
  }).prototype = task_snapshot_web.TaskSnapshotWeb.prototype;
  dart.addTypeTests(task_snapshot_web.TaskSnapshotWeb);
  dart.addTypeCaches(task_snapshot_web.TaskSnapshotWeb);
  dart.setGetterSignature(task_snapshot_web.TaskSnapshotWeb, () => ({
    __proto__: dart.getGetters(task_snapshot_web.TaskSnapshotWeb.__proto__),
    metadata: full_metadata.FullMetadata
  }));
  dart.setLibraryUri(task_snapshot_web.TaskSnapshotWeb, I[167]);
  dart.setFieldSignature(task_snapshot_web.TaskSnapshotWeb, () => ({
    __proto__: dart.getFields(task_snapshot_web.TaskSnapshotWeb.__proto__),
    [S._reference$1]: dart.finalFieldType(platform_interface_reference.ReferencePlatform),
    [S._snapshot]: dart.finalFieldType(storage.UploadTaskSnapshot)
  }));
  const _is__TypedQueue_default = Symbol('_is__TypedQueue_default');
  typed_queue._TypedQueue$ = dart.generic((E, L) => {
    var __t$IterableOfE = () => (__t$IterableOfE = dart.constFn(core.Iterable$(E)))();
    var __t$ListOfE = () => (__t$ListOfE = dart.constFn(core.List$(E)))();
    var __t$EN = () => (__t$EN = dart.constFn(dart.nullable(E)))();
    const Object_ListMixin$36 = class Object_ListMixin extends core.Object {};
    (Object_ListMixin$36.new = function() {
    }).prototype = Object_ListMixin$36.prototype;
    dart.applyMixin(Object_ListMixin$36, collection.ListMixin$(E));
    class _TypedQueue extends Object_ListMixin$36 {
      get [S._table$1]() {
        return this[S._table];
      }
      set [S._table$1](value) {
        this[S._table] = value;
      }
      get [S._head$1]() {
        return this[S._head];
      }
      set [S._head$1](value) {
        this[S._head] = value;
      }
      get [S._tail$1]() {
        return this[S._tail];
      }
      set [S._tail$1](value) {
        this[S._tail] = value;
      }
      get length() {
        return (this[S._tail$1] - this[S._head$1] & this[S._table$1][S$.$length] - 1) >>> 0;
      }
      toList(opts) {
        let growable = opts && 'growable' in opts ? opts.growable : true;
        let list = growable ? this[S._createBuffer](this.length) : this[S._createList](this.length);
        this[S._writeToList](list);
        return list;
      }
      cast(T) {
        if (queue_list.QueueList$(T).is(this)) return queue_list.QueueList$(T).as(this);
        dart.throw(new core.UnsupportedError.new(dart.str(this) + " cannot be cast to the desired type."));
      }
      retype(T) {
        return this.cast(T);
      }
      addLast(value) {
        E.as(value);
        this[S._table$1][S$.$_set](this[S._tail$1], value);
        this[S._tail$1] = (this[S._tail$1] + 1 & this[S._table$1][S$.$length] - 1) >>> 0;
        if (this[S._head$1] === this[S._tail$1]) this[S._growAtCapacity]();
      }
      addFirst(value) {
        E.as(value);
        this[S._head$1] = (this[S._head$1] - 1 & this[S._table$1][S$.$length] - 1) >>> 0;
        this[S._table$1][S$.$_set](this[S._head$1], value);
        if (this[S._head$1] === this[S._tail$1]) this[S._growAtCapacity]();
      }
      removeFirst() {
        if (this[S._head$1] === this[S._tail$1]) dart.throw(new core.StateError.new("No element"));
        let result = this[S._table$1][S$.$_get](this[S._head$1]);
        this[S._head$1] = (this[S._head$1] + 1 & this[S._table$1][S$.$length] - 1) >>> 0;
        return result;
      }
      removeLast() {
        if (this[S._head$1] === this[S._tail$1]) dart.throw(new core.StateError.new("No element"));
        this[S._tail$1] = (this[S._tail$1] - 1 & this[S._table$1][S$.$length] - 1) >>> 0;
        return this[S._table$1][S$.$_get](this[S._tail$1]);
      }
      add(value) {
        E.as(value);
        return this.addLast(value);
      }
      set length(value) {
        core.RangeError.checkNotNegative(value, "length");
        let delta = value - this.length;
        if (delta >= 0) {
          let needsToGrow = this[S._table$1][S$.$length] <= value;
          if (needsToGrow) this[S._growTo](value);
          this[S._tail$1] = (this[S._tail$1] + delta & this[S._table$1][S$.$length] - 1) >>> 0;
          if (!needsToGrow) this.fillRange(value - delta, value, this[S._defaultValue]);
        } else {
          this.removeRange(value, this.length);
        }
      }
      _get(index) {
        core.RangeError.checkValidIndex(index, this, null, this.length);
        return this[S._table$1][S$.$_get]((this[S._head$1] + index & this[S._table$1][S$.$length] - 1) >>> 0);
      }
      _set(index, value$) {
        let value = value$;
        E.as(value);
        core.RangeError.checkValidIndex(index, this);
        this[S._table$1][S$.$_set]((this[S._head$1] + index & this[S._table$1][S$.$length] - 1) >>> 0, value);
        return value$;
      }
      removeRange(start, end) {
        let length = this.length;
        core.RangeError.checkValidRange(start, end, length);
        if (start === 0) {
          this[S._head$1] = (this[S._head$1] + end & this[S._table$1][S$.$length] - 1) >>> 0;
          return;
        }
        let elementsAfter = length - end;
        if (elementsAfter === 0) {
          this[S._tail$1] = (this[S._head$1] + start & this[S._table$1][S$.$length] - 1) >>> 0;
          return;
        }
        let removedElements = end - start;
        if (start < elementsAfter) {
          this.setRange(removedElements, end, this);
          this[S._head$1] = (this[S._head$1] + removedElements & this[S._table$1][S$.$length] - 1) >>> 0;
        } else {
          this.setRange(start, length - removedElements, this, end);
          this[S._tail$1] = (this[S._tail$1] - removedElements & this[S._table$1][S$.$length] - 1) >>> 0;
        }
      }
      setRange(start, end, iterable, skipCount = 0) {
        __t$IterableOfE().as(iterable);
        core.RangeError.checkValidRange(start, end, this.length);
        if (start === end) return;
        let targetStart = (this[S._head$1] + start & this[S._table$1][S$.$length] - 1) >>> 0;
        let targetEnd = (this[S._head$1] + end & this[S._table$1][S$.$length] - 1) >>> 0;
        let targetIsContiguous = targetStart < targetEnd;
        if (iterable === this) {
          let sourceStart = (this[S._head$1] + skipCount & this[S._table$1][S$.$length] - 1) >>> 0;
          let sourceEnd = (sourceStart + (end - start) & this[S._table$1][S$.$length] - 1) >>> 0;
          if (sourceStart === targetStart) return;
          let sourceIsContiguous = sourceStart < sourceEnd;
          if (targetIsContiguous && sourceIsContiguous) {
            this[S._table$1][S.$setRange](targetStart, targetEnd, this[S._table$1], sourceStart);
          } else if (!targetIsContiguous && !sourceIsContiguous) {
            if (sourceStart > targetStart) {
              let startGap = sourceStart - targetStart;
              let firstEnd = this[S._table$1][S$.$length] - startGap;
              this[S._table$1][S.$setRange](targetStart, firstEnd, this[S._table$1], sourceStart);
              this[S._table$1][S.$setRange](firstEnd, this[S._table$1][S$.$length], this[S._table$1]);
              this[S._table$1][S.$setRange](0, targetEnd, this[S._table$1], startGap);
            } else if (sourceEnd < targetEnd) {
              let firstStart = targetEnd - sourceEnd;
              this[S._table$1][S.$setRange](firstStart, targetEnd, this[S._table$1]);
              this[S._table$1][S.$setRange](0, firstStart, this[S._table$1], this[S._table$1][S$.$length] - firstStart);
              this[S._table$1][S.$setRange](targetStart, this[S._table$1][S$.$length], this[S._table$1], sourceStart);
            }
          } else if (sourceStart < targetEnd) {
            if (sourceIsContiguous) {
              this[S._table$1][S.$setRange](targetStart, this[S._table$1][S$.$length], this[S._table$1], sourceStart);
              this[S._table$1][S.$setRange](0, targetEnd, this[S._table$1], sourceStart + (this[S._table$1][S$.$length] - targetStart));
            } else {
              let firstEnd = this[S._table$1][S$.$length] - sourceStart;
              this[S._table$1][S.$setRange](targetStart, firstEnd, this[S._table$1], sourceStart);
              this[S._table$1][S.$setRange](firstEnd, targetEnd, this[S._table$1]);
            }
          } else {
            if (sourceIsContiguous) {
              this[S._table$1][S.$setRange](0, targetEnd, this[S._table$1], sourceStart + (this[S._table$1][S$.$length] - targetStart));
              this[S._table$1][S.$setRange](targetStart, this[S._table$1][S$.$length], this[S._table$1], sourceStart);
            } else {
              let firstStart = targetEnd - sourceEnd;
              this[S._table$1][S.$setRange](firstStart, targetEnd, this[S._table$1]);
              this[S._table$1][S.$setRange](targetStart, firstStart, this[S._table$1], sourceStart);
            }
          }
        } else if (targetIsContiguous) {
          this[S._table$1][S.$setRange](targetStart, targetEnd, iterable, skipCount);
        } else if (__t$ListOfE().is(iterable)) {
          this[S._table$1][S.$setRange](targetStart, this[S._table$1][S$.$length], iterable, skipCount);
          this[S._table$1][S.$setRange](0, targetEnd, iterable, skipCount + (this[S._table$1][S$.$length] - targetStart));
        } else {
          super.setRange(start, end, iterable, skipCount);
        }
      }
      fillRange(start, end, value = null) {
        __t$EN().as(value);
        let startInTable = (this[S._head$1] + start & this[S._table$1][S$.$length] - 1) >>> 0;
        let endInTable = (this[S._head$1] + end & this[S._table$1][S$.$length] - 1) >>> 0;
        if (startInTable <= endInTable) {
          this[S._table$1][S.$fillRange](startInTable, endInTable, value);
        } else {
          this[S._table$1][S.$fillRange](startInTable, this[S._table$1][S$.$length], value);
          this[S._table$1][S.$fillRange](0, endInTable, value);
        }
      }
      sublist(start, end = null) {
        let length = this.length;
        let nonNullEnd = core.RangeError.checkValidRange(start, end, length);
        let list = this[S._createList](nonNullEnd - start);
        this[S._writeToList](list, start, nonNullEnd);
        return list;
      }
      [S._writeToList](target, start = null, end = null) {
        start == null ? start = 0 : null;
        end == null ? end = this.length : null;
        if (!(target[S$.$length] >= dart.notNull(end) - dart.notNull(start))) dart.assertFailed(null, I[168], 278, 12, "target.length >= end - start");
        if (!(dart.notNull(start) <= dart.notNull(end))) dart.assertFailed(null, I[168], 279, 12, "start <= end");
        let elementsToWrite = dart.notNull(end) - dart.notNull(start);
        let startInTable = (this[S._head$1] + dart.notNull(start) & this[S._table$1][S$.$length] - 1) >>> 0;
        let endInTable = (this[S._head$1] + dart.notNull(end) & this[S._table$1][S$.$length] - 1) >>> 0;
        if (startInTable <= endInTable) {
          target[S.$setRange](0, elementsToWrite, this[S._table$1], startInTable);
        } else {
          let firstPartSize = this[S._table$1][S$.$length] - startInTable;
          target[S.$setRange](0, firstPartSize, this[S._table$1], startInTable);
          target[S.$setRange](firstPartSize, firstPartSize + endInTable, this[S._table$1], 0);
        }
        return elementsToWrite;
      }
      [S._growAtCapacity]() {
        if (!(this[S._head$1] === this[S._tail$1])) dart.assertFailed(null, I[168], 297, 12, "_head == _tail");
        let newTable = this[S._createList](this[S._table$1][S$.$length] * 2);
        let partitionPoint = this[S._table$1][S$.$length] - this[S._head$1];
        newTable[S.$setRange](0, partitionPoint, this[S._table$1], this[S._head$1]);
        if (partitionPoint !== this[S._table$1][S$.$length]) {
          newTable[S.$setRange](partitionPoint, this[S._table$1][S$.$length], this[S._table$1]);
        }
        this[S._head$1] = 0;
        this[S._tail$1] = this[S._table$1][S$.$length];
        this[S._table$1] = newTable;
      }
      [S._growTo](newElementCount) {
        if (!(newElementCount >= this.length)) dart.assertFailed(null, I[168], 316, 12, "newElementCount >= length");
        newElementCount = newElementCount + newElementCount[S.$rightShift](1);
        let newTable = this[S._createList](typed_queue._nextPowerOf2(newElementCount));
        this[S._tail$1] = this[S._writeToList](newTable);
        this[S._table$1] = newTable;
        this[S._head$1] = 0;
      }
    }
    (_TypedQueue.new = function(table) {
      this[S._table] = L.as(table);
      this[S._head] = 0;
      this[S._tail] = 0;
      ;
    }).prototype = _TypedQueue.prototype;
    dart.addTypeTests(_TypedQueue);
    _TypedQueue.prototype[_is__TypedQueue_default] = true;
    dart.addTypeCaches(_TypedQueue);
    dart.setMethodSignature(_TypedQueue, () => ({
      __proto__: dart.getMethods(_TypedQueue.__proto__),
      cast: dart.gFnType(T => [queue_list.QueueList$(T), []], T => [dart.nullable(core.Object)]),
      [S$.$cast]: dart.gFnType(T => [queue_list.QueueList$(T), []], T => [dart.nullable(core.Object)]),
      retype: dart.gFnType(T => [queue_list.QueueList$(T), []], T => [dart.nullable(core.Object)]),
      addLast: dart.fnType(dart.void, [dart.nullable(core.Object)]),
      addFirst: dart.fnType(dart.void, [dart.nullable(core.Object)]),
      removeFirst: dart.fnType(E, []),
      _get: dart.fnType(E, [core.int]),
      [S$.$_get]: dart.fnType(E, [core.int]),
      _set: dart.fnType(dart.void, [core.int, dart.nullable(core.Object)]),
      [S$.$_set]: dart.fnType(dart.void, [core.int, dart.nullable(core.Object)]),
      sublist: dart.fnType(L, [core.int], [dart.nullable(core.int)]),
      [S.$sublist]: dart.fnType(L, [core.int], [dart.nullable(core.int)]),
      [S._writeToList]: dart.fnType(core.int, [core.List$(E)], [dart.nullable(core.int), dart.nullable(core.int)]),
      [S._growAtCapacity]: dart.fnType(dart.void, []),
      [S._growTo]: dart.fnType(dart.void, [core.int])
    }));
    dart.setGetterSignature(_TypedQueue, () => ({
      __proto__: dart.getGetters(_TypedQueue.__proto__),
      length: core.int,
      [S$.$length]: core.int
    }));
    dart.setSetterSignature(_TypedQueue, () => ({
      __proto__: dart.getSetters(_TypedQueue.__proto__),
      length: core.int,
      [S$.$length]: core.int
    }));
    dart.setLibraryUri(_TypedQueue, I[169]);
    dart.setFieldSignature(_TypedQueue, () => ({
      __proto__: dart.getFields(_TypedQueue.__proto__),
      [S._table$1]: dart.fieldType(L),
      [S._head$1]: dart.fieldType(core.int),
      [S._tail$1]: dart.fieldType(core.int)
    }));
    dart.defineExtensionMethods(_TypedQueue, [
      'toList',
      'cast',
      'removeLast',
      'add',
      '_get',
      '_set',
      'removeRange',
      'setRange',
      'fillRange',
      'sublist'
    ]);
    dart.defineExtensionAccessors(_TypedQueue, ['length']);
    return _TypedQueue;
  });
  typed_queue._TypedQueue = typed_queue._TypedQueue$();
  dart.addTypeTests(typed_queue._TypedQueue, _is__TypedQueue_default);
  const _is__IntQueue_default = Symbol('_is__IntQueue_default');
  typed_queue._IntQueue$ = dart.generic(L => {
    class _IntQueue extends typed_queue._TypedQueue$(core.int, L) {
      get [S._defaultValue]() {
        return 0;
      }
    }
    (_IntQueue.new = function(queue) {
      _IntQueue.__proto__.new.call(this, queue);
      ;
    }).prototype = _IntQueue.prototype;
    dart.addTypeTests(_IntQueue);
    _IntQueue.prototype[_is__IntQueue_default] = true;
    dart.addTypeCaches(_IntQueue);
    dart.setGetterSignature(_IntQueue, () => ({
      __proto__: dart.getGetters(_IntQueue.__proto__),
      [S._defaultValue]: core.int
    }));
    dart.setLibraryUri(_IntQueue, I[169]);
    return _IntQueue;
  });
  typed_queue._IntQueue = typed_queue._IntQueue$();
  dart.addTypeTests(typed_queue._IntQueue, _is__IntQueue_default);
  const _is__FloatQueue_default = Symbol('_is__FloatQueue_default');
  typed_queue._FloatQueue$ = dart.generic(L => {
    class _FloatQueue extends typed_queue._TypedQueue$(core.double, L) {
      get [S._defaultValue]() {
        return 0;
      }
    }
    (_FloatQueue.new = function(queue) {
      _FloatQueue.__proto__.new.call(this, queue);
      ;
    }).prototype = _FloatQueue.prototype;
    dart.addTypeTests(_FloatQueue);
    _FloatQueue.prototype[_is__FloatQueue_default] = true;
    dart.addTypeCaches(_FloatQueue);
    dart.setGetterSignature(_FloatQueue, () => ({
      __proto__: dart.getGetters(_FloatQueue.__proto__),
      [S._defaultValue]: core.double
    }));
    dart.setLibraryUri(_FloatQueue, I[169]);
    return _FloatQueue;
  });
  typed_queue._FloatQueue = typed_queue._FloatQueue$();
  dart.addTypeTests(typed_queue._FloatQueue, _is__FloatQueue_default);
  typed_queue.Uint8Queue = class Uint8Queue extends typed_queue._IntQueue$(typed_data.Uint8List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Uint8Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t199;
      t199 = new typed_queue.Uint8Queue.new(elements[S$.$length]);
      return (() => {
        t199.addAll(elements);
        return t199;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Uint8Queue.fromList(elements);
    }
    [S._createList](size) {
      return _native_typed_data.NativeUint8List.new(size);
    }
    [S._createBuffer](size) {
      return new typed_buffer.Uint8Buffer.new(size);
    }
    [S._add$1](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[156] || CT.C156, null, [element])));
    }
    get [S._head$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[157] || CT.C157)));
    }
    [S._writeToList$1](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[158] || CT.C158, null, [target])));
    }
    [S._grow$1]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[159] || CT.C159, null, [])));
    }
    [S._preGrow$1](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[160] || CT.C160, null, [newElementCount])));
    }
    get [S._table$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[161] || CT.C161)));
    }
    get [S._tail$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[162] || CT.C162)));
    }
    set [S._head$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[163] || CT.C163, value)));
    }
    set [S._table$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[164] || CT.C164, value)));
    }
    set [S._tail$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[165] || CT.C165, value)));
    }
  };
  (typed_queue.Uint8Queue.new = function(initialCapacity = null) {
    typed_queue.Uint8Queue.__proto__.new.call(this, _native_typed_data.NativeUint8List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Uint8Queue.prototype;
  dart.addTypeTests(typed_queue.Uint8Queue);
  dart.addTypeCaches(typed_queue.Uint8Queue);
  typed_queue.Uint8Queue[dart.implements] = () => [queue_list.QueueList$(core.int)];
  dart.setMethodSignature(typed_queue.Uint8Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Uint8Queue.__proto__),
    [S._createList]: dart.fnType(typed_data.Uint8List, [core.int]),
    [S._createBuffer]: dart.fnType(typed_buffer.Uint8Buffer, [core.int]),
    [S._add$1]: dart.fnType(dart.void, [core.int]),
    [S._writeToList$1]: dart.fnType(core.int, [core.List$(dart.nullable(core.int))]),
    [S._grow$1]: dart.fnType(dart.void, []),
    [S._preGrow$1]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Uint8Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Uint8Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Uint8Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.int)),
    [S._tail$2]: core.int
  }));
  dart.setSetterSignature(typed_queue.Uint8Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Uint8Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.int)),
    [S._tail$2]: core.int
  }));
  dart.setLibraryUri(typed_queue.Uint8Queue, I[169]);
  typed_queue.Int8Queue = class Int8Queue extends typed_queue._IntQueue$(typed_data.Int8List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Int8Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t199;
      t199 = new typed_queue.Int8Queue.new(elements[S$.$length]);
      return (() => {
        t199.addAll(elements);
        return t199;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Int8Queue.fromList(elements);
    }
    [S._createList](size) {
      return _native_typed_data.NativeInt8List.new(size);
    }
    [S._createBuffer](size) {
      return new typed_buffer.Int8Buffer.new(size);
    }
    [S._add$1](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[156] || CT.C156, null, [element])));
    }
    get [S._head$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[157] || CT.C157)));
    }
    [S._writeToList$1](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[158] || CT.C158, null, [target])));
    }
    [S._grow$1]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[159] || CT.C159, null, [])));
    }
    [S._preGrow$1](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[160] || CT.C160, null, [newElementCount])));
    }
    get [S._table$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[161] || CT.C161)));
    }
    get [S._tail$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[162] || CT.C162)));
    }
    set [S._head$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[163] || CT.C163, value)));
    }
    set [S._table$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[164] || CT.C164, value)));
    }
    set [S._tail$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[165] || CT.C165, value)));
    }
  };
  (typed_queue.Int8Queue.new = function(initialCapacity = null) {
    typed_queue.Int8Queue.__proto__.new.call(this, _native_typed_data.NativeInt8List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Int8Queue.prototype;
  dart.addTypeTests(typed_queue.Int8Queue);
  dart.addTypeCaches(typed_queue.Int8Queue);
  typed_queue.Int8Queue[dart.implements] = () => [queue_list.QueueList$(core.int)];
  dart.setMethodSignature(typed_queue.Int8Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Int8Queue.__proto__),
    [S._createList]: dart.fnType(typed_data.Int8List, [core.int]),
    [S._createBuffer]: dart.fnType(typed_buffer.Int8Buffer, [core.int]),
    [S._add$1]: dart.fnType(dart.void, [core.int]),
    [S._writeToList$1]: dart.fnType(core.int, [core.List$(dart.nullable(core.int))]),
    [S._grow$1]: dart.fnType(dart.void, []),
    [S._preGrow$1]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Int8Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Int8Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Int8Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.int)),
    [S._tail$2]: core.int
  }));
  dart.setSetterSignature(typed_queue.Int8Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Int8Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.int)),
    [S._tail$2]: core.int
  }));
  dart.setLibraryUri(typed_queue.Int8Queue, I[169]);
  typed_queue.Uint8ClampedQueue = class Uint8ClampedQueue extends typed_queue._IntQueue$(typed_data.Uint8ClampedList) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Uint8ClampedQueue.new(initialCapacity);
    }
    static fromList(elements) {
      let t199;
      t199 = new typed_queue.Uint8ClampedQueue.new(elements[S$.$length]);
      return (() => {
        t199.addAll(elements);
        return t199;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Uint8ClampedQueue.fromList(elements);
    }
    [S._createList](size) {
      return _native_typed_data.NativeUint8ClampedList.new(size);
    }
    [S._createBuffer](size) {
      return new typed_buffer.Uint8ClampedBuffer.new(size);
    }
    [S._add$1](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[156] || CT.C156, null, [element])));
    }
    get [S._head$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[157] || CT.C157)));
    }
    [S._writeToList$1](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[158] || CT.C158, null, [target])));
    }
    [S._grow$1]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[159] || CT.C159, null, [])));
    }
    [S._preGrow$1](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[160] || CT.C160, null, [newElementCount])));
    }
    get [S._table$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[161] || CT.C161)));
    }
    get [S._tail$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[162] || CT.C162)));
    }
    set [S._head$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[163] || CT.C163, value)));
    }
    set [S._table$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[164] || CT.C164, value)));
    }
    set [S._tail$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[165] || CT.C165, value)));
    }
  };
  (typed_queue.Uint8ClampedQueue.new = function(initialCapacity = null) {
    typed_queue.Uint8ClampedQueue.__proto__.new.call(this, _native_typed_data.NativeUint8ClampedList.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Uint8ClampedQueue.prototype;
  dart.addTypeTests(typed_queue.Uint8ClampedQueue);
  dart.addTypeCaches(typed_queue.Uint8ClampedQueue);
  typed_queue.Uint8ClampedQueue[dart.implements] = () => [queue_list.QueueList$(core.int)];
  dart.setMethodSignature(typed_queue.Uint8ClampedQueue, () => ({
    __proto__: dart.getMethods(typed_queue.Uint8ClampedQueue.__proto__),
    [S._createList]: dart.fnType(typed_data.Uint8ClampedList, [core.int]),
    [S._createBuffer]: dart.fnType(typed_buffer.Uint8ClampedBuffer, [core.int]),
    [S._add$1]: dart.fnType(dart.void, [core.int]),
    [S._writeToList$1]: dart.fnType(core.int, [core.List$(dart.nullable(core.int))]),
    [S._grow$1]: dart.fnType(dart.void, []),
    [S._preGrow$1]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Uint8ClampedQueue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Uint8ClampedQueue, () => ({
    __proto__: dart.getGetters(typed_queue.Uint8ClampedQueue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.int)),
    [S._tail$2]: core.int
  }));
  dart.setSetterSignature(typed_queue.Uint8ClampedQueue, () => ({
    __proto__: dart.getSetters(typed_queue.Uint8ClampedQueue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.int)),
    [S._tail$2]: core.int
  }));
  dart.setLibraryUri(typed_queue.Uint8ClampedQueue, I[169]);
  typed_queue.Uint16Queue = class Uint16Queue extends typed_queue._IntQueue$(typed_data.Uint16List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Uint16Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t199;
      t199 = new typed_queue.Uint16Queue.new(elements[S$.$length]);
      return (() => {
        t199.addAll(elements);
        return t199;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Uint16Queue.fromList(elements);
    }
    [S._createList](size) {
      return _native_typed_data.NativeUint16List.new(size);
    }
    [S._createBuffer](size) {
      return new typed_buffer.Uint16Buffer.new(size);
    }
    [S._add$1](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[156] || CT.C156, null, [element])));
    }
    get [S._head$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[157] || CT.C157)));
    }
    [S._writeToList$1](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[158] || CT.C158, null, [target])));
    }
    [S._grow$1]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[159] || CT.C159, null, [])));
    }
    [S._preGrow$1](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[160] || CT.C160, null, [newElementCount])));
    }
    get [S._table$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[161] || CT.C161)));
    }
    get [S._tail$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[162] || CT.C162)));
    }
    set [S._head$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[163] || CT.C163, value)));
    }
    set [S._table$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[164] || CT.C164, value)));
    }
    set [S._tail$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[165] || CT.C165, value)));
    }
  };
  (typed_queue.Uint16Queue.new = function(initialCapacity = null) {
    typed_queue.Uint16Queue.__proto__.new.call(this, _native_typed_data.NativeUint16List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Uint16Queue.prototype;
  dart.addTypeTests(typed_queue.Uint16Queue);
  dart.addTypeCaches(typed_queue.Uint16Queue);
  typed_queue.Uint16Queue[dart.implements] = () => [queue_list.QueueList$(core.int)];
  dart.setMethodSignature(typed_queue.Uint16Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Uint16Queue.__proto__),
    [S._createList]: dart.fnType(typed_data.Uint16List, [core.int]),
    [S._createBuffer]: dart.fnType(typed_buffer.Uint16Buffer, [core.int]),
    [S._add$1]: dart.fnType(dart.void, [core.int]),
    [S._writeToList$1]: dart.fnType(core.int, [core.List$(dart.nullable(core.int))]),
    [S._grow$1]: dart.fnType(dart.void, []),
    [S._preGrow$1]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Uint16Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Uint16Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Uint16Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.int)),
    [S._tail$2]: core.int
  }));
  dart.setSetterSignature(typed_queue.Uint16Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Uint16Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.int)),
    [S._tail$2]: core.int
  }));
  dart.setLibraryUri(typed_queue.Uint16Queue, I[169]);
  typed_queue.Int16Queue = class Int16Queue extends typed_queue._IntQueue$(typed_data.Int16List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Int16Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t199;
      t199 = new typed_queue.Int16Queue.new(elements[S$.$length]);
      return (() => {
        t199.addAll(elements);
        return t199;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Int16Queue.fromList(elements);
    }
    [S._createList](size) {
      return _native_typed_data.NativeInt16List.new(size);
    }
    [S._createBuffer](size) {
      return new typed_buffer.Int16Buffer.new(size);
    }
    [S._add$1](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[156] || CT.C156, null, [element])));
    }
    get [S._head$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[157] || CT.C157)));
    }
    [S._writeToList$1](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[158] || CT.C158, null, [target])));
    }
    [S._grow$1]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[159] || CT.C159, null, [])));
    }
    [S._preGrow$1](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[160] || CT.C160, null, [newElementCount])));
    }
    get [S._table$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[161] || CT.C161)));
    }
    get [S._tail$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[162] || CT.C162)));
    }
    set [S._head$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[163] || CT.C163, value)));
    }
    set [S._table$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[164] || CT.C164, value)));
    }
    set [S._tail$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[165] || CT.C165, value)));
    }
  };
  (typed_queue.Int16Queue.new = function(initialCapacity = null) {
    typed_queue.Int16Queue.__proto__.new.call(this, _native_typed_data.NativeInt16List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Int16Queue.prototype;
  dart.addTypeTests(typed_queue.Int16Queue);
  dart.addTypeCaches(typed_queue.Int16Queue);
  typed_queue.Int16Queue[dart.implements] = () => [queue_list.QueueList$(core.int)];
  dart.setMethodSignature(typed_queue.Int16Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Int16Queue.__proto__),
    [S._createList]: dart.fnType(typed_data.Int16List, [core.int]),
    [S._createBuffer]: dart.fnType(typed_buffer.Int16Buffer, [core.int]),
    [S._add$1]: dart.fnType(dart.void, [core.int]),
    [S._writeToList$1]: dart.fnType(core.int, [core.List$(dart.nullable(core.int))]),
    [S._grow$1]: dart.fnType(dart.void, []),
    [S._preGrow$1]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Int16Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Int16Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Int16Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.int)),
    [S._tail$2]: core.int
  }));
  dart.setSetterSignature(typed_queue.Int16Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Int16Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.int)),
    [S._tail$2]: core.int
  }));
  dart.setLibraryUri(typed_queue.Int16Queue, I[169]);
  typed_queue.Uint32Queue = class Uint32Queue extends typed_queue._IntQueue$(typed_data.Uint32List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Uint32Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t199;
      t199 = new typed_queue.Uint32Queue.new(elements[S$.$length]);
      return (() => {
        t199.addAll(elements);
        return t199;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Uint32Queue.fromList(elements);
    }
    [S._createList](size) {
      return _native_typed_data.NativeUint32List.new(size);
    }
    [S._createBuffer](size) {
      return new typed_buffer.Uint32Buffer.new(size);
    }
    [S._add$1](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[156] || CT.C156, null, [element])));
    }
    get [S._head$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[157] || CT.C157)));
    }
    [S._writeToList$1](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[158] || CT.C158, null, [target])));
    }
    [S._grow$1]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[159] || CT.C159, null, [])));
    }
    [S._preGrow$1](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[160] || CT.C160, null, [newElementCount])));
    }
    get [S._table$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[161] || CT.C161)));
    }
    get [S._tail$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[162] || CT.C162)));
    }
    set [S._head$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[163] || CT.C163, value)));
    }
    set [S._table$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[164] || CT.C164, value)));
    }
    set [S._tail$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[165] || CT.C165, value)));
    }
  };
  (typed_queue.Uint32Queue.new = function(initialCapacity = null) {
    typed_queue.Uint32Queue.__proto__.new.call(this, _native_typed_data.NativeUint32List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Uint32Queue.prototype;
  dart.addTypeTests(typed_queue.Uint32Queue);
  dart.addTypeCaches(typed_queue.Uint32Queue);
  typed_queue.Uint32Queue[dart.implements] = () => [queue_list.QueueList$(core.int)];
  dart.setMethodSignature(typed_queue.Uint32Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Uint32Queue.__proto__),
    [S._createList]: dart.fnType(typed_data.Uint32List, [core.int]),
    [S._createBuffer]: dart.fnType(typed_buffer.Uint32Buffer, [core.int]),
    [S._add$1]: dart.fnType(dart.void, [core.int]),
    [S._writeToList$1]: dart.fnType(core.int, [core.List$(dart.nullable(core.int))]),
    [S._grow$1]: dart.fnType(dart.void, []),
    [S._preGrow$1]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Uint32Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Uint32Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Uint32Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.int)),
    [S._tail$2]: core.int
  }));
  dart.setSetterSignature(typed_queue.Uint32Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Uint32Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.int)),
    [S._tail$2]: core.int
  }));
  dart.setLibraryUri(typed_queue.Uint32Queue, I[169]);
  typed_queue.Int32Queue = class Int32Queue extends typed_queue._IntQueue$(typed_data.Int32List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Int32Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t199;
      t199 = new typed_queue.Int32Queue.new(elements[S$.$length]);
      return (() => {
        t199.addAll(elements);
        return t199;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Int32Queue.fromList(elements);
    }
    [S._createList](size) {
      return _native_typed_data.NativeInt32List.new(size);
    }
    [S._createBuffer](size) {
      return new typed_buffer.Int32Buffer.new(size);
    }
    [S._add$1](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[156] || CT.C156, null, [element])));
    }
    get [S._head$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[157] || CT.C157)));
    }
    [S._writeToList$1](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[158] || CT.C158, null, [target])));
    }
    [S._grow$1]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[159] || CT.C159, null, [])));
    }
    [S._preGrow$1](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[160] || CT.C160, null, [newElementCount])));
    }
    get [S._table$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[161] || CT.C161)));
    }
    get [S._tail$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[162] || CT.C162)));
    }
    set [S._head$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[163] || CT.C163, value)));
    }
    set [S._table$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[164] || CT.C164, value)));
    }
    set [S._tail$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[165] || CT.C165, value)));
    }
  };
  (typed_queue.Int32Queue.new = function(initialCapacity = null) {
    typed_queue.Int32Queue.__proto__.new.call(this, _native_typed_data.NativeInt32List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Int32Queue.prototype;
  dart.addTypeTests(typed_queue.Int32Queue);
  dart.addTypeCaches(typed_queue.Int32Queue);
  typed_queue.Int32Queue[dart.implements] = () => [queue_list.QueueList$(core.int)];
  dart.setMethodSignature(typed_queue.Int32Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Int32Queue.__proto__),
    [S._createList]: dart.fnType(typed_data.Int32List, [core.int]),
    [S._createBuffer]: dart.fnType(typed_buffer.Int32Buffer, [core.int]),
    [S._add$1]: dart.fnType(dart.void, [core.int]),
    [S._writeToList$1]: dart.fnType(core.int, [core.List$(dart.nullable(core.int))]),
    [S._grow$1]: dart.fnType(dart.void, []),
    [S._preGrow$1]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Int32Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Int32Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Int32Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.int)),
    [S._tail$2]: core.int
  }));
  dart.setSetterSignature(typed_queue.Int32Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Int32Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.int)),
    [S._tail$2]: core.int
  }));
  dart.setLibraryUri(typed_queue.Int32Queue, I[169]);
  typed_queue.Uint64Queue = class Uint64Queue extends typed_queue._IntQueue$(typed_data.Uint64List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Uint64Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t199;
      t199 = new typed_queue.Uint64Queue.new(elements[S$.$length]);
      return (() => {
        t199.addAll(elements);
        return t199;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Uint64Queue.fromList(elements);
    }
    [S._createList](size) {
      return typed_data.Uint64List.new(size);
    }
    [S._createBuffer](size) {
      return new typed_buffer.Uint64Buffer.new(size);
    }
    [S._add$1](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[156] || CT.C156, null, [element])));
    }
    get [S._head$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[157] || CT.C157)));
    }
    [S._writeToList$1](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[158] || CT.C158, null, [target])));
    }
    [S._grow$1]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[159] || CT.C159, null, [])));
    }
    [S._preGrow$1](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[160] || CT.C160, null, [newElementCount])));
    }
    get [S._table$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[161] || CT.C161)));
    }
    get [S._tail$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[162] || CT.C162)));
    }
    set [S._head$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[163] || CT.C163, value)));
    }
    set [S._table$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[164] || CT.C164, value)));
    }
    set [S._tail$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[165] || CT.C165, value)));
    }
  };
  (typed_queue.Uint64Queue.new = function(initialCapacity = null) {
    typed_queue.Uint64Queue.__proto__.new.call(this, typed_data.Uint64List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Uint64Queue.prototype;
  dart.addTypeTests(typed_queue.Uint64Queue);
  dart.addTypeCaches(typed_queue.Uint64Queue);
  typed_queue.Uint64Queue[dart.implements] = () => [queue_list.QueueList$(core.int)];
  dart.setMethodSignature(typed_queue.Uint64Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Uint64Queue.__proto__),
    [S._createList]: dart.fnType(typed_data.Uint64List, [core.int]),
    [S._createBuffer]: dart.fnType(typed_buffer.Uint64Buffer, [core.int]),
    [S._add$1]: dart.fnType(dart.void, [core.int]),
    [S._writeToList$1]: dart.fnType(core.int, [core.List$(dart.nullable(core.int))]),
    [S._grow$1]: dart.fnType(dart.void, []),
    [S._preGrow$1]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Uint64Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Uint64Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Uint64Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.int)),
    [S._tail$2]: core.int
  }));
  dart.setSetterSignature(typed_queue.Uint64Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Uint64Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.int)),
    [S._tail$2]: core.int
  }));
  dart.setLibraryUri(typed_queue.Uint64Queue, I[169]);
  typed_queue.Int64Queue = class Int64Queue extends typed_queue._IntQueue$(typed_data.Int64List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Int64Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t199;
      t199 = new typed_queue.Int64Queue.new(elements[S$.$length]);
      return (() => {
        t199.addAll(elements);
        return t199;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Int64Queue.fromList(elements);
    }
    [S._createList](size) {
      return typed_data.Int64List.new(size);
    }
    [S._createBuffer](size) {
      return new typed_buffer.Int64Buffer.new(size);
    }
    [S._add$1](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[156] || CT.C156, null, [element])));
    }
    get [S._head$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[157] || CT.C157)));
    }
    [S._writeToList$1](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[158] || CT.C158, null, [target])));
    }
    [S._grow$1]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[159] || CT.C159, null, [])));
    }
    [S._preGrow$1](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[160] || CT.C160, null, [newElementCount])));
    }
    get [S._table$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[161] || CT.C161)));
    }
    get [S._tail$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[162] || CT.C162)));
    }
    set [S._head$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[163] || CT.C163, value)));
    }
    set [S._table$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[164] || CT.C164, value)));
    }
    set [S._tail$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[165] || CT.C165, value)));
    }
  };
  (typed_queue.Int64Queue.new = function(initialCapacity = null) {
    typed_queue.Int64Queue.__proto__.new.call(this, typed_data.Int64List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Int64Queue.prototype;
  dart.addTypeTests(typed_queue.Int64Queue);
  dart.addTypeCaches(typed_queue.Int64Queue);
  typed_queue.Int64Queue[dart.implements] = () => [queue_list.QueueList$(core.int)];
  dart.setMethodSignature(typed_queue.Int64Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Int64Queue.__proto__),
    [S._createList]: dart.fnType(typed_data.Int64List, [core.int]),
    [S._createBuffer]: dart.fnType(typed_buffer.Int64Buffer, [core.int]),
    [S._add$1]: dart.fnType(dart.void, [core.int]),
    [S._writeToList$1]: dart.fnType(core.int, [core.List$(dart.nullable(core.int))]),
    [S._grow$1]: dart.fnType(dart.void, []),
    [S._preGrow$1]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Int64Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Int64Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Int64Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.int)),
    [S._tail$2]: core.int
  }));
  dart.setSetterSignature(typed_queue.Int64Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Int64Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.int)),
    [S._tail$2]: core.int
  }));
  dart.setLibraryUri(typed_queue.Int64Queue, I[169]);
  typed_queue.Float32Queue = class Float32Queue extends typed_queue._FloatQueue$(typed_data.Float32List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Float32Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t199;
      t199 = new typed_queue.Float32Queue.new(elements[S$.$length]);
      return (() => {
        t199.addAll(elements);
        return t199;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Float32Queue.fromList(elements);
    }
    [S._createList](size) {
      return _native_typed_data.NativeFloat32List.new(size);
    }
    [S._createBuffer](size) {
      return new typed_buffer.Float32Buffer.new(size);
    }
    [S._add$1](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[156] || CT.C156, null, [element])));
    }
    get [S._head$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[157] || CT.C157)));
    }
    [S._writeToList$1](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[158] || CT.C158, null, [target])));
    }
    [S._grow$1]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[159] || CT.C159, null, [])));
    }
    [S._preGrow$1](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[160] || CT.C160, null, [newElementCount])));
    }
    get [S._table$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[161] || CT.C161)));
    }
    get [S._tail$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[162] || CT.C162)));
    }
    set [S._head$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[163] || CT.C163, value)));
    }
    set [S._table$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[164] || CT.C164, value)));
    }
    set [S._tail$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[165] || CT.C165, value)));
    }
  };
  (typed_queue.Float32Queue.new = function(initialCapacity = null) {
    typed_queue.Float32Queue.__proto__.new.call(this, _native_typed_data.NativeFloat32List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Float32Queue.prototype;
  dart.addTypeTests(typed_queue.Float32Queue);
  dart.addTypeCaches(typed_queue.Float32Queue);
  typed_queue.Float32Queue[dart.implements] = () => [queue_list.QueueList$(core.double)];
  dart.setMethodSignature(typed_queue.Float32Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Float32Queue.__proto__),
    [S._createList]: dart.fnType(typed_data.Float32List, [core.int]),
    [S._createBuffer]: dart.fnType(typed_buffer.Float32Buffer, [core.int]),
    [S._add$1]: dart.fnType(dart.void, [core.double]),
    [S._writeToList$1]: dart.fnType(core.int, [core.List$(dart.nullable(core.double))]),
    [S._grow$1]: dart.fnType(dart.void, []),
    [S._preGrow$1]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Float32Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Float32Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Float32Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.double)),
    [S._tail$2]: core.int
  }));
  dart.setSetterSignature(typed_queue.Float32Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Float32Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.double)),
    [S._tail$2]: core.int
  }));
  dart.setLibraryUri(typed_queue.Float32Queue, I[169]);
  typed_queue.Float64Queue = class Float64Queue extends typed_queue._FloatQueue$(typed_data.Float64List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Float64Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t199;
      t199 = new typed_queue.Float64Queue.new(elements[S$.$length]);
      return (() => {
        t199.addAll(elements);
        return t199;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Float64Queue.fromList(elements);
    }
    [S._createList](size) {
      return _native_typed_data.NativeFloat64List.new(size);
    }
    [S._createBuffer](size) {
      return new typed_buffer.Float64Buffer.new(size);
    }
    [S._add$1](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[156] || CT.C156, null, [element])));
    }
    get [S._head$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[157] || CT.C157)));
    }
    [S._writeToList$1](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[158] || CT.C158, null, [target])));
    }
    [S._grow$1]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[159] || CT.C159, null, [])));
    }
    [S._preGrow$1](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[160] || CT.C160, null, [newElementCount])));
    }
    get [S._table$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[161] || CT.C161)));
    }
    get [S._tail$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[162] || CT.C162)));
    }
    set [S._head$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[163] || CT.C163, value)));
    }
    set [S._table$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[164] || CT.C164, value)));
    }
    set [S._tail$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[165] || CT.C165, value)));
    }
  };
  (typed_queue.Float64Queue.new = function(initialCapacity = null) {
    typed_queue.Float64Queue.__proto__.new.call(this, _native_typed_data.NativeFloat64List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Float64Queue.prototype;
  dart.addTypeTests(typed_queue.Float64Queue);
  dart.addTypeCaches(typed_queue.Float64Queue);
  typed_queue.Float64Queue[dart.implements] = () => [queue_list.QueueList$(core.double)];
  dart.setMethodSignature(typed_queue.Float64Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Float64Queue.__proto__),
    [S._createList]: dart.fnType(typed_data.Float64List, [core.int]),
    [S._createBuffer]: dart.fnType(typed_buffer.Float64Buffer, [core.int]),
    [S._add$1]: dart.fnType(dart.void, [core.double]),
    [S._writeToList$1]: dart.fnType(core.int, [core.List$(dart.nullable(core.double))]),
    [S._grow$1]: dart.fnType(dart.void, []),
    [S._preGrow$1]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Float64Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Float64Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Float64Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.double)),
    [S._tail$2]: core.int
  }));
  dart.setSetterSignature(typed_queue.Float64Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Float64Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.double)),
    [S._tail$2]: core.int
  }));
  dart.setLibraryUri(typed_queue.Float64Queue, I[169]);
  typed_queue.Int32x4Queue = class Int32x4Queue extends typed_queue._TypedQueue$(typed_data.Int32x4, typed_data.Int32x4List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Int32x4Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t199;
      t199 = new typed_queue.Int32x4Queue.new(elements[S$.$length]);
      return (() => {
        t199.addAll(elements);
        return t199;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Int32x4Queue.fromList(elements);
    }
    [S._createList](size) {
      return new _native_typed_data.NativeInt32x4List.new(size);
    }
    [S._createBuffer](size) {
      return new typed_buffer.Int32x4Buffer.new(size);
    }
    get [S._defaultValue]() {
      return typed_queue.Int32x4Queue._zero;
    }
    [S._add$1](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[156] || CT.C156, null, [element])));
    }
    get [S._head$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[157] || CT.C157)));
    }
    [S._writeToList$1](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[158] || CT.C158, null, [target])));
    }
    [S._grow$1]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[159] || CT.C159, null, [])));
    }
    [S._preGrow$1](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[160] || CT.C160, null, [newElementCount])));
    }
    get [S._table$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[161] || CT.C161)));
    }
    get [S._tail$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[162] || CT.C162)));
    }
    set [S._head$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[163] || CT.C163, value)));
    }
    set [S._table$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[164] || CT.C164, value)));
    }
    set [S._tail$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[165] || CT.C165, value)));
    }
  };
  (typed_queue.Int32x4Queue.new = function(initialCapacity = null) {
    typed_queue.Int32x4Queue.__proto__.new.call(this, new _native_typed_data.NativeInt32x4List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Int32x4Queue.prototype;
  dart.addTypeTests(typed_queue.Int32x4Queue);
  dart.addTypeCaches(typed_queue.Int32x4Queue);
  typed_queue.Int32x4Queue[dart.implements] = () => [queue_list.QueueList$(typed_data.Int32x4)];
  dart.setMethodSignature(typed_queue.Int32x4Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Int32x4Queue.__proto__),
    [S._createList]: dart.fnType(typed_data.Int32x4List, [core.int]),
    [S._createBuffer]: dart.fnType(typed_buffer.Int32x4Buffer, [core.int]),
    [S._add$1]: dart.fnType(dart.void, [typed_data.Int32x4]),
    [S._writeToList$1]: dart.fnType(core.int, [core.List$(dart.nullable(typed_data.Int32x4))]),
    [S._grow$1]: dart.fnType(dart.void, []),
    [S._preGrow$1]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Int32x4Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Int32x4Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Int32x4Queue.__proto__),
    [S._defaultValue]: typed_data.Int32x4,
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(typed_data.Int32x4)),
    [S._tail$2]: core.int
  }));
  dart.setSetterSignature(typed_queue.Int32x4Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Int32x4Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(typed_data.Int32x4)),
    [S._tail$2]: core.int
  }));
  dart.setLibraryUri(typed_queue.Int32x4Queue, I[169]);
  dart.setStaticFieldSignature(typed_queue.Int32x4Queue, () => ['_zero']);
  dart.defineLazy(typed_queue.Int32x4Queue, {
    /*typed_queue.Int32x4Queue._zero*/get _zero() {
      return new _native_typed_data.NativeInt32x4.new(0, 0, 0, 0);
    }
  }, false);
  typed_queue.Float32x4Queue = class Float32x4Queue extends typed_queue._TypedQueue$(typed_data.Float32x4, typed_data.Float32x4List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Float32x4Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t199;
      t199 = new typed_queue.Float32x4Queue.new(elements[S$.$length]);
      return (() => {
        t199.addAll(elements);
        return t199;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Float32x4Queue.fromList(elements);
    }
    [S._createList](size) {
      return new _native_typed_data.NativeFloat32x4List.new(size);
    }
    [S._createBuffer](size) {
      return new typed_buffer.Float32x4Buffer.new(size);
    }
    get [S._defaultValue]() {
      return new _native_typed_data.NativeFloat32x4.zero();
    }
    [S._add$1](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[156] || CT.C156, null, [element])));
    }
    get [S._head$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[157] || CT.C157)));
    }
    [S._writeToList$1](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[158] || CT.C158, null, [target])));
    }
    [S._grow$1]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[159] || CT.C159, null, [])));
    }
    [S._preGrow$1](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[160] || CT.C160, null, [newElementCount])));
    }
    get [S._table$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[161] || CT.C161)));
    }
    get [S._tail$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[162] || CT.C162)));
    }
    set [S._head$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[163] || CT.C163, value)));
    }
    set [S._table$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[164] || CT.C164, value)));
    }
    set [S._tail$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[165] || CT.C165, value)));
    }
  };
  (typed_queue.Float32x4Queue.new = function(initialCapacity = null) {
    typed_queue.Float32x4Queue.__proto__.new.call(this, new _native_typed_data.NativeFloat32x4List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Float32x4Queue.prototype;
  dart.addTypeTests(typed_queue.Float32x4Queue);
  dart.addTypeCaches(typed_queue.Float32x4Queue);
  typed_queue.Float32x4Queue[dart.implements] = () => [queue_list.QueueList$(typed_data.Float32x4)];
  dart.setMethodSignature(typed_queue.Float32x4Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Float32x4Queue.__proto__),
    [S._createList]: dart.fnType(typed_data.Float32x4List, [core.int]),
    [S._createBuffer]: dart.fnType(typed_buffer.Float32x4Buffer, [core.int]),
    [S._add$1]: dart.fnType(dart.void, [typed_data.Float32x4]),
    [S._writeToList$1]: dart.fnType(core.int, [core.List$(dart.nullable(typed_data.Float32x4))]),
    [S._grow$1]: dart.fnType(dart.void, []),
    [S._preGrow$1]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Float32x4Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Float32x4Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Float32x4Queue.__proto__),
    [S._defaultValue]: typed_data.Float32x4,
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(typed_data.Float32x4)),
    [S._tail$2]: core.int
  }));
  dart.setSetterSignature(typed_queue.Float32x4Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Float32x4Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(typed_data.Float32x4)),
    [S._tail$2]: core.int
  }));
  dart.setLibraryUri(typed_queue.Float32x4Queue, I[169]);
  typed_queue._chooseRealInitialCapacity = function _chooseRealInitialCapacity(initialCapacity) {
    if (initialCapacity == null || dart.notNull(initialCapacity) < 16) {
      return 16;
    } else if (!typed_queue._isPowerOf2(initialCapacity)) {
      return typed_queue._nextPowerOf2(initialCapacity);
    } else {
      return initialCapacity;
    }
  };
  typed_queue._isPowerOf2 = function _isPowerOf2(number) {
    return (number & number - 1) === 0;
  };
  typed_queue._nextPowerOf2 = function _nextPowerOf2(number) {
    if (!(number > 0)) dart.assertFailed(null, I[168], 691, 10, "number > 0");
    number = (number << 1 >>> 0) - 1;
    for (;;) {
      let nextNumber = (number & number - 1) >>> 0;
      if (nextNumber === 0) return number;
      number = nextNumber;
    }
  };
  dart.defineLazy(typed_queue, {
    /*typed_queue._defaultInitialCapacity*/get _defaultInitialCapacity() {
      return 16;
    }
  }, false);
  method_channel_list_result.MethodChannelListResult = class MethodChannelListResult extends platform_interface_list_result.ListResultPlatform {
    static ['_#new#tearOff'](storage, opts) {
      let nextPageToken = opts && 'nextPageToken' in opts ? opts.nextPageToken : null;
      let items = opts && 'items' in opts ? opts.items : null;
      let prefixes = opts && 'prefixes' in opts ? opts.prefixes : null;
      return new method_channel_list_result.MethodChannelListResult.new(storage, {nextPageToken: nextPageToken, items: items, prefixes: prefixes});
    }
    get items() {
      return this[S._items$1][S$.$map](method_channel_reference.MethodChannelReference, dart.fn(path => new method_channel_reference.MethodChannelReference.new(dart.nullCheck(this.storage), path), T$.StringToMethodChannelReference()))[S$.$toList]();
    }
    get prefixes() {
      return this[S._prefixes$1][S$.$map](method_channel_reference.MethodChannelReference, dart.fn(path => new method_channel_reference.MethodChannelReference.new(dart.nullCheck(this.storage), path), T$.StringToMethodChannelReference()))[S$.$toList]();
    }
  };
  (method_channel_list_result.MethodChannelListResult.new = function(storage, opts) {
    let t199, t199$;
    let nextPageToken = opts && 'nextPageToken' in opts ? opts.nextPageToken : null;
    let items = opts && 'items' in opts ? opts.items : null;
    let prefixes = opts && 'prefixes' in opts ? opts.prefixes : null;
    this[S._items$1] = (t199 = items, t199 == null ? T$.JSArrayOfString().of([]) : t199);
    this[S._prefixes$1] = (t199$ = prefixes, t199$ == null ? T$.JSArrayOfString().of([]) : t199$);
    method_channel_list_result.MethodChannelListResult.__proto__.new.call(this, storage, nextPageToken);
    ;
  }).prototype = method_channel_list_result.MethodChannelListResult.prototype;
  dart.addTypeTests(method_channel_list_result.MethodChannelListResult);
  dart.addTypeCaches(method_channel_list_result.MethodChannelListResult);
  dart.setLibraryUri(method_channel_list_result.MethodChannelListResult, I[170]);
  dart.setFieldSignature(method_channel_list_result.MethodChannelListResult, () => ({
    __proto__: dart.getFields(method_channel_list_result.MethodChannelListResult.__proto__),
    [S._items$1]: dart.fieldType(core.List$(core.String)),
    [S._prefixes$1]: dart.fieldType(core.List$(core.String))
  }));
  method_channel_task.MethodChannelTask = class MethodChannelTask extends platform_interface_task.TaskPlatform {
    get storage() {
      return this[S.storage$3];
    }
    set storage(value) {
      super.storage = value;
    }
    get [S._stackTrace]() {
      let t202;
      t202 = this[S.__MethodChannelTask__stackTrace];
      return t202 == null ? dart.throw(new _internal.LateError.fieldNI("_stackTrace")) : t202;
    }
    set [S._stackTrace](_stackTrace$35param) {
      this[S.__MethodChannelTask__stackTrace] = _stackTrace$35param;
    }
    get [S._stream$1]() {
      let t202;
      t202 = this[S.__MethodChannelTask__stream];
      return t202 == null ? dart.throw(new _internal.LateError.fieldNI("_stream")) : t202;
    }
    set [S._stream$1](_stream$35param) {
      this[S.__MethodChannelTask__stream] = _stream$35param;
    }
    get [S._initialTaskCompleter]() {
      let t202;
      t202 = this[S.__MethodChannelTask__initialTaskCompleter];
      return t202 == null ? dart.throw(new _internal.LateError.fieldNI("_initialTaskCompleter")) : t202;
    }
    set [S._initialTaskCompleter](_initialTaskCompleter$35param) {
      this[S.__MethodChannelTask__initialTaskCompleter] = _initialTaskCompleter$35param;
    }
    get [S._snapshot$1]() {
      let t202;
      t202 = this[S.__MethodChannelTask__snapshot];
      return t202 == null ? dart.throw(new _internal.LateError.fieldNI("_snapshot")) : t202;
    }
    set [S._snapshot$1](_snapshot$35param) {
      this[S.__MethodChannelTask__snapshot] = _snapshot$35param;
    }
    get snapshotEvents() {
      return T$.StreamOfTaskSnapshotPlatform().as(dart.nullCheck(method_channel_firebase_storage.MethodChannelFirebaseStorage.taskObservers[S$.$_get](this[S._handle])).stream);
    }
    get snapshot() {
      return this[S._snapshot$1];
    }
    get onComplete() {
      return async.async(platform_interface_task_snapshot.TaskSnapshotPlatform, (function* onComplete() {
        if (this[S._didComplete] && this[S._exception] == null) {
          return T$.FutureOfTaskSnapshotPlatform().value(this.snapshot);
        } else if (this[S._didComplete] && this[S._exception] != null) {
          return exception$2.catchFuturePlatformException(platform_interface_task_snapshot.TaskSnapshotPlatform, dart.nullCheck(this[S._exception]), this[S._stackTrace]);
        } else {
          this[S._completer] == null ? this[S._completer] = T$.CompleterOfTaskSnapshotPlatform().new() : null;
          return dart.nullCheck(this[S._completer]).future;
        }
      }).bind(this));
    }
    pause() {
      return async.async(core.bool, (function* pause() {
        try {
          if (!this[S._initialTaskCompleter].isCompleted) {
            yield this[S._initialTaskCompleter].future;
          }
          let data = (yield method_channel_firebase_storage.MethodChannelFirebaseStorage.channel.invokeMapMethod(core.String, dart.dynamic, "Task#pause", new (T$.IdentityMapOfString$dynamic()).from(["handle", this[S._handle]])));
          let success = core.bool.as(dart.nullCheck(data)[S$.$_get]("status"));
          if (success) {
            this[S._snapshot$1] = new method_channel_task_snapshot.MethodChannelTaskSnapshot.new(this.storage, task_state.TaskState.paused, T$.LinkedHashMapOfString$dynamic().from(core.Map.as(data[S$.$_get]("snapshot"))));
          }
          return success;
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            return exception$2.catchFuturePlatformException(core.bool, e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    resume() {
      return async.async(core.bool, (function* resume() {
        try {
          if (!this[S._initialTaskCompleter].isCompleted) {
            yield this[S._initialTaskCompleter].future;
          }
          let data = (yield method_channel_firebase_storage.MethodChannelFirebaseStorage.channel.invokeMapMethod(core.String, dart.dynamic, "Task#resume", new (T$.IdentityMapOfString$dynamic()).from(["handle", this[S._handle]])));
          let success = core.bool.as(dart.nullCheck(data)[S$.$_get]("status"));
          if (success) {
            this[S._snapshot$1] = new method_channel_task_snapshot.MethodChannelTaskSnapshot.new(this.storage, task_state.TaskState.running, T$.LinkedHashMapOfString$dynamic().from(core.Map.as(data[S$.$_get]("snapshot"))));
          }
          return success;
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            return exception$2.catchFuturePlatformException(core.bool, e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    cancel() {
      return async.async(core.bool, (function* cancel() {
        try {
          if (!this[S._initialTaskCompleter].isCompleted) {
            yield this[S._initialTaskCompleter].future;
          }
          let data = (yield method_channel_firebase_storage.MethodChannelFirebaseStorage.channel.invokeMapMethod(core.String, dart.dynamic, "Task#cancel", new (T$.IdentityMapOfString$dynamic()).from(["handle", this[S._handle]])));
          let success = core.bool.as(dart.nullCheck(data)[S$.$_get]("status"));
          if (success) {
            this[S._snapshot$1] = new method_channel_task_snapshot.MethodChannelTaskSnapshot.new(this.storage, task_state.TaskState.canceled, T$.LinkedHashMapOfString$dynamic().from(core.Map.as(data[S$.$_get]("snapshot"))));
          }
          return success;
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            return exception$2.catchFuturePlatformException(core.bool, e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
  };
  (method_channel_task.MethodChannelTask.new = function(_handle, storage, path, _initialTask) {
    this[S._exception] = null;
    this[S.__MethodChannelTask__stackTrace] = null;
    this[S._didComplete] = false;
    this[S._completer] = null;
    this[S.__MethodChannelTask__stream] = null;
    this[S.__MethodChannelTask__initialTaskCompleter] = null;
    this[S.__MethodChannelTask__snapshot] = null;
    this[S._handle] = _handle;
    this[S.storage$3] = storage;
    this[S._initialTask] = _initialTask;
    method_channel_task.MethodChannelTask.__proto__.new.call(this);
    this[S._initialTaskCompleter] = T$.CompleterOfvoid().new();
    this[S._snapshot$1] = new method_channel_task_snapshot.MethodChannelTaskSnapshot.new(this.storage, task_state.TaskState.running, new (T$.IdentityMapOfString$dynamic()).from(["path", path, "bytesTransferred", 0, "totalBytes", 1]));
    this[S._initialTask]().then(core.Null, dart.fn(_ => {
      this[S._initialTaskCompleter].complete();
    }, T$.voidToNull())).catchError(dart.fn((e, stackTrace) => {
      this[S._initialTaskCompleter].completeError(e, stackTrace);
      this[S._didComplete] = true;
      this[S._exception] = e;
      this[S._stackTrace] = stackTrace;
      if (this[S._completer] != null) {
        exception$2.catchFuturePlatformException(dart.dynamic, e, stackTrace).catchError(dart.bind(dart.nullCheck(this[S._completer]), 'completeError'));
      }
    }, T$.ObjectAndStackTraceToNull()));
    this[S._stream$1] = T$.StreamOfTaskSnapshotPlatform().as(dart.nullCheck(method_channel_firebase_storage.MethodChannelFirebaseStorage.taskObservers[S$.$_get](this[S._handle])).stream);
    let _subscription = null;
    function _subscription$35get() {
      let t200;
      t200 = _subscription;
      return t200 == null ? dart.throw(new _internal.LateError.localNI("_subscription")) : t200;
    }
    function _subscription$35set(_subscription$35param) {
      return _subscription = _subscription$35param;
    }
    _subscription$35set(this[S._stream$1].listen(dart.fn(snapshot => async.async(dart.void, (function*() {
      let t202;
      if (this[S._snapshot$1].state !== task_state.TaskState.canceled) {
        this[S._snapshot$1] = snapshot;
      }
      if (snapshot.state === task_state.TaskState.success) {
        this[S._didComplete] = true;
        t202 = this[S._completer];
        t202 == null ? null : t202.complete(snapshot);
        yield _subscription$35get().cancel();
      }
    }).bind(this)), T$.TaskSnapshotPlatformToFutureOfvoid()), {onError: dart.fn((e, stackTrace) => {
        if (firebase_core_platform_interface.FirebaseException.is(e) && e.code === "canceled") {
          this[S._snapshot$1] = new method_channel_task_snapshot.MethodChannelTaskSnapshot.new(this.storage, task_state.TaskState.canceled, new (T$.IdentityMapOfString$dynamic()).from(["path", path, "bytesTransferred", this[S._snapshot$1].bytesTransferred, "totalBytes", this[S._snapshot$1].totalBytes]));
        } else {
          this[S._snapshot$1] = new method_channel_task_snapshot.MethodChannelTaskSnapshot.new(this.storage, task_state.TaskState.error, new (T$.IdentityMapOfString$dynamic()).from(["path", path, "bytesTransferred", this[S._snapshot$1].bytesTransferred, "totalBytes", this[S._snapshot$1].totalBytes]));
        }
        this[S._didComplete] = true;
        this[S._exception] = e;
        this[S._stackTrace] = stackTrace;
        if (this[S._completer] != null) {
          exception$2.catchFuturePlatformException(dart.dynamic, e, stackTrace).catchError(dart.bind(dart.nullCheck(this[S._completer]), 'completeError'));
        }
      }, T$.ObjectAndStackTraceToNull()), cancelOnError: true}));
  }).prototype = method_channel_task.MethodChannelTask.prototype;
  dart.addTypeTests(method_channel_task.MethodChannelTask);
  dart.addTypeCaches(method_channel_task.MethodChannelTask);
  dart.setGetterSignature(method_channel_task.MethodChannelTask, () => ({
    __proto__: dart.getGetters(method_channel_task.MethodChannelTask.__proto__),
    [S._stackTrace]: core.StackTrace,
    [S._stream$1]: async.Stream$(platform_interface_task_snapshot.TaskSnapshotPlatform),
    [S._initialTaskCompleter]: async.Completer$(dart.void),
    [S._snapshot$1]: platform_interface_task_snapshot.TaskSnapshotPlatform
  }));
  dart.setSetterSignature(method_channel_task.MethodChannelTask, () => ({
    __proto__: dart.getSetters(method_channel_task.MethodChannelTask.__proto__),
    [S._stackTrace]: core.StackTrace,
    [S._stream$1]: async.Stream$(platform_interface_task_snapshot.TaskSnapshotPlatform),
    [S._initialTaskCompleter]: async.Completer$(dart.void),
    [S._snapshot$1]: platform_interface_task_snapshot.TaskSnapshotPlatform
  }));
  dart.setLibraryUri(method_channel_task.MethodChannelTask, I[171]);
  dart.setFieldSignature(method_channel_task.MethodChannelTask, () => ({
    __proto__: dart.getFields(method_channel_task.MethodChannelTask.__proto__),
    [S._exception]: dart.fieldType(dart.nullable(core.Object)),
    [S.__MethodChannelTask__stackTrace]: dart.fieldType(dart.nullable(core.StackTrace)),
    [S._didComplete]: dart.fieldType(core.bool),
    [S._completer]: dart.fieldType(dart.nullable(async.Completer$(platform_interface_task_snapshot.TaskSnapshotPlatform))),
    [S.__MethodChannelTask__stream]: dart.fieldType(dart.nullable(async.Stream$(platform_interface_task_snapshot.TaskSnapshotPlatform))),
    [S.__MethodChannelTask__initialTaskCompleter]: dart.fieldType(dart.nullable(async.Completer$(dart.void))),
    [S._initialTask]: dart.fieldType(dart.fnType(async.Future$(dart.void), [])),
    [S._handle]: dart.finalFieldType(core.int),
    storage: dart.finalFieldType(platform_interface_firebase_storage.FirebaseStoragePlatform),
    [S.__MethodChannelTask__snapshot]: dart.fieldType(dart.nullable(platform_interface_task_snapshot.TaskSnapshotPlatform))
  }));
  method_channel_task.MethodChannelPutFileTask = class MethodChannelPutFileTask extends method_channel_task.MethodChannelTask {
    static ['_#new#tearOff'](handle, storage, path, file, metadata) {
      return new method_channel_task.MethodChannelPutFileTask.new(handle, storage, path, file, metadata);
    }
    static _getTask(handle, storage, path, file, metadata) {
      return dart.fn(() => {
        let t205;
        return method_channel_firebase_storage.MethodChannelFirebaseStorage.channel.invokeMethod(dart.void, "Task#startPutFile", new (T$.IdentityMapOfString$dynamic()).from(["appName", storage.app.name, "maxOperationRetryTime", storage.maxOperationRetryTime, "maxUploadRetryTime", storage.maxUploadRetryTime, "maxDownloadRetryTime", storage.maxDownloadRetryTime, "bucket", storage.bucket, "host", storage.emulatorHost, "port", storage.emulatorPort, "handle", handle, "path", path, "filePath", file.absolute.path, "metadata", (t205 = metadata, t205 == null ? null : t205.asMap())]));
      }, T$.VoidToFutureOfvoid());
    }
  };
  (method_channel_task.MethodChannelPutFileTask.new = function(handle, storage, path, file, metadata) {
    method_channel_task.MethodChannelPutFileTask.__proto__.new.call(this, handle, storage, path, method_channel_task.MethodChannelPutFileTask._getTask(handle, storage, path, file, metadata));
    ;
  }).prototype = method_channel_task.MethodChannelPutFileTask.prototype;
  dart.addTypeTests(method_channel_task.MethodChannelPutFileTask);
  dart.addTypeCaches(method_channel_task.MethodChannelPutFileTask);
  dart.setStaticMethodSignature(method_channel_task.MethodChannelPutFileTask, () => ['_getTask']);
  dart.setLibraryUri(method_channel_task.MethodChannelPutFileTask, I[171]);
  method_channel_task.MethodChannelPutStringTask = class MethodChannelPutStringTask extends method_channel_task.MethodChannelTask {
    static ['_#new#tearOff'](handle, storage, path, data, format, metadata) {
      return new method_channel_task.MethodChannelPutStringTask.new(handle, storage, path, data, format, metadata);
    }
    static _getTask(handle, storage, path, data, format, metadata) {
      return dart.fn(() => {
        let t205;
        return method_channel_firebase_storage.MethodChannelFirebaseStorage.channel.invokeMethod(dart.void, "Task#startPutString", new (T$.IdentityMapOfString$dynamic()).from(["appName", storage.app.name, "bucket", storage.bucket, "maxOperationRetryTime", storage.maxOperationRetryTime, "maxUploadRetryTime", storage.maxUploadRetryTime, "maxDownloadRetryTime", storage.maxDownloadRetryTime, "host", storage.emulatorHost, "port", storage.emulatorPort, "handle", handle, "path", path, "data", data, "format", format.index, "metadata", (t205 = metadata, t205 == null ? null : t205.asMap())]));
      }, T$.VoidToFutureOfvoid());
    }
  };
  (method_channel_task.MethodChannelPutStringTask.new = function(handle, storage, path, data, format, metadata) {
    method_channel_task.MethodChannelPutStringTask.__proto__.new.call(this, handle, storage, path, method_channel_task.MethodChannelPutStringTask._getTask(handle, storage, path, data, format, metadata));
    ;
  }).prototype = method_channel_task.MethodChannelPutStringTask.prototype;
  dart.addTypeTests(method_channel_task.MethodChannelPutStringTask);
  dart.addTypeCaches(method_channel_task.MethodChannelPutStringTask);
  dart.setStaticMethodSignature(method_channel_task.MethodChannelPutStringTask, () => ['_getTask']);
  dart.setLibraryUri(method_channel_task.MethodChannelPutStringTask, I[171]);
  method_channel_task.MethodChannelPutTask = class MethodChannelPutTask extends method_channel_task.MethodChannelTask {
    static ['_#new#tearOff'](handle, storage, path, data, metadata) {
      return new method_channel_task.MethodChannelPutTask.new(handle, storage, path, data, metadata);
    }
    static _getTask(handle, storage, path, data, metadata) {
      return dart.fn(() => {
        let t205;
        return method_channel_firebase_storage.MethodChannelFirebaseStorage.channel.invokeMethod(dart.void, "Task#startPutData", new (T$.IdentityMapOfString$dynamic()).from(["appName", storage.app.name, "bucket", storage.bucket, "maxOperationRetryTime", storage.maxOperationRetryTime, "maxUploadRetryTime", storage.maxUploadRetryTime, "maxDownloadRetryTime", storage.maxDownloadRetryTime, "host", storage.emulatorHost, "port", storage.emulatorPort, "handle", handle, "path", path, "data", data, "metadata", (t205 = metadata, t205 == null ? null : t205.asMap())]));
      }, T$.VoidToFutureOfvoid());
    }
  };
  (method_channel_task.MethodChannelPutTask.new = function(handle, storage, path, data, metadata) {
    method_channel_task.MethodChannelPutTask.__proto__.new.call(this, handle, storage, path, method_channel_task.MethodChannelPutTask._getTask(handle, storage, path, data, metadata));
    ;
  }).prototype = method_channel_task.MethodChannelPutTask.prototype;
  dart.addTypeTests(method_channel_task.MethodChannelPutTask);
  dart.addTypeCaches(method_channel_task.MethodChannelPutTask);
  dart.setStaticMethodSignature(method_channel_task.MethodChannelPutTask, () => ['_getTask']);
  dart.setLibraryUri(method_channel_task.MethodChannelPutTask, I[171]);
  method_channel_task.MethodChannelDownloadTask = class MethodChannelDownloadTask extends method_channel_task.MethodChannelTask {
    static ['_#new#tearOff'](handle, storage, path, file) {
      return new method_channel_task.MethodChannelDownloadTask.new(handle, storage, path, file);
    }
    static _getTask(handle, storage, path, file) {
      return dart.fn(() => method_channel_firebase_storage.MethodChannelFirebaseStorage.channel.invokeMethod(dart.void, "Task#writeToFile", new (T$.IdentityMapOfString$dynamic()).from(["appName", storage.app.name, "maxOperationRetryTime", storage.maxOperationRetryTime, "maxUploadRetryTime", storage.maxUploadRetryTime, "maxDownloadRetryTime", storage.maxDownloadRetryTime, "host", storage.emulatorHost, "port", storage.emulatorPort, "bucket", storage.bucket, "handle", handle, "path", path, "filePath", file.path])), T$.VoidToFutureOfvoid());
    }
  };
  (method_channel_task.MethodChannelDownloadTask.new = function(handle, storage, path, file) {
    method_channel_task.MethodChannelDownloadTask.__proto__.new.call(this, handle, storage, path, method_channel_task.MethodChannelDownloadTask._getTask(handle, storage, path, file));
    ;
  }).prototype = method_channel_task.MethodChannelDownloadTask.prototype;
  dart.addTypeTests(method_channel_task.MethodChannelDownloadTask);
  dart.addTypeCaches(method_channel_task.MethodChannelDownloadTask);
  dart.setStaticMethodSignature(method_channel_task.MethodChannelDownloadTask, () => ['_getTask']);
  dart.setLibraryUri(method_channel_task.MethodChannelDownloadTask, I[171]);
  const _is_TypedDataBuffer_default = Symbol('_is_TypedDataBuffer_default');
  typed_buffer.TypedDataBuffer$ = dart.generic(E => {
    var __t$IterableOfE = () => (__t$IterableOfE = dart.constFn(core.Iterable$(E)))();
    var __t$TypedDataBufferOfE = () => (__t$TypedDataBufferOfE = dart.constFn(typed_buffer.TypedDataBuffer$(E)))();
    class TypedDataBuffer extends collection.ListBase$(E) {
      get [S._typedBuffer]() {
        return typed_data.TypedData.as(this[S._buffer]);
      }
      get length() {
        return this[S._length];
      }
      _get(index) {
        if (index >= this.length) dart.throw(new core.IndexError.new(index, this));
        return this[S._buffer][S$.$_get](index);
      }
      _set(index, value$) {
        let value = value$;
        E.as(value);
        if (index >= this.length) dart.throw(new core.IndexError.new(index, this));
        this[S._buffer][S$.$_set](index, value);
        return value$;
      }
      set length(newLength) {
        if (newLength < this[S._length]) {
          let defaultValue = this[S._defaultValue$1];
          for (let i = newLength; i < this[S._length]; i = i + 1) {
            this[S._buffer][S$.$_set](i, defaultValue);
          }
        } else if (newLength > this[S._buffer][S$.$length]) {
          let newBuffer = null;
          if (this[S._buffer][S$.$isEmpty]) {
            newBuffer = this[S._createBuffer$1](newLength);
          } else {
            newBuffer = this[S._createBiggerBuffer](newLength);
          }
          newBuffer[S.$setRange](0, this[S._length], this[S._buffer]);
          this[S._buffer] = newBuffer;
        }
        this[S._length] = newLength;
      }
      [S._add$2](value) {
        let t205;
        if (this[S._length] === this[S._buffer][S$.$length]) this[S._grow$2](this[S._length]);
        this[S._buffer][S$.$_set]((t205 = this[S._length], this[S._length] = t205 + 1, t205), value);
      }
      add(element) {
        E.as(element);
        this[S._add$2](element);
      }
      addAll(values, start = 0, end = null) {
        __t$IterableOfE().as(values);
        core.RangeError.checkNotNegative(start, "start");
        if (end != null && start > dart.notNull(end)) {
          dart.throw(new core.RangeError.range(end, start, null, "end"));
        }
        this[S._addAll](values, start, end);
      }
      insertAll(index, values, start = 0, end = null) {
        let t205;
        __t$IterableOfE().as(values);
        core.RangeError.checkValidIndex(index, this, "index", this[S._length] + 1);
        core.RangeError.checkNotNegative(start, "start");
        if (end != null) {
          if (start > dart.notNull(end)) {
            dart.throw(new core.RangeError.range(end, start, null, "end"));
          }
          if (start === end) return;
        }
        if (index === this[S._length]) {
          this[S._addAll](values, start, end);
          return;
        }
        if (end == null && core.List.is(values)) {
          end = values[S$.$length];
        }
        if (end != null) {
          this[S._insertKnownLength](index, values, start, end);
          return;
        }
        let writeIndex = this[S._length];
        let skipCount = start;
        for (let value of values) {
          if (skipCount > 0) {
            skipCount = skipCount - 1;
            continue;
          }
          if (writeIndex === this[S._buffer][S$.$length]) {
            this[S._grow$2](writeIndex);
          }
          this[S._buffer][S$.$_set]((t205 = writeIndex, writeIndex = t205 + 1, t205), value);
        }
        if (skipCount > 0) {
          dart.throw(new core.StateError.new("Too few elements"));
        }
        if (end != null && writeIndex < dart.notNull(end)) {
          dart.throw(new core.RangeError.range(end, start, writeIndex, "end"));
        }
        typed_buffer.TypedDataBuffer._reverse(this[S._buffer], index, this[S._length]);
        typed_buffer.TypedDataBuffer._reverse(this[S._buffer], this[S._length], writeIndex);
        typed_buffer.TypedDataBuffer._reverse(this[S._buffer], index, writeIndex);
        this[S._length] = writeIndex;
        return;
      }
      static _reverse(buffer, start, end) {
        end = end - 1;
        while (start < end) {
          let first = buffer[S$.$_get](start);
          let last = buffer[S$.$_get](end);
          buffer[S$.$_set](end, first);
          buffer[S$.$_set](start, last);
          start = start + 1;
          end = end - 1;
        }
      }
      [S._addAll](values, start = 0, end = null) {
        if (core.List.is(values)) end == null ? end = values[S$.$length] : null;
        if (end != null) {
          this[S._insertKnownLength](this[S._length], values, start, end);
          return;
        }
        let i = 0;
        for (let value of values) {
          if (i >= start) this.add(value);
          i = i + 1;
        }
        if (i < start) dart.throw(new core.StateError.new("Too few elements"));
      }
      [S._insertKnownLength](index, values, start, end) {
        if (core.List.is(values)) {
          if (start > values[S$.$length] || end > values[S$.$length]) {
            dart.throw(new core.StateError.new("Too few elements"));
          }
        }
        let valuesLength = end - start;
        let newLength = this[S._length] + valuesLength;
        this[S._ensureCapacity](newLength);
        this[S._buffer][S.$setRange](index + valuesLength, this[S._length] + valuesLength, this[S._buffer], index);
        this[S._buffer][S.$setRange](index, index + valuesLength, values, start);
        this[S._length] = newLength;
      }
      insert(index, element) {
        E.as(element);
        if (index < 0 || index > this[S._length]) {
          dart.throw(new core.RangeError.range(index, 0, this[S._length]));
        }
        if (this[S._length] < this[S._buffer][S$.$length]) {
          this[S._buffer][S.$setRange](index + 1, this[S._length] + 1, this[S._buffer], index);
          this[S._buffer][S$.$_set](index, element);
          this[S._length] = this[S._length] + 1;
          return;
        }
        let newBuffer = this[S._createBiggerBuffer](null);
        newBuffer[S.$setRange](0, index, this[S._buffer]);
        newBuffer[S.$setRange](index + 1, this[S._length] + 1, this[S._buffer], index);
        newBuffer[S$.$_set](index, element);
        this[S._length] = this[S._length] + 1;
        this[S._buffer] = newBuffer;
      }
      [S._ensureCapacity](requiredCapacity) {
        if (requiredCapacity <= this[S._buffer][S$.$length]) return;
        let newBuffer = this[S._createBiggerBuffer](requiredCapacity);
        newBuffer[S.$setRange](0, this[S._length], this[S._buffer]);
        this[S._buffer] = newBuffer;
      }
      [S._createBiggerBuffer](requiredCapacity) {
        let newLength = this[S._buffer][S$.$length] * 2;
        if (requiredCapacity != null && dart.notNull(newLength) < dart.notNull(requiredCapacity)) {
          newLength = requiredCapacity;
        } else if (dart.notNull(newLength) < 8) {
          newLength = 8;
        }
        return this[S._createBuffer$1](newLength);
      }
      [S._grow$2](length) {
        let t205;
        this[S._buffer] = (t205 = this[S._createBiggerBuffer](null), (() => {
          t205[S.$setRange](0, length, this[S._buffer]);
          return t205;
        })());
      }
      setRange(start, end, iterable, skipCount = 0) {
        __t$IterableOfE().as(iterable);
        if (end > this[S._length]) dart.throw(new core.RangeError.range(end, 0, this[S._length]));
        this[S._setRange](start, end, iterable, skipCount);
      }
      [S._setRange](start, end, source, skipCount) {
        if (__t$TypedDataBufferOfE().is(source)) {
          this[S._buffer][S.$setRange](start, end, source[S._buffer], skipCount);
        } else {
          this[S._buffer][S.$setRange](start, end, source, skipCount);
        }
      }
      get elementSizeInBytes() {
        return this[S._typedBuffer][S.$elementSizeInBytes];
      }
      get lengthInBytes() {
        return this[S._length] * this[S._typedBuffer][S.$elementSizeInBytes];
      }
      get offsetInBytes() {
        return this[S._typedBuffer][S.$offsetInBytes];
      }
      get buffer() {
        return this[S._typedBuffer][S.$buffer];
      }
    }
    (TypedDataBuffer.new = function(buffer) {
      this[S._buffer] = buffer;
      this[S._length] = buffer[S$.$length];
      ;
    }).prototype = TypedDataBuffer.prototype;
    dart.addTypeTests(TypedDataBuffer);
    TypedDataBuffer.prototype[_is_TypedDataBuffer_default] = true;
    dart.addTypeCaches(TypedDataBuffer);
    dart.setMethodSignature(TypedDataBuffer, () => ({
      __proto__: dart.getMethods(TypedDataBuffer.__proto__),
      _get: dart.fnType(E, [core.int]),
      [S$.$_get]: dart.fnType(E, [core.int]),
      _set: dart.fnType(dart.void, [core.int, dart.nullable(core.Object)]),
      [S$.$_set]: dart.fnType(dart.void, [core.int, dart.nullable(core.Object)]),
      [S._add$2]: dart.fnType(dart.void, [E]),
      addAll: dart.fnType(dart.void, [dart.nullable(core.Object)], [core.int, dart.nullable(core.int)]),
      [S$.$addAll]: dart.fnType(dart.void, [dart.nullable(core.Object)], [core.int, dart.nullable(core.int)]),
      insertAll: dart.fnType(dart.void, [core.int, dart.nullable(core.Object)], [core.int, dart.nullable(core.int)]),
      [S.$insertAll]: dart.fnType(dart.void, [core.int, dart.nullable(core.Object)], [core.int, dart.nullable(core.int)]),
      [S._addAll]: dart.fnType(dart.void, [core.Iterable$(E)], [core.int, dart.nullable(core.int)]),
      [S._insertKnownLength]: dart.fnType(dart.void, [core.int, core.Iterable$(E), core.int, core.int]),
      [S._ensureCapacity]: dart.fnType(dart.void, [core.int]),
      [S._createBiggerBuffer]: dart.fnType(core.List$(E), [dart.nullable(core.int)]),
      [S._grow$2]: dart.fnType(dart.void, [core.int]),
      [S._setRange]: dart.fnType(dart.void, [core.int, core.int, core.Iterable$(E), core.int])
    }));
    dart.setStaticMethodSignature(TypedDataBuffer, () => ['_reverse']);
    dart.setGetterSignature(TypedDataBuffer, () => ({
      __proto__: dart.getGetters(TypedDataBuffer.__proto__),
      [S._typedBuffer]: typed_data.TypedData,
      length: core.int,
      [S$.$length]: core.int,
      elementSizeInBytes: core.int,
      lengthInBytes: core.int,
      offsetInBytes: core.int,
      buffer: typed_data.ByteBuffer
    }));
    dart.setSetterSignature(TypedDataBuffer, () => ({
      __proto__: dart.getSetters(TypedDataBuffer.__proto__),
      length: core.int,
      [S$.$length]: core.int
    }));
    dart.setLibraryUri(TypedDataBuffer, I[172]);
    dart.setFieldSignature(TypedDataBuffer, () => ({
      __proto__: dart.getFields(TypedDataBuffer.__proto__),
      [S._buffer]: dart.fieldType(core.List$(E)),
      [S._length]: dart.fieldType(core.int)
    }));
    dart.setStaticFieldSignature(TypedDataBuffer, () => ['_initialLength']);
    dart.defineExtensionMethods(TypedDataBuffer, [
      '_get',
      '_set',
      'add',
      'addAll',
      'insertAll',
      'insert',
      'setRange'
    ]);
    dart.defineExtensionAccessors(TypedDataBuffer, ['length']);
    return TypedDataBuffer;
  });
  typed_buffer.TypedDataBuffer = typed_buffer.TypedDataBuffer$();
  dart.defineLazy(typed_buffer.TypedDataBuffer, {
    /*typed_buffer.TypedDataBuffer._initialLength*/get _initialLength() {
      return 8;
    }
  }, false);
  dart.addTypeTests(typed_buffer.TypedDataBuffer, _is_TypedDataBuffer_default);
  typed_buffer._IntBuffer = class _IntBuffer extends typed_buffer.TypedDataBuffer$(core.int) {
    get [S._defaultValue$1]() {
      return 0;
    }
  };
  (typed_buffer._IntBuffer.new = function(buffer) {
    typed_buffer._IntBuffer.__proto__.new.call(this, buffer);
    ;
  }).prototype = typed_buffer._IntBuffer.prototype;
  dart.addTypeTests(typed_buffer._IntBuffer);
  dart.addTypeCaches(typed_buffer._IntBuffer);
  dart.setGetterSignature(typed_buffer._IntBuffer, () => ({
    __proto__: dart.getGetters(typed_buffer._IntBuffer.__proto__),
    [S._defaultValue$1]: core.int
  }));
  dart.setLibraryUri(typed_buffer._IntBuffer, I[172]);
  typed_buffer._FloatBuffer = class _FloatBuffer extends typed_buffer.TypedDataBuffer$(core.double) {
    get [S._defaultValue$1]() {
      return 0;
    }
  };
  (typed_buffer._FloatBuffer.new = function(buffer) {
    typed_buffer._FloatBuffer.__proto__.new.call(this, buffer);
    ;
  }).prototype = typed_buffer._FloatBuffer.prototype;
  dart.addTypeTests(typed_buffer._FloatBuffer);
  dart.addTypeCaches(typed_buffer._FloatBuffer);
  dart.setGetterSignature(typed_buffer._FloatBuffer, () => ({
    __proto__: dart.getGetters(typed_buffer._FloatBuffer.__proto__),
    [S._defaultValue$1]: core.double
  }));
  dart.setLibraryUri(typed_buffer._FloatBuffer, I[172]);
  typed_buffer.Uint8Buffer = class Uint8Buffer extends typed_buffer._IntBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Uint8Buffer.new(initialLength);
    }
    [S._createBuffer$1](size) {
      return _native_typed_data.NativeUint8List.new(size);
    }
  };
  (typed_buffer.Uint8Buffer.new = function(initialLength = 0) {
    typed_buffer.Uint8Buffer.__proto__.new.call(this, _native_typed_data.NativeUint8List.new(initialLength));
    ;
  }).prototype = typed_buffer.Uint8Buffer.prototype;
  dart.addTypeTests(typed_buffer.Uint8Buffer);
  dart.addTypeCaches(typed_buffer.Uint8Buffer);
  dart.setMethodSignature(typed_buffer.Uint8Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Uint8Buffer.__proto__),
    [S._createBuffer$1]: dart.fnType(typed_data.Uint8List, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Uint8Buffer, I[172]);
  typed_buffer.Int8Buffer = class Int8Buffer extends typed_buffer._IntBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Int8Buffer.new(initialLength);
    }
    [S._createBuffer$1](size) {
      return _native_typed_data.NativeInt8List.new(size);
    }
  };
  (typed_buffer.Int8Buffer.new = function(initialLength = 0) {
    typed_buffer.Int8Buffer.__proto__.new.call(this, _native_typed_data.NativeInt8List.new(initialLength));
    ;
  }).prototype = typed_buffer.Int8Buffer.prototype;
  dart.addTypeTests(typed_buffer.Int8Buffer);
  dart.addTypeCaches(typed_buffer.Int8Buffer);
  dart.setMethodSignature(typed_buffer.Int8Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Int8Buffer.__proto__),
    [S._createBuffer$1]: dart.fnType(typed_data.Int8List, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Int8Buffer, I[172]);
  typed_buffer.Uint8ClampedBuffer = class Uint8ClampedBuffer extends typed_buffer._IntBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Uint8ClampedBuffer.new(initialLength);
    }
    [S._createBuffer$1](size) {
      return _native_typed_data.NativeUint8ClampedList.new(size);
    }
  };
  (typed_buffer.Uint8ClampedBuffer.new = function(initialLength = 0) {
    typed_buffer.Uint8ClampedBuffer.__proto__.new.call(this, _native_typed_data.NativeUint8ClampedList.new(initialLength));
    ;
  }).prototype = typed_buffer.Uint8ClampedBuffer.prototype;
  dart.addTypeTests(typed_buffer.Uint8ClampedBuffer);
  dart.addTypeCaches(typed_buffer.Uint8ClampedBuffer);
  dart.setMethodSignature(typed_buffer.Uint8ClampedBuffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Uint8ClampedBuffer.__proto__),
    [S._createBuffer$1]: dart.fnType(typed_data.Uint8ClampedList, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Uint8ClampedBuffer, I[172]);
  typed_buffer.Uint16Buffer = class Uint16Buffer extends typed_buffer._IntBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Uint16Buffer.new(initialLength);
    }
    [S._createBuffer$1](size) {
      return _native_typed_data.NativeUint16List.new(size);
    }
  };
  (typed_buffer.Uint16Buffer.new = function(initialLength = 0) {
    typed_buffer.Uint16Buffer.__proto__.new.call(this, _native_typed_data.NativeUint16List.new(initialLength));
    ;
  }).prototype = typed_buffer.Uint16Buffer.prototype;
  dart.addTypeTests(typed_buffer.Uint16Buffer);
  dart.addTypeCaches(typed_buffer.Uint16Buffer);
  dart.setMethodSignature(typed_buffer.Uint16Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Uint16Buffer.__proto__),
    [S._createBuffer$1]: dart.fnType(typed_data.Uint16List, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Uint16Buffer, I[172]);
  typed_buffer.Int16Buffer = class Int16Buffer extends typed_buffer._IntBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Int16Buffer.new(initialLength);
    }
    [S._createBuffer$1](size) {
      return _native_typed_data.NativeInt16List.new(size);
    }
  };
  (typed_buffer.Int16Buffer.new = function(initialLength = 0) {
    typed_buffer.Int16Buffer.__proto__.new.call(this, _native_typed_data.NativeInt16List.new(initialLength));
    ;
  }).prototype = typed_buffer.Int16Buffer.prototype;
  dart.addTypeTests(typed_buffer.Int16Buffer);
  dart.addTypeCaches(typed_buffer.Int16Buffer);
  dart.setMethodSignature(typed_buffer.Int16Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Int16Buffer.__proto__),
    [S._createBuffer$1]: dart.fnType(typed_data.Int16List, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Int16Buffer, I[172]);
  typed_buffer.Uint32Buffer = class Uint32Buffer extends typed_buffer._IntBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Uint32Buffer.new(initialLength);
    }
    [S._createBuffer$1](size) {
      return _native_typed_data.NativeUint32List.new(size);
    }
  };
  (typed_buffer.Uint32Buffer.new = function(initialLength = 0) {
    typed_buffer.Uint32Buffer.__proto__.new.call(this, _native_typed_data.NativeUint32List.new(initialLength));
    ;
  }).prototype = typed_buffer.Uint32Buffer.prototype;
  dart.addTypeTests(typed_buffer.Uint32Buffer);
  dart.addTypeCaches(typed_buffer.Uint32Buffer);
  dart.setMethodSignature(typed_buffer.Uint32Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Uint32Buffer.__proto__),
    [S._createBuffer$1]: dart.fnType(typed_data.Uint32List, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Uint32Buffer, I[172]);
  typed_buffer.Int32Buffer = class Int32Buffer extends typed_buffer._IntBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Int32Buffer.new(initialLength);
    }
    [S._createBuffer$1](size) {
      return _native_typed_data.NativeInt32List.new(size);
    }
  };
  (typed_buffer.Int32Buffer.new = function(initialLength = 0) {
    typed_buffer.Int32Buffer.__proto__.new.call(this, _native_typed_data.NativeInt32List.new(initialLength));
    ;
  }).prototype = typed_buffer.Int32Buffer.prototype;
  dart.addTypeTests(typed_buffer.Int32Buffer);
  dart.addTypeCaches(typed_buffer.Int32Buffer);
  dart.setMethodSignature(typed_buffer.Int32Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Int32Buffer.__proto__),
    [S._createBuffer$1]: dart.fnType(typed_data.Int32List, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Int32Buffer, I[172]);
  typed_buffer.Uint64Buffer = class Uint64Buffer extends typed_buffer._IntBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Uint64Buffer.new(initialLength);
    }
    [S._createBuffer$1](size) {
      return typed_data.Uint64List.new(size);
    }
  };
  (typed_buffer.Uint64Buffer.new = function(initialLength = 0) {
    typed_buffer.Uint64Buffer.__proto__.new.call(this, typed_data.Uint64List.new(initialLength));
    ;
  }).prototype = typed_buffer.Uint64Buffer.prototype;
  dart.addTypeTests(typed_buffer.Uint64Buffer);
  dart.addTypeCaches(typed_buffer.Uint64Buffer);
  dart.setMethodSignature(typed_buffer.Uint64Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Uint64Buffer.__proto__),
    [S._createBuffer$1]: dart.fnType(typed_data.Uint64List, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Uint64Buffer, I[172]);
  typed_buffer.Int64Buffer = class Int64Buffer extends typed_buffer._IntBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Int64Buffer.new(initialLength);
    }
    [S._createBuffer$1](size) {
      return typed_data.Int64List.new(size);
    }
  };
  (typed_buffer.Int64Buffer.new = function(initialLength = 0) {
    typed_buffer.Int64Buffer.__proto__.new.call(this, typed_data.Int64List.new(initialLength));
    ;
  }).prototype = typed_buffer.Int64Buffer.prototype;
  dart.addTypeTests(typed_buffer.Int64Buffer);
  dart.addTypeCaches(typed_buffer.Int64Buffer);
  dart.setMethodSignature(typed_buffer.Int64Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Int64Buffer.__proto__),
    [S._createBuffer$1]: dart.fnType(typed_data.Int64List, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Int64Buffer, I[172]);
  typed_buffer.Float32Buffer = class Float32Buffer extends typed_buffer._FloatBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Float32Buffer.new(initialLength);
    }
    [S._createBuffer$1](size) {
      return _native_typed_data.NativeFloat32List.new(size);
    }
  };
  (typed_buffer.Float32Buffer.new = function(initialLength = 0) {
    typed_buffer.Float32Buffer.__proto__.new.call(this, _native_typed_data.NativeFloat32List.new(initialLength));
    ;
  }).prototype = typed_buffer.Float32Buffer.prototype;
  dart.addTypeTests(typed_buffer.Float32Buffer);
  dart.addTypeCaches(typed_buffer.Float32Buffer);
  dart.setMethodSignature(typed_buffer.Float32Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Float32Buffer.__proto__),
    [S._createBuffer$1]: dart.fnType(typed_data.Float32List, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Float32Buffer, I[172]);
  typed_buffer.Float64Buffer = class Float64Buffer extends typed_buffer._FloatBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Float64Buffer.new(initialLength);
    }
    [S._createBuffer$1](size) {
      return _native_typed_data.NativeFloat64List.new(size);
    }
  };
  (typed_buffer.Float64Buffer.new = function(initialLength = 0) {
    typed_buffer.Float64Buffer.__proto__.new.call(this, _native_typed_data.NativeFloat64List.new(initialLength));
    ;
  }).prototype = typed_buffer.Float64Buffer.prototype;
  dart.addTypeTests(typed_buffer.Float64Buffer);
  dart.addTypeCaches(typed_buffer.Float64Buffer);
  dart.setMethodSignature(typed_buffer.Float64Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Float64Buffer.__proto__),
    [S._createBuffer$1]: dart.fnType(typed_data.Float64List, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Float64Buffer, I[172]);
  typed_buffer.Int32x4Buffer = class Int32x4Buffer extends typed_buffer.TypedDataBuffer$(typed_data.Int32x4) {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Int32x4Buffer.new(initialLength);
    }
    get [S._defaultValue$1]() {
      return typed_buffer.Int32x4Buffer._zero;
    }
    [S._createBuffer$1](size) {
      return new _native_typed_data.NativeInt32x4List.new(size);
    }
  };
  (typed_buffer.Int32x4Buffer.new = function(initialLength = 0) {
    typed_buffer.Int32x4Buffer.__proto__.new.call(this, new _native_typed_data.NativeInt32x4List.new(initialLength));
    ;
  }).prototype = typed_buffer.Int32x4Buffer.prototype;
  dart.addTypeTests(typed_buffer.Int32x4Buffer);
  dart.addTypeCaches(typed_buffer.Int32x4Buffer);
  dart.setMethodSignature(typed_buffer.Int32x4Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Int32x4Buffer.__proto__),
    [S._createBuffer$1]: dart.fnType(typed_data.Int32x4List, [core.int])
  }));
  dart.setGetterSignature(typed_buffer.Int32x4Buffer, () => ({
    __proto__: dart.getGetters(typed_buffer.Int32x4Buffer.__proto__),
    [S._defaultValue$1]: typed_data.Int32x4
  }));
  dart.setLibraryUri(typed_buffer.Int32x4Buffer, I[172]);
  dart.setStaticFieldSignature(typed_buffer.Int32x4Buffer, () => ['_zero']);
  dart.defineLazy(typed_buffer.Int32x4Buffer, {
    /*typed_buffer.Int32x4Buffer._zero*/get _zero() {
      return new _native_typed_data.NativeInt32x4.new(0, 0, 0, 0);
    }
  }, false);
  typed_buffer.Float32x4Buffer = class Float32x4Buffer extends typed_buffer.TypedDataBuffer$(typed_data.Float32x4) {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Float32x4Buffer.new(initialLength);
    }
    get [S._defaultValue$1]() {
      return new _native_typed_data.NativeFloat32x4.zero();
    }
    [S._createBuffer$1](size) {
      return new _native_typed_data.NativeFloat32x4List.new(size);
    }
  };
  (typed_buffer.Float32x4Buffer.new = function(initialLength = 0) {
    typed_buffer.Float32x4Buffer.__proto__.new.call(this, new _native_typed_data.NativeFloat32x4List.new(initialLength));
    ;
  }).prototype = typed_buffer.Float32x4Buffer.prototype;
  dart.addTypeTests(typed_buffer.Float32x4Buffer);
  dart.addTypeCaches(typed_buffer.Float32x4Buffer);
  dart.setMethodSignature(typed_buffer.Float32x4Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Float32x4Buffer.__proto__),
    [S._createBuffer$1]: dart.fnType(typed_data.Float32x4List, [core.int])
  }));
  dart.setGetterSignature(typed_buffer.Float32x4Buffer, () => ({
    __proto__: dart.getGetters(typed_buffer.Float32x4Buffer.__proto__),
    [S._defaultValue$1]: typed_data.Float32x4
  }));
  dart.setLibraryUri(typed_buffer.Float32x4Buffer, I[172]);
  dart.trackLibraries("zapp_user_main", {
    "file:///zapp/project/.zapp_entry.dart": $46zapp_entry,
    "file:///zapp/project/lib/main.dart": main,
    "file:///zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart": web_plugin_registrant,
    "package:cloud_firestore/cloud_firestore.dart": cloud_firestore,
    "package:firebase_core/firebase_core.dart": firebase_core,
    "package:cloud_firestore_web/cloud_firestore_web.dart": cloud_firestore_web,
    "package:firebase_auth_web/firebase_auth_web.dart": firebase_auth_web,
    "package:firebase_core_web/firebase_core_web.dart": firebase_core_web,
    "package:firebase_storage_web/firebase_storage_web.dart": firebase_storage_web,
    "package:cloud_firestore_platform_interface/cloud_firestore_platform_interface.dart": cloud_firestore_platform_interface,
    "package:firebase_core_platform_interface/firebase_core_platform_interface.dart": firebase_core_platform_interface,
    "package:cloud_firestore_web/src/internals.dart": internals,
    "package:cloud_firestore_web/src/load_bundle_task_web.dart": load_bundle_task_web,
    "package:cloud_firestore_web/src/utils/web_utils.dart": web_utils,
    "package:firebase_core_web/firebase_core_web_interop.dart": firebase_core_web_interop,
    "package:cloud_firestore_web/src/collection_reference_web.dart": collection_reference_web,
    "package:cloud_firestore_web/src/document_reference_web.dart": document_reference_web,
    "package:cloud_firestore_web/src/field_value_factory_web.dart": field_value_factory_web,
    "package:cloud_firestore_web/src/interop/firestore.dart": firestore,
    "package:cloud_firestore_web/src/query_web.dart": query_web,
    "package:cloud_firestore_web/src/transaction_web.dart": transaction_web,
    "package:cloud_firestore_web/src/write_batch_web.dart": write_batch_web,
    "package:firebase_auth_platform_interface/firebase_auth_platform_interface.dart": firebase_auth_platform_interface,
    "package:firebase_auth_web/src/firebase_auth_web_multi_factor.dart": firebase_auth_web_multi_factor,
    "package:firebase_auth_web/src/interop/utils/utils.dart": utils,
    "package:firebase_auth_web/src/utils/web_utils.dart": web_utils$,
    "package:firebase_auth_web/src/firebase_auth_web_confirmation_result.dart": firebase_auth_web_confirmation_result,
    "package:firebase_auth_web/src/firebase_auth_web_recaptcha_verifier_factory.dart": firebase_auth_web_recaptcha_verifier_factory,
    "package:firebase_auth_web/src/firebase_auth_web_user.dart": firebase_auth_web_user,
    "package:firebase_auth_web/src/firebase_auth_web_user_credential.dart": firebase_auth_web_user_credential,
    "package:firebase_auth_web/src/interop/auth.dart": auth$,
    "package:firebase_auth_web/src/interop/multi_factor.dart": multi_factor,
    "package:firebase_core_web/src/interop/core.dart": core$,
    "package:firebase_storage_web/src/firebase_storage_web.dart": firebase_storage_web$,
    "package:cloud_firestore_platform_interface/src/internal/pointer.dart": pointer,
    "package:cloud_firestore_platform_interface/src/blob.dart": blob,
    "package:cloud_firestore_platform_interface/src/field_path.dart": field_path,
    "package:cloud_firestore_platform_interface/src/geo_point.dart": geo_point,
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_firestore.dart": platform_interface_firestore,
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_collection_reference.dart": platform_interface_collection_reference,
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_document_change.dart": platform_interface_document_change,
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_document_reference.dart": platform_interface_document_reference,
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_document_snapshot.dart": platform_interface_document_snapshot,
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_field_value.dart": platform_interface_field_value,
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_field_value_factory.dart": platform_interface_field_value_factory,
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_query.dart": platform_interface_query,
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_query_snapshot.dart": platform_interface_query_snapshot,
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_transaction.dart": platform_interface_transaction,
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_write_batch.dart": platform_interface_write_batch,
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_load_bundle_task.dart": platform_interface_load_bundle_task,
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_load_bundle_task_snapshot.dart": platform_interface_load_bundle_task_snapshot,
    "package:cloud_firestore_platform_interface/src/snapshot_metadata.dart": snapshot_metadata,
    "package:cloud_firestore_platform_interface/src/source.dart": source,
    "package:cloud_firestore_platform_interface/src/load_bundle_task_state.dart": load_bundle_task_state,
    "package:cloud_firestore_platform_interface/src/timestamp.dart": timestamp,
    "package:cloud_firestore_platform_interface/src/settings.dart": settings,
    "package:cloud_firestore_platform_interface/src/get_options.dart": get_options,
    "package:cloud_firestore_platform_interface/src/set_options.dart": set_options,
    "package:cloud_firestore_platform_interface/src/persistence_settings.dart": persistence_settings,
    "package:cloud_firestore_platform_interface/src/platform_interface/utils/load_bundle_task_state.dart": load_bundle_task_state$,
    "package:firebase_core_platform_interface/src/pigeon/messages.pigeon.dart": messages$46pigeon,
    "package:plugin_platform_interface/plugin_platform_interface.dart": plugin_platform_interface,
    "package:firebase_core_platform_interface/src/pigeon/mocks.dart": mocks,
    "package:firebase_core_platform_interface/src/pigeon/test_api.dart": test_api,
    "package:_flutterfire_internals/_flutterfire_internals.dart": _flutterfire_internals,
    "package:cloud_firestore_web/src/utils/decode_utility.dart": decode_utility,
    "package:firebase_core_web/src/interop/utils/es6_interop.dart": es6_interop,
    "package:firebase_core_web/src/interop/utils/func.dart": func,
    "package:firebase_core_web/src/interop/utils/js.dart": js$,
    "package:firebase_core_web/src/interop/utils/js_interop.dart": js_interop,
    "package:firebase_core_web/src/interop/utils/utils.dart": utils$,
    "package:cloud_firestore_web/src/utils/encode_utility.dart": encode_utility,
    "package:cloud_firestore_web/src/field_value_web.dart": field_value_web,
    "package:cloud_firestore_web/src/interop/firestore_interop.dart": firestore_interop,
    "package:cloud_firestore_web/src/interop/utils/utils.dart": utils$0,
    "package:firebase_auth_platform_interface/src/action_code_info.dart": action_code_info,
    "package:firebase_auth_platform_interface/src/action_code_settings.dart": action_code_settings,
    "package:firebase_auth_platform_interface/src/additional_user_info.dart": additional_user_info,
    "package:firebase_auth_platform_interface/src/auth_credential.dart": auth_credential,
    "package:firebase_auth_platform_interface/src/auth_provider.dart": auth_provider,
    "package:firebase_auth_platform_interface/src/firebase_auth_exception.dart": firebase_auth_exception,
    "package:firebase_auth_platform_interface/src/firebase_auth_multi_factor_exception.dart": firebase_auth_multi_factor_exception,
    "package:firebase_auth_platform_interface/src/id_token_result.dart": id_token_result,
    "package:firebase_auth_platform_interface/src/platform_interface/platform_interface_confirmation_result.dart": platform_interface_confirmation_result,
    "package:firebase_auth_platform_interface/src/platform_interface/platform_interface_firebase_auth.dart": platform_interface_firebase_auth,
    "package:firebase_auth_platform_interface/src/platform_interface/platform_interface_multi_factor.dart": platform_interface_multi_factor,
    "package:firebase_auth_platform_interface/src/platform_interface/platform_interface_recaptcha_verifier_factory.dart": platform_interface_recaptcha_verifier_factory,
    "package:firebase_auth_platform_interface/src/platform_interface/platform_interface_user.dart": platform_interface_user,
    "package:firebase_auth_platform_interface/src/platform_interface/platform_interface_user_credential.dart": platform_interface_user_credential,
    "package:firebase_auth_platform_interface/src/providers/apple_auth.dart": apple_auth,
    "package:firebase_auth_platform_interface/src/providers/email_auth.dart": email_auth,
    "package:firebase_auth_platform_interface/src/providers/facebook_auth.dart": facebook_auth,
    "package:firebase_auth_platform_interface/src/providers/github_auth.dart": github_auth,
    "package:firebase_auth_platform_interface/src/providers/google_auth.dart": google_auth,
    "package:firebase_auth_platform_interface/src/providers/microsoft_auth.dart": microsoft_auth,
    "package:firebase_auth_platform_interface/src/providers/oauth.dart": oauth,
    "package:firebase_auth_platform_interface/src/providers/phone_auth.dart": phone_auth,
    "package:firebase_auth_platform_interface/src/providers/saml_auth.dart": saml_auth,
    "package:firebase_auth_platform_interface/src/providers/twitter_auth.dart": twitter_auth,
    "package:firebase_auth_platform_interface/src/providers/yahoo_auth.dart": yahoo_auth,
    "package:firebase_auth_platform_interface/src/types.dart": types,
    "package:firebase_auth_platform_interface/src/user_info.dart": user_info,
    "package:firebase_auth_platform_interface/src/user_metadata.dart": user_metadata,
    "package:http_parser/http_parser.dart": http_parser,
    "package:firebase_auth_web/src/interop/auth_interop.dart": auth_interop,
    "package:firebase_core_web/src/interop/app.dart": app$,
    "package:firebase_core_web/src/interop/core_interop.dart": core_interop,
    "package:firebase_core_web/src/interop/app_interop.dart": app_interop,
    "package:firebase_storage_platform_interface/firebase_storage_platform_interface.dart": firebase_storage_platform_interface,
    "package:firebase_storage_web/src/interop/storage.dart": storage,
    "package:firebase_storage_web/src/reference_web.dart": reference_web,
    "package:firebase_storage_web/src/utils/errors.dart": errors,
    "package:cloud_firestore_platform_interface/src/internal/field_path_type.dart": field_path_type,
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_firestore.dart": method_channel_firestore,
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_field_value_factory.dart": method_channel_field_value_factory,
    "package:_flutterfire_internals/src/exception.dart": exception$,
    "package:firebase_auth_platform_interface/src/method_channel/method_channel_firebase_auth.dart": method_channel_firebase_auth,
    "package:firebase_auth_platform_interface/src/method_channel/method_channel_multi_factor.dart": method_channel_multi_factor,
    "package:http_parser/src/authentication_challenge.dart": authentication_challenge,
    "package:http_parser/src/case_insensitive_map.dart": case_insensitive_map,
    "package:http_parser/src/chunked_coding.dart": chunked_coding,
    "package:http_parser/src/http_date.dart": http_date,
    "package:http_parser/src/media_type.dart": media_type,
    "package:firebase_storage_platform_interface/src/full_metadata.dart": full_metadata,
    "package:firebase_storage_platform_interface/src/list_options.dart": list_options,
    "package:firebase_storage_platform_interface/src/platform_interface/platform_interface_firebase_storage.dart": platform_interface_firebase_storage,
    "package:firebase_storage_platform_interface/src/platform_interface/platform_interface_list_result.dart": platform_interface_list_result,
    "package:firebase_storage_platform_interface/src/platform_interface/platform_interface_reference.dart": platform_interface_reference,
    "package:firebase_storage_platform_interface/src/platform_interface/platform_interface_task.dart": platform_interface_task,
    "package:firebase_storage_platform_interface/src/platform_interface/platform_interface_task_snapshot.dart": platform_interface_task_snapshot,
    "package:firebase_storage_platform_interface/src/put_string_format.dart": put_string_format,
    "package:firebase_storage_platform_interface/src/settable_metadata.dart": settable_metadata,
    "package:firebase_storage_platform_interface/src/task_state.dart": task_state,
    "package:firebase_storage_web/src/interop/storage_interop.dart": storage_interop,
    "package:http/http.dart": http,
    "package:firebase_storage_web/src/utils/metadata.dart": metadata$,
    "package:firebase_storage_web/src/task_web.dart": task_web,
    "package:firebase_storage_web/src/utils/list.dart": list,
    "package:firebase_storage_web/src/utils/metadata_cache.dart": metadata_cache,
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_load_bundle_task.dart": method_channel_load_bundle_task,
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_query_snapshot.dart": method_channel_query_snapshot,
    "package:cloud_firestore_platform_interface/src/method_channel/utils/source.dart": source$,
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_collection_reference.dart": method_channel_collection_reference,
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_document_reference.dart": method_channel_document_reference,
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_query.dart": method_channel_query,
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_transaction.dart": method_channel_transaction,
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_write_batch.dart": method_channel_write_batch,
    "package:cloud_firestore_platform_interface/src/method_channel/utils/exception.dart": exception,
    "package:cloud_firestore_platform_interface/src/method_channel/utils/firestore_message_codec.dart": firestore_message_codec,
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_field_value.dart": method_channel_field_value,
    "package:firebase_auth_platform_interface/src/method_channel/utils/convert_auth_provider.dart": convert_auth_provider,
    "package:firebase_auth_platform_interface/src/method_channel/method_channel_user.dart": method_channel_user,
    "package:firebase_auth_platform_interface/src/method_channel/method_channel_user_credential.dart": method_channel_user_credential,
    "package:firebase_auth_platform_interface/src/method_channel/utils/exception.dart": exception$0,
    "package:firebase_auth_platform_interface/src/method_channel/utils/pigeon_helper.dart": pigeon_helper,
    "package:firebase_auth_platform_interface/src/pigeon/messages.pigeon.dart": messages$46pigeon$,
    "package:http_parser/src/scan.dart": scan,
    "package:http_parser/src/utils.dart": utils$1,
    "package:http_parser/src/chunked_coding/decoder.dart": decoder,
    "package:http_parser/src/chunked_coding/encoder.dart": encoder,
    "package:firebase_storage_platform_interface/src/method_channel/method_channel_firebase_storage.dart": method_channel_firebase_storage,
    "package:firebase_storage_platform_interface/src/internal/pointer.dart": pointer$,
    "package:http/src/client.dart": client$,
    "package:http/src/exception.dart": exception$1,
    "package:http/src/request.dart": request$,
    "package:http/src/response.dart": response$,
    "package:http/src/streamed_request.dart": streamed_request,
    "package:http/src/base_client.dart": base_client,
    "package:http/src/base_request.dart": base_request,
    "package:http/src/base_response.dart": base_response,
    "package:http/src/byte_stream.dart": byte_stream,
    "package:http/src/multipart_file.dart": multipart_file,
    "package:http/src/multipart_request.dart": multipart_request,
    "package:http/src/streamed_response.dart": streamed_response,
    "package:firebase_storage_web/src/utils/task.dart": task,
    "package:firebase_storage_web/src/list_result_web.dart": list_result_web,
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_document_change.dart": method_channel_document_change,
    "package:cloud_firestore_platform_interface/src/method_channel/utils/auto_id_generator.dart": auto_id_generator,
    "package:typed_data/typed_data.dart": typed_data$,
    "package:http_parser/src/chunked_coding/charcodes.dart": charcodes,
    "package:firebase_storage_platform_interface/src/method_channel/utils/exception.dart": exception$2,
    "package:firebase_storage_platform_interface/src/method_channel/method_channel_reference.dart": method_channel_reference,
    "package:firebase_storage_platform_interface/src/method_channel/method_channel_task_snapshot.dart": method_channel_task_snapshot,
    "package:http/src/browser_client.dart": browser_client,
    "package:http/src/utils.dart": utils$2,
    "package:http/src/multipart_file_stub.dart": multipart_file_stub,
    "package:http/src/boundary_characters.dart": boundary_characters,
    "package:firebase_storage_web/src/task_snapshot_web.dart": task_snapshot_web,
    "package:typed_data/src/typed_queue.dart": typed_queue,
    "package:typed_data/typed_buffers.dart": typed_buffers,
    "package:firebase_storage_platform_interface/src/method_channel/method_channel_list_result.dart": method_channel_list_result,
    "package:firebase_storage_platform_interface/src/method_channel/method_channel_task.dart": method_channel_task,
    "package:typed_data/src/typed_buffer.dart": typed_buffer
  }, {
    "package:cloud_firestore/cloud_firestore.dart": ["src/collection_reference.dart", "src/document_change.dart", "src/document_reference.dart", "src/document_snapshot.dart", "src/field_value.dart", "src/firestore.dart", "src/load_bundle_task.dart", "src/load_bundle_task_snapshot.dart", "src/query.dart", "src/query_document_snapshot.dart", "src/query_snapshot.dart", "src/snapshot_metadata.dart", "src/transaction.dart", "src/utils/codec_utility.dart", "src/write_batch.dart"],
    "package:firebase_core/firebase_core.dart": ["src/firebase_app.dart", "src/firebase.dart"],
    "package:firebase_core_web/firebase_core_web.dart": ["src/firebase_app_web.dart", "src/firebase_sdk_version.dart", "src/firebase_core_web.dart"],
    "package:firebase_core_platform_interface/firebase_core_platform_interface.dart": ["src/firebase_core_exceptions.dart", "src/firebase_exception.dart", "src/firebase_options.dart", "src/method_channel/method_channel_firebase.dart", "src/method_channel/method_channel_firebase_app.dart", "src/platform_interface/platform_interface_firebase.dart", "src/platform_interface/platform_interface_firebase_app.dart", "src/platform_interface/platform_interface_firebase_plugin.dart"]
  }, '{"version":3,"sourceRoot":"","sources":["/zapp/project/.zapp_entry.dart","/zapp/project/lib/main.dart","/zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-3.5.1/lib/src/collection_reference.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-3.5.1/lib/src/query.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-3.5.1/lib/src/document_change.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-3.5.1/lib/src/document_reference.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-3.5.1/lib/src/document_snapshot.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-5.7.7/lib/src/platform_interface/platform_interface_field_value.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-3.5.1/lib/src/field_value.dart","/zapp/pub/.pub_cache/hosted/pub.dev/plugin_platform_interface-2.1.6/lib/plugin_platform_interface.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-4.5.1/lib/src/platform_interface/platform_interface_firebase_plugin.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-3.5.1/lib/src/firestore.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-3.5.1/lib/src/load_bundle_task.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-3.5.1/lib/src/load_bundle_task_snapshot.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-3.5.1/lib/src/query_document_snapshot.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-3.5.1/lib/src/query_snapshot.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-3.5.1/lib/src/snapshot_metadata.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-3.5.1/lib/src/transaction.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-3.5.1/lib/src/utils/codec_utility.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-3.5.1/lib/src/write_batch.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core-1.24.0/lib/src/firebase_app.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core-1.24.0/lib/src/firebase.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-5.7.7/lib/src/platform_interface/platform_interface_firestore.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_web-2.8.10/lib/cloud_firestore_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.10.1/lib/src/platform_interface/platform_interface_firebase_auth.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_web-4.6.1/lib/firebase_auth_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-4.5.1/lib/src/platform_interface/platform_interface_firebase_app.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_web-1.7.3/lib/src/firebase_app_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_web-1.7.3/lib/src/firebase_core_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-4.5.1/lib/src/platform_interface/platform_interface_firebase.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_web-1.7.3/lib/firebase_core_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_web-1.7.3/lib/src/firebase_sdk_version.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-5.7.7/lib/cloud_firestore_platform_interface.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-4.5.1/lib/src/firebase_exception.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-4.5.1/lib/src/firebase_options.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-4.5.1/lib/src/method_channel/method_channel_firebase.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-4.5.1/lib/src/method_channel/method_channel_firebase_app.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-4.5.1/lib/src/firebase_core_exceptions.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-4.5.1/lib/firebase_core_platform_interface.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_web-2.8.10/lib/src/internals.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-5.7.7/lib/src/platform_interface/platform_interface_load_bundle_task.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_web-2.8.10/lib/src/load_bundle_task_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_web-2.8.10/lib/src/utils/web_utils.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-5.7.7/lib/src/platform_interface/platform_interface_query.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_web-2.8.10/lib/src/query_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_web-2.8.10/lib/src/collection_reference_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-5.7.7/lib/src/platform_interface/platform_interface_document_reference.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_web-2.8.10/lib/src/document_reference_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-5.7.7/lib/src/platform_interface/platform_interface_field_value_factory.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_web-2.8.10/lib/src/field_value_factory_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_web-1.7.3/lib/src/interop/utils/js.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_web-2.8.10/lib/src/interop/firestore.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-5.7.7/lib/src/platform_interface/platform_interface_transaction.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_web-2.8.10/lib/src/transaction_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-5.7.7/lib/src/platform_interface/platform_interface_write_batch.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_web-2.8.10/lib/src/write_batch_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.10.1/lib/src/platform_interface/platform_interface_multi_factor.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_web-4.6.1/lib/src/firebase_auth_web_multi_factor.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_web-4.6.1/lib/src/interop/utils/utils.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_web-4.6.1/lib/src/utils/web_utils.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.10.1/lib/src/platform_interface/platform_interface_confirmation_result.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_web-4.6.1/lib/src/firebase_auth_web_confirmation_result.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.10.1/lib/src/platform_interface/platform_interface_recaptcha_verifier_factory.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_web-4.6.1/lib/src/firebase_auth_web_recaptcha_verifier_factory.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.10.1/lib/src/platform_interface/platform_interface_user.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_web-4.6.1/lib/src/firebase_auth_web_user.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.10.1/lib/src/platform_interface/platform_interface_user_credential.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_web-4.6.1/lib/src/firebase_auth_web_user_credential.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_web-4.6.1/lib/src/interop/auth.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_web-4.6.1/lib/src/interop/multi_factor.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_web-1.7.3/lib/src/interop/core.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage_platform_interface-4.1.19/lib/src/platform_interface/platform_interface_firebase_storage.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage_web-3.3.9/lib/src/firebase_storage_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-5.7.7/lib/src/internal/pointer.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-5.7.7/lib/src/blob.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-5.7.7/lib/src/field_path.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-5.7.7/lib/src/geo_point.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-5.7.7/lib/src/platform_interface/platform_interface_collection_reference.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-5.7.7/lib/src/platform_interface/platform_interface_document_change.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-5.7.7/lib/src/platform_interface/platform_interface_document_snapshot.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-5.7.7/lib/src/platform_interface/platform_interface_query_snapshot.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-5.7.7/lib/src/platform_interface/platform_interface_load_bundle_task_snapshot.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-5.7.7/lib/src/snapshot_metadata.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-5.7.7/lib/src/source.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-5.7.7/lib/src/load_bundle_task_state.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-5.7.7/lib/src/timestamp.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-5.7.7/lib/src/settings.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-5.7.7/lib/src/get_options.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-5.7.7/lib/src/set_options.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-5.7.7/lib/src/persistence_settings.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-5.7.7/lib/src/platform_interface/utils/load_bundle_task_state.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-4.5.1/lib/src/pigeon/messages.pigeon.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-4.5.1/lib/src/pigeon/mocks.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-4.5.1/lib/src/pigeon/test_api.dart","/zapp/pub/.pub_cache/hosted/pub.dev/_flutterfire_internals-1.0.2/lib/_flutterfire_internals.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_web-2.8.10/lib/src/utils/decode_utility.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_web-1.7.3/lib/src/interop/utils/js_interop.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_web-1.7.3/lib/src/interop/utils/utils.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_web-2.8.10/lib/src/utils/encode_utility.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_web-2.8.10/lib/src/field_value_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_web-2.8.10/lib/src/interop/utils/utils.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.10.1/lib/src/action_code_info.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.10.1/lib/src/action_code_settings.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.10.1/lib/src/additional_user_info.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.10.1/lib/src/auth_credential.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.10.1/lib/src/auth_provider.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.10.1/lib/src/firebase_auth_exception.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.10.1/lib/src/firebase_auth_multi_factor_exception.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.10.1/lib/src/id_token_result.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.10.1/lib/src/providers/apple_auth.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.10.1/lib/src/providers/oauth.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.10.1/lib/src/providers/email_auth.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.10.1/lib/src/providers/facebook_auth.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.10.1/lib/src/providers/github_auth.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.10.1/lib/src/providers/google_auth.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.10.1/lib/src/providers/microsoft_auth.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.10.1/lib/src/providers/phone_auth.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.10.1/lib/src/providers/saml_auth.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.10.1/lib/src/providers/twitter_auth.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.10.1/lib/src/providers/yahoo_auth.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.10.1/lib/src/types.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.10.1/lib/src/user_info.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.10.1/lib/src/user_metadata.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_web-1.7.3/lib/src/interop/app.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage_web-3.3.9/lib/src/interop/storage.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage_platform_interface-4.1.19/lib/src/platform_interface/platform_interface_reference.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage_web-3.3.9/lib/src/reference_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage_web-3.3.9/lib/src/utils/errors.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-5.7.7/lib/src/internal/field_path_type.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-5.7.7/lib/src/method_channel/method_channel_firestore.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-5.7.7/lib/src/method_channel/method_channel_field_value_factory.dart","/zapp/pub/.pub_cache/hosted/pub.dev/_flutterfire_internals-1.0.2/lib/src/exception.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.10.1/lib/src/method_channel/method_channel_firebase_auth.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.10.1/lib/src/method_channel/method_channel_multi_factor.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http_parser-4.0.2/lib/src/authentication_challenge.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http_parser-4.0.2/lib/src/case_insensitive_map.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http_parser-4.0.2/lib/src/chunked_coding.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http_parser-4.0.2/lib/src/http_date.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http_parser-4.0.2/lib/src/media_type.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage_platform_interface-4.1.19/lib/src/full_metadata.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage_platform_interface-4.1.19/lib/src/list_options.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage_platform_interface-4.1.19/lib/src/platform_interface/platform_interface_list_result.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage_platform_interface-4.1.19/lib/src/platform_interface/platform_interface_task.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage_platform_interface-4.1.19/lib/src/platform_interface/platform_interface_task_snapshot.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage_platform_interface-4.1.19/lib/src/put_string_format.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage_platform_interface-4.1.19/lib/src/settable_metadata.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage_platform_interface-4.1.19/lib/src/task_state.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/http.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage_web-3.3.9/lib/src/utils/metadata.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage_web-3.3.9/lib/src/task_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage_web-3.3.9/lib/src/utils/list.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage_web-3.3.9/lib/src/utils/metadata_cache.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-5.7.7/lib/src/method_channel/method_channel_load_bundle_task.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-5.7.7/lib/src/method_channel/method_channel_query_snapshot.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-5.7.7/lib/src/method_channel/utils/source.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-5.7.7/lib/src/method_channel/method_channel_query.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-5.7.7/lib/src/method_channel/method_channel_collection_reference.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-5.7.7/lib/src/method_channel/method_channel_document_reference.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-5.7.7/lib/src/method_channel/method_channel_transaction.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-5.7.7/lib/src/method_channel/method_channel_write_batch.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-5.7.7/lib/src/method_channel/utils/exception.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-5.7.7/lib/src/method_channel/utils/firestore_message_codec.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-5.7.7/lib/src/method_channel/method_channel_field_value.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.10.1/lib/src/method_channel/utils/convert_auth_provider.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.10.1/lib/src/method_channel/method_channel_user.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.10.1/lib/src/method_channel/method_channel_user_credential.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.10.1/lib/src/method_channel/utils/exception.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.10.1/lib/src/method_channel/utils/pigeon_helper.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.10.1/lib/src/pigeon/messages.pigeon.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http_parser-4.0.2/lib/src/scan.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http_parser-4.0.2/lib/src/utils.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http_parser-4.0.2/lib/src/chunked_coding/decoder.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http_parser-4.0.2/lib/src/chunked_coding/encoder.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage_platform_interface-4.1.19/lib/src/method_channel/method_channel_firebase_storage.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage_platform_interface-4.1.19/lib/src/internal/pointer.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/client.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/exception.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/base_request.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/request.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/base_response.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/response.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/streamed_request.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/base_client.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/byte_stream.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/multipart_file.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/multipart_request.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/streamed_response.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage_web-3.3.9/lib/src/utils/task.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage_web-3.3.9/lib/src/list_result_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-5.7.7/lib/src/method_channel/method_channel_document_change.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-5.7.7/lib/src/method_channel/utils/auto_id_generator.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http_parser-4.0.2/lib/src/chunked_coding/charcodes.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage_platform_interface-4.1.19/lib/src/method_channel/utils/exception.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage_platform_interface-4.1.19/lib/src/method_channel/method_channel_reference.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage_platform_interface-4.1.19/lib/src/method_channel/method_channel_task_snapshot.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/browser_client.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/utils.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/multipart_file_stub.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/boundary_characters.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage_web-3.3.9/lib/src/task_snapshot_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/typed_data-1.3.2/lib/src/typed_queue.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage_platform_interface-4.1.19/lib/src/method_channel/method_channel_list_result.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage_platform_interface-4.1.19/lib/src/method_channel/method_channel_task.dart","/zapp/pub/.pub_cache/hosted/pub.dev/typed_data-1.3.2/lib/src/typed_buffer.dart"],"names":[],"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","file":"main.js"}');
  // Exports:
  return {
    zapp__project__$46zapp_entry: $46zapp_entry,
    zapp__project__lib__main: main,
    zapp__project__$46dart_tool__dartpad__web_plugin_registrant: web_plugin_registrant,
    cloud_firestore: cloud_firestore,
    firebase_core: firebase_core,
    cloud_firestore_web: cloud_firestore_web,
    firebase_auth_web: firebase_auth_web,
    firebase_core_web: firebase_core_web,
    firebase_storage_web: firebase_storage_web,
    cloud_firestore_platform_interface: cloud_firestore_platform_interface,
    firebase_core_platform_interface: firebase_core_platform_interface,
    src__internals: internals,
    src__load_bundle_task_web: load_bundle_task_web,
    src__utils__web_utils: web_utils,
    firebase_core_web_interop: firebase_core_web_interop,
    src__collection_reference_web: collection_reference_web,
    src__document_reference_web: document_reference_web,
    src__field_value_factory_web: field_value_factory_web,
    src__interop__firestore: firestore,
    src__query_web: query_web,
    src__transaction_web: transaction_web,
    src__write_batch_web: write_batch_web,
    firebase_auth_platform_interface: firebase_auth_platform_interface,
    src__firebase_auth_web_multi_factor: firebase_auth_web_multi_factor,
    src__interop__utils__utils: utils,
    src__utils__web_utils: web_utils$,
    src__firebase_auth_web_confirmation_result: firebase_auth_web_confirmation_result,
    src__firebase_auth_web_recaptcha_verifier_factory: firebase_auth_web_recaptcha_verifier_factory,
    src__firebase_auth_web_user: firebase_auth_web_user,
    src__firebase_auth_web_user_credential: firebase_auth_web_user_credential,
    src__interop__auth: auth$,
    src__interop__multi_factor: multi_factor,
    src__interop__core: core$,
    src__firebase_storage_web: firebase_storage_web$,
    src__internal__pointer: pointer,
    src__blob: blob,
    src__field_path: field_path,
    src__geo_point: geo_point,
    src__platform_interface__platform_interface_firestore: platform_interface_firestore,
    src__platform_interface__platform_interface_collection_reference: platform_interface_collection_reference,
    src__platform_interface__platform_interface_document_change: platform_interface_document_change,
    src__platform_interface__platform_interface_document_reference: platform_interface_document_reference,
    src__platform_interface__platform_interface_document_snapshot: platform_interface_document_snapshot,
    src__platform_interface__platform_interface_field_value: platform_interface_field_value,
    src__platform_interface__platform_interface_field_value_factory: platform_interface_field_value_factory,
    src__platform_interface__platform_interface_query: platform_interface_query,
    src__platform_interface__platform_interface_query_snapshot: platform_interface_query_snapshot,
    src__platform_interface__platform_interface_transaction: platform_interface_transaction,
    src__platform_interface__platform_interface_write_batch: platform_interface_write_batch,
    src__platform_interface__platform_interface_load_bundle_task: platform_interface_load_bundle_task,
    src__platform_interface__platform_interface_load_bundle_task_snapshot: platform_interface_load_bundle_task_snapshot,
    src__snapshot_metadata: snapshot_metadata,
    src__source: source,
    src__load_bundle_task_state: load_bundle_task_state,
    src__timestamp: timestamp,
    src__settings: settings,
    src__get_options: get_options,
    src__set_options: set_options,
    src__persistence_settings: persistence_settings,
    src__platform_interface__utils__load_bundle_task_state: load_bundle_task_state$,
    src__pigeon__messages$46pigeon: messages$46pigeon,
    plugin_platform_interface: plugin_platform_interface,
    src__pigeon__mocks: mocks,
    src__pigeon__test_api: test_api,
    _flutterfire_internals: _flutterfire_internals,
    src__utils__decode_utility: decode_utility,
    src__interop__utils__es6_interop: es6_interop,
    src__interop__utils__func: func,
    src__interop__utils__js: js$,
    src__interop__utils__js_interop: js_interop,
    src__interop__utils__utils: utils$,
    src__utils__encode_utility: encode_utility,
    src__field_value_web: field_value_web,
    src__interop__firestore_interop: firestore_interop,
    src__interop__utils__utils: utils$0,
    src__action_code_info: action_code_info,
    src__action_code_settings: action_code_settings,
    src__additional_user_info: additional_user_info,
    src__auth_credential: auth_credential,
    src__auth_provider: auth_provider,
    src__firebase_auth_exception: firebase_auth_exception,
    src__firebase_auth_multi_factor_exception: firebase_auth_multi_factor_exception,
    src__id_token_result: id_token_result,
    src__platform_interface__platform_interface_confirmation_result: platform_interface_confirmation_result,
    src__platform_interface__platform_interface_firebase_auth: platform_interface_firebase_auth,
    src__platform_interface__platform_interface_multi_factor: platform_interface_multi_factor,
    src__platform_interface__platform_interface_recaptcha_verifier_factory: platform_interface_recaptcha_verifier_factory,
    src__platform_interface__platform_interface_user: platform_interface_user,
    src__platform_interface__platform_interface_user_credential: platform_interface_user_credential,
    src__providers__apple_auth: apple_auth,
    src__providers__email_auth: email_auth,
    src__providers__facebook_auth: facebook_auth,
    src__providers__github_auth: github_auth,
    src__providers__google_auth: google_auth,
    src__providers__microsoft_auth: microsoft_auth,
    src__providers__oauth: oauth,
    src__providers__phone_auth: phone_auth,
    src__providers__saml_auth: saml_auth,
    src__providers__twitter_auth: twitter_auth,
    src__providers__yahoo_auth: yahoo_auth,
    src__types: types,
    src__user_info: user_info,
    src__user_metadata: user_metadata,
    http_parser: http_parser,
    src__interop__auth_interop: auth_interop,
    src__interop__app: app$,
    src__interop__core_interop: core_interop,
    src__interop__app_interop: app_interop,
    firebase_storage_platform_interface: firebase_storage_platform_interface,
    src__interop__storage: storage,
    src__reference_web: reference_web,
    src__utils__errors: errors,
    src__internal__field_path_type: field_path_type,
    src__method_channel__method_channel_firestore: method_channel_firestore,
    src__method_channel__method_channel_field_value_factory: method_channel_field_value_factory,
    src__exception: exception$,
    src__method_channel__method_channel_firebase_auth: method_channel_firebase_auth,
    src__method_channel__method_channel_multi_factor: method_channel_multi_factor,
    src__authentication_challenge: authentication_challenge,
    src__case_insensitive_map: case_insensitive_map,
    src__chunked_coding: chunked_coding,
    src__http_date: http_date,
    src__media_type: media_type,
    src__full_metadata: full_metadata,
    src__list_options: list_options,
    src__platform_interface__platform_interface_firebase_storage: platform_interface_firebase_storage,
    src__platform_interface__platform_interface_list_result: platform_interface_list_result,
    src__platform_interface__platform_interface_reference: platform_interface_reference,
    src__platform_interface__platform_interface_task: platform_interface_task,
    src__platform_interface__platform_interface_task_snapshot: platform_interface_task_snapshot,
    src__put_string_format: put_string_format,
    src__settable_metadata: settable_metadata,
    src__task_state: task_state,
    src__interop__storage_interop: storage_interop,
    http: http,
    src__utils__metadata: metadata$,
    src__task_web: task_web,
    src__utils__list: list,
    src__utils__metadata_cache: metadata_cache,
    src__method_channel__method_channel_load_bundle_task: method_channel_load_bundle_task,
    src__method_channel__method_channel_query_snapshot: method_channel_query_snapshot,
    src__method_channel__utils__source: source$,
    src__method_channel__method_channel_collection_reference: method_channel_collection_reference,
    src__method_channel__method_channel_document_reference: method_channel_document_reference,
    src__method_channel__method_channel_query: method_channel_query,
    src__method_channel__method_channel_transaction: method_channel_transaction,
    src__method_channel__method_channel_write_batch: method_channel_write_batch,
    src__method_channel__utils__exception: exception,
    src__method_channel__utils__firestore_message_codec: firestore_message_codec,
    src__method_channel__method_channel_field_value: method_channel_field_value,
    src__method_channel__utils__convert_auth_provider: convert_auth_provider,
    src__method_channel__method_channel_user: method_channel_user,
    src__method_channel__method_channel_user_credential: method_channel_user_credential,
    src__method_channel__utils__exception: exception$0,
    src__method_channel__utils__pigeon_helper: pigeon_helper,
    src__pigeon__messages$46pigeon: messages$46pigeon$,
    src__scan: scan,
    src__utils: utils$1,
    src__chunked_coding__decoder: decoder,
    src__chunked_coding__encoder: encoder,
    src__method_channel__method_channel_firebase_storage: method_channel_firebase_storage,
    src__internal__pointer: pointer$,
    src__client: client$,
    src__exception: exception$1,
    src__request: request$,
    src__response: response$,
    src__streamed_request: streamed_request,
    src__base_client: base_client,
    src__base_request: base_request,
    src__base_response: base_response,
    src__byte_stream: byte_stream,
    src__multipart_file: multipart_file,
    src__multipart_request: multipart_request,
    src__streamed_response: streamed_response,
    src__utils__task: task,
    src__list_result_web: list_result_web,
    src__method_channel__method_channel_document_change: method_channel_document_change,
    src__method_channel__utils__auto_id_generator: auto_id_generator,
    typed_data: typed_data$,
    src__chunked_coding__charcodes: charcodes,
    src__method_channel__utils__exception: exception$2,
    src__method_channel__method_channel_reference: method_channel_reference,
    src__method_channel__method_channel_task_snapshot: method_channel_task_snapshot,
    src__browser_client: browser_client,
    src__utils: utils$2,
    src__multipart_file_stub: multipart_file_stub,
    src__boundary_characters: boundary_characters,
    src__task_snapshot_web: task_snapshot_web,
    src__typed_queue: typed_queue,
    typed_buffers: typed_buffers,
    src__method_channel__method_channel_list_result: method_channel_list_result,
    src__method_channel__method_channel_task: method_channel_task,
    src__typed_buffer: typed_buffer
  };
}));

//# sourceMappingURL=main.js.map
